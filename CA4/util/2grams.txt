1559
	movq %reg0, %reg1	
	movq %reg2, %reg3	

1228
	movq %reg0, %reg1	
	call *%reg2	

994
	movq %reg0, %reg1	
	movq %reg2, %rsi	

946
	movq %reg0, %rdi	
	movq %reg2, %reg3	

931
	movq %reg0, %rdi	
	movq %reg2, %rsi	

793
	movq %reg0, %rsi	
	call *%reg2	

790
	.quad Object.copy	
	.quad Object.type_name	

790
	.quad Object.abort	
	.quad Object.copy	

619
	movq %reg0, %reg1	
	call *%rax	

585
	pushq %reg0	
	movq %reg1, %reg0	

575
	pushq %rbp	
	movq %reg1, %rbp	

575
	pushq %reg0	
	movq %rsp, %reg0	

575
	leave	
	ret	

575
	pushq %rbp	
	movq %rsp, %rbp	

562
	movq %reg0, %reg1	
	movq %reg2, %reg0	

507
	movq %rax, %reg1	
	call *%reg2	

502
	movq %rbx, %reg1	
	movq %reg2, %reg3	

477
	movq %rbx, %reg1	
	movq %reg2, %rsi	

474
	movq %rbx, %rdi	
	movq %reg2, %reg3	

473
	movq %rbx, %rdi	
	movq %reg2, %rsi	

461
	movq 0(%reg0), %reg1	
	movq 64(%reg1), %reg1	

457
	movq 64(%reg0), %reg0	
	movq %reg1, %reg2	

457
	movq 64(%reg0), %reg0	
	movq %reg1, %rdi	

416
	movq %reg0, %rdi	
	call *%reg2	

386
	movq $.string2_l, %reg0	
	call out_error	

386
	movq $.string2_l, %rdi	
	call out_error	

379
	movq %reg0, %reg1	
	movq %rax, %reg3	

377
	movq %reg0, %rsi	
	call *%rax	

363
	sete %reg0l	
	testq $1, %reg1	

362
	movq %reg0, %rdi	
	movq %rax, %reg3	

362
	movq %reg0, %rdi	
	movq %rax, %rsi	

362
	movq %reg0, %reg1	
	movq %rax, %rsi	

353
	movq %reg0, %reg1	
	pushq %reg2	

340
	movq %reg0, %reg1	
	movq 0(%reg1), %reg2	

332
	popq %reg0	
	leave	

332
	popq %rbx	
	leave	

326
	movq %rax, %rsi	
	call *%reg2	

318
	movq %rsp, %reg1	
	pushq %reg2	

318
	addl %reg0, %reg1	
	movq %reg2, %reg3	

318
	movq %reg0, %rbp	
	pushq %rbx	

318
	movq %reg0, %reg1	
	pushq %rbx	

318
	movq %rsp, %rbp	
	pushq %rbx	

318
	movq %rsp, %rbp	
	pushq %reg2	

318
	movq %rsp, %reg1	
	pushq %rbx	

318
	movq %reg0, %rbp	
	pushq %reg2	

317
	pushq %reg0	
	pushq %reg1	

317
	popq %reg0	
	popq %reg1	

313
	movq %rax, %reg1	
	movq %reg2, %rax	

312
	movq %reg0, %rdx	
	movq 0(%rdx), %reg2	

299
	movq %reg0, %reg1	
	call *%r12	

298
	movq -8(%rbp), %rdx	
	movq 0(%rdx), %reg2	

298
	movq -8(%rbp), %reg1	
	movq 0(%reg1), %reg2	

296
	movq %reg0, %reg1	
	movq %r12, %reg3	

296
	movq %r12, %reg1	
	call *%reg2	

293
	movq 64(%reg0), %reg0	
	movq %rbx, %rdi	

293
	movq 0(%rbx), %reg1	
	movq 64(%reg1), %reg1	

293
	movq 64(%reg0), %reg0	
	movq %rbx, %reg2	

289
	movq %rax, %reg1	
	movq %reg2, %reg3	

279
	movq %reg0, %rdi	
	movq %r12, %reg3	

279
	sete %dil	
	testq $1, %reg1	

279
	sete %dil	
	testq $1, %rdi	

279
	sete %reg0l	
	testq $1, %rdi	

277
	movq %reg0, %reg1	
	movq %r12, %rsi	

276
	movq %reg0, %rdi	
	movq %r12, %rsi	

270
	movq %reg0, %rsi	
	call *%r12	

266
	sete %reg0	
	testq $1, %reg1	

264
	movq %reg0, %reg1	
	addl %reg2, %reg3	

261
	movq %r12, %rsi	
	call *%reg2	

260
	.quad IO.in_string	
	.quad IO.out_int	

260
	.quad Object.type_name	
	.quad IO.in_int	

260
	.quad IO.in_int	
	.quad IO.in_string	

260
	.quad IO.out_int	
	.quad IO.out_string	

256
	movq %r12, %reg1	
	call *%rax	

254
	movq %reg0, %reg1	
	movq 0(%reg1), %rax	

254
	movq %reg0, %reg1	
	cmpl %reg2, %reg3	

253
	movq %rax, %reg1	
	call *%r12	

248
	movq %reg0, %rax	
	movq %reg2, %reg3	

247
	movq %rbx, %reg1	
	movq %rax, %reg3	

247
	movq %rbx, %reg1	
	movq %rax, %rsi	

247
	movq %rbx, %rdi	
	movq %rax, %rsi	

247
	movq %rbx, %rdi	
	movq %rax, %reg3	

243
	movq 0(%reg0), %reg1	
	movq 72(%reg1), %reg1	

242
	movq 0(%reg0), %rax	
	movq 64(%rax), %rax	

239
	movq 64(%rax), %rax	
	movq %reg1, %rdi	

239
	movq 64(%rax), %rax	
	movq %reg1, %reg2	

238
	movq 72(%reg0), %reg0	
	movq %reg1, %rdi	

238
	movq %reg0, %rdi	
	call *%rax	

238
	movq 72(%reg0), %reg0	
	movq %reg1, %reg2	

235
	cmpl $0, %reg0	
	movq %reg1, %reg2	

233
	movq %reg0, %rdx	
	movq 0(%rdx), %rax	

228
	movq %reg0, %rax	
	movq %reg2, %reg0	

225
	subl %reg0, %reg1	
	movq %reg2, %reg3	

225
	movq %rax, %rsi	
	call *%r12	

224
	movq %r12, %rsi	
	call *%rax	

223
	cdq	
	idivl %reg0	

223
	movq -8(%rbp), %rdx	
	movq 0(%rdx), %rax	

223
	movq -8(%rbp), %reg1	
	movq 0(%reg1), %rax	

223
	movq %reg0, %reg1	
	sete %dil	

223
	movq %reg0, %rdi	
	sete %reg2l	

223
	movq %reg0, %rdi	
	sete %dil	

223
	movq %reg0, %reg1	
	sete %reg2l	

219
	pushq %reg0	
	movq %reg1, %reg2	

215
	movq -8(%rbp), %rdi	
	movq %reg2, %rsi	

215
	movq -8(%rbp), %rdi	
	movq %reg2, %reg3	

215
	movq -8(%rbp), %reg1	
	movq %reg2, %rsi	

215
	movq -8(%rbp), %reg1	
	movq %reg2, %reg3	

210
	cmpl $0, %reg0	
	movq %reg1, %rdi	

207
	movq %reg0, %reg1	
	call *%rbx	

203
	addl %reg0, %eax	
	movq %reg2, %reg3	

201
	movq %reg0, %reg1	
	movq $0, %reg0	

201
	movq %rbx, %reg1	
	movq %r12, %reg3	

199
	cmpl $0, %eax	
	movq %reg1, %rdi	

199
	movq %rax, %rdi	
	sete %dil	

199
	cmpl $0, %reg0	
	movq %rax, %reg2	

199
	cmpl $0, %reg0	
	movq %rax, %rdi	

199
	cmpl $0, %eax	
	movq %rax, %reg2	

199
	movq %rax, %rdi	
	sete %reg2l	

199
	cmpl $0, %eax	
	movq %rax, %rdi	

199
	cmpl $0, %eax	
	movq %reg1, %reg2	

199
	movq %rax, %reg1	
	sete %reg2l	

199
	movq %rax, %reg1	
	sete %dil	

195
	movq %rbx, %reg1	
	movq %r12, %rsi	

195
	movq %rbx, %rdi	
	movq %r12, %rsi	

195
	movq %rbx, %rdi	
	movq %r12, %reg3	

191
	movq %reg0, %reg1	
	addl %reg2, %eax	

189
	cmpl %reg0, %reg1	
	sete %reg2l	

186
	call *%rax	
	movq %rax, %reg1	

186
	movq $0, %reg0	
	cmpl %reg1, %reg2	

186
	call *%reg0	
	movq %reg0, %reg1	

184
	pushq %rbx	
	pushq %r12	

184
	pushq %rbx	
	pushq %reg1	

184
	popq %r12	
	popq %rbx	

184
	pushq %reg0	
	pushq %r12	

184
	popq %reg0	
	popq %rbx	

184
	popq %r12	
	popq %reg1	

179
	movq %rax, %reg1	
	call *%rbx	

179
	pushq %reg0	
	movq %rdi, %reg2	

178
	movq %rax, %rdi	
	call *%reg2	

177
	movq %reg0, %reg1	
	negl %reg2	

176
	movq %rbx, %reg1	
	call *%reg2	

172
	movq 0(%reg0), %reg1	
	movq 48(%reg1), %reg1	

172
	movq 0(%reg0), %r12	
	movq 64(%r12), %r12	

171
	movq 64(%r12), %r12	
	movq %reg1, %reg2	

171
	movq 64(%r12), %r12	
	movq %reg1, %rdi	

170
	movq 48(%reg0), %reg0	
	movq %reg1, %rdi	

170
	movq %reg0, %reg1	
	movq %reg2, %rdx	

170
	sete %al	
	testq $1, %rax	

170
	movq 48(%reg0), %reg0	
	movq %reg1, %reg2	

170
	sete %al	
	testq $1, %reg1	

170
	sete %reg0	
	testq $1, %rax	

165
	movq %reg0, %reg1	
	subl %reg2, %reg3	

162
	call *%reg0	
	popq %reg0	

161
	movq %reg0, %reg1	
	cmpl %reg2, %eax	

155
	addl %edi, %reg1	
	movq %reg2, %reg3	

153
	movq %reg0, %reg1	
	imull %reg2	

151
	addl %edi, %eax	
	movq %reg2, %reg3	

149
	movq 0(%rbx), %rax	
	movq 64(%rax), %rax	

149
	movq 64(%rax), %rax	
	movq %rbx, %reg2	

149
	movq 64(%rax), %rax	
	movq %rbx, %rdi	

146
	movq %rax, %rdi	
	movq %reg2, %rsi	

146
	movq %rax, %reg1	
	movq %reg2, %rsi	

146
	movq %rax, %rdi	
	movq %reg2, %reg3	

143
	movq %reg0, %reg1	
	addl %edi, %eax	

143
	movq %reg0, %reg1	
	addl %edi, %reg3	

142
	movq 0(%reg0), %reg1	
	movq 80(%reg1), %reg1	

142
	movq 80(%reg0), %reg0	
	movq %reg1, %rdi	

142
	movq 0(%reg0), %rax	
	movq 48(%rax), %rax	

142
	movq 80(%reg0), %reg0	
	movq %reg1, %reg2	

141
	movq 48(%rax), %rax	
	movq %reg1, %reg2	

141
	movq 48(%rax), %rax	
	movq %reg1, %rdi	

140
	movq 0(%rbx), %r12	
	movq 64(%r12), %r12	

140
	movq 64(%r12), %r12	
	movq %rbx, %rdi	

140
	movq 64(%r12), %r12	
	movq %rbx, %reg2	

137
	movq %rax, %rdi	
	call *%rbx	

137
	movq %reg0, %rdi	
	call *%rbx	

135
	movq %reg0, %reg1	
	movq %reg2, %rax	

134
	imull %reg0	
	movq %reg1, %reg2	

134
	movq %rax, %reg1	
	movq %reg2, %rdx	

132
	movq %reg0, %rdi	
	addl %reg2, %reg3	

131
	call *%rbx	
	popq %rbx	

131
	movq %reg0, %reg1	
	movq -8(%rbp), %rdx	

131
	movq %reg0, %reg1	
	movq -8(%rbp), %reg3	

130
	movq %reg0, %reg1	
	movq %rbx, %reg3	

129
	movq %rbx, %reg1	
	call *%rax	

127
	movq %rax, %reg1	
	movq -8(%rbp), %reg3	

127
	movq %rax, %reg1	
	movq -8(%rbp), %rdx	

125
	subl %reg0, %eax	
	movq %reg2, %reg3	

124
	cmpl %reg0, %reg1	
	sete %reg2	

123
._main:	
	call Main.new	

123
	.string "%s"	
percents_string:	

123
name_String:	
	.quad String_vtable	

123
	.string "Object"	
name_Object:	

123
	.quad String.length	
	.quad String.substr	

123
substrerr_string:	
	.quad String_vtable	

123
name_String_l:	
	.string "String"	

123
.._main_1:	
	movq 0(%reg0), %reg1	

123
	.quad Object.new	
	.quad Object.abort	

123
name_Object:	
	.quad String_vtable	

123
.string2:	
	.quad String_vtable	

123
	.quad String_vtable	
	.quad substrerr_string_l	

123
	.string "%lld"	
percentlld_string:	

123
	call out_error	
.._main_1:	

123
	.globl _main	
	.type _main, @function	

123
	.quad name_Int_l	
	.quad 3	

123
String_vtable:	
	.quad name_String	

123
	.quad name_IO_l	
	.quad 2	

123
.._main_1:	
	movq 0(%reg0), %rbx	

123
	je .._main_1	
	movq $0, %reg0	

123
	.quad String_vtable	
	.quad abort_string_l	

123
	.quad name_Object	
	.quad 0	

123
	movq %reg0, %reg1	
	cmpl %edi, %eax	

123
	.quad String_vtable	
	.quad .string2_l	

123
	.quad substrerr_string_l	
	.quad 50	

123
	.string ""	
empty_string:	

123
	.string "IO"	
name_IO:	

123
	.quad 1	
	.quad Int.new	

123
	.string "Bool"	
name_Bool:	

123
	call Main.new	
	cmpl $0, %eax	

123
	.quad String_vtable	
	.quad percentlld_string_l	

123
.string1:	
	.quad String_vtable	

123
	.quad empty_string_l	
	.quad 0	

123
	.quad String_vtable	
	.quad .string0_l	

123
.string0:	
	.quad String_vtable	

123
	.quad 2	
	.quad String.new	

123
	.quad abort_string_l	
	.quad 7	

123
	.quad String_vtable	
	.quad name_String_l	

123
	testq $1, %rdi	
	je .._main_1	

123
	.quad percents_string_l	
	.quad 2	

123
	.quad String_vtable	
	.quad .string4_l	

123
percentd_string:	
	.quad String_vtable	

123
abort_string:	
	.quad String_vtable	

123
name_Int:	
	.quad String_vtable	

123
	.quad String_vtable	
	.quad name_Bool_l	

123
	.string "String"	
name_String:	

123
	.section .rodata	
empty_string_l:	

123
	.quad String_vtable	
	.quad percentd_string_l	

123
	.quad 0	
	.quad IO.new	

123
name_Bool_l:	
	.string "Bool"	

123
	call getmem	
	movq $Main_vtable, 0(%rax)	

123
	.quad Object.type_name	
IO_vtable:	

123
	.type Main.new, @function	
Main.new:	

123
	.quad percentd_string_l	
	.quad 2	

123
percentlld_string:	
	.quad String_vtable	

123
	.quad name_IO	
	.quad 0	

123
	.quad name_Object_l	
	.quad 6	

123
.._main_1:	
	movq 0(%rax), %rbx	

123
	je .._main_1	
	movq $0, %rsi	

123
	.section .rodata	

123
	.quad IO.new	
	.quad Object.abort	

123
empty_string:	
	.quad String_vtable	

123
_main:	
	pushq %reg0	

123
	.quad 0	
	.quad Object.new	

123
	.quad String_vtable	
	.quad percents_string_l	

123
percentd_string_l:	
	.string "%d"	

123
	.quad String_vtable	
	.quad name_IO_l	

123
	.quad 54	
percents_string_l:	

123
	.quad percentlld_string_l	
	.quad 4	

123
	ret	
	.size _main, .-_main	

123
.string4:	
	.quad String_vtable	

123
	.quad Object.type_name	
	.quad String.concat	

123
Main.new:	
	pushq %reg0	

123
	.quad Bool.new	
	.quad Object.abort	

123
_main:	
	pushq %rbp	

123
	.quad Main.new	
	.quad Object.abort	

123
Main.new:	
	pushq %rbp	

123
	call Main.new	
	cmpl $0, %reg0	

123
	.quad name_String_l	
	.quad 6	

123
.string5:	
	.quad String_vtable	

123
	.type _main, @function	
_main:	

123
	.quad String_vtable	
	.quad name_Object_l	

123
	pushq %rbx	
._main:	

123
Int_vtable:	
	.quad name_Int	

123
substrerr_string_l:	
	.string "ERROR: %lld: Exception: String index out of bounds"	

123
name_Object_l:	
	.string "Object"	

123
	movq %reg0, %reg1	
	cmpl %edi, %reg3	

123
	.string "%d"	
percentd_string:	

123
	.quad String.new	
	.quad Object.abort	

123
IO_vtable:	
	.quad name_IO	

123
Bool_vtable:	
	.quad name_Bool	

123
	.quad name_Int	
	.quad 1	

123
	.quad name_String	
	.quad 2	

123
	call getmem	
	movq $Main_vtable, 0(%reg0)	

123
	ret	
	.size Main.new, .-Main.new	

123
	.string "ERROR: %lld: Exception: String index out of bounds"	
substrerr_string:	

123
Object_vtable:	
	.quad name_Object	

123
	.quad String_vtable	
	.quad name_Int_l	

123
name_Int_l:	
	.string "Int"	

123
percentlld_string_l:	
	.string "%lld"	

123
name_IO_l:	
	.string "IO"	

123
	.globl Main.new	
	.type Main.new, @function	

123
.._main_1:	
	movq 0(%rax), %reg1	

123
	.quad Int.new	
	.quad Object.abort	

123
percents_string_l:	
	.string "%s"	

123
	.quad String_vtable	
	.quad .string5_l	

123
	.quad name_Bool_l	
	.quad 4	

123
name_IO:	
	.quad String_vtable	

123
	.quad 1	
	.quad Bool.new	

123
	.quad name_Bool	
	.quad 1	

123
	.quad String_vtable	
	.quad empty_string_l	

123
.string3:	
	.quad String_vtable	

123
	testq $1, %reg0	
	je .._main_1	

123
	pushq %reg0	
._main:	

123
	.string "Int"	
name_Int:	

123
empty_string_l:	
	.string ""	

123
	.quad String_vtable	
	.quad .string1_l	

123
abort_string_l:	
	.string "abort\\n"	

123
name_Bool:	
	.quad String_vtable	

123
percents_string:	
	.quad String_vtable	

123
	.quad String.concat	
	.quad String.length	

123
	.string "abort\\n"	
abort_string:	

123
	.quad String_vtable	
	.quad .string3_l	

122
	ret	
	.size Main.main, .-Main.main	

122
	movq %reg0, %reg1	
	movq %rsi, %reg0	

122
	.quad Object.type_name	
Object_vtable:	

122
Main.main:	
	pushq %reg0	

122
	.type Main.main, @function	
Main.main:	

122
Main.main:	
	pushq %rbp	

122
	movq %rdi, %reg1	
	movq %reg2, %rdi	

122
	.globl Main.main	
	.type Main.main, @function	

121
	movq %reg0, %reg1	
	movq $8, %reg2	

121
	movq $8, %reg0	
	call getmem	

121
	movq %rsp, %rbp	
	movq $8, %rdi	

121
	movq %rsp, %reg1	
	movq $8, %rdi	

121
	movq %reg0, %reg1	
	movq $8, %rdi	

121
	movq %reg0, %rbp	
	movq $8, %reg2	

121
	movq %rsp, %reg1	
	movq $8, %reg2	

121
	movq %rsp, %rbp	
	movq $8, %reg2	

121
	addl %reg0, %reg1	
	movq %rax, %reg3	

121
	.quad IO.out_string	
Main_vtable:	

121
	pushq %reg0	
	movq %reg1, %rbx	

121
	movq %reg0, %rbp	
	movq $8, %rdi	

121
	movq $8, %rdi	
	call getmem	

121
	addl %reg0, %eax	
	movq %rax, %reg3	

121
	.quad 6	
name_Int_l:	

121
	.quad 4	
name_IO_l:	

120
	pushq %reg0	
	movq %rdi, %rbx	

119
	movq 80(%reg0), %reg0	
	movq %rax, %rdi	

119
	.quad 3	
name_Object_l:	

119
	.quad String.substr	
Int_vtable:	

119
	movq 0(%rax), %reg1	
	movq 80(%reg1), %reg1	

119
	movq 80(%reg0), %reg0	
	movq %rax, %reg2	

118
	addl %edi, %reg1	
	movq %reg2, %rdi	

118
	.quad 4	
name_Bool_l:	

118
	addl %reg0, %reg1	
	movq %reg2, %rdi	

117
	movq %rdi, %rax	
	movq %reg2, %rdi	

117
	.quad 2	
substrerr_string_l:	

116
	movq 0(%rdx), %reg1	
	movq 72(%reg1), %reg1	

115
	.quad IO.out_string	
	.quad Main.main	

115
	.quad Object.type_name	
Bool_vtable:	

115
	.text 	
	.globl Main.new	

114
	movq %reg0, %reg1	
	subl %reg2, %eax	

114
	addl %reg0, %eax	
	movq %reg2, %rdi	

114
	addl %edi, %eax	
	movq %reg2, %rdi	

113
	movq 80(%rbx), %rbx	
	movq %reg1, %reg2	

113
	movq %reg0, %rdi	
	addl %reg2, %eax	

113
	movq 80(%rbx), %rbx	
	movq %reg1, %rdi	

113
	movq %reg0, %rdi	
	addl %edi, %reg3	

113
	movq 80(%rbx), %rbx	
	movq %rax, %reg2	

113
	movq 0(%reg0), %rax	
	movq 72(%rax), %rax	

113
	movq 0(%reg0), %rbx	
	movq 80(%rbx), %rbx	

113
	movq %reg0, %rdi	
	addl %edi, %eax	

113
	movq 80(%rbx), %rbx	
	movq %rax, %rdi	

113
	movq 0(%rax), %rbx	
	movq 80(%rbx), %rbx	

113
	.quad 2	
percentlld_string_l:	

112
	.quad 40	
abort_string_l:	

112
	.quad .string0_l	
	.quad 4	

111
	movq 72(%reg0), %reg0	
	movq -8(%rbp), %reg2	

111
	.size _main, .-_main	
	.globl Main.main	

111
	movq 72(%reg0), %reg0	
	movq -8(%rbp), %rdi	

111
	cmpl %reg0, %esi	
	sete %reg2	

110
	.quad .string2_l	
	.quad 42	

110
	.quad 50	
.string0_l:	

110
Main_vtable:	
	.quad .string0	

110
	movq 72(%rax), %rax	
	movq %reg1, %reg2	

110
.string0_l:	
	.string "Main"	

110
	movq 72(%rax), %rax	
	movq %reg1, %rdi	

110
	movq %reg0, %reg1	
	movq %reg2, %rdi	

110
	.string "Main"	
.string0:	

109
	movq %reg0, %reg1	
	movq %r13, %reg3	

108
	idivl %reg0	
	movq %reg1, %reg2	

108
	addl %eax, %reg1	
	movq %reg2, %reg3	

107
	sete %reg0b	
	testq $1, %reg0	

107
	cdq	
	idivl %ecx	

106
	movq %reg0, %rax	
	movq %reg2, %rdi	

105
	movq $.string1_l, %rdi	
	call out_error	

105
	movq $.string1_l, %reg0	
	call out_error	

105
	movq 0(%rbx), %reg1	
	movq 72(%reg1), %reg1	

105
	movq 72(%reg0), %reg0	
	movq %rbx, %reg2	

105
	cmpl %esi, %reg1	
	sete %sil	

105
	movq 0(%rdx), %reg1	
	movq 64(%reg1), %reg1	

105
	cmpl %esi, %reg1	
	sete %reg2l	

105
	movq $Main_vtable, 0(%reg0)	
	leave	

105
	cmpl %reg0, %reg1	
	sete %sil	

105
	movq 72(%reg0), %reg0	
	movq %rbx, %rdi	

105
	movq $Main_vtable, 0(%rax)	
	leave	

105
	.quad 0	
	.quad Main.new	

104
	movq %reg0, %rdi	
	cmpl %reg2, %reg3	

103
	subl %reg0, %eax	
	movq %rax, %reg3	

103
	subl %reg0, %reg1	
	movq %rax, %reg3	

103
	.quad Main.main	
	.text 	

102
	movq %reg0, %reg1	
	movq %rbx, %rsi	

101
	movq %r12, %reg1	
	movq %reg2, %reg3	

101
	movq $.string3_l, %reg0	
	call out_error	

101
	movq $.string3_l, %rdi	
	call out_error	

100
	movq %reg0, %rdi	
	movq %rbx, %rsi	

100
	addl %reg0, %reg1	
	movq %reg2, %rax	

100
	cdq	
	idivl %reg0d	

100
	addl %eax, %reg1	
	movq %reg2, %rax	

100
	movq %reg0, %rdi	
	movq %rbx, %reg3	

99
	.quad .string0	
	.quad 0	

99
	movq 64(%reg0), %reg0	
	movq -8(%rbp), %rdi	

99
	movq 64(%reg0), %reg0	
	movq -8(%rbp), %reg2	

98
	subl %eax, %reg1	
	movq %reg2, %reg3	

98
	movq %reg0, %rsi	
	movq %reg2, %reg0	

97
	movq $0, %reg0	
	cmpl %reg1, %esi	

97
	cdq	
	idivl %esi	

97
	movq %reg0, %rdi	
	cmpl %reg2, %eax	

97
	movq %reg0, %rdi	
	cmpl %edi, %eax	

97
	movq %rax, %rsi	
	movq %reg2, %rax	

97
	pushq %r12	
	movq %reg1, %reg2	

97
	movq %reg0, %rdi	
	cmpl %edi, %reg3	

97
	.size Main.new, .-Main.new	
	.globl _main	

96
	.quad 0	
percentd_string_l:	

96
	pushq %r12	
	movq %rdi, %reg2	

96
	movq %reg0, %rdi	
	movq %reg2, %reg0	

95
	cmpl %ecx, %esi	
	sete %cl	

95
	cmpl %reg0, %esi	
	sete %cl	

95
	cmpl %reg0, %reg1	
	sete %cl	

95
	cmpl %ecx, %reg1	
	sete %cl	

95
	cmpl %ecx, %esi	
	sete %reg2	

95
	cmpl %ecx, %reg1	
	sete %reg2	

94
	movq %rbx, %rdi	
	call *%rax	

94
	movq %rbx, %rdi	
	call *%reg2	

93
	movq %reg0, %rax	
	addl %reg2, %reg3	

92
	movq %reg0, %reg1	
	movq %rdi, %reg3	

92
	.quad 2	
name_String_l:	

92
	call *%reg0	
	movq %reg1, %reg2	

92
	movq 0(%rdx), %reg1	
	movq 48(%reg1), %reg1	

91
	sete %cl	
	testq $1, %reg1	

91
	sete %cl	
	testq $1, %rcx	

91
	movq %rdi, %reg1	
	movq %rsi, %rdi	

91
	sete %reg0	
	testq $1, %rcx	

91
	negl %reg0	
	movq %reg1, %reg2	

91
	movq %rax, %rdi	
	movq %reg2, %rax	

90
	movq 0(%rdx), %rax	
	movq 48(%rax), %rax	

90
	.quad 42	
String_vtable:	

89
.string3_l:	
	.string "ERROR: %lld: Exception: case on void\n"	

89
	.quad .string4_l	
	.quad 40	

89
	.string "ERROR: %lld: Exception: case on void\n"	
.string3:	

89
	.quad 4	
.string2_l:	

89
.string4_l:	
	.string "ERROR: %lld: Exception: stack overflow\n"	

89
	movq %reg0, %rax	
	sete %al	

89
.string5_l:	
	.string "ERROR: %lld: Exception: case without matching branch\n"	

89
	.quad .string3_l	
	.quad 38	

89
.string1_l:	
	.string "ERROR: %lld: Exception: dispatch on void\n"	

89
	.quad .string5_l	
	.quad 54	

89
	.quad 38	
.string4_l:	

89
	movq $0, %rsi	
	movq $.string1_l, %reg1	

89
	movq %reg0, %rax	
	sete %reg2	

89
	.string "ERROR: %lld: Exception: division by zero\n"	
.string2:	

89
	.string "ERROR: %lld: Exception: stack overflow\n"	
.string4:	

89
	movq %reg0, %reg1	
	sete %al	

89
.string2_l:	
	.string "ERROR: %lld: Exception: division by zero\n"	

89
	movq %reg0, %reg1	
	sete %reg2	

89
	.quad .string1_l	
	.quad 42	

89
	movq $0, %reg0	
	movq $.string1_l, %rdi	

89
	.string "ERROR: %lld: Exception: case without matching branch\n"	
.string5:	

89
	movq $0, %reg0	
	movq $.string1_l, %reg1	

89
	.string "ERROR: %lld: Exception: dispatch on void\n"	
.string1:	

89
	.quad 42	
.string5_l:	

89
	movq $0, %rsi	
	movq $.string1_l, %rdi	

89
	.quad 6	
.string3_l:	

88
	movq 0(%rdx), %rax	
	movq 64(%rax), %rax	

87
	movq %reg0, %reg1	
	movq 0(%reg2), %reg0	

87
	movq %reg0, %reg1	
	movq %r13, %rsi	

87
	movq %rdi, %rax	
	movq %rsi, %rdi	

87
	movq %reg0, %rsi	
	movq %reg2, %reg3	

87
	movq %rax, %reg1	
	movq 0(%reg2), %rax	

87
	movq %reg0, %rax	
	movq %rsi, %reg0	

86
	imull %reg0	
	movq %rax, %reg2	

86
	cmpl %reg0, %reg1	
	setl %reg2l	

85
	movq $0, %reg0	
	cmpl %esi, %reg2	

85
	movq $0, %rsi	
	cmpl %reg1, %reg2	

85
	movq %reg0, %reg1	
	movq 0(%rbx), %reg0	

85
	movq $0, %rsi	
	cmpl %esi, %reg2	

85
	movq %rax, %reg1	
	movq 0(%rbx), %rax	

84
	sete %sil	
	testq $1, %reg1	

84
	cmpl %edi, %reg1	
	sete %reg2l	

84
	sete %sil	
	testq $1, %rsi	

84
	cmpl %edi, %reg1	
	sete %dil	

84
	sete %reg0l	
	testq $1, %rsi	

84
	cmpl %reg0, %reg1	
	sete %dil	

83
	movq 64(%rax), %rax	
	movq -8(%rbp), %reg2	

83
	movq -8(%rbp), %reg1	
	call *%rax	

83
	movq -8(%rbp), %rdi	
	call *%reg2	

83
	movq $12, %reg0	
	movq %reg1, %reg2	

83
	movq %reg0, %rdi	
	movq %r13, %reg3	

83
	movq %reg0, %rdi	
	movq %r13, %rsi	

83
	movq %reg0, %rax	
	cmpl %reg2, %reg3	

83
	movq -8(%rbp), %rdi	
	call *%rax	

83
	movq -8(%rbp), %reg1	
	call *%reg2	

83
	movq 64(%rax), %rax	
	movq -8(%rbp), %rdi	

82
	subl %reg0, %reg1	
	movq %reg2, %rax	

82
	movq 48(%rax), %rax	
	movq -8(%rbp), %reg2	

82
	movq 48(%reg0), %reg0	
	movq -8(%rbp), %rdi	

82
	movq $12, %reg0	
	movq %reg1, %rax	

82
	movq 48(%rax), %rax	
	movq -8(%rbp), %rdi	

82
	movq 48(%reg0), %reg0	
	movq -8(%rbp), %reg2	

82
	subl %eax, %reg1	
	movq %reg2, %rax	

82
	movq %reg0, %rax	
	negl %reg2	

80
	idivl %reg0	
	movq %rax, %reg2	

80
	movq %reg0, %reg1	
	negl %eax	

80
	movq %reg0, %rax	
	negl %eax	

79
	addl %edi, %reg1	
	movq %rax, %reg3	

79
	addl %edi, %eax	
	movq %rax, %reg3	

77
	.quad 7	
.string1_l:	

77
	movq %rbx, %rsi	
	call *%reg2	

76
	pushq %reg0	
	pushq %r13	

76
	subl %edi, %reg1	
	movq %reg2, %reg3	

76
	pushq %r12	
	pushq %reg1	

76
	popq %r13	
	popq %reg1	

76
	pushq %r12	
	pushq %r13	

76
	popq %reg0	
	popq %r12	

76
	popq %r13	
	popq %r12	

75
	movq -8(%rbp), %rdi	
	movq %rax, %rsi	

75
	movq -8(%rbp), %reg1	
	movq %rax, %rsi	

75
	movq -8(%rbp), %rdi	
	movq %rax, %reg3	

75
	movq -8(%rbp), %reg1	
	movq %rax, %reg3	

74
	subl %edi, %eax	
	movq %reg2, %reg3	

71
	pushq %r12	
	movq %reg1, %rbx	

71
	cmpl %reg0, %eax	
	setl %reg2l	

71
	movq %rsi, %reg1	
	movq $0, %rsi	

71
	movq %reg0, %reg1	
	movq $0, %reg2	

71
	cmpl %reg0d, %reg1	
	sete %reg0b	

70
	movq %r13, %reg1	
	call *%reg2	

70
	movq %reg0, %reg1	
	addl %eax, %reg3	

70
	movq $12, %reg0	
	movq $0, %reg1	

70
	pushq %r12	
	movq %rdi, %rbx	

70
	movq %reg0, %rsi	
	call *%rbx	

69
	movq %reg0, %reg1	
	popq %reg0	

69
	movq %reg0, %reg1	
	cmpl %reg2, %esi	

69
	movq 0(%reg0), %reg1	
	movq 56(%reg1), %reg1	

68
	movq $0, %reg0	
	cmpl %esi, %ecx	

68
	cmpl %esi, %ecx	
	sete %sil	

68
	movq %rsp, %reg1	
	movq %reg2, %reg3	

68
	cmpl %reg0, %ecx	
	sete %reg2l	

68
	movq %rsp, %rbp	
	movq %reg2, %reg3	

68
	movq %reg0, %rbp	
	movq %reg2, %reg3	

68
	cmpl %esi, %ecx	
	sete %reg2l	

68
	movq $0, %rsi	
	cmpl %esi, %ecx	

68
	cmpl %reg0, %ecx	
	sete %sil	

68
	cmpl %reg0d, %ecx	
	sete %reg0b	

68
	movq $0, %reg0	
	cmpl %reg1, %ecx	

68
	movq $0, %rsi	
	cmpl %reg1, %ecx	

67
	movq %rax, %r12	
	movq 0(%reg2), %rax	

67
	movq %rsi, %rcx	
	movq $0, %rsi	

67
	movq $.string5_l, %rdi	
	call out_error	

67
	movq 0(%reg0), %reg1	
	movq 88(%reg1), %reg1	

67
	movq %reg0, %r12	
	movq 0(%rbx), %reg0	

67
	movq %reg0, %rsi	
	cmpl %reg2, %reg3	

67
	movq %rsp, %rbp	
	movq %reg2, %rax	

67
	movq %reg0, %rbp	
	movq %reg2, %rax	

67
	movq %rsp, %reg1	
	movq %reg2, %rax	

67
	movq %rax, %r12	
	movq 0(%rbx), %rax	

67
	movq %reg0, %r12	
	movq 0(%reg2), %reg0	

67
	movq %reg0, %reg1	
	imull %esi	

67
	movq $.string5_l, %reg0	
	call out_error	

67
	movq %reg0, %rcx	
	movq $0, %reg0	

67
	movq %reg0, %reg1	
	movq %rdi, %rax	

66
	cmpl %reg0, %reg1	
	setle %reg2l	

66
	movq 56(%reg0), %reg0	
	movq %reg1, %reg2	

66
	movq 56(%reg0), %reg0	
	movq %reg1, %rdi	

66
	addl %reg0, %edi	
	movq %reg2, %reg3	

66
	movq %reg0, %reg1	
	subl %edi, %reg3	

66
	movq %reg0, %rcx	
	movq %reg2, %reg0	

66
	movq %rax, %rcx	
	movq %reg2, %rax	

65
	movq $0, %reg0	
	cmpl %reg0d, %reg1d	

65
	movq %reg0, %reg1	
	subl %edi, %eax	

65
	movq %rsp, %reg1	
	movq %rdi, %rax	

65
	movq %reg0, %rbp	
	movq %rdi, %reg3	

65
	movq 0(%reg0), %r12	
	movq 72(%r12), %r12	

65
	cmpl %reg0d, %reg1d	
	sete %reg0b	

65
	addl %reg0, %reg1	
	movq %rdi, %reg3	

65
	movq %rsp, %rbp	
	movq %rdi, %rax	

65
	movq %rsp, %rbp	
	movq %rdi, %reg3	

65
	movq %reg0, %rbp	
	movq %rdi, %rax	

65
	movq %rsp, %reg1	
	movq %rdi, %reg3	

65
	movq %reg0, %rax	
	subl %reg2, %reg3	

64
	cmpl %r8d, %ecx	
	sete %r8b	

64
	cmpl %r8d, %reg1	
	sete %r8b	

64
	call *%reg0	
	popq %reg1	

63
	addl %eax, %edi	
	movq %reg2, %reg3	

63
	.quad String_vtable	
	.quad .string6_l	

63
	cmpl $0, %reg0d	
	movq %reg0, %reg1	

63
	subl %eax, %edi	
	movq %reg2, %reg3	

63
.string6:	
	.quad String_vtable	

63
	movq 72(%r12), %r12	
	movq %reg1, %rdi	

63
	subl %reg0, %edi	
	movq %reg2, %reg3	

63
	movq 72(%r12), %r12	
	movq %reg1, %reg2	

63
	movq $.string6, %reg0	
	movq %reg1, %reg2	

63
	movq %reg0, %rax	
	movq %reg2, %rsi	

62
	movq $.string6, %reg0	
	movq -8(%rbp), %rdx	

62
	addl %eax, %reg1	
	movq %rdi, %reg3	

62
	movq $.string6, %reg0	
	movq %reg1, %rdx	

62
	movq $.string6, %reg0	
	movq -8(%rbp), %reg2	

62
	movq %r13, %reg1	
	call *%rax	

61
	movq %r12, %rdi	
	movq %reg2, %rsi	

61
	movq %reg0, %rdi	
	subl %reg2, %reg3	

61
	movq $12, %reg0	
	movq %reg0, %reg1	

61
	movq %r12, %rdi	
	movq %reg2, %reg3	

61
	movq %r12, %reg1	
	movq %reg2, %rsi	

60
	cmpl %reg0, %reg1	
	setl %dil	

60
	movq $0, %rcx	
	cmpl %ecx, %reg2	

60
	cmpl %edi, %reg1	
	setl %dil	

60
	movq %reg0, %reg1	
	cmpl %eax, %reg3	

60
	addl %reg0, %edi	
	movq %rdi, %reg3	

60
	movq $0, %rcx	
	cmpl %reg1, %reg2	

60
	cmpl %edi, %reg1	
	setl %reg2l	

60
	movq $0, %rcx	
	cmpl %reg1, %esi	

60
	cmpl %reg0, %eax	
	setle %reg2l	

60
	movq $0, %rcx	
	cmpl %ecx, %esi	

60
	movq $0, %reg0	
	cmpl %ecx, %reg2	

60
	movq $0, %reg0	
	cmpl %ecx, %esi	

59
	cmpl %reg0, %eax	
	sete %reg2l	

59
	subl %edi, %reg1	
	movq %reg2, %rdi	

59
	subl %edi, %eax	
	movq %rax, %reg3	

59
	subl %edi, %reg1	
	movq %rax, %reg3	

59
	movq %reg0, %reg1	
	imull %ecx	

59
	subl %reg0, %reg1	
	movq %reg2, %rdi	

59
	movq %rax, %reg1	
	popq %rax	

58
	movq 64(%reg0), %reg0	
	movq %rax, %rdi	

58
	movq 0(%rax), %reg1	
	movq 64(%reg1), %reg1	

58
	movq 64(%reg0), %reg0	
	movq %rax, %reg2	

57
	subl %edi, %eax	
	movq %reg2, %rdi	

57
	subl %reg0, %eax	
	movq %reg2, %rdi	

57
	addl %reg0, %edi	
	movq %reg2, %rax	

57
	addl %eax, %edi	
	movq %reg2, %rax	

57
	addl %eax, %edi	
	movq %rdi, %reg3	

57
	movq %rax, %reg1	
	movq %r12, %reg3	

56
	movq %reg0, %rax	
	cmpl %eax, %reg3	

56
	call *%rax	
	movq %reg1, %reg2	

56
	movq %reg0, %rdi	
	subl %edi, %reg3	

56
	addl %eax, %reg1	
	movq %rdi, %rax	

56
	addl %reg0, %reg1	
	movq %rdi, %rax	

56
	movq %reg0, %reg1	
	movq %rcx, %reg0	

56
	movq %rsi, %reg1	
	movq %reg2, %rsi	

56
	sete %r8b	
	testq $1, %r8	

55
	movq %reg0, %reg1	
	movq %rsi, %reg3	

55
	movq 0(%rdx), %rax	
	movq 72(%rax), %rax	

55
	movq 88(%reg0), %reg0	
	movq %reg1, %rdi	

55
	cmpl %edi, %eax	
	setl %reg2l	

55
	movq %rax, %reg1	
	movq %r12, %rsi	

55
	movq %rax, %rdi	
	movq %r12, %rsi	

55
	cmpl %reg0, %eax	
	setl %dil	

55
	movq 88(%reg0), %reg0	
	movq %reg1, %reg2	

55
	call *%reg0	
	cmpl $0, %reg1	

55
	cmpl %edi, %reg1	
	setle %dil	

55
	cmpl %edi, %eax	
	setl %dil	

55
	movq %rax, %rdi	
	movq %r12, %reg3	

55
	movq %reg0, %rdi	
	subl %edi, %eax	

55
	cmpl %edi, %reg1	
	setle %reg2l	

55
	movq %reg0, %rdi	
	subl %reg2, %eax	

55
	cdq	
	idivl %r8d	

55
	cmpl %reg0, %reg1	
	setle %dil	

54
	cmpl $0, %reg0d	
	movq %reg0, %rax	

54
	movq %reg0, %reg1	
	call *%r13	

54
	idivl %reg0	
	movq %reg1, %rsi	

53
	testq $1, %reg0	
	je .Main.main_1	

53
	movq %reg0, %reg1	
	movq %r14, %reg3	

53
	imull %reg0	
	movq %reg1, %rsi	

53
	imull %esi	
	movq %reg1, %reg2	

53
	imull %esi	
	movq %reg1, %rsi	

53
	movq %reg0, %reg1	
	movq %rdi, %reg0	

53
	movq $0, %reg0	
	movq %reg0, 8(%reg1)	

52
	movq %reg0, %rsi	
	imull %esi	

52
	movq %rax, %reg1	
	movq %rdi, %rax	

52
	idivl %esi	
	movq %reg1, %reg2	

52
	movq %rax, %reg1	
	movq %rbx, %reg3	

52
	movq %reg0, %rsi	
	imull %reg2	

52
	movq 72(%rax), %rax	
	movq -8(%rbp), %reg2	

52
	movq %reg0, %rsi	
	movq %rdi, %reg0	

52
	movq %rax, %rsi	
	movq %rdi, %rax	

52
	movq 72(%rax), %rax	
	movq -8(%rbp), %rdi	

51
	movq %rax, %rdi	
	movq %rbx, %rsi	

51
	addl %eax, %edi	
	movq %rdi, %rax	

51
	addl %reg0, %edi	
	movq %rdi, %rax	

51
	movq %rax, %reg1	
	movq %rbx, %rsi	

51
	movq %reg0, %rax	
	addl %eax, %reg3	

51
	movq %rax, %rdi	
	movq %rbx, %reg3	

50
	movq %reg0, %reg1	
	addl %reg2, %edi	

50
	cmpl %edi, %eax	
	setle %dil	

50
	cmpl %edi, %eax	
	setle %reg2l	

50
	movq 0(%rbx), %rax	
	movq 72(%rax), %rax	

50
	cmpl %reg0, %eax	
	setle %dil	

50
	movq 72(%rax), %rax	
	movq %rbx, %reg2	

50
	movq %rsi, %rax	
	movq %reg2, %rsi	

50
	movq 72(%rax), %rax	
	movq %rbx, %rdi	

49
	movq %reg0, %reg1	
	subl %eax, %reg3	

49
	subl %reg0, %edi	
	movq %reg2, %rax	

49
	movq %reg0, %reg1	
	addl %eax, %edi	

49
	subl %eax, %edi	
	movq %reg2, %rax	

48
	idivl %ecx	
	movq %reg1, %reg2	

48
	movq 0(%rbx), %r12	
	movq 72(%r12), %r12	

48
	movq 0(%rbx), %reg1	
	movq 48(%reg1), %reg1	

48
	movq 48(%rax), %rax	
	movq %rbx, %reg2	

48
	movq 48(%rax), %rax	
	movq %rbx, %rdi	

48
	movq 0(%rbx), %rax	
	movq 48(%rax), %rax	

48
	movq 48(%reg0), %reg0	
	movq %rbx, %reg2	

48
	movq 72(%r12), %r12	
	movq %rbx, %rdi	

48
	movq 48(%reg0), %reg0	
	movq %rbx, %rdi	

48
	movq 72(%r12), %r12	
	movq %rbx, %reg2	

47
	movq %reg0, %reg1	
	movq 0(%reg1), %rbx	

47
	cmpl %edi, %eax	
	sete %dil	

47
	movq %reg0, %rsi	
	call Object.cmp	

47
	movq %reg0, %reg1	
	call Object.cmp	

47
	cmpl %edi, %eax	
	sete %reg2l	

47
	cmpl %reg0, %eax	
	sete %dil	

47
	call *%reg0	
	movq %reg1, %reg0	

46
	movq $0, %reg0	
	movq 0(%reg1), %reg2	

46
	subl %reg0, %reg1	
	movq %rdi, %reg3	

46
	movq %reg0, %rax	
	movq $0, %reg2	

46
	subl %eax, %reg1	
	movq %rdi, %reg3	

46
	subl %eax, %edi	
	movq %rdi, %reg3	

46
	movq $1, %reg0	
	movq %reg1, %reg2	

46
	movq %reg0, %rcx	
	imull %reg2	

46
	movq %reg0, %rcx	
	imull %ecx	

46
	subl %reg0, %edi	
	movq %rdi, %reg3	

45
	imull %ecx	
	movq %reg1, %rcx	

45
	imull %reg0	
	movq %reg1, %rcx	

45
	movq %reg0, %reg1	
	movq %reg1, %reg2	

45
	imull %ecx	
	movq %reg1, %reg2	

44
	subl %edi, %eax	
	movq %rax, %rdi	

44
	call *%rax	
	popq %reg1	

44
	movq %reg0, %rbx	
	movq %reg2, %reg3	

44
	addl %reg0, %reg1	
	movq %rax, %rdi	

44
	movq %reg0, %rax	
	subl %eax, %reg3	

44
	pushq %reg0	
	movq %reg1, %rax	

44
	subl %reg0, %eax	
	movq %rax, %rdi	

44
	addl %reg0, %eax	
	movq %rax, %rdi	

44
	addl %edi, %eax	
	movq %rax, %rdi	

44
	subl %edi, %reg1	
	movq %rax, %rdi	

44
	negl %eax	
	movq %reg1, %reg2	

44
	subl %reg0, %reg1	
	movq %rax, %rdi	

44
	addl %edi, %reg1	
	movq %rax, %rdi	

44
	pushq %reg0	
	movq %rdi, %rax	

43
	movq %rbx, %reg1	
	call *%r12	

43
	call out_error	
.Main.main_1:	

43
	movq %rdi, %reg1	
	movq %reg2, %reg3	

42
	movq %reg0, %rsi	
	movq %reg2, %rax	

42
	setl %reg0l	
	movq %reg1, %reg2	

42
	movq %r13, %rsi	
	call *%reg2	

42
	call *%reg0	
	movq %reg0, %r12	

42
	movq %reg0, %rax	
	addl %reg2, %eax	

42
	movq %rax, %rsi	
	call *%rbx	

42
	movq %reg0, %reg1	
	cmpl %esi, %reg3	

42
	call *%rax	
	movq %rax, %r12	

42
	movq $0, %reg0	
	cmpl %reg0d, %reg1	

42
	movq %rbx, %rsi	
	call *%r12	

41
	call *%reg0	
	movq %reg0, %rdi	

41
	popq %reg0	
	cmpl $0, %reg1d	

41
	call *%rax	
	movq %rax, %rdi	

41
	negl %reg0	
	negl %reg0	

41
	popq %rax	
	cmpl $0, %reg1d	

41
	movq %r13, %reg1	
	movq %reg2, %reg3	

41
	idivl %reg0	
	movq %rax, %rsi	

41
	movq %reg0, %reg1	
	movq %reg2, %rcx	

40
	movq %reg0, %rdx	
	movq 0(%rdx), %rbx	

40
	movq %reg0, %reg1	
	cmpl %eax, %esi	

40
	movq -8(%rbp), %rdx	
	movq 0(%rdx), %rbx	

40
	movq $1, %reg0	
	movq 0(%reg1), %reg2	

40
	movq -8(%rbp), %reg1	
	movq 0(%reg1), %rbx	

40
	movq %rdi, %reg1	
	movq $0, %rdi	

40
	movq %reg0, %rax	
	cmpl %reg2, %esi	

40
	movq %reg0, %rsi	
	call *%r13	

40
	movq %reg0, %rax	
	cmpl %eax, %esi	

39
	movq %reg0, %rsi	
	movq %reg2, %rdx	

39
	pushq %r13	
	pushq %reg1	

39
	movq %reg0, %reg1	
	movq %reg2, %reg1	

39
	popq %reg0	
	popq %r13	

39
	pushq %rax	
	movq %reg1, %reg2	

39
	pushq %reg0	
	pushq %r14	

39
	popq %r14	
	popq %r13	

39
	popq %r14	
	popq %reg1	

39
	movq $0, %r8	
	cmpl %r8d, %ecx	

39
	movq $0, %reg0	
	cmpl %reg0d, %ecx	

39
	pushq %reg0	
	movq %reg1, %rdi	

39
	movq $0, %r8	
	cmpl %r8d, %reg1	

39
	pushq %rax	
	movq %reg1, %rdi	

39
	pushq %r13	
	pushq %r14	

38
	call *%reg0	
	movq %reg1, %rdx	

38
	movq %reg0, %rax	
	movq %reg2, %rax	

38
	movq $0, %rdi	
	cmpl %reg1, %reg2	

38
	movq %reg0, %rsi	
	cmpl %esi, %reg3	

38
	negl %reg0	
	movq %reg1, %rax	

38
	idivl %esi	
	movq %rax, %reg2	

38
	movq $0, %reg0	
	cmpl %edi, %reg2	

38
	movq $0, %rdi	
	cmpl %edi, %reg2	

38
	movq %reg0, %reg1	
	cmpl %esi, %eax	

37
	movq $0, %rdi	
	cmpl %reg1, %esi	

37
	movq %rax, %reg1	
	movq $12, %reg2	

37
	movq %reg0, %rax	
	movq %rcx, %reg0	

37
	movq $0, %reg0	
	cmpl %edi, %esi	

37
	movq %rsi, %rax	
	movq %rcx, %rsi	

37
	cmpl %edi, %esi	
	sete %reg2l	

37
	cmpl %edi, %esi	
	sete %dil	

37
	movq 88(%reg0), %reg0	
	movq %rbx, %reg2	

37
	movq 0(%reg0), %rax	
	movq 88(%rax), %rax	

37
	cmpl %reg0, %esi	
	sete %dil	

37
	movq %rdi, %reg1	
	movq %rsi, %reg3	

37
	movq %reg0, %rsi	
	cmpl %esi, %eax	

37
	movq %reg0, %rsi	
	negl %esi	

37
	movq %reg0, %rsi	
	cmpl %reg2, %eax	

37
	cmpl %reg0, %esi	
	sete %reg2l	

37
	movq %r13, %rsi	
	call *%rax	

37
	movq 0(%rbx), %reg1	
	movq 88(%reg1), %reg1	

37
	movq 88(%reg0), %reg0	
	movq %rbx, %rdi	

37
	movq %reg0, %reg1	
	movq $12, %reg2	

37
	movq %reg0, %rsi	
	negl %reg2	

37
	movq %rsi, %reg1	
	movq %rcx, %rsi	

37
	movq $0, %rdi	
	cmpl %edi, %esi	

37
	movq %reg0, %rsi	
	movq $0, %reg0	

37
	movq %reg0, %reg1	
	negl %esi	

36
	movq %rdi, %reg1	
	cmpl %reg2, %reg3	

36
	cmpl $0, %ebx	
	movq %rbx, %reg2	

36
	movq $3, %rsi	
	movq $.string2_l, %reg1	

36
	movq 72(%rbx), %rbx	
	movq %reg1, %reg2	

36
	movq $3, %reg0	
	movq $.string2_l, %reg1	

36
	movq $3, %reg0	
	movq $.string2_l, %rdi	

36
	movq $0, %rdi	
	movq %rdi, 8(%rax)	

36
	movq %rax, %reg1	
	call *%r13	

36
	cmpl %reg0, %reg1d	
	sete %reg2	

36
	cmpl $0, %reg0	
	movq %rbx, %reg2	

36
	movq 72(%rbx), %rbx	
	movq %reg1, %rdi	

36
	movq %rdi, %rsi	
	movq $0, %rdi	

36
	movq $0, %rdi	
	movq %rdi, 8(%reg1)	

36
	movq $0, %reg0	
	movq %reg0, 8(%rax)	

36
	movq $3, %rsi	
	movq $.string2_l, %rdi	

36
	movq 0(%reg0), %rbx	
	movq 72(%rbx), %rbx	

36
	cmpl $0, %ebx	
	movq %reg1, %reg2	

35
	addl %esi, %reg1	
	movq %reg2, %reg3	

35
	movq $16, %rdi	
	call getmem	

35
	imull %reg0	
	movq %rax, %rsi	

35
	movq -8(%rbp), %reg1	
	movq %rbx, %reg3	

35
	movq $16, %reg0	
	call getmem	

35
	movq -8(%rbp), %rdi	
	movq %rbx, %rsi	

35
	pushq %r13	
	movq %rdi, %reg2	

35
	movq -8(%rbp), %reg1	
	movq %rbx, %rsi	

35
	imull %esi	
	movq %rax, %reg2	

35
	imull %esi	
	movq %rax, %rsi	

35
	subl %reg0, %reg1	
	movq %rdi, %rax	

35
	movq %reg0, %reg1	
	pushq %rax	

35
	movq $0, %reg0	
	cmpl %reg1, %reg2d	

35
	call *%reg0	
	cmpl $0, %eax	

35
	call *%reg0	
	movq $.string6, %reg1	

35
	subl %eax, %reg1	
	movq %rdi, %rax	

35
	movq -8(%rbp), %rdi	
	movq %rbx, %reg3	

35
	subl %eax, %edi	
	movq %rdi, %rax	

35
	movq %rbx, %rsi	
	call *%rax	

35
	movq %reg0, %rax	
	imull %reg2	

35
	movq %reg0, %reg1	
	movq %r14, %rsi	

35
	imull %edi	
	movq %reg1, %reg2	

35
	pushq %r13	
	movq %reg1, %reg2	

35
	subl %reg0, %edi	
	movq %rdi, %rax	

35
	movq 0(%reg0), %rax	
	movq 56(%rax), %rax	

35
	idivl %ecx	
	movq %rax, %reg2	

34
	setl %dil	
	movq %reg1, %reg2	

34
	movq 56(%rax), %rax	
	movq %reg1, %rdi	

34
	setl %reg0l	
	movq %rdi, %rax	

34
	setl %dil	
	movq %rdi, %rax	

34
	addl %reg0, %reg1	
	movq %reg2, %rsi	

34
	addl %esi, %reg1	
	movq %reg2, %rsi	

34
	movq %rsi, %reg1	
	subl %reg2, %reg3	

34
	movq %r12, %reg1	
	movq %rax, %reg3	

34
	setl %dil	
	movq %rdi, %reg2	

34
	cmpl $0, %r12d	
	movq %r12, %reg1	

34
	movq $0, %reg0	
	movq 0(%rbx), %reg2	

34
	movq %reg0, %rdi	
	movq %r14, %reg3	

34
	movq %reg0, %rdi	
	movq %r14, %rsi	

34
	movq 56(%rax), %rax	
	movq %reg1, %reg2	

34
	setl %reg0l	
	movq %reg1, %rax	

34
	setl %dil	
	movq %reg1, %rax	

34
	setl %reg0l	
	movq %rdi, %reg2	

33
	movq %rsi, %rdi	
	subl %edi, %reg3	

33
	movq %rsi, %rdi	
	subl %reg2, %eax	

33
	movq %rsi, %rdi	
	subl %edi, %eax	

33
	movq %rsi, %reg1	
	subl %edi, %reg3	

33
	movq %r12, %reg1	
	addl %reg2, %reg3	

33
	movq %rsi, %rdi	
	subl %reg2, %reg3	

33
	movq %rsi, %reg1	
	subl %reg2, %eax	

33
	movq %reg0, %reg1	
	movq $1, %reg2	

33
	negl %reg0	
	movq $12, %reg1	

33
	movq %rdi, %rsi	
	cmpl %reg2, %reg3	

33
	movq %rsi, %reg1	
	subl %edi, %eax	

33
	movq %reg0, %reg1	
	negl %ecx	

32
	movq 64(%rbx), %rbx	
	movq %reg1, %rdi	

32
	movq 64(%rbx), %rbx	
	movq %reg1, %reg2	

32
	subl %reg0, %reg1	
	movq %reg2, %rsi	

32
	addl %esi, %eax	
	movq %reg2, %reg3	

32
	movq %reg0, %rcx	
	negl %reg2	

32
	call *%rax	
	movq %reg1, %rdx	

32
	movq $1, %reg0	
	movq 0(%rbx), %reg2	

32
	movq %reg0, %reg1	
	cmpl $0, %reg2	

32
	movq 0(%reg0), %rbx	
	movq 64(%rbx), %rbx	

32
	movq %reg0, %rcx	
	negl %ecx	

31
	call *%reg0	
	movq $.string6, %reg0	

31
	movq $12, %rsi	
	movq $0, %reg1	

31
	movq $12, %rsi	
	movq $0, %rcx	

31
	imull %reg0	
	movq $12, %reg1	

31
	cmpl %ecx, %reg1d	
	sete %cl	

31
	cmpl %ecx, %reg1d	
	sete %reg2	

31
	movq %reg0, %reg1	
	imull %reg1d	

31
	call Int.new	
	movq %reg0, 8(%reg1)	

31
	call Object.cmp	
	movq %reg0, %reg1	

31
	cmpl %reg0, %r8d	
	sete %reg2	

31
	cmpl %reg0, %reg1d	
	sete %cl	

31
	call *%reg0	
	popq %r12	

31
	movq %reg0, %rcx	
	movq %rsi, %reg0	

31
	call Int.new	
	movq %reg0, 8(%rax)	

31
	movq %r12, %rdi	
	call *%rax	

31
	.quad .string3_l	
	.quad 42	

31
	testq $1, %reg0	
	je .Main.main_2	

31
	cmpl %ecx, %r8d	
	sete %cl	

31
	movq %rax, %reg1	
	movq %rsi, %rax	

31
	idivl %reg0	
	movq $12, %reg1	

31
	movq %rcx, %reg1	
	movq $0, %rcx	

31
	addl %esi, %eax	
	movq %reg2, %rsi	

31
	movq $12, %reg0	
	movq $0, %rcx	

31
	addl %reg0, %eax	
	movq %reg2, %rsi	

31
	movq %r12, %rdi	
	call *%reg2	

31
	movq %reg0, %reg1	
	subl %esi, %reg3	

31
	call Object.cmp	
	movq %rax, %reg1	

31
	movq $.string6, %rax	
	movq %reg1, %reg2	

31
	movq %rdi, %reg1	
	cmpl %reg2, %esi	

31
	movq %reg0, %reg1	
	addl %esi, %reg3	

31
	movq %rax, %rcx	
	movq %rsi, %rax	

31
	cmpl %ecx, %r8d	
	sete %reg2	

31
	cmpl %reg0, %r8d	
	sete %cl	

30
	movq %reg0, %rax	
	addl %edi, %reg3	

30
	movq %reg0, %reg1	
	movq %r12, %reg0	

30
	movq $0, %rcx	
	cmpl %reg1, %r8d	

30
	setl %reg0	
	testq $1, %reg1	

30
	movq %reg0, %rax	
	addl %eax, %edi	

30
	movq %reg0, %reg1	
	movq %r8, %reg0	

30
	movq $0, %reg0	
	cmpl %ecx, %reg2d	

30
	movq %reg0, %reg1	
	subl %esi, %eax	

30
	movq $.string6, %rax	
	movq %reg1, %rdx	

30
	sete %dil	
	movq %rdi, %reg2	

30
	sete %dil	
	movq %rdi, %rax	

30
	addl %reg0, %esi	
	movq %reg2, %reg3	

30
	sete %reg0l	
	movq %rdi, %rax	

30
	movq $0, %rcx	
	cmpl %ecx, %r8d	

30
	movq $.string6, %rax	
	movq -8(%rbp), %reg2	

30
	movq %reg0, %reg1	
	call String.cmp	

30
	sete %dil	
	movq %reg1, %rax	

30
	call *%reg0	
	movq %reg1, %rdi	

30
	movq %reg0, %reg1	
	subl %reg2, %edi	

30
	movq 0(%rdx), %rbx	
	movq 72(%rbx), %rbx	

30
	movq 0(%rax), %r12	
	movq 64(%r12), %r12	

30
	movq 72(%rbx), %rbx	
	movq -8(%rbp), %reg2	

30
	movq $0, %rcx	
	cmpl %reg1, %reg2d	

30
	sete %dil	
	movq %reg1, %reg2	

30
	movq %reg0, %r8	
	movq %reg2, %reg0	

30
	movq %reg0, %rax	
	addl %edi, %eax	

30
	movq $0, %rcx	
	cmpl %ecx, %reg2d	

30
	movq 72(%rbx), %rbx	
	movq -8(%rbp), %rdi	

30
	cmpl $0, %reg0	
	sete %reg1	

30
	movq 64(%r12), %r12	
	movq %rax, %rdi	

30
	movq %reg0, %rax	
	addl %reg2, %edi	

30
.string7:	
	.quad String_vtable	

30
	movq %reg0, %reg1	
	addl %esi, %eax	

30
	movq $0, %reg0	
	cmpl %reg1, %r8d	

30
	negl %eax	
	movq $12, %reg1	

30
	sete %reg0l	
	movq %reg1, %rax	

30
	sete %reg0l	
	movq %rdi, %reg2	

30
	.quad String_vtable	
	.quad .string7_l	

30
	movq 64(%r12), %r12	
	movq %rax, %reg2	

30
	movq %reg0, %rsi	
	call String.cmp	

30
	movq $.string6, %rax	
	movq -8(%rbp), %rdx	

30
	movq $0, %reg0	
	cmpl %ecx, %r8d	

30
	sete %reg0l	
	movq %reg1, %reg2	

29
	cmpl %reg0, %reg1	
	setl %reg2	

29
	movq %rdi, %reg1	
	cmpl %ecx, %reg3	

29
	cmpl %reg0, %reg1	
	sete %al	

29
	movq $12, %rsi	
	movq %reg1, %rax	

29
	subl %esi, %eax	
	movq %reg2, %rsi	

29
	movq %rcx, %reg1	
	movq %reg2, %rcx	

29
	movq %rdi, %reg1	
	cmpl %ecx, %esi	

29
	negl %reg0	
	imull %reg0	

29
	cmpl %eax, %reg1	
	sete %reg2	

29
	movq %rax, %reg1	
	negl %reg2	

29
	movq %rax, %r8	
	movq %reg2, %rax	

29
	negl %reg0	
	addl %reg0, %reg1	

29
	cmpl %reg0, %reg1	
	setl %al	

29
	call *%rax	
	movq $.string6, %reg1	

29
	cmpl $0, %reg0	
	sete %al	

29
	movq %rdi, %rsi	
	cmpl %ecx, %esi	

29
	movq %reg0, %rsi	
	cmpl %ecx, %esi	

29
	movq %rax, %rsi	
	call *%r13	

29
	subl %reg0, %eax	
	movq %reg2, %rsi	

29
	movq %reg0, %reg1	
	cmpl %ecx, %reg3	

29
	cmpl $0, %eax	
	sete %reg1	

29
	subl %esi, %reg1	
	movq %reg2, %rsi	

29
	subl %esi, %eax	
	movq %reg2, %reg3	

29
	movq $12, %rsi	
	movq %reg1, %reg2	

29
	subl %esi, %reg1	
	movq %reg2, %reg3	

29
	movq %rdi, %rsi	
	cmpl %ecx, %reg3	

29
	movq %reg0, %reg1	
	subl %eax, %edi	

29
	movq %rcx, %r8	
	movq $0, %rcx	

29
	testq $1, %rdi	
	je .Main.main_1	

29
	movq %reg0, %rsi	
	cmpl %reg2, %esi	

29
	movq %reg0, %rsi	
	cmpl %ecx, %reg3	

29
	pushq %r13	
	movq %rdi, %rbx	

29
	movq %rcx, %rax	
	movq %reg2, %rcx	

29
	cmpl %eax, %reg1	
	setl %reg2	

29
	movq %r12, %reg1	
	movq %rbx, %reg3	

29
	movq %reg0, %r8	
	movq $0, %reg0	

29
	movq %rdi, %rsi	
	cmpl %reg2, %esi	

29
	movq %reg0, %reg1	
	cmpl %ecx, %esi	

29
	pushq %r13	
	movq %reg1, %rbx	

29
	cmpl $0, %eax	
	sete %al	

29
	cmpl %eax, %reg1	
	setl %al	

29
	cmpl %eax, %reg1	
	sete %al	

28
	movq %r12, %reg1	
	sete %reg2	

28
	movq %r12, %reg1	
	sete %al	

28
	movq 56(%reg0), %reg0	
	movq %rbx, %rdi	

28
	movq $0, %r9	
	cmpl %r9d, %reg1d	

28
	sete %r9b	
	testq $1, %r9	

28
	movq %r12, %reg1	
	movq %rax, %rsi	

28
	movq 0(%rbx), %reg1	
	movq 56(%reg1), %reg1	

28
	movq -16(%rbp), %reg1	
	movq %reg2, %reg3	

28
	movq %r12, %rdi	
	movq %rax, %rsi	

28
	movq %reg0, %rcx	
	cmpl %reg2d, %ecx	

28
	movq %r12, %reg1	
	movq %r13, %reg3	

28
	movq %rdi, %reg1	
	movq 0(%reg1), %reg2	

28
	movq %reg0, %reg1	
	cmpl %reg2d, %ecx	

28
	setl %reg0	
	testq $1, %rax	

28
	call String.cmp	
	movq %rax, %reg1	

28
	movq %reg0, %reg1	
	cmpl %reg2d, %reg3	

28
	call out_error	
.Main.main_2:	

28
	movq %r12, %rdi	
	movq %rax, %reg3	

28
	movq %rax, %rdi	
	call *%r12	

28
	movq %reg0, %rdi	
	call *%r12	

28
	movq %r12, %rax	
	sete %reg2	

28
	movq 56(%reg0), %reg0	
	movq %rbx, %reg2	

28
	cmpl %r9d, %reg1d	
	sete %r9b	

28
	movq %r12, %rax	
	sete %al	

28
	movq %r12, %reg1	
	call *%rbx	

28
	movq %reg0, %rcx	
	cmpl %reg2d, %reg3	

28
	cmpl $0, %r12d	
	movq %r12, %rax	

28
	movq %r12, %rsi	
	call *%rbx	

28
	setl %al	
	testq $1, %rax	

28
	call String.cmp	
	movq %reg0, %reg1	

28
	setl %al	
	testq $1, %reg1	

28
	movq $0, %reg0	
	movq %reg0, %reg1	

28
	movq %reg0, %rax	
	movq %reg2, %rcx	

28
	movq %rdi, %rbx	
	movq %reg2, %reg3	

27
	call *%rax	
	movq $.string6, %rax	

27
	movq %reg0, %rax	
	cmpl %reg2, %eax	

27
	movq $12, %rsi	
	movq %rsi, %rcx	

27
	movq $12, %reg0	
	movq %reg0, %rcx	

27
	movq %reg0, %rbp	
	movq $16, %rdi	

27
	call *%reg0	
	movq -8(%rbp), %reg2	

27
	movq %r12, %reg1	
	cmpl %reg2, %reg3	

27
	movq %reg0, %reg1	
	imull %edi	

27
	call *%reg0	
	movq -8(%rbp), %rdx	

27
	cmpl $0, %r13d	
	movq %r13, %reg1	

27
	idivl %esi	
	movq %reg1, %rsi	

27
	movq $12, %rsi	
	movq %rsi, %reg1	

27
.Main.main_1:	
	movq 0(%reg0), %reg1	

27
	movq %rdi, 8(%reg1)	
	leave	

27
	movq %rdi, 8(%rax)	
	leave	

27
	movq %rsp, %rbp	
	movq $16, %rdi	

27
	idivl %ecx	
	movq %reg1, %rsi	

27
	movq %rsp, %reg1	
	movq $16, %reg2	

27
	movq %reg0, %reg1	
	movq $16, %rdi	

27
	movq %rsp, %rbp	
	movq $16, %reg2	

27
	movq %reg0, 8(%reg1)	
	leave	

27
	movq %reg0, 8(%rax)	
	leave	

27
	movq %rsp, %reg1	
	movq $16, %rdi	

27
	movq %reg0, %reg1	
	movq $16, %reg2	

27
	movq %rax, %reg1	
	movq $0, %rax	

27
	call *%r12	
	popq %r12	

27
	movq %reg0, %rbp	
	movq $16, %reg2	

27
	movq %reg0, %rsi	
	subl %reg2, %reg3	

27
	movq %reg0, %rsi	
	subl %esi, %reg3	

26
	movq %rsi, %rdi	
	addl %reg2, %eax	

26
	imull %reg0	
	movq %reg1, %rdi	

26
	call *%rax	
	popq %r12	

26
	setle %dil	
	movq %rdi, %rax	

26
	cmpl %esi, %reg1	
	setl %reg2l	

26
	movq %rsi, %rdi	
	addl %edi, %reg3	

26
	movq $12, %rcx	
	movq %reg1, %rax	

26
	movq %rsi, %reg1	
	addl %reg2, %reg3	

26
	movq $0, %reg0	
	movq 0(%reg1), %r12	

26
	pushq %r12	
	movq %rdi, %rax	

26
	movq %rsi, %reg1	
	addl %reg2, %eax	

26
	setle %reg0l	
	movq %rdi, %rax	

26
	setle %dil	
	movq %reg1, %rax	

26
	addl %eax, %esi	
	movq %reg2, %reg3	

26
	movq $12, %rcx	
	movq %reg1, %reg2	

26
	idivl %reg0d	
	movq %reg1, %reg2	

26
	setle %dil	
	movq %rdi, %reg2	

26
	movq %rsi, %rdi	
	addl %edi, %eax	

26
	movq %rsi, %reg1	
	addl %edi, %reg3	

26
	movq %reg0, %rax	
	cmpl %edi, %eax	

26
	movq $.string8, %reg0	
	movq %reg1, %reg2	

26
	setle %reg0l	
	movq %reg1, %rax	

26
	movq %reg0, %rsi	
	subl %reg2, %eax	

26
	.quad 42	
.string6_l:	

26
	movq %reg0, %rax	
	cmpl %edi, %reg3	

26
	cmpl %reg0, %reg1	
	setl %sil	

26
	setle %dil	
	movq %reg1, %reg2	

26
	imull %edi	
	movq %reg1, %rdi	

26
	cmpl %esi, %reg1	
	setl %sil	

26
	setle %reg0l	
	movq %rdi, %reg2	

26
	movq %rsi, %reg1	
	addl %edi, %eax	

26
	pushq %r12	
	movq %reg1, %rax	

26
	setle %reg0l	
	movq %reg1, %reg2	

26
	movq %reg0, %rsi	
	subl %esi, %eax	

26
	movq %rsi, %rdi	
	addl %reg2, %reg3	

26
	movq %reg0, %reg1	
	movq %reg2, %r12	

25
	movq %rdi, %reg1	
	movq %rsi, %r12	

25
	movq %rbx, %rax	
	sete %reg2	

25
	movq 0(%rax), %reg1	
	movq 48(%reg1), %reg1	

25
	cmpl %esi, %edi	
	sete %reg2l	

25
	imull %ecx	
	movq %rax, %reg2	

25
	subl %reg0, %reg1	
	movq %rax, %rsi	

25
	movq %rdi, %reg1	
	movq %reg2, %r12	

25
	movq %rbx, %reg1	
	sete %reg2	

25
	subl %esi, %eax	
	movq %rax, %reg3	

25
	imull %reg0	
	movq %rax, %rcx	

25
	movq %rbx, %reg1	
	sete %al	

25
	movq $0, %r9	
	cmpl %r9d, %r8d	

25
	movq $0, %reg0	
	cmpl %reg0d, %r8d	

25
	setle %al	
	testq $1, %reg1	

25
	cmpl $0, %reg0	
	movq %reg1, %rax	

25
	cmpl $0, %ebx	
	movq %rbx, %rax	

25
	cmpl %reg0, %edi	
	sete %sil	

25
	call *%rax	
	movq -8(%rbp), %rdx	

25
	movq 48(%reg0), %reg0	
	movq %rax, %reg2	

25
	call *%rax	
	cmpl $0, %reg1	

25
	subl %esi, %eax	
	movq %rax, %rsi	

25
	call *%reg0	
	movq %rax, %reg0	

25
	setle %reg0	
	testq $1, %reg1	

25
	cmpl $0, %r13d	
	movq %r13, %rax	

25
	subl %esi, %reg1	
	movq %rax, %reg3	

25
	cmpl %reg0, %edi	
	sete %reg2l	

25
	imull %ecx	
	movq %rax, %rcx	

25
	movq 88(%rax), %rax	
	movq %reg1, %rdi	

25
	movq %reg0, %reg1	
	call *%r15	

25
	cmpl %r9d, %r8d	
	sete %r9b	

25
	movq %reg0, %reg1	
	movq 8(%reg1), %reg1	

25
	cmpl %esi, %edi	
	sete %sil	

25
	movq %r13, %reg1	
	sete %reg2	

25
	movq %reg0, %reg1	
	movq %reg2, %r8	

25
	movq %reg0, %rax	
	movq 8(%rax), %rax	

25
	movq %rdi, %reg1	
	movq 8(%reg1), %reg1	

25
	setle %reg0	
	testq $1, %rax	

25
	movq 48(%reg0), %reg0	
	movq %rax, %rdi	

25
	subl %reg0, %eax	
	movq %rax, %rsi	

25
	cmpl $0, %reg0	
	movq %rbx, %rax	

25
	movq %reg0, %reg1	
	negl %edi	

25
	subl %esi, %reg1	
	movq %rax, %rsi	

25
	call *%rax	
	movq -8(%rbp), %reg2	

25
	movq %reg0, %reg1	
	movq %rsi, %r12	

25
	cmpl %reg0d, %r8d	
	sete %reg0b	

25
	movq 88(%rax), %rax	
	movq %reg1, %reg2	

25
	cmpl $0, %ebx	
	movq %reg1, %rax	

25
	movq %rbx, %rax	
	sete %al	

25
	imull %edi	
	movq %rax, %reg2	

25
	setle %al	
	testq $1, %rax	

25
	movq %r13, %reg1	
	sete %al	

25
	movq %r13, %rax	
	sete %reg2	

25
	movq %rdi, %rax	
	movq 8(%rax), %rax	

25
	movq %reg0, %rax	
	movq %rsi, %reg3	

25
	movq %r13, %rax	
	sete %al	

25
	testq $1, %reg0	
	je .Main.main_3	

24
	movq $.string8, %reg0	
	movq %reg1, %rdx	

24
	movq $0, %reg0	
	cmpl %reg0d, %r9d	

24
	movq %reg0, %rax	
	subl %eax, %edi	

24
	movq %reg0, %reg1	
	cmpl %r8d, %ecx	

24
	movq %r14, %reg1	
	movq %reg2, %reg3	

24
	movq %rdi, %rbx	
	movq %rsi, %reg3	

24
	cdq	
	idivl %r9d	

24
	movq %reg0, %rsi	
	addl %reg2, %reg3	

24
	movq %reg0, %reg1	
	movq 0(%reg2), %reg3	

24
	movq %rsi, %reg1	
	cmpl %r8d, %ecx	

24
	movq %reg0, %rbx	
	movq %rsi, %reg3	

24
	addl %esi, %reg1	
	movq %rax, %reg3	

24
	movq $.string8, %reg0	
	movq -8(%rbp), %rdx	

24
	movq %r13, %rdi	
	call *%rax	

24
	movq %reg0, %rdi	
	negl %reg2	

24
	cmpl %reg0d, %r9d	
	sete %reg0b	

24
	cmpl $0, %reg0d	
	sete %reg0b	

24
	movq %r13, %rdi	
	call *%reg2	

24
	movq %reg0, %rax	
	subl %reg2, %edi	

24
	movq %reg0, %reg1	
	cmpl %r8d, %reg3	

24
	addl %esi, %reg1	
	movq %rax, %rsi	

24
	movq %reg0, %rsi	
	call String.concat	

24
	movq %rsi, %reg1	
	cmpl %r8d, %reg3	

24
	movq %reg0, %rdi	
	negl %edi	

24
	addl %reg0, %esi	
	movq %reg2, %rax	

24
	movq %reg0, %r12	
	movq %reg2, %reg3	

24
	movq %rsi, %reg1	
	cmpl %reg2d, %reg3	

24
	movq %reg0, %reg1	
	cmpl %reg2, %edi	

24
	movq %rsi, %rcx	
	cmpl %reg2d, %ecx	

24
	movq %reg0, %rcx	
	cmpl %r8d, %reg3	

24
	addl %eax, %esi	
	movq %reg2, %rax	

24
	addl %reg0, %reg1	
	movq %rax, %rsi	

24
	movq %rsi, %rcx	
	cmpl %reg2d, %reg3	

24
	movq %reg0, %reg1	
	call *%r14	

24
	call Int.new	
	movq %r12, 8(%rax)	

24
	addl %esi, %eax	
	movq %rax, %rsi	

24
	movq %rsi, %rcx	
	cmpl %r8d, %ecx	

24
	movq %reg0, %rcx	
	cmpl %r8d, %ecx	

24
	.quad .string1_l	
	.quad 3	

24
	call Int.new	
	movq %r12, 8(%reg1)	

24
	addl %reg0, %eax	
	movq %rax, %rsi	

24
	addl %esi, %eax	
	movq %rax, %reg3	

24
	movq %rsi, %reg1	
	cmpl %reg2d, %ecx	

24
	movq $.string8, %reg0	
	movq -8(%rbp), %reg2	

24
	movq %rax, %reg1	
	movq %r13, %reg3	

24
	movq %rsi, %rcx	
	cmpl %r8d, %reg3	

24
	movq %reg0, %reg1	
	call String.concat	

24
	movq %rbx, %reg1	
	movq %r13, %reg3	

24
	cmpl $0, %reg0	
	setle %reg1	

23
	movq %reg0, %reg1	
	movq %r15, %reg3	

23
	movq %reg0, 8(%reg1)	
	movq $0, %reg0	

23
	pushq %rax	
	movq %r12, %reg2	

23
	pushq %reg0	
	movq %r12, %reg2	

23
	pushq %rax	
	movq %r12, %rdi	

23
	movq %reg0, %rbx	
	movq %reg2, %r12	

23
	movq %reg0, %rsi	
	addl %esi, %reg3	

23
	popq %reg0	
	cmpl $0, %r13d	

23
	idivl %reg0	
	movq $12, %rsi	

23
	movq %rax, %reg1	
	movq %r12, %rax	

23
	popq %rax	
	cmpl $0, %r13d	

23
	movq 8(%rax), %rax	
	leave	

23
	movq 80(%rax), %rax	
	movq %reg1, %rdi	

23
	pushq %reg0	
	movq %r12, %rdi	

23
	movq 8(%reg0), %reg0	
	leave	

23
	movq %reg0, %r13	
	popq %reg0	

23
	movq 0(%reg0), %rax	
	movq 80(%rax), %rax	

23
	movq %rdi, %reg1	
	movq %reg1, %reg2	

23
	call *%reg0	
	movq 0(%reg1), %reg2	

23
	movq %r14, %reg1	
	call *%reg2	

23
	movq $1, %reg0	
	movq %reg0, %reg1	

23
	idivl %ecx	
	movq %rax, %rsi	

23
	movq %rax, %r13	
	popq %rax	

23
	movq 80(%rax), %rax	
	movq %reg1, %reg2	

22
	addl %reg0, %reg1	
	movq %reg2, %rcx	

22
	movq 0(%rax), %rbx	
	movq 64(%rbx), %rbx	

22
	movq %reg0, %rbx	
	movq %rsi, %r12	

22
	movq %rbx, %reg1	
	movq %r13, %rsi	

22
	movq %reg0, %rax	
	movq %reg2, %r8	

22
	movq %reg0, 8(%reg1)	
	movq %reg1, %reg0	

22
	.quad 3	
name_String_l:	

22
	movq %rbx, %rdi	
	movq %r13, %rsi	

22
	movq 64(%rbx), %rbx	
	movq %rax, %rdi	

22
	.quad 2	
.string1_l:	

22
	.quad 4	
.string3_l:	

22
	subl %reg0, %reg1	
	movq %reg2, %rcx	

22
	movq %reg0, %rsi	
	addl %esi, %eax	

22
	movq %rbx, %rdi	
	movq %r13, %reg3	

22
	movq %rdi, %rbx	
	movq %reg2, %r12	

22
	movq %reg0, %rsi	
	addl %reg2, %eax	

22
	imull %reg0d	
	movq %reg1, %reg0	

22
	movq %reg0, %reg1	
	leave	

22
	call *%reg0	
	movq 0(%rbx), %reg2	

22
	movq 64(%rbx), %rbx	
	movq %rax, %reg2	

22
	movq %rdi, %reg1	
	leave	

22
	movq %rdi, %rax	
	leave	

22
	movq %reg0, %rax	
	leave	

22
	movq %rdi, %rbx	
	movq %rsi, %r12	

22
	negl %esi	
	movq %reg1, %reg2	

21
	.quad .string5_l	
	.quad 40	

21
	.string "ERROR: %lld: Exception: case without matching branch\n"	
.string6:	

21
	.string "ERROR: %lld: Exception: case on void\n"	
.string4:	

21
	.string "ERROR: %lld: Exception: stack overflow\n"	
.string5:	

21
	movq %r12, %reg1	
	addl %reg2, %eax	

21
	movq %reg0, %rax	
	movq %r8, %reg0	

21
	movq $0, %rsi	
	movq $.string2_l, %reg1	

21
.string5_l:	
	.string "ERROR: %lld: Exception: stack overflow\n"	

21
.string6_l:	
	.string "ERROR: %lld: Exception: case without matching branch\n"	

21
.string3_l:	
	.string "ERROR: %lld: Exception: division by zero\n"	

21
	movq $12, %rcx	
	movq $0, %reg1	

21
	pushq %r14	
	movq %rdi, %reg2	

21
	negl %reg0	
	addl %reg0, %eax	

21
	call *%reg0	
	movq %r12, %reg2	

21
	movq $0, %reg0	
	movq $.string2_l, %reg1	

21
	movq $12, %rcx	
	movq $0, %r8	

21
Foo.new:	
	pushq %rbp	

21
	cmpl %eax, %reg1	
	setle %reg2	

21
	addl %reg0, %reg1	
	movq %rsi, %reg3	

21
	movq %reg0, %rax	
	subl %reg2, %eax	

21
	movq %reg0, %rbx	
	movq 0(%rbx), %reg2	

21
	cmpl %reg0, %reg1	
	setle %al	

21
	.string "ERROR: %lld: Exception: division by zero\n"	
.string3:	

21
	movq -8(%rbp), %reg1	
	movq %r12, %reg3	

21
	subl %reg0, %esi	
	movq %reg2, %reg3	

21
	movq %rcx, %rax	
	movq %r8, %rcx	

21
	.type Foo.new, @function	
Foo.new:	

21
.string2_l:	
	.string "ERROR: %lld: Exception: dispatch on void\n"	

21
	movq %reg0, %rbx	
	movq 0(%rbx), %rax	

21
	movq %rdi, %rbx	
	movq 0(%rbx), %reg2	

21
Foo.new:	
	pushq %reg0	

21
	cmpl %eax, %reg1	
	setle %al	

21
	movq %rax, %reg1	
	call *%r15	

21
	movq $12, %reg0	
	movq $0, %r8	

21
	movq %rdi, %reg1	
	movq 0(%reg1), %rax	

21
	call getmem	
	movq $Foo_vtable, 0(%rax)	

21
	.quad .string4_l	
	.quad 38	

21
	movq -8(%rbp), %rdi	
	movq %r12, %reg3	

21
	movq %rcx, %reg1	
	movq %r8, %rcx	

21
	cmpl %reg0, %reg1	
	setle %reg2	

21
	.string "ERROR: %lld: Exception: dispatch on void\n"	
.string2:	

21
	call getmem	
	movq $Foo_vtable, 0(%reg0)	

21
	ret	
	.size Foo.new, .-Foo.new	

21
	movq $0, %reg0	
	movq $.string2_l, %rdi	

21
	.globl Foo.new	
	.type Foo.new, @function	

21
	movq %rdi, %rbx	
	movq 0(%rbx), %rax	

21
	.quad 38	
.string5_l:	

21
	.quad .string6_l	
	.quad 54	

21
	movq $0, %rsi	
	movq $.string2_l, %rdi	

21
	jmp .Main.main_4	
.Main.main_3:	

21
.string4_l:	
	.string "ERROR: %lld: Exception: case on void\n"	

21
	movq -8(%rbp), %reg1	
	movq %r12, %rsi	

21
	movq -8(%rbp), %rdi	
	movq %r12, %rsi	

21
	.quad Foo.new	
	.quad Object.abort	

21
	pushq %r14	
	movq %reg1, %reg2	

20
	idivl %ecx	
	movq $12, %reg1	

20
	movq $64, %reg0	
	movq $.string2_l, %reg1	

20
	movq %reg0, %rdi	
	imull %edi	

20
	pushq %rax	
	movq %rax, %rdi	

20
	movq %reg0, %reg1	
	cmpl $0, %eax	

20
	call *%rax	
	movq %reg1, %rdi	

20
	movq %rdi, %reg1	
	movq $1, %reg2	

20
	addl %reg0, %eax	
	movq %reg2, %rcx	

20
	idivl %reg0d	
	movq %rax, %reg2	

20
	subl %reg0, %eax	
	movq %reg2, %rcx	

20
	movq %rax, 8(%reg1)	
	movq %reg1, %rax	

20
	.quad 6	
.string4_l:	

20
	movq $1, %rax	
	movq %rax, %reg1	

20
	movq $.string7, %reg0	
	movq %reg1, %reg2	

20
	movq $64, %rsi	
	movq $.string2_l, %reg1	

20
	addl %reg0, %esi	
	movq %rsi, %reg3	

20
	movq %reg0, %reg1	
	call String.substr	

20
	pushq %reg0	
	movq %reg0, %rdi	

20
	subl %reg0d, %eax	
	movq %reg2, %reg0	

20
	idivl %ecx	
	movq %reg1, %rcx	

20
	movq %reg0, %rdx	
	call String.substr	

20
	movq %reg0, %rdi	
	imull %reg2	

20
	call *%rax	
	movq %reg1, %rax	

20
	addl %reg0, %reg1	
	movq %reg2, %r12	

20
	movq $64, %rsi	
	movq $.string2_l, %rdi	

20
	idivl %reg0	
	addl %reg1, %reg2	

20
	subl %ecx, %reg1	
	movq %reg2, %rcx	

20
	subl %reg0d, %reg1	
	movq %reg2, %reg0	

20
	negl %eax	
	negl %eax	

20
	movq $0, %reg0	
	cmpl %reg1, %edi	

20
	idivl %reg0	
	addl %eax, %reg2	

20
	movq %rax, %reg1	
	movq %r13, %rsi	

20
	movq $1, %reg0	
	movq 0(%reg1), %r12	

20
	subl %ecx, %eax	
	movq %reg2, %reg3	

20
	subl %ecx, %eax	
	movq %reg2, %rcx	

20
	movq %reg0, %reg1	
	movq %reg2, %r13	

20
	call *%reg0	
	cmpl $0, %reg1d	

20
	movq %rax, %rdi	
	movq %r13, %reg3	

20
	movq %rdi, %reg1	
	movq %reg2, %reg1	

20
	movq %rax, %rdi	
	movq %r13, %rsi	

20
	movq $64, %reg0	
	movq $.string2_l, %rdi	

20
	pushq %rax	
	movq %rax, %reg1	

20
	idivl %reg0	
	movq %reg1, %rcx	

20
	.quad 42	
Foo_vtable:	

20
	pushq %reg0	
	movq %reg0, %reg1	

20
	movq $.string4_l, %reg0	
	call out_error	

20
	movq %reg0, %reg1	
	cmpl %eax, %edi	

20
	movq %rdi, %rax	
	movq %reg2, %rax	

20
	movq %r12, %reg1	
	cmpl %reg2, %eax	

20
	movq $.string4_l, %rdi	
	call out_error	

20
	movq $1, %r12	
	movq 0(%reg1), %reg2	

20
	subl %ecx, %reg1	
	movq %reg2, %reg3	

19
	imull %esi	
	movq $12, %rsi	

19
	movq $0, %reg0	
	movq %reg0, 16(%reg1)	

19
	movq %reg0, %reg1	
	addl %ecx, %reg3	

19
	addl %ecx, %eax	
	movq %reg2, %rcx	

19
	addl %reg0d, %reg1	
	movq %reg2, %reg0	

19
	movq %r12, %reg1	
	addl %edi, %reg3	

19
	movq $0, %rax	
	movq 0(%rbx), %reg2	

19
	movq %reg0, %rax	
	popq %reg2	

19
	movq %reg0, %r8	
	movq %rcx, %reg0	

19
	movq %reg0, %rdi	
	addl %eax, %reg3	

19
	addl %reg0d, %eax	
	movq %reg2, %reg0	

19
	movq %reg0, %reg1	
	movq 0(%rbx), %reg3	

19
	movq $0, %rax	
	movq 0(%reg1), %reg2	

19
	negl %esi	
	imull %esi	

19
	movq %rax, %r8	
	movq %rcx, %rax	

19
	movq %r12, %reg1	
	movq %r13, %rsi	

19
	movq %reg0, %rdi	
	addl %reg2, %edi	

19
	addl %ecx, %reg1	
	movq %reg2, %reg3	

19
	testq $1, %rax	
	je .Main.main_1	

19
	imull %esi	
	movq $12, %reg1	

19
	movq %r14, %rsi	
	call *%reg2	

19
	movq %rax, %reg1	
	movq %rcx, %rax	

19
	call *%reg0	
	movq %reg0, %r13	

19
	movq $0, %reg0	
	movq 0(%rbx), %r12	

19
	movq %r12, %rdi	
	movq %r13, %reg3	

19
	movq %reg0, %rsi	
	call *%r15	

19
	movq %r12, %reg1	
	cmpl %edi, %eax	

19
	addl %reg0, %reg1	
	movq $12, %reg2	

19
	movq %reg0, %reg1	
	subl %ecx, %reg3	

19
	movq $0, %rax	
	movq 0(%reg1), %r12	

19
	subl %eax, %esi	
	movq %reg2, %reg3	

19
	movq $0, %rax	
	movq 0(%rbx), %r12	

19
	addl %ecx, %eax	
	movq %reg2, %reg3	

19
	movq %reg0, %reg1	
	subl %ecx, %eax	

19
	idivl %reg0d	
	movq %reg1, %reg0	

19
	idivl %reg0	
	subl %eax, %reg2	

19
	addl %ecx, %reg1	
	movq %reg2, %rcx	

19
	.size Main.new, .-Main.new	
	.globl Foo.new	

19
	movq -32(%rbp), %reg1	
	movq %reg2, %reg3	

19
	call *%rax	
	movq %rax, %r13	

19
	movq %r12, %reg1	
	cmpl %edi, %reg3	

19
	movq %r12, %reg1	
	addl %edi, %eax	

19
	movq %reg0, %reg1	
	popq %reg2	

19
	movq %reg0, %rdi	
	addl %eax, %edi	

19
	movq %r12, %rdi	
	movq %r13, %rsi	

19
	imull %reg0	
	movq $12, %rsi	

19
	idivl %reg0	
	subl %reg1, %reg2	

19
	movq %reg0, %r8	
	imull %r8d	

18
	movq %reg0, %rbx	
	popq %reg0	

18
	call String.cmp	
	movq %reg0, %r13	

18
	movq %rax, %rdi	
	movq %r12, %rax	

18
	movq $34, %reg0	
	movq $.string2_l, %reg1	

18
.string8:	
	.quad String_vtable	

18
	addl %reg0, %ecx	
	movq %reg2, %rax	

18
	popq %reg0	
	popq %r14	

18
	addl %eax, %ecx	
	movq %reg2, %reg3	

18
	pushq %r15	
	movq %reg1, %reg2	

18
	negl %reg0	
	subl %reg0, %reg1	

18
	movq %reg0, %r13	
	movq %reg2, %reg3	

18
	movq %rax, %rbx	
	popq %rax	

18
	movq %rdi, %rax	
	movq %rax, %reg2	

18
	pushq %r14	
	pushq %reg1	

18
	negl %reg0	
	movq %reg1, %rsi	

18
	call *%reg0	
	movq %r12, %rdi	

18
	pushq %r14	
	movq %reg1, %rbx	

18
	addl %reg0, %ecx	
	movq %reg2, %reg3	

18
	movq %rdi, %reg1	
	pushq %rax	

18
	movq %rax, %reg1	
	call *%r14	

18
	movq %reg0, %r9	
	movq $0, %reg0	

18
	popq %reg0	
	cmpl $0, %reg1	

18
	movq %r13, %reg1	
	call String.cmp	

18
	pushq %r14	
	movq %rdi, %rbx	

18
	popq %r15	
	popq %reg1	

18
	addl %eax, %reg1	
	movq $12, %reg2	

18
	movq %rdi, %reg1	
	pushq %reg2	

18
	movq %r12, %rax	
	addl %reg2, %reg3	

18
	.quad .string1	
	.quad 0	

18
	call String.cmp	
	movq %rax, %r13	

18
	movq %reg0, %reg1	
	movq -48(%rbp), %reg3	

18
	movq %reg0, %r13	
	pushq %reg2	

18
	pushq %r14	
	pushq %r15	

18
	call *%reg0	
	movq 0(%reg1), %reg0	

18
	movq $34, %rsi	
	movq $.string2_l, %reg1	

18
	call *%reg0	
	movq 0(%rbx), %reg0	

18
	idivl %esi	
	movq %rax, %rsi	

18
	movq %reg0, %rdi	
	call String.length	

18
	.quad String_vtable	
	.quad .string8_l	

18
	movq $34, %rsi	
	movq $.string2_l, %rdi	

18
	movq %reg0, %reg1	
	movq -96(%rbp), %reg3	

18
	movq $34, %reg0	
	movq $.string2_l, %rdi	

18
	movq %reg0, %r13	
	pushq %rax	

18
	movq %r13, %rdi	
	movq %reg2, %reg3	

18
	movq -128(%rbp), %reg1	
	movq %reg2, %reg3	

18
	movq %rdi, %reg1	
	movq $0, %reg2	

18
	popq %rax	
	cmpl $0, %reg1	

18
	pushq %reg0	
	pushq %r15	

18
	popq %reg0	
	cmpl $0, %ebx	

18
	movq %reg0, %reg1	
	call String.length	

18
	pushq %r15	
	movq %rdi, %reg2	

18
	popq %rax	
	cmpl $0, %ebx	

18
	movq $0, %r12	
	movq 0(%reg1), %reg2	

18
	call *%reg0	
	jmp .Main.main_4	

18
	popq %r15	
	popq %r14	

18
	movq %r14, %reg1	
	call *%rax	

18
	movq %r13, %rsi	
	call String.cmp	

18
	addl %eax, %ecx	
	movq %reg2, %rax	

18
	movq %reg0, %rdi	
	movq %r12, %reg0	

18
	movq %reg0, %rax	
	movq %rax, %reg2	

17
	subl %reg0, %reg1	
	movq %rax, %rcx	

17
	movq %reg0, %reg1	
	addl %ecx, %eax	

17
	addl %ecx, %reg1	
	movq %rax, %reg3	

17
	movq 56(%rax), %rax	
	movq %rbx, %reg2	

17
	movq 0(%rbx), %rax	
	movq 88(%rax), %rax	

17
	addl %eax, %reg1	
	movq %rsi, %rax	

17
	cmpl %r8d, %reg1d	
	sete %r8b	

17
	movq $1, %r12	
	movq 0(%rbx), %reg2	

17
	movq $0, %rax	
	movq %rax, 8(%reg1)	

17
	subl %reg0, %esi	
	movq %reg2, %rax	

17
	movq $0, %rsi	
	cmpl %reg1, %edi	

17
	movq 0(%reg0), %r12	
	movq 88(%r12), %r12	

17
	subl %ecx, %eax	
	movq %rax, %rcx	

17
	movq %r8, %r9	
	movq $0, %r8	

17
	movq $0, %r8	
	cmpl %r8d, %reg1d	

17
	addl %ecx, %reg1	
	movq %rax, %rcx	

17
.Main.main_2:	
	movq 0(%reg0), %reg1	

17
	movq %reg0, %rsi	
	call *%r14	

17
	subl %ecx, %reg1	
	movq %rax, %reg3	

17
	movq %rcx, %reg1	
	subl %esi, %eax	

17
	call *%reg0	
	cmpl $0, %r12d	

17
	subl %ecx, %reg1	
	movq %rax, %rcx	

17
	imull %reg0	
	subl %reg1, %reg2	

17
	addl %ecx, %eax	
	movq %rax, %rcx	

17
	cmpl %r8d, %r9d	
	sete %r8b	

17
	movq %rcx, %reg1	
	subl %reg2, %reg3	

17
	movq $1, %r12	
	movq 0(%reg1), %rax	

17
	movq %rcx, %rsi	
	subl %reg2, %reg3	

17
	addl %ecx, %eax	
	movq %rax, %reg3	

17
	movq 88(%rax), %rax	
	movq %rbx, %reg2	

17
	movq $13, %rsi	
	movq $.string2_l, %rdi	

17
	movq $13, %reg0	
	movq $.string2_l, %rdi	

17
	movq $13, %reg0	
	movq $.string2_l, %reg1	

17
	movq 0(%rbx), %rax	
	movq 56(%rax), %rax	

17
	movq %reg0, %reg1	
	movq %r13, %reg0	

17
	movq $1, %reg0	
	movq 0(%rbx), %rax	

17
	cmpl $0, %reg0d	
	setl %reg0b	

17
	movq %rcx, %reg1	
	subl %reg2, %eax	

17
	movq $1, %r12	
	movq 0(%rbx), %rax	

17
	movq %rcx, %rsi	
	subl %reg2, %eax	

17
	movq $0, %reg0	
	cmpl %esi, %edi	

17
	subl %reg0, %eax	
	movq %rax, %rcx	

17
	addl %eax, %reg1	
	movq %rsi, %reg3	

17
	movq %r12, %rax	
	cmpl %reg2, %reg3	

17
	movq %rcx, %reg1	
	subl %esi, %reg3	

17
	cmpl $0, %r13d	
	sete %r13b	

17
	movq 88(%r12), %r12	
	movq %reg1, %reg2	

17
	subl %ecx, %eax	
	movq %rax, %reg3	

17
	call out_error	
.Main.main_3:	

17
	movq $0, %rsi	
	cmpl %esi, %edi	

17
	addl %reg0, %eax	
	movq %rax, %rcx	

17
	movq $0, %rax	
	movq %rax, %reg1	

17
	addl %reg0, %reg1	
	movq %rsi, %rax	

17
	call *%rax	
	movq %r12, %reg2	

17
	movq $1, %rdi	
	movq %reg1, %reg2	

17
	movq %rcx, %rsi	
	subl %esi, %reg3	

17
	movq 88(%rax), %rax	
	movq %rbx, %rdi	

17
	movq 88(%r12), %r12	
	movq %reg1, %rdi	

17
	movq %rcx, %rsi	
	subl %esi, %eax	

17
	movq %r13, %reg1	
	movq %reg2, %rsi	

17
	movq $13, %rsi	
	movq $.string2_l, %reg1	

17
	movq 56(%rax), %rax	
	movq %rbx, %rdi	

17
	addl %reg0, %reg1	
	movq %rax, %rcx	

17
	movq %reg0, %r12	
	movq 0(%reg2), %reg3	

17
	movq $1, %reg0	
	movq 0(%reg1), %rax	

17
	subl %eax, %esi	
	movq %reg2, %rax	

17
	movq $0, %r8	
	cmpl %r8d, %r9d	

17
	movq %r8, %reg1	
	movq $0, %r8	

17
	imull %reg0	
	subl %eax, %reg2	

16
	call *%r12	
	cmpl $0, %reg1	

16
.Main.main_1:	
	movq 0(%rax), %reg1	

16
	movq $17, %reg0	
	movq $.string2_l, %rdi	

16
	movq $10, %reg0	
	movq $.string2_l, %rdi	

16
	cmpl %eax, %esi	
	sete %reg2	

16
	movq $12, %reg0	
	movq $0, %r9	

16
	cmpl $0, %ebx	
	setle %bl	

16
	cmpl $0, %reg0	
	setle %bl	

16
	cdq	
	idivl %edi	

16
	movq %reg0, %reg1	
	movq %reg1, 8(%rax)	

16
	idivl %reg0	
	subl %eax, %edi	

16
	idivl %reg0	
	subl %reg1, %edi	

16
	movq %reg0, %reg1	
	movq -24(%rbp), %reg3	

16
	movq $12, %rcx	
	movq %rcx, %r8	

16
	movq $2, %reg0	
	movq %reg1, %reg2	

16
	movq $.string7, %reg0	
	movq -8(%rbp), %reg2	

16
	movq $17, %reg0	
	movq $.string2_l, %reg1	

16
	subl %reg0, %reg1	
	movq $12, %reg2	

16
	movq %rsi, %rdi	
	movq %rdi, 8(%reg2)	

16
	movq %reg0, %reg1	
	movq -16(%rbp), %reg3	

16
	movq %rsi, %reg1	
	movq %reg1, 8(%rax)	

16
	movq %reg0, %rax	
	cmpl %eax, %edi	

16
	movq %reg0, %rdi	
	movq %rdi, 8(%rax)	

16
	subl %reg0d, %eax	
	movq %rax, %reg0	

16
	cmpl $0, %ebx	
	setle %reg1	

16
	subl %r8d, %reg1	
	movq %reg2, %r8	

16
	movq $12, %reg0	
	movq %reg0, %r8	

16
	subl %reg0, %ecx	
	movq %reg2, %rax	

16
	.quad 7	
.string2_l:	

16
	imull %reg0	
	addl %eax, %reg2	

16
	movq %rax, %rsi	
	call *%r15	

16
	movq %reg0, %r12	
	movq 0(%rbx), %reg3	

16
	movq $12, %r8	
	movq $0, %r9	

16
	call *%r12	
	movq %reg1, %r12	

16
	movq %r12, %rax	
	addl %edi, %eax	

16
	negl %reg0	
	movq %rax, %reg2	

16
	cmpl %reg0, %eax	
	setl %sil	

16
	movq %rax, %rsi	
	call Object.cmp	

16
	call Object.cmp	
	cmpl $0, %reg0	

16
	negl %eax	
	movq %reg1, %rsi	

16
	movq %reg0, %reg1	
	movq %r14, %reg0	

16
	movq $1, %reg0	
	movq %reg1, %rax	

16
	addl %eax, %esi	
	movq %rsi, %reg3	

16
	movq $.string7, %reg0	
	movq %reg1, %rdx	

16
	subl %r8d, %eax	
	movq %reg2, %r8	

16
	movq %reg0, %reg1	
	addl %reg2, %esi	

16
	subl %eax, %ecx	
	movq %reg2, %rax	

16
	movq %r12, %rax	
	addl %edi, %reg3	

16
	addl %reg0, %esi	
	movq %rsi, %rax	

16
	movq %reg0, %rax	
	cmpl %reg2, %edi	

16
	cmpl %esi, %eax	
	setl %sil	

16
	movq %reg0, %reg1	
	movq 0(%rbx), %rax	

16
	addl %reg0d, %eax	
	movq %rax, %reg0	

16
	cmpl %esi, %eax	
	setl %reg2l	

16
	movq $12, %rcx	
	movq %rcx, %reg1	

16
	movq $10, %rsi	
	movq $.string2_l, %reg1	

16
	movq %rax, %reg1	
	call Object.cmp	

16
	subl %reg0, %ecx	
	movq %reg2, %reg3	

16
	negl %eax	
	movq %rax, %reg2	

16
	movq %r13, %reg1	
	addl %reg2, %reg3	

16
	movq %reg0, %reg1	
	movq 0(%reg2), %rax	

16
	movq 0(%reg0), %reg1	
	movq 40(%reg1), %reg1	

16
	movq $.string7, %reg0	
	movq -8(%rbp), %rdx	

16
	movq $10, %reg0	
	movq $.string2_l, %reg1	

16
	subl %reg0d, %reg1	
	movq %rax, %reg0	

16
	movq -56(%rbp), %reg1	
	cmpl %reg2, %reg3	

16
	imull %reg0	
	movq %rax, %rdi	

16
	cmpl %eax, %esi	
	sete %al	

16
	movq %reg0, %reg1	
	movq %r15, %rsi	

16
	imull %reg0	
	addl %reg1, %reg2	

16
	movq $17, %rsi	
	movq $.string2_l, %reg1	

16
	movq $12, %r8	
	movq $0, %reg1	

16
	movq $1, %rdi	
	movq %reg1, %rax	

16
	movq %reg0, %reg1	
	movq $0, %rcx	

16
	movq %reg0, %reg1	
	movq -56(%rbp), %reg3	

16
	movq %reg0, %rdi	
	movq %rdi, 8(%reg2)	

16
	movq %r13, %reg1	
	movq %r14, %reg3	

16
	movq $1, %reg0	
	movq %r12, %reg2	

16
	movq %reg0, %rax	
	cmpl $0, %reg2	

16
	subl %eax, %ecx	
	movq %reg2, %reg3	

16
	addl %eax, %esi	
	movq %rsi, %rax	

16
	movq %r13, %rdi	
	movq %reg2, %rsi	

16
	cmpl %reg0, %esi	
	sete %al	

16
	movq %rsi, %rdi	
	movq %rdi, 8(%rax)	

16
	movq %rsi, %reg1	
	movq %reg1, 8(%reg2)	

16
	call Object.cmp	
	cmpl $0, %eax	

16
	imull %edi	
	movq %rax, %rdi	

16
	movq %r12, %rax	
	addl %reg2, %eax	

16
	movq %reg0, %reg1	
	movq %reg1, 8(%reg2)	

16
	movq -168(%rbp), %reg1	
	movq %reg2, %reg3	

16
	call *%r12	
	movq %rax, %r12	

16
	movq $17, %rsi	
	movq $.string2_l, %rdi	

16
	movq %reg0, %rax	
	cmpl $0, %eax	

16
	call *%reg0	
	movq $1, %reg1	

16
	addl %reg0d, %reg1	
	movq %rax, %reg0	

16
	movq $10, %rsi	
	movq $.string2_l, %rdi	

15
	movq %reg0, %reg1	
	movq $1, %rax	

15
	movq %reg0, %rbx	
	movq $0, %reg0	

15
	movq 72(%r13), %r13	
	movq %reg1, %reg2	

15
	call *%reg0	
.Main.main_4:	

15
	addl %reg0, %eax	
	movq %rax, %r12	

15
	movq 0(%rdx), %rax	
	movq 88(%rax), %rax	

15
	negl %reg0	
	movq %reg1, %rcx	

15
	negl %edi	
	addl %edi, %reg1	

15
	movq %reg0, %reg1	
	movq $0, %r8	

15
	movq %reg0, %rdi	
	movq %reg2, %rax	

15
	testq $1, %reg0	
	je .Main.main_4	

15
	movq %r12, %rsi	
	movq %reg2, %reg3	

15
.string9:	
	.quad String_vtable	

15
	.quad String_vtable	
	.quad .string9_l	

15
	negl %ecx	
	movq %reg1, %reg2	

15
	movq $.string8, %rax	
	movq %reg1, %reg2	

15
	movq %reg0, %rsi	
	movq $12, %rcx	

15
	movq %reg0, %rax	
	movq $0, %r8	

15
	movq %reg0, %rax	
	imull %esi	

15
	movq 72(%r13), %r13	
	movq %reg1, %rdi	

15
	cmpl %reg0, %edi	
	setl %al	

15
	movq $0, %reg0	
	movq 0(%rbx), %rax	

15
	addl %edi, %eax	
	movq %reg2, %r12	

15
	movq $49, %rsi	
	movq $.string2_l, %rdi	

15
	movq %reg0, %reg1	
	movq 8(%reg2), %reg3	

15
	movq %reg0, %rdi	
	movq %r15, %rsi	

15
	movq 0(%reg0), %r13	
	movq 72(%r13), %r13	

15
	je .Main.main_1	
	movq $4, %reg0	

15
	movq $1, %rax	
	movq 0(%rbx), %reg2	

15
	movq $1, %rax	
	movq 0(%rbx), %r12	

15
	cmpl %eax, %edi	
	setl %al	

15
	movq %r12, %reg1	
	movq %reg2, %rdx	

15
	call *%rax	
	movq %r12, %rdi	

15
	movq %reg0, %rax	
	movq $0, %rcx	

15
	movq %reg0, %r12	
	movq 0(%rbx), %rax	

15
	movq $49, %reg0	
	movq $.string2_l, %reg1	

15
	movq %reg0, %rsi	
	movq $12, %reg2	

15
	imull %reg0d	
	movq %rax, %reg0	

15
	movq %rax, %rsi	
	movq $12, %rcx	

15
	movq 8(%reg0), %reg1	
	movq 0(%reg1), %reg2	

15
	cmpl %reg0, %edi	
	setl %reg2	

15
	movq %reg0, %rax	
	movq %rsi, %rcx	

15
	movq %reg0, %reg1	
	movq %rsi, %rcx	

15
	movq $49, %reg0	
	movq $.string2_l, %rdi	

15
	movq %r14, %rsi	
	call *%rax	

15
	movq %reg0, %reg1	
	movq -88(%rbp), %reg3	

15
	je .Main.main_1	
	movq $4, %rsi	

15
	movq %reg0, %rdi	
	movq %r15, %reg3	

15
	addl %reg0, %reg1	
	movq %rax, %r12	

15
	movq %reg0, %reg1	
	movq $12, %rcx	

15
	movq %rax, %reg1	
	movq $12, %rcx	

15
	movq %r12, %rsi	
	movq %reg2, %rdx	

15
	cmpl %eax, %edi	
	setl %reg2	

15
	addl %edi, %eax	
	movq %rax, %r12	

15
	movq $49, %rsi	
	movq $.string2_l, %reg1	

15
	movq %rdi, %reg1	
	movq 0(%reg2), %reg3	

15
	movq 0(%rdx), %reg1	
	movq 88(%reg1), %reg1	

15
	movq $1, %rax	
	movq 0(%reg1), %r12	

15
	negl %esi	
	movq %reg1, %rax	

15
	addl %reg0, %eax	
	movq %reg2, %r12	

15
	addl %edi, %reg1	
	movq %rax, %r12	

15
	idivl %reg0d	
	movq %rax, %reg0	

15
	movq %r14, %reg1	
	movq %reg2, %rsi	

15
	movq $.string8, %rax	
	movq -8(%rbp), %reg2	

15
	movq $1, %rax	
	movq 0(%reg1), %reg2	

15
	movq $.string8, %rax	
	movq %reg1, %rdx	

15
	movq $1, %reg0	
	movq %reg1, %rdi	

15
	movq 40(%reg0), %reg0	
	movq %reg1, %rdi	

15
	movq 40(%reg0), %reg0	
	movq %reg1, %reg2	

15
	subl %reg0, %reg1	
	movq %rsi, %reg3	

15
	movq $1, %reg0	
	movq 0(%rbx), %r12	

15
	testq $1, %rdi	
	je .Main.main_2	

15
	movq $.string8, %rax	
	movq -8(%rbp), %rdx	

15
	movq -32(%rbp), %rax	
	movq %reg2, %reg3	

15
	addl %edi, %reg1	
	movq %reg2, %r12	

15
	movq 8(%reg0), %rdx	
	movq 0(%rdx), %reg2	

15
	movq %reg0, %r12	
	movq 0(%reg2), %rax	

15
	movq %rax, %rsi	
	movq $12, %reg2	

15
	movq $0, %reg0	
	movq 0(%reg1), %rax	

15
	movq 0(%reg0), %r12	
	movq 56(%r12), %r12	

14
	movq $145, %rsi	
	movq $.string2_l, %rdi	

14
	movq %reg0, %rdx	
	call *%reg2	

14
	.quad .string1	
	.quad 1	

14
	movq $70, %rsi	
	movq $.string2_l, %reg1	

14
	movq %reg0, %r9	
	movq %reg2, %reg0	

14
	movq %reg0, %reg1	
	call Foo.new	

14
Main.func:	
	pushq %rbp	

14
	movq %rax, 8(%rbx)	
	movq %rbx, %rax	

14
	movq %r8, %rax	
	movq %reg2, %r8	

14
	movq 8(%reg0), %reg1	
	movq %reg2, %reg3	

14
	movq %r12, %rdi	
	movq %rbx, %reg3	

14
	movq $145, %reg0	
	movq $.string2_l, %rdi	

14
	movq %reg0, %reg1	
	addl %reg1d, %eax	

14
	movq %r12, %rax	
	cmpl %edi, %reg3	

14
	movq -136(%rbp), %reg1	
	movq %reg2, %reg3	

14
	movq %reg0, %reg1	
	addl %reg1d, %reg2	

14
	movq $15, %reg0	
	movq $.string2_l, %reg1	

14
	movq %reg0, 8(%rbx)	
	movq %rbx, %reg0	

14
	.type Main.func, @function	
Main.func:	

14
	movq %reg0, %reg1	
	subl %reg1d, %reg2	

14
	movq %rdi, %r13	
	pushq %reg2	

14
	movq %r12, %rdi	
	movq %rbx, %rsi	

14
	testq $1, %reg0	
	je .Main.main_5	

14
	movq %reg0, %reg1	
	movq -32(%rbp), %reg3	

14
	movq $4, %reg0	
	movq %reg1, %reg2	

14
	movq %reg0, %reg1	
	addl %eax, %esi	

14
	movq $15, %reg0	
	movq $.string2_l, %rdi	

14
	movq %reg0, %reg1	
	movq $1, %reg0	

14
	movq $12, %r8	
	movq %reg1, %reg2	

14
	cmpl %reg0, %esi	
	setl %reg2	

14
	movq %rax, %reg1	
	movq %r13, %rax	

14
	cmpl $0, %reg0	
	movq %reg0, %reg1	

14
	negl %ecx	
	movq %reg1, %rax	

14
	movq $145, %reg0	
	movq $.string2_l, %reg1	

14
	movq %rdi, %reg1	
	movq 0(%rbx), %reg3	

14
	movq %reg0, %rcx	
	addl %ecx, %reg3	

14
	movq $15, %rsi	
	movq $.string2_l, %reg1	

14
	movq %reg0, %reg1	
	movq %reg2, %rbx	

14
	cmpl %reg0, %esi	
	setl %al	

14
	movq %reg0, %rax	
	addl %eax, %esi	

14
	movq %r8, %reg1	
	movq %reg2, %r8	

14
	call *%reg0	
	movq %reg1, %rax	

14
	movq %reg0, %reg1	
	movq %rcx, %reg3	

14
	idivl %reg0d	
	movq %reg1, %rcx	

14
	subl %reg0, %esi	
	movq %rsi, %reg3	

14
	movq %rbx, %reg1	
	popq %reg2	

14
	movq $145, %rsi	
	movq $.string2_l, %reg1	

14
	movq $70, %reg0	
	movq $.string2_l, %rdi	

14
	movq %r12, %rax	
	cmpl %edi, %eax	

14
	movq %r12, %reg1	
	movq %rbx, %rsi	

14
	subl %r8d, %eax	
	movq %rax, %r8	

14
	pushq %r15	
	movq %rdi, -8(%rbp)	

14
	movq %reg0, %rax	
	addl %reg2, %esi	

14
	movq $12, %r8	
	movq %reg1, %rax	

14
	movq $70, %reg0	
	movq $.string2_l, %reg1	

14
Main.func:	
	pushq %reg0	

14
	movq %rbx, %rax	
	popq %reg2	

14
	movq $15, %rsi	
	movq $.string2_l, %rdi	

14
	pushq %reg0	
	movq %rdi, -8(%rbp)	

14
	pushq %reg0	
	movq %reg1, -8(%rbp)	

14
	ret	
	.size Main.func, .-Main.func	

14
	movq %rdi, %r13	
	pushq %rax	

14
	idivl %r8d	
	movq %reg1, %reg2	

14
	movq %rax, %rsi	
	call *%r14	

14
	idivl %reg0	
	movq %reg1, %rdi	

14
	movq $70, %rsi	
	movq $.string2_l, %rdi	

14
	movq %rax, %r9	
	movq %reg2, %rax	

14
	cmpl %eax, %esi	
	setl %al	

14
	pushq %r15	
	movq %reg1, -8(%rbp)	

14
	subl %r8d, %reg1	
	movq %rax, %r8	

14
	call *%reg0	
	movq %reg0, %rbx	

14
	movq %r12, %rax	
	cmpl %reg2, %eax	

14
	idivl %r8d	
	movq %reg1, %rcx	

14
	.size Foo.new, .-Foo.new	
	.globl _main	

14
	movq %reg0, %rcx	
	addl %reg2, %reg3	

14
	call *%reg0	
	cmpl $0, %ebx	

14
	.globl Main.func	
	.type Main.func, @function	

14
	movq %reg0, %reg1	
	subl %reg1d, %eax	

14
	movq %rax, %r12	
	movq %reg2, %reg3	

14
	negl %edi	
	addl %edi, %eax	

14
	cmpl $0, 8(%reg0)	
	movq 8(%reg0), %reg1	

14
	cmpl %eax, %esi	
	setl %reg2	

14
	call *%rax	
	movq %rax, %rbx	

14
	testq $1, %reg0	
	je .Main.main_9	

13
	movq %reg0, %rax	
	imull %ecx	

13
	movq %r15, %reg1	
	call *%reg2	

13
	call *%rax	
	cmpl $0, %eax	

13
	movq %rax, %r12	
	movq -8(%rbp), %rdx	

13
	movq 8(%rbx), %rdx	
	movq 0(%rdx), %reg2	

13
	movq %reg0, %rbx	
	movq $1, %reg2	

13
	movq $5, %reg0	
	movq %reg1, %reg2	

13
	call String.concat	
	movq %reg0, %reg1	

13
.string1_l:	
	.string "Foo"	

13
	movq $0, %reg0	
	movq %reg1, %reg2	

13
	movq 80(%reg0), %reg0	
	movq %rbx, %rdi	

13
	movq $0, %r12	
	movq 0(%rbx), %rax	

13
	cmpl %eax, %edi	
	sete %reg2	

13
	cmpl %eax, %edi	
	sete %al	

13
	subl %eax, %reg1	
	movq %rsi, %reg3	

13
	movq -24(%rbp), %reg1	
	movq %reg2, %reg3	

13
	imull %esi	
	subl %eax, %edi	

13
	imull %reg0	
	subl %reg1, %edi	

13
	movq 56(%reg0), %reg0	
	movq %rax, %rdi	

13
	movq $1, %reg0	
	cmpl %reg1, %reg2	

13
	movq %rax, %r12	
	movq %reg2, %rdx	

13
	movq $5, %rsi	
	movq $.string2_l, %rdi	

13
	movq 88(%r12), %r12	
	movq %rbx, %rdi	

13
	.string "Foo"	
.string1:	

13
	addl %eax, %reg1	
	movq %rcx, %reg3	

13
	movq %rax, %reg1	
	cmpl $0, %reg2	

13
	movq -40(%rbp), %reg1	
	movq %reg2, %reg3	

13
	movq %rax, %r13	
	movq 0(%rbx), %rax	

13
	movq %reg0, %rax	
	movq %r13, %reg3	

13
	movq 0(%reg0), %reg1	
	movq 96(%reg1), %reg1	

13
	movq $0, %r12	
	movq 0(%rbx), %reg2	

13
	movq %reg0, %rbx	
	movq $0, %reg2	

13
	idivl %reg0	
	addl %eax, %edi	

13
	subl %reg0, %reg1	
	movq %rsi, %rax	

13
	movq %reg0, %reg1	
	movq -128(%rbp), %reg3	

13
	movq %r12, %rdi	
	addl %reg2, %reg3	

13
	movq %rdi, %rbx	
	movq $1, %reg2	

13
	movq %r13, %rsi	
	movq %reg2, %reg3	

13
	movq $5, %rsi	
	movq $.string2_l, %reg1	

13
	imull %esi	
	subl %reg1, %reg2	

13
	movq 104(%reg0), %reg0	
	movq %reg1, %reg2	

13
	movq 56(%r12), %r12	
	movq %reg1, %reg2	

13
	idivl %reg0d	
	movq $12, %reg1	

13
	movq %rax, %rdi	
	movq $12, %rsi	

13
	cmpl %reg0, %edi	
	sete %reg2	

13
	idivl %ecx	
	movq $12, %rsi	

13
	movq %reg0, %reg1	
	movq %r13, %rdx	

13
	movq 8(%rbx), %reg1	
	movq 0(%reg1), %reg2	

13
	movq %reg0, %rsi	
	movq %r13, %rdx	

13
	movq %reg0, %rcx	
	addl %ecx, %eax	

13
	subl %eax, %reg1	
	movq $12, %reg2	

13
	movq $0, %reg0	
	movq %reg0, 24(%reg1)	

13
	movq %reg0, %reg1	
	movq $0, %rax	

13
	movq 80(%reg0), %reg0	
	movq %rbx, %reg2	

13
	movq %reg0, %r12	
	movq -8(%rbp), %reg3	

13
	movq 0(%rbx), %reg1	
	movq 80(%reg1), %reg1	

13
	movq %reg0, %r12	
	movq -8(%rbp), %rdx	

13
	movq 96(%reg0), %reg0	
	movq %reg1, %reg2	

13
	movq 96(%reg0), %reg0	
	movq %reg1, %rdi	

13
	addl %reg0, %ecx	
	movq %rcx, %reg3	

13
	movq $151, %reg0	
	movq $.string2_l, %reg1	

13
	movq $.string6, %reg0	
	movq 0(%reg1), %reg2	

13
	movq %rcx, %reg1	
	addl %reg2, %eax	

13
	imull %r8d	
	movq %reg1, %r8	

13
	movq %reg0, %r13	
	movq 0(%reg2), %reg0	

13
	imull %esi	
	subl %reg1, %edi	

13
	movq $3, %reg0	
	movq %reg1, %reg2	

13
	addl %eax, %reg1	
	movq %rcx, %rax	

13
	movq %rax, %reg1	
	movq $12, %rsi	

13
	movq %reg0, %rcx	
	addl %reg2, %eax	

13
	movq %rcx, %reg1	
	addl %esi, %eax	

13
	subl %eax, %reg1	
	movq %rsi, %rax	

13
	movq -128(%rbp), %rax	
	movq %reg2, %reg3	

13
	movq 80(%rax), %rax	
	movq %rbx, %rdi	

13
	addl %reg0, %reg1	
	movq %rcx, %reg3	

13
	movq %reg0, 16(%reg1)	
	movq $0, %reg0	

13
	cmpl %reg0, %edi	
	sete %al	

13
	movq 0(%rbx), %rax	
	movq 80(%rax), %rax	

13
	movq %rcx, %reg1	
	addl %reg2, %reg3	

13
	movq %rax, %r12	
	movq -8(%rbp), %reg3	

13
	movq 104(%reg0), %reg0	
	movq %reg1, %rdi	

13
	movq %reg0, %rdi	
	movq $12, %rsi	

13
	movq 56(%r12), %r12	
	movq %reg1, %rdi	

13
	testq $1, %reg0	
	je .Main.main_6	

13
	movq %reg0, %rdi	
	movq $12, %reg2	

13
	movq $151, %reg0	
	movq $.string2_l, %rdi	

13
	movq 56(%reg0), %reg0	
	movq %rax, %reg2	

13
	jmp .Main.main_2	
.Main.main_1:	

13
	movq %rax, %rdi	
	movq $12, %reg2	

13
	movq -8(%rbp), %rdx	
	movq 0(%rdx), %r15	

13
	addl %eax, %ecx	
	movq %rcx, %rax	

13
	movq %reg0, %r13	
	movq 0(%rbx), %reg0	

13
	addl %eax, %ecx	
	movq %rcx, %reg3	

13
	movq %rcx, %rsi	
	addl %esi, %reg3	

13
	movq %reg0, %r14	
	movq %reg2, %reg3	

13
	idivl %ecx	
	addl %reg1, %reg2	

13
	idivl %ecx	
	addl %eax, %reg2	

13
	movq 0(%reg0), %reg1	
	movq 104(%reg1), %reg1	

13
	movq %rax, %r13	
	movq 0(%reg2), %rax	

13
	movq $1, %reg0	
	movq $0, %reg1	

13
	movq $151, %rsi	
	movq $.string2_l, %rdi	

13
	movq $5, %reg0	
	movq $.string2_l, %reg1	

13
	movq %reg0, %rdx	
	movq 0(%rdx), %r15	

13
	movq 0(%rbx), %r12	
	movq 88(%r12), %r12	

13
	movq %rcx, %rsi	
	addl %reg2, %reg3	

13
	movq %reg0, %reg1	
	movq 0(%reg1), %r15	

13
	movq -8(%rbp), %reg1	
	movq 0(%reg1), %r15	

13
	movq %rcx, %reg1	
	addl %esi, %reg3	

13
	call *%reg0	
	popq %r13	

13
	movq %reg0, %r12	
	movq %reg2, %rdx	

13
	movq -16(%rbp), %rax	
	movq %reg2, %reg3	

13
	movq %reg0, %reg1	
	movq -32(%rbp), %reg0	

13
	movq $0, %r12	
	movq 0(%reg1), %rax	

13
	movq %reg0, %reg1	
	movq $12, %rsi	

13
	movq %reg0, %rsi	
	movq %r13, %reg3	

13
	movq $5, %reg0	
	cmpl %reg1, %reg2	

13
Foo_vtable:	
	.quad .string1	

13
	movq %reg0, %reg1	
	movq -136(%rbp), %reg3	

13
	addl %reg0, %ecx	
	movq %rcx, %rax	

13
	movq %reg0, %reg1	
	movq 8(%reg1), %reg2	

13
	movq 0(%rax), %reg1	
	movq 56(%reg1), %reg1	

13
	movq %rcx, %rsi	
	addl %esi, %eax	

13
	imull %esi	
	subl %eax, %reg2	

13
	imull %reg0	
	subl %eax, %edi	

13
	movq %r15, %rsi	
	call *%reg2	

13
	idivl %reg0	
	addl %reg1, %edi	

13
	movq $5, %reg0	
	movq $.string2_l, %rdi	

13
	addl %reg0, %reg1	
	movq %rcx, %rax	

13
	movq $151, %rsi	
	movq $.string2_l, %reg1	

13
	movq 88(%r12), %r12	
	movq %rbx, %reg2	

13
	movq 80(%rax), %rax	
	movq %rbx, %reg2	

13
	movq %rcx, %rsi	
	addl %reg2, %eax	

12
	subl %eax, %esi	
	movq %rsi, %reg3	

12
	movq %reg0, %rax	
	movq %rcx, %reg3	

12
	movq 72(%reg0), %reg0	
	movq %rax, %reg2	

12
	.quad Main.main	
	.quad Main.func	

12
	movq $7, %reg0	
	movq $.string2_l, %reg1	

12
	call String.concat	
	movq %rax, %reg1	

12
	movq %reg0, %reg1	
	movq -64(%rbp), %reg3	

12
	movq %r12, %reg1	
	addl %eax, %edi	

12
	movq 24(%reg0), %reg0	
	movq %reg1, %rdi	

12
	call *%rax	
	movq 0(%reg1), %reg2	

12
	movq %reg0, %reg1	
	movq 0(%reg1), %r13	

12
	movq -8(%rbp), %reg1	
	movq 0(%reg1), %r13	

12
	movq %rbx, %reg1	
	cmpl $0, %eax	

12
	movq %reg0, %rax	
	subl %eax, %ecx	

12
	idivl %ecx	
	subl %eax, %reg2	

12
	cmpl %esi, %eax	
	sete %reg2l	

12
	movq -8(%rbp), %reg1	
	movq %r13, %rsi	

12
	movq %reg0, %reg1	
	movq -160(%rbp), %reg0	

12
	movq 0(%reg0), %reg1	
	movq 24(%reg1), %reg1	

12
	movq 72(%reg0), %reg0	
	movq %rax, %rdi	

12
	movq $1, %rax	
	movq $0, %reg1	

12
	movq %reg0, %reg1	
	negl %reg1d	

12
	movq %reg0, %reg1	
	movq -152(%rbp), %reg3	

12
	movq %r13, %reg1	
	movq %reg2, %rdx	

12
	movq %rdi, %reg1	
	movq 0(%reg2), %rax	

12
	movq %reg0, %reg1	
	movq %rdi, %rsi	

12
	call Object.cmp	
	movq %reg0, %rbx	

12
	movq $1, %reg0	
	movq $2, %reg1	

12
	cmpl %esi, %eax	
	sete %sil	

12
	movq %reg0, %rcx	
	subl %reg2, %eax	

12
	movq %rbx, %reg1	
	cmpl $0, %reg2	

12
	movq %reg0, %rcx	
	subl %reg2, %reg3	

12
	testq $1, %rax	
	je .Main.main_4	

12
	movq $1, %rax	
	movq $0, %rdi	

12
	movq $1, %rax	
	movq %reg1, %rdi	

12
	movq 40(%reg0), %reg0	
	movq %rax, %rdi	

12
	movq $7, %rsi	
	movq $.string2_l, %rdi	

12
	.quad 1	
	.quad Main.new	

12
	movq $19, %reg0	
	movq $.string2_l, %rdi	

12
	movq %reg0, %rcx	
	subl %ecx, %reg3	

12
	idivl %reg0	
	movq %rax, %rcx	

12
	movq %reg0, %rax	
	movq %rbx, %reg3	

12
	movq $2, %reg0	
	cmpl %reg1, %reg2	

12
	movq %reg0, 16(%reg1)	
	leave	

12
	movq 0(%rax), %reg1	
	movq 40(%reg1), %reg1	

12
	movq $1, %reg0	
	movq $0, %rdi	

12
	subl %eax, %esi	
	movq %rsi, %rax	

12
	movq $0, %rax	
	movq %rax, 8(%rbx)	

12
	movq %reg0, %reg1	
	subl %eax, %ecx	

12
	movq %reg0, %reg1	
	movq -40(%rbp), %reg0	

12
	movq %reg0, %reg1	
	movq -104(%rbp), %reg3	

12
	call Object.cmp	
	movq %rax, %rbx	

12
	movq -8(%rbp), %rdx	
	movq 0(%rdx), %r13	

12
	idivl %ecx	
	movq %rax, %rcx	

12
	movq %reg0, %rcx	
	subl %ecx, %eax	

12
	movq %reg0, %reg1	
	movq 0(%reg1), %r12	

12
	movq $0, %reg0	
	movq 0(%rax), %reg2	

12
.Main.main_1:	
	movq %reg0, %reg1	

12
	movq $.string6, %rbx	
	movq %reg1, %reg2	

12
	cmpl $0, 8(%rbx)	
	movq 8(%rbx), %reg1	

12
	movq $19, %reg0	
	movq $.string2_l, %reg1	

12
	movq %rdi, 8(%rax)	
	movq $0, %rdi	

12
	movq %reg0, %reg1	
	movq -160(%rbp), %reg3	

12
	.quad 3	
percentd_string_l:	

12
	movq 40(%reg0), %reg0	
	movq %rax, %reg2	

12
	movq %reg0, %reg1	
	movq -40(%rbp), %reg3	

12
	idivl %r8d	
	movq %reg1, %r8	

12
	movq %reg0, %rax	
	subl %reg2, %ecx	

12
	movq %r12, %reg1	
	call *%r13	

12
	movq %reg0, %rdx	
	movq 0(%rdx), %r13	

12
	.quad .string0	
	.quad 1	

12
	movq -8(%rbp), %rdi	
	movq %r13, %reg3	

12
	movq %r13, %rsi	
	movq %reg2, %rdx	

12
	movq -152(%rbp), %reg1	
	movq %reg2, %reg3	

12
	testq $1, %rax	
	je .Main.main_3	

12
	idivl %ecx	
	subl %reg1, %reg2	

12
	movq $.string6, %rbx	
	movq -8(%rbp), %rdx	

12
	movq %rax, %rbx	
	movq $0, %rax	

12
	call String.length	
	movq %reg0, %reg1	

12
	movq %reg0, %reg1	
	subl %reg2, %ecx	

12
	movq %reg0, %rax	
	movq %rdi, %reg3	

12
.Main.main_3:	
	movq 0(%reg0), %reg1	

12
	movq %rbx, %rsi	
	call Object.cmp	

12
	subl %reg0, %esi	
	movq %rsi, %rax	

12
	movq $19, %rsi	
	movq $.string2_l, %reg1	

12
	cmpl %reg0, %eax	
	sete %sil	

12
	movq -8(%rbp), %rdi	
	movq %r13, %rsi	

12
	movq %rax, %reg1	
	movq %r14, %reg3	

12
	movq %rbx, %rax	
	cmpl $0, %eax	

12
	movq %reg0, %reg1	
	movq %r9, %reg0	

12
	call *%rax	
	movq 0(%rbx), %reg2	

12
	movq %rdi, %reg1	
	movq 8(%reg1), %reg2	

12
	movq $0, %reg0	
	movq %reg0, 8(%rbx)	

12
	movq %rdi, 8(%reg1)	
	movq $0, %rdi	

12
	movq -80(%rbp), %reg1	
	movq %reg2, %reg3	

12
	movq 24(%reg0), %reg0	
	movq %reg1, %reg2	

12
	negl %reg0	
	movq %reg1, %rdi	

12
	movq -48(%rbp), %reg1	
	cmpl %reg2, %reg3	

12
	movq -168(%rbp), %rax	
	movq %reg2, %reg3	

12
	movq %reg0, %rax	
	movq %rdi, %rsi	

12
	movq $2, %reg0	
	movq $1, %reg1	

12
	negl %eax	
	movq %reg1, %rdi	

12
	movq %rdi, %reg1	
	movq 0(%rbx), %rax	

12
	movq %rax, %reg1	
	movq $1, %rax	

12
	movq %rbx, %rax	
	cmpl $0, %reg2	

12
	movq -8(%rbp), %reg1	
	movq %r13, %reg3	

12
	.size Main.main, .-Main.main	
	.globl Main.func	

12
	movq %reg0, 16(%rax)	
	leave	

12
	call String.length	
	movq %rax, %reg1	

12
	movq %reg0, %rbx	
	movq -8(%rbp), %reg3	

12
	movq $.string6, %rbx	
	movq -8(%rbp), %reg2	

12
	movq %rbx, %reg1	
	call Object.cmp	

12
	movq %r12, %reg1	
	addl %reg2, %edi	

12
	movq %reg0, %rdx	
	movq 0(%rdx), %r12	

12
	movq $1, %rax	
	movq %reg1, %reg2	

12
	movq %reg0, %rbx	
	movq %reg2, %rdx	

12
	movq $7, %rsi	
	movq $.string2_l, %reg1	

12
	movq 0(%rax), %reg1	
	movq 72(%reg1), %reg1	

12
	movq %reg0, %rax	
	movq -96(%rbp), %reg3	

12
	movq $.string6, %rbx	
	movq %reg1, %rdx	

12
	movq %r12, %reg1	
	addl %eax, %reg3	

12
	movq $19, %rsi	
	movq $.string2_l, %rdi	

12
	movq %reg0, 8(%rax)	
	movq $0, %reg0	

12
	movq %reg0, %rbx	
	movq -8(%rbp), %rdx	

12
	testq $1, %rax	
	je .Main.main_2	

12
	movq %rdi, %rbx	
	movq $0, %reg2	

12
	movq -56(%rbp), %reg1	
	movq %reg2, %reg3	

12
	movq $7, %reg0	
	movq $.string2_l, %rdi	

11
	movq 0(%rax), %r12	
	movq 40(%r12), %r12	

11
	movq %rax, 8(%rbx)	
	movq $0, %rax	

11
	movq $5, %reg0	
	movq 0(%reg1), %reg2	

11
	movq -24(%rbp), %rax	
	movq %reg2, %reg3	

11
	movq %rbx, %rdi	
	sete %reg2l	

11
	movq $308, %reg0	
	movq $.string2_l, %rdi	

11
	negl %reg0	
	movq $12, %rsi	

11
	popq %rax	
	cmpl $0, %r14d	

11
	movq 40(%r12), %r12	
	movq %reg1, %reg2	

11
	movq %reg0, %reg1	
	movq -168(%rbp), %reg3	

11
	cmpl %reg0, %edi	
	setle %reg2	

11
	movq $308, %reg0	
	movq $.string2_l, %reg1	

11
	idivl %esi	
	movq %reg1, %rdi	

11
	movq 16(%reg0), %reg1	
	movq 0(%reg1), %reg2	

11
	movq -112(%rbp), %reg1	
	movq %reg2, %reg3	

11
	.quad String_vtable	
	.quad .string10_l	

11
	movq %reg0, %r12	
	call Int.new	

11
	movq %reg0, %r14	
	popq %reg0	

11
	movq %reg0, 8(%rbx)	
	movq $0, %reg0	

11
	movq 72(%r15), %r15	
	movq -8(%rbp), %reg2	

11
	movq %rbx, %reg1	
	sete %dil	

11
	movq 40(%r12), %r12	
	movq %reg1, %rdi	

11
	movq %reg0, %reg1	
	movq %rcx, %r8	

11
	movq 72(%r15), %r15	
	movq %reg1, %reg2	

11
	movq 8(%reg0), %rdi	
	movq %reg2, %reg3	

11
	movq %r13, %reg1	
	movq %rax, %reg3	

11
	cmpl %esi, %reg1	
	setle %reg2l	

11
	movq $308, %rsi	
	movq $.string2_l, %rdi	

11
	cmpl %reg0, %edi	
	setle %al	

11
	movq %rdi, %r12	
	movq 0(%rbx), %rax	

11
	movq -8(%rbp), %reg1	
	movq %r15, %reg3	

11
	movq 64(%r13), %r13	
	movq %reg1, %rdi	

11
	movq $67, %reg0	
	movq $.string2_l, %rdi	

11
	jmp .Main.main_1	
.Main.main_2:	

11
	movq %reg0, %rdx	
	movq %rdx, %reg2	

11
	idivl %reg0	
	movq %rax, %rdi	

11
	movq %rdi, %r12	
	movq 0(%reg2), %rax	

11
	.quad .string4_l	
	.quad 42	

11
	movq -8(%rbp), %rdi	
	movq %r15, %rsi	

11
	movq $67, %rsi	
	movq $.string2_l, %rdi	

11
	cmpl $0, %ebx	
	movq %reg1, %rdi	

11
	movq %reg0, %reg1	
	movq $2, %reg2	

11
	movq %rax, %reg1	
	movq -32(%rbp), %rax	

11
	movq 8(%reg0), %reg1	
	movq %reg2, %rsi	

11
	movq %rax, %r14	
	popq %rax	

11
	negl %reg0	
	movq %rsi, %reg2	

11
	movq $.string7, %rax	
	movq %reg1, %reg2	

11
	call *%reg0	
	movq 0(%reg1), %r12	

11
	movq %r14, %rdi	
	movq %reg2, %reg3	

11
	movq %r14, %reg1	
	addl %reg2, %reg3	

11
	movq %rbx, %rax	
	movq %reg2, %reg3	

11
	call out_error	
.Main.main_5:	

11
	movq 0(%reg0), %r13	
	movq 64(%r13), %r13	

11
	movq 40(%r12), %r12	
	movq %rax, %rdi	

11
	movq %rbx, %reg1	
	sete %reg2l	

11
	movq $67, %reg0	
	movq $.string2_l, %reg1	

11
	movq 40(%r12), %r12	
	movq %rax, %reg2	

11
	movq %reg0, %reg1	
	movq -24(%rbp), %reg0	

11
	movq %reg0, %rax	
	movq -88(%rbp), %reg3	

11
	testq $1, %reg0	
	je .Main.main_7	

11
	movq $5, %reg0	
	movq %reg1, %rax	

11
	movq $67, %rsi	
	movq $.string2_l, %reg1	

11
	movq %reg0, %rax	
	movq %reg2, %r9	

11
	cmpl $0, 16(%reg0)	
	movq 16(%reg0), %reg1	

11
	movq 0(%reg0), %r12	
	movq 40(%r12), %r12	

11
	movq $.string8, %reg0	
	movq 0(%reg1), %reg2	

11
	movq %rbx, %rdi	
	sete %dil	

11
	call out_error	
.Main.main_9:	

11
	testq $1, %rdi	
	je .Main.main_3	

11
	cmpl %eax, %edi	
	setle %al	

11
	movq %r13, %reg1	
	cmpl %reg2, %reg3	

11
	movq -160(%rbp), %reg1	
	movq %reg2, %reg3	

11
	call *%reg0	
	popq %r15	

11
	idivl %r8d	
	movq %rax, %reg2	

11
	movq %r15, %reg1	
	call *%rax	

11
	idivl %r8d	
	movq %rax, %rcx	

11
	cmpl $0, %reg0	
	movq %rbx, %rdi	

11
	call *%r12	
	popq %reg1	

11
	.quad 42	
.string7_l:	

11
	popq %reg0	
	cmpl $0, %r14d	

11
	idivl %reg0d	
	movq %rax, %rcx	

11
	cmpl $0, %ebx	
	movq %rbx, %rdi	

11
	negl %esi	
	negl %esi	

11
	movq -8(%rbp), %reg1	
	movq %r15, %rsi	

11
	cmpl %esi, %reg1	
	setle %sil	

11
	cmpl %reg0, %reg1	
	setle %sil	

11
	movq $5, %rdi	
	movq %reg1, %reg2	

11
.string10:	
	.quad String_vtable	

11
	movq %reg0, %reg1	
	movq %rbx, %rdi	

11
	idivl %esi	
	movq $12, %reg1	

11
	movq -152(%rbp), %rax	
	movq %reg2, %reg3	

11
	.quad 2	
.string2_l:	

11
	movq -144(%rbp), %reg1	
	movq %reg2, %reg3	

11
	movq 8(%reg0), %rdi	
	movq %reg2, %rsi	

11
	movq %rdi, %reg1	
	call Foo.new	

11
	movq %rax, 8(%reg1)	
	movq $0, %rax	

11
	movq 0(%rdx), %r15	
	movq 72(%r15), %r15	

11
	movq 8(%rbx), %reg1	
	movq %reg2, %reg3	

11
	movq 72(%r15), %r15	
	movq -8(%rbp), %rdi	

11
	movq %rax, %reg1	
	movq %r14, %rax	

11
	movq %rdi, %r12	
	movq 0(%rbx), %reg3	

11
	movq -80(%rbp), %reg1	
	addl %reg2, %reg3	

11
	movq %rdi, %rax	
	movq %reg2, %reg3	

11
	movq 64(%r13), %r13	
	movq %reg1, %reg2	

11
	cmpl %eax, %edi	
	setle %reg2	

11
	movq %r15, %rsi	
	call *%rax	

11
	movq %rax, %rsi	
	movq %reg2, %reg3	

11
	movq -96(%rbp), %reg1	
	addl %reg2, %reg3	

11
	movq %rdi, %r12	
	movq 0(%reg2), %reg3	

11
	movq %reg0, %rax	
	movq %rcx, %r8	

11
	movq $5, %rdi	
	movq %reg1, %rax	

11
	movq 72(%r15), %r15	
	movq %reg1, %rdi	

11
	movq -8(%rbp), %rdi	
	movq %r15, %reg3	

11
	negl %eax	
	movq $12, %rsi	

11
	call *%r15	
	movq %reg1, %reg2	

11
	negl %reg0	
	subl %reg0, %eax	

11
	movq %reg0, %reg1	
	movq %reg2, %r9	

11
	movq %reg0, %reg1	
	call Int.new	

11
	movq 16(%reg0), %rdx	
	movq 0(%rdx), %reg2	

11
	movq 0(%reg0), %r15	
	movq 72(%r15), %r15	

11
	movq $308, %rsi	
	movq $.string2_l, %reg1	

10
	movq %rax, %reg1	
	call String.concat	

10
	movq $Main_vtable, 0(%reg0)	
	movq $0, %rdi	

10
	movq %r8, %reg1	
	subl %reg2, %eax	

10
	call *%reg0	
	movq 0(%rbx), %rax	

10
	cmpl %esi, %eax	
	setle %reg2l	

10
	movq %rbx, %reg1	
	movq %reg2, %r13	

10
	.globl Bar.new	
	.type Bar.new, @function	

10
	call String.substr	
	movq %rax, %reg1	

10
	movq %r8, %rax	
	movq %r9, %r8	

10
	call getmem	
	movq $Bar_vtable, 0(%rax)	

10
	pushq %reg0	
	movq %rdi, %reg0	

10
	movq -88(%rbp), %reg1	
	cmpl %reg2, %reg3	

10
	cmpl %esi, %edi	
	setl %sil	

10
	movq 56(%reg0), %reg0	
	movq %r12, %rdi	

10
	movq 8(%reg0), %reg1	
	movq 0(%reg1), %rax	

10
	.quad .string5_l	
	.quad 38	

10
	movq %rdx, %reg1	
	movq %reg2, %rdx	

10
	movq $0, %reg0	
	movq %reg0, 32(%reg1)	

10
	movq $.string6, %reg0	
	movq %reg0, %reg1	

10
	subl %eax, %reg1	
	movq %rcx, %rax	

10
	movq 64(%rbx), %rbx	
	movq -8(%rbp), %reg2	

10
	movq $4, %rsi	
	movq $.string3_l, %reg1	

10
	.quad .string6_l	
	.quad 40	

10
	movq $1, %reg0	
	subl %reg1, %reg2	

10
	.string "ERROR: %lld: Exception: division by zero\n"	
.string4:	

10
	movq %r8, %rcx	
	subl %ecx, %reg3	

10
	movq %reg0, %rsi	
	movq %r14, %reg3	

10
	movq %rsi, %reg1	
	cmpl %edi, %reg3	

10
	movq $.string6, %reg0	
	movq 0(%rbx), %reg2	

10
	movq -16(%rbp), %reg1	
	cmpl %reg2, %reg3	

10
	.quad 6	
.string5_l:	

10
	movq -32(%rbp), %reg1	
	movq %reg2, %rdi	

10
Bar.new:	
	pushq %reg0	

10
	call out_error	
.Main.main_6:	

10
	movq %r8, %reg1	
	subl %reg2, %reg3	

10
	movq $0, %reg0	
	movq $.string3_l, %reg1	

10
	cmpl $0, %reg0	
	sete %dil	

10
	movq %rax, %rcx	
	negl %reg2	

10
	movq %r8, %rcx	
	subl %reg2, %reg3	

10
	movq $0, %rdi	
	movq %rdi, 16(%reg1)	

10
	movq %reg0, %reg1	
	testq $1, %reg1	

10
	movq 48(%r13), %r13	
	movq %rax, %rdi	

10
	subl %reg0, %reg1	
	movq %rcx, %rax	

10
	movq %r8, %reg1	
	subl %ecx, %reg3	

10
	.string "ERROR: %lld: Exception: dispatch on void\n"	
.string3:	

10
	movq %rbx, %rax	
	popq %rbx	

10
	movq %rax, %reg1	
	movq -112(%rbp), %rax	

10
	call *%reg0	
	movq 0(%reg1), %rax	

10
	movq $6, %rsi	
	movq $.string2_l, %rdi	

10
	call *%reg0	
	movq 0(%rbx), %r12	

10
	.quad 1	
	.quad Foo.new	

10
	subl %eax, %ecx	
	movq %rcx, %reg3	

10
	call *%r12	
	cmpl $0, %eax	

10
	cmpl %reg0, %esi	
	setle %reg2	

10
	movq $0, %rdi	
	movq %rdi, %reg1	

10
	cmpl %reg0, %eax	
	setle %sil	

10
	call String.substr	
	movq %reg0, %reg1	

10
	movq -16(%rbp), %reg1	
	movq %reg2, %rsi	

10
	movq %reg0, %reg1	
	movq -56(%rbp), %reg0	

10
	movq $1, %reg0	
	movq %reg0, 8(%reg1)	

10
	cmpl %eax, %esi	
	setle %al	

10
	movq %rsi, %reg1	
	cmpl %reg2, %eax	

10
	movq %rax, %rdi	
	movq %r14, %reg3	

10
	movq -136(%rbp), %rax	
	movq %reg2, %reg3	

10
	movq -120(%rbp), %reg1	
	imull %reg2	

10
	movq %reg0, %r12	
	movq %reg2, %r13	

10
	movq %r8, %reg1	
	movq %r9, %r8	

10
	movq %r12, %rax	
	movq %reg2, %reg3	

10
	movq $0, %rsi	
	movq $.string3_l, %reg1	

10
	call getmem	
	movq $Bar_vtable, 0(%reg0)	

10
	cmpl %reg0, %esi	
	setle %al	

10
	movq %rax, %rsi	
	negl %esi	

10
	movq %reg0, %reg1	
	movq -72(%rbp), %reg3	

10
	call *%rax	
	movq 0(%reg1), %r12	

10
	movq 0(%r12), %reg1	
	movq 56(%reg1), %reg1	

10
	cmpl %r10d, %reg1d	
	sete %r10b	

10
	cmpl %esi, %edi	
	setl %reg2l	

10
	movq $0, %rsi	
	movq $.string3_l, %rdi	

10
	movq $0, %reg0	
	movq %reg0, 16(%rax)	

10
.string4_l:	
	.string "ERROR: %lld: Exception: division by zero\n"	

10
	subl %reg0, %ecx	
	movq %rcx, %reg3	

10
	imull %ecx	
	movq $12, %reg1	

10
	movq %rax, %rsi	
	call String.concat	

10
	movq %reg0, %reg1	
.Main.main_1:	

10
	cmpl %esi, %eax	
	setle %sil	

10
	sete %r10b	
	testq $1, %r10	

10
	movq %reg0, %rax	
	movq -16(%rbp), %reg3	

10
	movq 0(%rdx), %r12	
	movq 72(%r12), %r12	

10
	movq %reg0, %r12	
	movq %rdi, %reg3	

10
	movq %reg0, %rax	
	movq %r9, %reg0	

10
	movq $.string7, %rax	
	movq %reg1, %rdx	

10
	movq $.string7, %rax	
	movq -8(%rbp), %rdx	

10
	testq $1, %reg0	
	je .Main.main_13	

10
	movq $Main_vtable, 0(%rax)	
	movq $0, %rdi	

10
	call *%rax	
	movq 0(%rbx), %r12	

10
.string7_l:	
	.string "ERROR: %lld: Exception: case without matching branch\n"	

10
	movq %reg0, %rax	
	subl %edi, %eax	

10
	movq %rax, %rdi	
	movq %r14, %rsi	

10
	movq $4, %reg0	
	movq $.string3_l, %rdi	

10
	movq $.string9, %reg0	
	movq 0(%reg1), %reg2	

10
	.quad 38	
.string6_l:	

10
	movq 48(%r13), %r13	
	movq %reg1, %reg2	

10
	movq %reg0, %reg1	
	movq -112(%rbp), %reg0	

10
	movq %reg0, %rax	
	movq %rbx, %rdi	

10
	ret	
	.size Bar.new, .-Bar.new	

10
	movq $0, %rdi	
	movq %rdi, 16(%rax)	

10
	subl %reg0, %ecx	
	movq %rcx, %rax	

10
	movq $6, %reg0	
	movq $.string2_l, %rdi	

10
	cmpl %reg0, %edi	
	setl %sil	

10
	.quad Bar.new	
	.quad Object.abort	

10
	movq %r12, %rdi	
	addl %eax, %edi	

10
	movq %r14, %reg1	
	addl %reg2, %eax	

10
	call Bool.new	
	movq %reg0, 8(%rax)	

10
	call *%rax	
	movq 0(%reg1), %rax	

10
	movq %rdx, %reg1	
	movq -8(%rbp), %rdx	

10
	movq -96(%rbp), %reg1	
	movq %reg2, %reg3	

10
	movq %r8, %reg1	
	subl %ecx, %eax	

10
	movq %reg0, %r8	
	subl %r8d, %reg2	

10
	movq 48(%r13), %r13	
	movq %reg1, %rdi	

10
	.quad .string7_l	
	.quad 54	

10
	movq %reg0, %rax	
	movq %reg2, %rbx	

10
	movq 56(%r15), %r15	
	movq %reg1, %rdi	

10
	movq %rax, %reg1	
	movq %r14, %rsi	

10
	movq 0(%reg0), %r15	
	movq 56(%r15), %r15	

10
	movq -104(%rbp), %reg1	
	movq %reg2, %reg3	

10
	movq 0(%rax), %r13	
	movq 48(%r13), %r13	

10
.string5_l:	
	.string "ERROR: %lld: Exception: case on void\n"	

10
	cmpl $0, %reg0	
	sete %reg1l	

10
	cmpl $0, %edi	
	sete %reg1l	

10
	call *%rax	
	movq 0(%rbx), %rax	

10
	movq %reg0, %r8	
	subl %r8d, %eax	

10
	movq 8(%rbx), %reg1	
	movq 0(%reg1), %rax	

10
	movq %rbx, %rax	
	popq %r12	

10
	idivl %esi	
	movq $12, %rsi	

10
	movq %reg0, %rax	
	subl %edi, %reg3	

10
	movq %r15, %reg1	
	movq %reg2, %reg3	

10
	.quad 4	
.string4_l:	

10
	movq $.string8, %reg0	
	movq 0(%rbx), %reg2	

10
	movq 0(%rdx), %rbx	
	movq 64(%rbx), %rbx	

10
	movq -56(%rbp), %rax	
	movq %reg2, %reg3	

10
	movq %rsi, %reg1	
	cmpl %edi, %eax	

10
	movq %r14, %rax	
	movq %reg2, %reg3	

10
	call *%reg0	
	jmp .Main.main_2	

10
	movq %rax, %rcx	
	negl %ecx	

10
	movq $4, %rsi	
	movq $.string3_l, %rdi	

10
	movq 0(%reg0), %r13	
	movq 48(%r13), %r13	

10
	movq %rax, %rsi	
	negl %reg2	

10
	movq $Main_vtable, 0(%rax)	
	movq $0, %reg1	

10
	movq %reg0, %reg1	
	movq -144(%rbp), %reg3	

10
	movq %reg0, %reg1	
	movq -8(%rbp), %reg0	

10
	imull %reg0	
	movq $12, %rcx	

10
.Main.main_1:	
	movq $0, %reg0	

10
	movq %r8, %rcx	
	subl %ecx, %eax	

10
	movq 8(%reg0), %rdx	
	movq 0(%rdx), %rax	

10
	movq %r12, %rdi	
	addl %reg2, %edi	

10
	subl %reg0, %reg1	
	movq %rcx, %reg3	

10
	cmpl $0, %reg0	
	movq %reg0, %rax	

10
	movq %rbx, %reg1	
	popq %rbx	

10
	subl %eax, %reg1	
	movq %rcx, %reg3	

10
	movq %r8, %rcx	
	subl %reg2, %eax	

10
	movq 8(%rbx), %rdx	
	movq 0(%rdx), %rax	

10
	movq $6, %reg0	
	movq $.string2_l, %reg1	

10
	movq 56(%reg0), %reg0	
	movq %r12, %reg2	

10
Bar.new:	
	pushq %rbp	

10
.string6_l:	
	.string "ERROR: %lld: Exception: stack overflow\n"	

10
	movq %r12, %rdi	
	addl %eax, %reg3	

10
.string3_l:	
	.string "ERROR: %lld: Exception: dispatch on void\n"	

10
	movq $3, %reg0	
	movq 0(%reg1), %reg2	

10
	movq %rax, %reg1	
	negl %ecx	

10
	movq 48(%r13), %r13	
	movq %rax, %reg2	

10
	imull %ecx	
	movq $12, %rcx	

10
	movq $2, %reg0	
	movq 0(%reg1), %reg2	

10
	movq %reg0, %reg1	
	movq -144(%rbp), %reg0	

10
	cmpl %eax, %esi	
	setle %reg2	

10
	.quad Main.func	
	.text 	

10
	cmpl $0, %edi	
	sete %dil	

10
	movq %reg0, %rax	
	popq %reg0	

10
	movq $0, %r10	
	cmpl %r10d, %reg1d	

10
	movq %r14, %rdi	
	movq %reg2, %rsi	

10
	movq %rax, %reg1	
	negl %esi	

10
	movq -32(%rbp), %rax	
	movq %reg2, %rdi	

10
	movq $4, %reg0	
	movq $.string3_l, %reg1	

10
	movq %reg0, %reg1	
	movq %rdi, %r13	

10
	.string "ERROR: %lld: Exception: case on void\n"	
.string5:	

10
	movq $0, %reg0	
	movq $.string3_l, %rdi	

10
	movq %reg0, %r12	
	movq %rdi, %r13	

10
	movq -48(%rbp), %reg1	
	movq %reg2, %reg3	

10
	movq $6, %rsi	
	movq $.string2_l, %reg1	

10
	movq %rbx, %reg1	
	cmpl %reg2, %reg3	

10
	movq %reg0, %reg1	
	movq %rbx, %reg0	

10
	movq %r13, %reg1	
	cmpl %reg2, %eax	

10
	.type Bar.new, @function	
Bar.new:	

10
	subl %eax, %ecx	
	movq %rcx, %rax	

10
	movq %rbx, %reg1	
	popq %r12	

10
	movq %rsi, %reg1	
	cmpl %reg2, %reg3	

10
	movq %reg0, %rax	
	popq %r12	

10
	movq 0(%rdx), %reg1	
	movq 56(%reg1), %reg1	

10
	.string "ERROR: %lld: Exception: case without matching branch\n"	
.string7:	

10
	.string "ERROR: %lld: Exception: stack overflow\n"	
.string6:	

10
	movq %reg0, %reg1	
	popq %r12	

10
	movq $Main_vtable, 0(%reg0)	
	movq $0, %reg1	

10
	movq 64(%rbx), %rbx	
	movq -8(%rbp), %rdi	

10
	movq $.string7, %rax	
	movq -8(%rbp), %reg2	

10
	movq %rdi, %rax	
	movq %rsi, %reg3	

10
	movq %reg0, 24(%reg1)	
	movq $0, %reg0	

10
	call Bool.new	
	movq %reg0, 8(%reg1)	

10
	cmpl %reg0, %edi	
	setl %reg2l	

10
	movq 56(%r15), %r15	
	movq %reg1, %reg2	

9
	pushq %rax	
	movq %r13, %reg2	

9
	addl %reg0, %reg1	
	movq %reg2, %r13	

9
	movq %rdi, %reg1	
	movq $1, %rax	

9
	movq -80(%rbp), %rax	
	movq %reg2, %reg3	

9
	movq %rbx, %r12	
	movq %rdi, %reg3	

9
	movq 8(%reg0), %rax	
	sete %al	

9
	movq $52, %rsi	
	movq $.string2_l, %rdi	

9
	movq $11, %rsi	
	movq $.string2_l, %rdi	

9
	movq %r14, %rsi	
	call Object.cmp	

9
	movq $.string7_l, %reg0	
	call out_error	

9
	movq %reg0, %reg1	
	movq $12, %reg0	

9
	movq -72(%rbp), %reg1	
	addl %reg2, %reg3	

9
	movq %r12, %r13	
	movq %reg2, %r14	

9
	movq 8(%rbx), %rdi	
	movq %reg2, %rsi	

9
	movq 8(%reg0), %rax	
	sete %reg2	

9
	movq -72(%rbp), %reg1	
	movq %reg2, %reg3	

9
	movq %reg0, %rax	
	movq $0, %reg0	

9
	movq %rdi, 8(%reg1)	
	movq %rdi, %reg1	

9
	movq %reg0, %reg1	
	movq $2, %reg0	

9
	movq $52, %reg0	
	movq $.string2_l, %reg1	

9
	movq %r12, %reg1	
	call String.length	

9
	movq %r13, %rdi	
	movq %r14, %rsi	

9
	cmpl $0, 8(%rbx)	
	movq 8(%rbx), %rax	

9
	movq 8(%rbx), %rax	
	sete %al	

9
	movq %r13, %reg1	
	subl %reg2, %reg3	

9
	movq %reg0, %r9	
	movq %r8, %reg0	

9
	movq %r12, %rdi	
	cmpl %reg2, %reg3	

9
	pushq %reg0	
	movq %r13, %reg2	

9
	movq %reg0, %reg1	
	movq -120(%rbp), %reg0	

9
	movq %rax, %reg1	
	call Int.new	

9
	movq %rbx, %reg1	
	movq %rdi, %reg3	

9
	movq -56(%rbp), %rax	
	cmpl %reg2, %reg3	

9
	call *%reg0	
	popq %r14	

9
	movq %rsi, %rdi	
	cmpl %edi, %eax	

9
	movq %r12, %r13	
	movq %reg2, %reg3	

9
	movq %reg0, 8(%reg1)	
	movq $1, %reg0	

9
	movq %rbx, %reg1	
	movq %rdi, %r13	

9
	movq $52, %reg0	
	movq $.string2_l, %rdi	

9
	movq %reg0, 8(%reg1)	
	movq %reg0, %reg1	

9
	movq 8(%reg0), %reg1	
	call *%reg2	

9
	negl %reg0	
	movq $12, %rcx	

9
	idivl %reg0d	
	addl %reg1, %reg2	

9
	idivl %ecx	
	subl %eax, %edi	

9
	cmpl $0, %reg0d	
	movq %reg0, %rdi	

9
	movq -160(%rbp), %rax	
	movq %reg2, %reg3	

9
	movq $11, %reg0	
	movq $.string2_l, %reg1	

9
	movq $12, %r8	
	movq %r8, %r9	

9
	call *%reg0	
	jmp .Main.main_5	

9
	movq %rcx, %rax	
	movq %reg2, %rax	

9
	testq $1, %reg0	
	je .Main.main_8	

9
	movq -40(%rbp), %rax	
	movq %reg2, %reg3	

9
	pushq %reg0	
	movq %r13, %rdi	

9
	movq %reg0, 8(%rax)	
	movq %reg0, %rax	

9
	movq $112, %reg0	
	movq $.string2_l, %reg1	

9
	pushq %rbx	
	movq %reg1, %reg2	

9
	subl %reg0, %reg1	
	movq $12, %rsi	

9
	pushq %rbx	
	movq %rdi, %rax	

9
	movq $0, %rdi	
	movq %rdi, %rsi	

9
	subl %reg0, %reg1d	
	movq %reg1, %reg2	

9
	movq %r12, %rsi	
	call *%r13	

9
	movq -184(%rbp), %reg1	
	negl %reg2	

9
	movq %rbx, %r12	
	movq %rdi, %r13	

9
	movq %rbx, %r12	
	movq %reg2, %r13	

9
	movq %rbx, %reg1	
	negl %reg2	

9
	movq %reg0, %reg1	
	movq 0(%reg1), %reg0	

9
	movq 72(%r13), %r13	
	movq -8(%rbp), %rdi	

9
	movq %rax, %r9	
	movq %r8, %rax	

9
	call *%rax	
	jmp .Main.main_4	

9
	movq $11, %reg0	
	movq $.string2_l, %rdi	

9
	movq %rbx, %rdi	
	movq %r14, %rsi	

9
	call out_error	
.Main.main_7:	

9
	movq %rsi, %reg1	
	movq %reg2, %reg1	

9
	movq 88(%reg0), %reg0	
	movq %rax, %reg2	

9
	movq %r14, %reg1	
	cmpl %reg2, %reg3	

9
	movq %r13, %rdi	
	addl %reg2, %reg3	

9
	movq -8(%rbp), %reg1	
	movq 0(%reg1), %r12	

9
	movq $.string7_l, %rdi	
	call out_error	

9
	call Object.cmp	
	movq %reg0, %r14	

9
	movq 8(%reg0), %reg1	
	sete %al	

9
	call *%reg0	
	jmp .Main.main_8	

9
	cmpl $0, 8(%reg0)	
	movq 8(%reg0), %rax	

9
	movq $61, %reg0	
	movq $.string2_l, %reg1	

9
	movq -144(%rbp), %reg1	
	addl %reg2, %reg3	

9
	movq -104(%rbp), %reg1	
	negl %reg2	

9
	movq %reg0, %r13	
	movq %reg2, %r14	

9
	movq 0(%rax), %reg1	
	movq 88(%reg1), %reg1	

9
	movq %rax, %r12	
	call Int.new	

9
	movq %reg0, %reg1	
	movq 8(%rbx), %reg3	

9
	movq $0, %reg0	
	movq %reg0, %rsi	

9
	movq %rax, %reg1	
	movq -24(%rbp), %rax	

9
	movq %rax, %reg1	
	movq 0(%reg1), %rax	

9
	movq %reg0, %rax	
	movq -64(%rbp), %reg3	

9
	movq -112(%rbp), %rax	
	movq %reg2, %reg3	

9
	movq 8(%reg0), %reg1	
	movq 0(%reg0), %reg2	

9
	testq $1, %reg0	
	je .Main.main_10	

9
	movq %rsi, %rdi	
	cmpl %reg2, %reg3	

9
	movq %r12, %rdi	
	call String.length	

9
	movq 8(%reg0), %reg1	
	sete %reg2	

9
	movq %rcx, %reg1	
	movq %reg2, %reg1	

9
	movq 8(%rbx), %reg1	
	movq %reg2, %rsi	

9
	movq 8(%rbx), %reg1	
	sete %al	

9
	movq 88(%reg0), %reg0	
	movq %rax, %rdi	

9
	movq $1, %reg0	
	movq %r13, %reg2	

9
	pushq %rax	
	movq %r13, %rdi	

9
	movq -152(%rbp), %reg1	
	imull %reg2	

9
	movq -80(%rbp), %reg1	
	subl %reg2, %reg3	

9
	movq 8(%rbx), %rdi	
	movq %reg2, %reg3	

9
	idivl %ecx	
	subl %reg1, %edi	

9
	movq 0(%rdx), %r13	
	movq 72(%r13), %r13	

9
	call Object.cmp	
	movq %rax, %r14	

9
	negl %reg0	
	movq $12, %r8	

9
	movq %rdi, %rbx	
	call Foo.new	

9
	pushq %rbx	
	movq %rdi, %reg2	

9
	movq %reg0, %reg1	
	movq -80(%rbp), %reg3	

9
	call *%reg0	
	movq $1, %rax	

9
	movq %rbx, %reg1	
	pushq %reg2	

9
	movq $61, %rsi	
	movq $.string2_l, %rdi	

9
	movq $1, %rdi	
	movq %r12, %reg2	

9
	movq %reg0, %reg1	
	subl %reg2, %esi	

9
	movq %rbx, %reg1	
	movq %r14, %reg3	

9
	movq $112, %reg0	
	movq $.string2_l, %rdi	

9
	movq %r13, %rdi	
	movq %r14, %reg3	

9
	movq $0, %reg0	
	movq %reg0, 16(%rbx)	

9
	movq %reg0, %reg1	
	movq %reg2, %r14	

9
	movq %rbx, %reg1	
	movq %r14, %rsi	

9
	movq %rsi, %rdi	
	cmpl %reg2, %eax	

9
	movq %r13, %reg1	
	addl %reg2, %eax	

9
	call *%r12	
	movq %reg1, %reg2	

9
	movq $112, %rsi	
	movq $.string2_l, %rdi	

9
	movq $0, %rax	
	movq %rax, 16(%reg1)	

9
	movq $61, %rsi	
	movq $.string2_l, %reg1	

9
	movq $.string9, %reg0	
	movq 0(%rbx), %reg2	

9
	call *%reg0	
.Main.main_2:	

9
	movq $1, %reg0	
	movq %r12, %rax	

9
	movq $11, %rsi	
	movq $.string2_l, %reg1	

9
	idivl %reg0d	
	addl %eax, %reg2	

9
	movq -8(%rbp), %rdx	
	movq 0(%rdx), %r12	

9
	idivl %r8d	
	movq %rax, %r8	

9
	movq %rax, %rbx	
	movq %reg2, %reg3	

9
	movq -16(%rbp), %reg1	
	movq %reg2, %rax	

9
	movq -96(%rbp), %reg1	
	cmpl %reg2, %reg3	

9
	.quad .string1_l	
	.quad 4	

9
	movq %rbx, %rdi	
	movq %r14, %reg3	

9
	movq %r14, %reg1	
	movq %r13, %reg3	

9
	movq $12, %reg0	
	movq %reg0, %r9	

9
	movq -96(%rbp), %reg1	
	imull %reg2	

9
	movq %rsi, %rdi	
	cmpl %edi, %reg3	

9
	movq %rax, %reg1	
	movq %r8, %rax	

9
	idivl %esi	
	movq %rax, %rdi	

9
	movq %reg0, %rdi	
	movq $0, %reg0	

9
	movq %rbx, %reg1	
	pushq %rax	

9
	movq $61, %reg0	
	movq $.string2_l, %rdi	

9
	movq %reg0, %reg1	
	movq -128(%rbp), %reg0	

9
	addl %reg0, %reg1	
	movq $12, %rcx	

9
	movq $12, %r8	
	movq %r8, %reg1	

9
	movq %r12, %reg1	
	movq %reg2, %r14	

9
	movq $112, %rsi	
	movq $.string2_l, %reg1	

9
	pushq %rbx	
	movq %reg1, %rax	

9
	call *%r12	
	movq $1, %reg1	

9
	movq 8(%rbx), %reg1	
	sete %reg2	

9
	call *%rbx	
	popq %reg1	

9
	movq 8(%rbx), %rax	
	sete %reg2	

9
	movq -48(%rbp), %rax	
	movq %reg2, %reg3	

9
	movq %reg0, %rbx	
	call Foo.new	

9
	movq %r14, %reg1	
	call Object.cmp	

9
	movq -160(%rbp), %reg1	
	cmpl %reg2, %reg3	

9
	movq %rbx, %r12	
	movq %reg2, %reg3	

9
	movq $52, %rsi	
	movq $.string2_l, %reg1	

9
	movq %reg0, 8(%reg1)	
	movq %reg1, %reg2	

9
	movq $1, %rdi	
	movq %r12, %rax	

9
	movq %reg0, %rax	
	movq -48(%rbp), %reg3	

9
	movq $0, %rax	
	movq %rax, 16(%rbx)	

9
	movq 72(%r13), %r13	
	movq -8(%rbp), %reg2	

9
	movq $0, %reg0	
	movq %reg0, 40(%reg1)	

9
	movq %rdi, 8(%rax)	
	movq %rdi, %rax	

9
	movq %r13, %reg1	
	movq %r14, %rsi	

9
.Main.main_4:	
	popq %reg0	

8
	movq 16(%reg0), %reg1	
	sete %al	

8
	movq %r12, %reg1	
	negl %reg2	

8
	movq %reg0, %rax	
	movq -40(%rbp), %reg3	

8
	subl %eax, %reg1d	
	movq %reg1, %reg2	

8
	movq %reg0, %reg1	
	movq -152(%rbp), %reg0	

8
	movq -24(%rbp), %reg1	
	addl %reg2, %reg3	

8
	movq %reg0, %rsi	
	movq %rbx, %reg3	

8
	movq $.string7, %reg0	
	movq 0(%reg1), %reg2	

8
	imull %r8d	
	movq %rax, %r8	

8
	movq 16(%rbx), %reg1	
	movq 0(%reg1), %rax	

8
	movq $.string6, %r15	
	movq -8(%rbp), %reg2	

8
	je .Main.main_1	
	movq $5, %rsi	

8
	movq $1, %reg0	
	movq %reg0, %r12	

8
	movq %rdi, 16(%reg1)	
	leave	

8
	addl %reg0, %eax	
	movq %reg2, %r13	

8
	addl %reg0, %esi	
	movq $12, %reg2	

8
	movq 0(%reg0), %reg1	
	movq 120(%reg1), %reg1	

8
	je .Main.main_1	
	movq $5, %reg0	

8
	movq $115, %reg0	
	movq $.string2_l, %rdi	

8
	movq -56(%rbp), %rax	
	cmpl %eax, %reg3	

8
	movq -168(%rbp), %reg1	
	cmpl %reg2, %reg3	

8
	movq %rax, 16(%rbx)	
	movq $0, %rax	

8
	imull %esi	
	addl %eax, %reg2	

8
	call *%reg0	
	movq %rax, %reg2	

8
	negl %edi	
	negl %edi	

8
	movq -144(%rbp), %rax	
	movq %reg2, %reg3	

8
	movq -40(%rbp), %reg1	
	cmpl %reg2, %reg3	

8
	imull %reg0	
	addl %reg1, %edi	

8
	setl %reg0l	
	movq %reg1, %rdi	

8
	movq 16(%reg0), %reg1	
	movq 0(%reg1), %rax	

8
	cmpl $0, 16(%rbx)	
	movq 16(%rbx), %reg1	

8
	movq -56(%rbp), %reg1	
	cmpl %eax, %reg3	

8
	call *%rax	
	movq $.string6, %r15	

8
	movq $0, %reg0	
	testq $1, %reg0	

8
	.size Bar.new, .-Bar.new	
	.globl _main	

8
	call *%reg0	
	movq $.string6, %r15	

8
	movq %r13, %reg1	
	cmpl %edi, %reg3	

8
	subl %eax, %reg1d	
	movq %reg1, %rax	

8
	movq %rax, %rbx	
	movq -8(%rbp), %rdx	

8
	setl %reg0l	
	movq %rsi, %rdi	

8
	movq 8(%rbx), %reg1	
	call *%reg2	

8
	movq 16(%rbx), %reg1	
	sete %reg2	

8
	movq $0, %reg0	
	popq %reg1	

8
	call out_error	
.Main.main_4:	

8
	movq %rax, %rbx	
	movq %reg2, %rdx	

8
	movq -64(%rbp), %reg1	
	negl %reg2	

8
	movq -16(%rbp), %reg1	
	addl %reg2, %reg3	

8
	movq $Foo_vtable, 0(%rax)	
	movq $0, %reg1	

8
	movq %reg0, %reg1	
	movq -16(%rbp), %reg0	

8
	movq %reg0, %reg1	
	movq -48(%rbp), %rax	

8
	addl %edi, %eax	
	movq %rax, %r13	

8
	movq $115, %reg0	
	movq $.string2_l, %reg1	

8
	movq 16(%rbx), %reg1	
	movq 0(%reg1), %reg2	

8
	.quad 1	
	.quad Bar.new	

8
	movq 16(%reg0), %rax	
	sete %reg2	

8
	call out_error	
.Main.main_8:	

8
	subl %reg0, %reg1d	
	movq %reg1, %rax	

8
	setl %sil	
	movq %reg1, %reg2	

8
	jmp .Main.main_8	
.Main.main_7:	

8
	movq -104(%rbp), %rax	
	movq %reg2, %reg3	

8
	movq $Main_vtable, 0(%rax)	
	movq %rax, %reg1	

8
	subl %reg0, %reg1	
	movq -152(%rbp), %reg3	

8
	movq %reg0, %reg1	
	movq -96(%rbp), %rsi	

8
	movq %reg0, %rax	
	movq -88(%rbp), %rdi	

8
	call String.new	
	movq %rax, %reg1	

8
	movq -104(%rbp), %reg1	
	cmpl %reg2, %reg3	

8
	subl %reg0, %reg1	
	movq %reg2, %r12	

8
	movq %reg0, %reg1	
	movq %rsi, %rbx	

8
	addl %eax, %esi	
	movq $12, %rcx	

8
	movq $0, %reg0	
	movq %reg0, 24(%rbx)	

8
	negl %eax	
	movq %reg1, %rcx	

8
	addl %eax, %esi	
	movq $12, %reg2	

8
	call *%rax	
	movq $.string6, %rbx	

8
	movq 16(%reg0), %reg1	
	sete %reg2	

8
	movq -32(%rbp), %reg1	
	subl %reg2, %reg3	

8
	movq $Foo_vtable, 0(%reg0)	
	movq $0, %reg1	

8
	movq %rax, %rbx	
	movq -8(%rbp), %reg3	

8
	movq %reg0, %reg1	
	movq -88(%rbp), %rdi	

8
	movq $.string8, %r12	
	movq 0(%reg1), %reg2	

8
	movq -56(%rbp), %reg1	
	cmpl %reg2, %eax	

8
	movq 16(%reg0), %rdi	
	call *%reg2	

8
	addl %reg0, %esi	
	movq $12, %rcx	

8
	call Foo.new	
	movq %reg0, %reg1	

8
	movq $0, %reg0	
	movq $0, %reg1	

8
	.quad .string6_l	
	.quad 5	

8
	movq %reg0, %reg1	
	movq -72(%rbp), %reg0	

8
	movq %reg0, %rax	
	subl %eax, %esi	

8
	movq -64(%rbp), %reg1	
	addl %reg2, %reg3	

8
	.quad 7	
.string3_l:	

8
	cmpl $0, 16(%reg0)	
	movq 16(%reg0), %rax	

8
	movq $115, %rsi	
	movq $.string2_l, %reg1	

8
	cmpl $0, 16(%rbx)	
	movq 16(%rbx), %rax	

8
	pushq %reg0	
	movq $16, %rdi	

8
	movq %reg0, %reg1	
	subl %eax, %esi	

8
	movq %rax, %reg1	
	call String.length	

8
	imull %reg0	
	addl %eax, %edi	

8
	movq %reg0, 8(%rax)	
	movq %rax, %rdi	

8
	movq %reg0, %reg1	
	movq %reg0, %reg2	

8
.Main.main_1:	
	movq 0(%reg0), %r12	

8
	movq $.string6, %r15	
	movq -8(%rbp), %rdx	

8
	setl %sil	
	movq %rsi, %reg2	

8
	movq -168(%rbp), %reg1	
	movq %reg2, %rdi	

8
.Main.main_2:	
	movq 0(%rax), %reg1	

8
	movq %reg0, %reg1	
	movq -64(%rbp), %reg0	

8
	call *%rax	
	cmpl $0, %reg1d	

8
	movq %reg0, %rdi	
	cmpl $0, %reg2	

8
	movq %reg0, %reg1	
	call String.new	

8
	movq $1, %reg0	
	movq 0(%rax), %reg2	

8
	movq 104(%rax), %rax	
	movq %reg1, %reg2	

8
	imull %esi	
	addl %reg1, %edi	

8
	movq 104(%rax), %rax	
	movq %reg1, %rdi	

8
	movq 16(%rbx), %reg1	
	sete %al	

8
	movq %rdi, 16(%rax)	
	leave	

8
	movq %reg0, 8(%reg1)	
	movq %reg1, %rdi	

8
	idivl %reg0	
	movq %reg1, %r12	

8
	movq -16(%rbp), %rdx	
	movq 0(%rdx), %reg2	

8
	movq $1, %rax	
	movq %rax, %r12	

8
	movq $.string8, %reg0	
	movq 0(%rbx), %rax	

8
	movq %reg0, %reg1	
	movq -120(%rbp), %reg3	

8
	imull %ecx	
	addl %eax, %reg2	

8
	call Foo.new	
	movq %rax, %reg1	

8
	movq 16(%reg0), %rdx	
	movq 0(%rdx), %rax	

8
	call *%reg0	
	movq $.string6, %rbx	

8
	movq -40(%rbp), %reg1	
	imull %reg2	

8
	movq %rdi, %reg1	
	movq %rsi, %rbx	

8
	movq $0, %rax	
	movq %rax, 24(%reg1)	

8
	movq %reg0, %reg1	
	movq -80(%rbp), %reg0	

8
	movq %r13, %reg1	
	addl %edi, %reg3	

8
.Main.main_1:	
	movq 0(%reg0), %rax	

8
	movq -96(%rbp), %reg1	
	addl %reg2, %eax	

8
	addl %edi, %reg1	
	movq %reg2, %r13	

8
	movq 16(%rbx), %rdx	
	movq 0(%rdx), %reg2	

8
	cmpl $0, -16(%rbp)	
	movq -16(%rbp), %reg1	

8
	setl %sil	
	movq %reg1, %rdi	

8
	movq %r13, %reg1	
	cmpl %edi, %eax	

8
	movq $115, %rsi	
	movq $.string2_l, %rdi	

8
	movq -56(%rbp), %reg1	
	addl %reg2, %reg3	

8
	.string "Bar"	
.string1:	

8
	addl %reg0, %reg1	
	movq -80(%rbp), %reg3	

8
	imull %esi	
	addl %eax, %edi	

8
	cmpl $0, %reg0	
	setle %al	

8
	cmpl $0, %eax	
	setle %al	

8
	movq %reg0, %reg1	
	movq -112(%rbp), %reg3	

8
	addl %reg0, %edi	
	movq $12, %rsi	

8
	idivl %reg0	
	movq %rax, %r12	

8
	movq %reg0, %reg1	
	cmpl $0, %reg1d	

8
	testq $1, %reg0	
	je .Main.main_14	

8
	addl %edi, %reg1	
	movq %rax, %r13	

8
	movq %reg0, %rax	
	addl %esi, %reg3	

8
	movq %reg0, 16(%rbx)	
	movq $0, %reg0	

8
	movq 16(%reg0), %rax	
	sete %al	

8
	movq 0(%reg0), %rax	
	movq 104(%rax), %rax	

8
	movq %rax, %reg1	
	call String.new	

8
	movq -96(%rbp), %reg1	
	cmpl %reg2, %eax	

8
	jmp .Main.main_14	
.Main.main_13:	

8
	addl %edi, %eax	
	movq %reg2, %r13	

8
	movq -120(%rbp), %reg1	
	addl %reg2, %reg3	

8
	addl %eax, %reg1	
	movq $12, %rcx	

8
	movq -88(%rbp), %reg1	
	cmpl %reg2, %eax	

8
	movq $.string8, %reg0	
	movq 0(%reg1), %rax	

8
	movq $Foo_vtable, 0(%rax)	
	leave	

8
	idivl %reg0d	
	movq $12, %reg0	

8
	movq %r13, %reg1	
	imull %reg2	

8
	movq %reg0, %rax	
	movq %r12, %reg3	

8
	movq %rax, %rdi	
	movq $0, %rax	

8
	call *%rax	
	popq %r13	

8
	movq $Main_vtable, 0(%reg0)	
	movq %reg0, %reg1	

8
	movq $Foo_vtable, 0(%reg0)	
	movq $0, %rdi	

8
Main_vtable:	
	.quad .string1	

8
	imull %ecx	
	addl %reg1, %reg2	

8
	movq %reg0, 8(%rax)	
	movq %rax, %reg2	

8
	call String.new	
	movq %reg0, %reg1	

8
	movq %r14, %reg1	
	addl %edi, %reg3	

8
	call *%rax	
	cmpl $0, %r12d	

8
	movq %r13, %reg1	
	addl %edi, %eax	

8
	movq $Foo_vtable, 0(%rax)	
	movq $0, %rdi	

8
	imull %reg0	
	addl %reg1, %esi	

8
	movq $0, %rax	
	popq %reg1	

8
	.string "Main"	
.string1:	

8
.Main.main_1:	
	cdq	

8
	movq %rdi, %reg1	
	movq %reg2, %rbx	

8
	movq $Foo_vtable, 0(%reg0)	
	leave	

8
	call *%r13	
	cmpl $0, %reg1d	

8
	.quad 0	
	.quad Foo.new	

8
	cmpl $0, %eax	
	setle %reg1	

8
	imull %ecx	
	addl %reg1, %esi	

8
	movq $1, %reg0	
	movq %reg1, %rcx	

8
	movq %reg0, 32(%reg1)	
	movq $0, %reg0	

8
	negl %eax	
	movq $12, %rcx	

8
	movq $4, %reg0	
	movq 0(%reg1), %reg2	

8
	movq -168(%rbp), %rax	
	movq %reg2, %rdi	

8
	movq $.string6, %r15	
	movq %reg1, %reg2	

8
	movq -16(%rbp), %reg1	
	movq 0(%reg1), %reg2	

8
	movq %r13, %reg1	
	movq %r12, %reg3	

8
	addl %eax, %edi	
	movq $12, %rsi	

8
	setl %sil	
	movq %rsi, %rdi	

8
	movq 72(%r12), %r12	
	movq -8(%rbp), %rdi	

8
	movq 16(%rbx), %rax	
	sete %reg2	

8
	movq 16(%rbx), %rax	
	sete %al	

8
	je .Main.main_1	
	movq $3, %rsi	

8
	movq %reg0, %rax	
	subl %reg2, %esi	

8
	addl %reg0, %edi	
	movq $12, %reg2	

8
	movq %rax, %rdi	
	call String.length	

8
	movq %reg0, %rax	
	addl %esi, %eax	

8
	addl %eax, %reg1	
	movq $12, %rsi	

8
	addl %eax, %edi	
	movq $12, %reg2	

8
	call *%r12	
	movq $1, %rax	

8
	movq %reg0, %reg1	
	movq -96(%rbp), %reg0	

8
	movq $.string6, %reg0	
	movq 0(%reg1), %r12	

8
	movq %r14, %reg1	
	addl %edi, %eax	

8
	movq %rax, %reg1	
	movq -40(%rbp), %rax	

8
	addl %reg0, %reg1	
	movq $12, %rsi	

8
	movq $0, %rax	
	movq %rax, 24(%rbx)	

8
	movq 72(%r12), %r12	
	movq -8(%rbp), %reg2	

8
	movq %rsi, %rax	
	movq %reg2, %rax	

8
	movq %rax, 16(%reg1)	
	movq $0, %rax	

8
.Main.main_2:	
	movq %reg0, %reg1	

8
	addl %reg0, %reg1	
	movq %rax, %r13	

8
	movq %reg0, %rax	
	movq -152(%rbp), %reg3	

8
	imull %ecx	
	addl %eax, %esi	

8
	movq $.string6, %r15	
	movq %reg1, %rdx	

8
Bar_vtable:	
	.quad .string1	

8
	movq 16(%rbx), %rdx	
	movq 0(%rdx), %rax	

8
	addl %r8d, %reg1	
	movq %reg2, %r8	

8
	imull %esi	
	addl %reg1, %reg2	

8
	movq -16(%rbp), %reg1	
	cmpl %reg2, %eax	

8
	pushq %reg0	
	movq $16, %reg1	

8
	addl %reg0, %eax	
	movq %rax, %r13	

8
	negl %edi	
	movq %reg1, %reg2	

8
.Main.main_9:	
	movq 0(%reg0), %reg1	

8
.string1_l:	
	.string "Bar"	

8
	movq 16(%reg0), %reg1	
	call *%reg2	

8
	setl %reg0l	
	movq %rsi, %reg2	

8
	je .Main.main_1	
	movq $3, %reg0	

8
	imull %reg0	
	addl %eax, %esi	

8
	movq $3, %r12	
	movq 0(%reg1), %reg2	

8
.string1_l:	
	.string "Main"	

8
	movq %r13, %rax	
	movq %reg2, %reg3	

8
	addl %r8d, %eax	
	movq %reg2, %r8	

8
	movq %reg0, %reg1	
	movq %reg1, %r12	

7
	movq %reg0, %rax	
	subl %ecx, %eax	

7
	movq %reg0, %r8	
	addl %r8d, %eax	

7
	idivl %esi	
	subl %eax, %edi	

7
	subl %eax, %edi	
	movq $12, %reg2	

7
	addl %reg0, %eax	
	movq -80(%rbp), %reg3	

7
	movq 8(%reg0), %rdi	
	call *%reg2	

7
	movq %r8, %rcx	
	addl %reg2, %reg3	

7
	call out_error	
.Main.main_13:	

7
	movq %r15, %reg1	
	cmpl %reg2, %reg3	

7
	movq $4, %reg0	
	movq %reg1, %rcx	

7
	movq %rax, %rsi	
	movq %reg2, %rdx	

7
	movq %reg0, %rdi	
	cmpl %reg2, %edi	

7
	movq %rdi, %rbx	
	movq $1, %rax	

7
	movq %rax, %r13	
	movq %reg2, %reg3	

7
	addl %reg0, %reg1d	
	movq %reg1, %reg2	

7
	movq %reg0, %rax	
	movq -136(%rbp), %reg3	

7
	movq 80(%reg0), %reg0	
	movq %r13, %rdi	

7
	subl %reg0, %edi	
	movq $12, %rsi	

7
	movq %r8, %reg1	
	addl %reg2, %eax	

7
	movq 0(%r13), %reg1	
	movq 56(%reg1), %reg1	

7
	call *%reg0	
	jmp .Main.main_3	

7
	movq %rsp, %reg1	
	movq $0, %rax	

7
	subl %reg0, %edi	
	movq $12, %reg2	

7
	movq 56(%rax), %rax	
	movq %r12, %rdi	

7
	negl %ecx	
	imull %ecx	

7
	movq %reg0, %r8	
	negl %r8d	

7
	call Cons.new	
	cmpl $0, %reg0	

7
	movq $.string6, %rax	
	movq 0(%reg1), %r12	

7
	movq -16(%rbp), %rdi	
	cmpl %edi, %eax	

7
	movq $0, %reg0	
	movq 0(%rax), %r12	

7
	movq $0, %rbx	
	movq 0(%reg1), %r12	

7
	movq -152(%rbp), %rax	
	movq %reg2, %rdi	

7
	movq %rbx, %rsi	
	movq %reg2, %reg3	

7
.string2_l:	
	.string "Foo"	

7
.Main.main_4:	
	movq 0(%reg0), %reg1	

7
	movq %r8, %reg1	
	addl %ecx, %eax	

7
	movq %r12, %reg1	
	movq %reg2, %rdi	

7
	movq $316, %rsi	
	movq $.string2_l, %rdi	

7
	movq %reg0, %rbp	
	movq $0, %rax	

7
	movq -16(%rbp), %reg1	
	cmpl %edi, %eax	

7
	movq -88(%rbp), %reg1	
	imull %reg2	

7
	movq -88(%rbp), %reg1	
	negl %reg2	

7
	movq $12, %rdi	
	movq %reg1, %rax	

7
	movq %r13, %rsi	
	movq %rax, %rdx	

7
	call *%r12	
.Main.main_2:	

7
	movq %r14, %rax	
	addl %reg2, %reg3	

7
	.quad .string9_l	
	.quad 1	

7
	movq -56(%rbp), %reg1	
	cmpl %edi, %reg3	

7
	movq %reg0, %rax	
	subl %ecx, %reg3	

7
	movq 80(%reg0), %reg0	
	movq %r13, %reg2	

7
	movq %rax, %reg1	
	negl %edi	

7
	addl %eax, %reg1d	
	movq %reg1, %rax	

7
	movq %reg0, %rdi	
	call *%r13	

7
	call *%reg0	
	jmp .Main.main_14	

7
	call *%rax	
	cmpl $0, %ebx	

7
	call out_error	
.Main.main_14:	

7
	movq -128(%rbp), %reg1	
	negl %reg2	

7
	call *%reg0	
	jmp .Main.main_6	

7
	movq %rdi, %reg1	
	movq $1, %r12	

7
	movq %r13, %rdx	
	call String.substr	

7
	movq 24(%rax), %rax	
	movq %reg1, %rdi	

7
	movq %reg0, %reg1	
	movq -56(%rbp), %rax	

7
	movq 8(%reg0), %reg1	
	call *%rax	

7
	movq -152(%rbp), %reg1	
	movq %reg2, %rdi	

7
	testq $1, %reg0	
	je .Main.main_11	

7
	movq %r13, %reg1	
	addl %eax, %reg3	

7
	movq 24(%rax), %rax	
	movq %reg1, %reg2	

7
.Main.main_3:	
	movq 0(%reg0), %rax	

7
	addl %eax, %reg1d	
	movq %reg1, %reg2	

7
	movq %rax, %rdi	
	negl %reg2	

7
	movq $.string6, %rax	
	movq 0(%reg1), %reg2	

7
	movq 56(%reg0), %reg0	
	movq %r13, %reg2	

7
	movq %reg0, %reg1	
	movq -136(%rbp), %rsi	

7
	movq %rax, %reg1	
	call String.substr	

7
	movq %rsp, %reg1	
	movq $0, %reg2	

7
	movq %reg0, %reg1	
	movq %r14, %rdx	

7
	movq %rdi, %reg1	
	movq 0(%reg1), %rbx	

7
	negl %esi	
	movq %reg1, %rcx	

7
	idivl %esi	
	subl %reg1, %reg2	

7
	idivl %esi	
	addl %reg1, %edi	

7
	movq %reg0, %reg1	
	movq -136(%rbp), %reg0	

7
	negl %eax	
	subl %eax, %reg1	

7
	movq $.string6, %rax	
	movq 0(%rbx), %r12	

7
	movq $.string6, %reg0	
	movq 0(%rbx), %r12	

7
	cdq	
	idivl %r11d	

7
	movq 120(%reg0), %reg0	
	movq %reg1, %reg2	

7
	call *%reg0	
	movq $.string8, %reg1	

7
	movq $12, %reg0	
	movq -112(%rbp), %reg2	

7
	movq %reg0, %rsi	
	movq %rax, %rdx	

7
	.size Foo.new, .-Foo.new	
	.globl Bar.new	

7
	movq %reg0, %rax	
	movq 0(%rax), %reg2	

7
	movq %reg0, %rax	
	movq %r8, %reg3	

7
	movq 0(%reg0), %rbx	
	movq 48(%rbx), %rbx	

7
	movq -16(%rbp), %rdi	
	cmpl %edi, %reg3	

7
	movq 0(%reg0), %r14	
	movq 48(%r14), %r14	

7
	movq %r8, %rcx	
	addl %ecx, %eax	

7
	movq %reg0, %reg1	
	movq $1, %r12	

7
	movq %reg0, %reg1	
	movq -48(%rbp), %reg0	

7
	idivl %ecx	
	addl %eax, %esi	

7
	movq %reg0, %r9	
	imull %r9d	

7
	movq %r12, %rsi	
	movq %r13, %rdx	

7
	call *%reg0	
	movq $12, %reg1	

7
	movq %reg0, %rax	
	movq -16(%rbp), %rdi	

7
	movq -64(%rbp), %reg1	
	movq %reg2, %reg3	

7
	movq %reg0, %r14	
	pushq %reg2	

7
.Main.main_2:	
	movq $0, %reg0	

7
	movq %r14, %rdi	
	movq %r13, %rsi	

7
	movq %r12, %reg1	
	cmpl %eax, %edi	

7
	movq %reg0, %r13	
	movq -8(%rbp), %reg3	

7
	movq %reg0, %rbx	
	movq $1, %rax	

7
	idivl %reg0	
	addl %reg1, %esi	

7
	movq 32(%reg0), %reg0	
	movq %reg1, %rdi	

7
	movq $12, %reg0	
	movq -24(%rbp), %reg2	

7
	movq 0(%r13), %reg1	
	movq 80(%reg1), %reg1	

7
	movq 0(%reg0), %reg1	
	movq 136(%reg1), %reg1	

7
	movq 0(%rax), %r12	
	movq 72(%r12), %r12	

7
	movq $0, %reg0	
	cmpl $0, %reg1	

7
	movq $0, %rbx	
	movq 0(%reg1), %reg2	

7
	movq -144(%rbp), %rax	
	addl %reg2, %reg3	

7
	addl %reg0, %reg1	
	movq %rbx, %reg3	

7
	movq $1, %reg0	
	cmpl %reg1, %edi	

7
	movq 32(%reg0), %reg0	
	movq %reg1, %reg2	

7
	movq $0, %rbx	
	movq 0(%rax), %reg2	

7
	movq -24(%rbp), %reg1	
	cmpl %reg2, %reg3	

7
	negl %eax	
	movq $12, %r8	

7
	movq %rax, %reg1	
	negl %reg1d	

7
	movq 0(%reg0), %reg1	
	movq 32(%reg1), %reg1	

7
	movq %r14, %rdi	
	movq %r13, %reg3	

7
	call *%r13	
	movq %reg1, %reg2	

7
	movq %r8, %reg1	
	addl %ecx, %reg3	

7
	movq %rdi, %rax	
	movq 0(%rax), %reg2	

7
	movq %reg0, %rax	
	addl %eax, %ecx	

7
	movq %reg0, %reg1	
	movq %r8, %r9	

7
	movq 0(%r13), %rax	
	movq 80(%rax), %rax	

7
	movq -88(%rbp), %reg1	
	addl %reg2, %reg3	

7
	call String.substr	
	movq 0(%reg0), %reg1	

7
	testq $1, %rax	
	je .Main.main_6	

7
	movq $0, %r10	
	cmpl %r10d, %r9d	

7
	.quad 50	
.string1_l:	

7
	movq -120(%rbp), %reg1	
	movq %reg2, %reg3	

7
	movq %reg0, %rax	
	movq %r8, %r9	

7
	movq $Main_vtable, 0(%reg0)	
	movq %reg0, %rbx	

7
	movq %reg0, %rsi	
	movq %rax, %reg3	

7
	movq -16(%rbp), %reg1	
	imull %reg2	

7
	movq %reg0, %rax	
	movq -56(%rbp), %reg3	

7
	idivl %esi	
	movq %rax, %r12	

7
	subl %eax, %reg1	
	movq $12, %rsi	

7
	movq $0, %rax	
	leave	

7
	movq $Main_vtable, 0(%rax)	
	movq %rax, %rbx	

7
	movq %reg0, %reg1	
	movq %rax, %rdx	

7
	movq 16(%rax), %rax	
	leave	

7
	movq %reg0, %reg1	
	movq -40(%rbp), %rsi	

7
	movq %rax, %rdx	
	call String.substr	

7
	movq %rax, %r13	
	movq -8(%rbp), %reg3	

7
Foo_vtable:	
	.quad .string2	

7
	movq %reg0, %r13	
	movq %reg2, %rdx	

7
	movq %reg0, %reg1	
	movq -104(%rbp), %reg0	

7
	movq $.string6, %rax	
	movq 0(%rbx), %reg2	

7
	.quad 0	
.string0_l:	

7
	movq $.string8, %r12	
	movq 0(%rbx), %rax	

7
	idivl %r8d	
	movq $12, %reg1	

7
.Main.main_2:	
	movq 0(%reg0), %rax	

7
	movq %reg0, 8(%rax)	
	movq $1, %reg0	

7
	movq 0(%r12), %rax	
	movq 56(%rax), %rax	

7
	movq %rdi, %reg1	
	movq $2, %reg2	

7
	idivl %r9d	
	movq %reg1, %r8	

7
	movq %reg0, %reg1	
	movq 16(%reg1), %reg1	

7
	.quad .string2_l	
	.quad 3	

7
	idivl %ecx	
	movq $12, %rcx	

7
	movq %reg0, %rax	
	movq -104(%rbp), %reg3	

7
	movq %reg0, %r8	
	addl %r8d, %reg2	

7
	jmp .Main.main_6	
.Main.main_5:	

7
	movq $2, %reg0	
	movq %reg0, %reg1	

7
	movq %rsp, %rbp	
	movq $0, %reg2	

7
	movq -72(%rbp), %rax	
	movq %reg2, %reg3	

7
	movq -40(%rbp), %reg1	
	cmpl %reg2, %eax	

7
	movq %reg0, %rax	
	movq -24(%rbp), %reg3	

7
	movq %reg0, %reg1	
	addl %eax, %ecx	

7
	movq %r13, %reg1	
	movq %reg2, %rdi	

7
	movq $.string8, %r12	
	movq 0(%reg1), %rax	

7
	movq 72(%r12), %r12	
	movq %rax, %reg2	

7
	call *%r13	
	cmpl $0, %r12d	

7
	movq %rdi, %rax	
	movq 16(%rax), %rax	

7
	movq -16(%rbp), %rdi	
	cmpl %reg2, %reg3	

7
	movq $1, %reg0	
	movq %rsi, %rcx	

7
	idivl %esi	
	addl %eax, %reg2	

7
	movq %reg0, %reg1	
	movq -16(%rbp), %rdi	

7
	movq %r12, %reg1	
	cmpl %eax, %reg3	

7
	movq %reg0, %rdx	
	call *%r13	

7
	idivl %r8d	
	movq $12, %r8	

7
	movq %r13, %rax	
	movq %reg2, %rdi	

7
	movq -56(%rbp), %reg1	
	cmpl %edi, %eax	

7
	movq 80(%rax), %rax	
	movq %r13, %reg2	

7
	movq %reg0, %reg1	
	addl %reg2, %ecx	

7
	movq %r15, %rax	
	movq %reg2, %reg3	

7
	.quad 0	
.string1_l:	

7
	movq %r8, %rcx	
	addl %reg2, %eax	

7
	idivl %esi	
	addl %reg1, %reg2	

7
	movq %rsp, %rbp	
	movq $0, %rax	

7
	idivl %reg0	
	movq $12, %rcx	

7
	movq 56(%reg0), %reg0	
	movq %r13, %rdi	

7
	movq -168(%rbp), %reg1	
	negl %reg2	

7
	call *%r12	
	movq 0(%reg1), %r12	

7
	movq %reg0, %reg1	
	movq $0, %r9	

7
	movq $316, %reg0	
	movq $.string2_l, %reg1	

7
	addl %reg0, %reg1	
	movq -96(%rbp), %reg3	

7
	movq -16(%rbp), %rdi	
	movq %reg2, %reg3	

7
	movq $12, %rdi	
	movq %reg1, %reg2	

7
	.quad 7	
.string6_l:	

7
	movq $3, %reg0	
	movq %reg1, %rcx	

7
	movq %rax, %r13	
	movq %reg2, %rdx	

7
	movq $0, %rbx	
	movq 0(%rax), %r12	

7
	call String.substr	
	movq 0(%rbx), %reg1	

7
	movq %rax, %reg1	
	movq -144(%rbp), %rax	

7
	movq %reg0, %rax	
	imull %edi	

7
	movq -104(%rbp), %reg1	
	cmpl %reg2, %eax	

7
	.quad .string2	
	.quad 1	

7
	idivl %reg0	
	addl %eax, %esi	

7
	testq $1, %reg0	
	je .Main.main_15	

7
	movq %r14, %reg1	
	movq %r13, %rsi	

7
	movq %reg0, %rax	
	addl %reg2, %ecx	

7
	movq %reg0, %rbp	
	movq $0, %reg2	

7
	addl %reg0, %reg1d	
	movq %reg1, %rax	

7
	call Cons.new	
	cmpl $0, %eax	

7
	movq %rdi, %rax	
	movq 0(%rax), %rbx	

7
	movq %reg0, %reg1	
	movq %r8, %reg3	

7
	movq %rsi, %reg1	
	movq %reg1, %reg2	

7
	negl %edi	
	movq %reg1, %rax	

7
	movq -16(%rbp), %reg1	
	subl %reg2, %reg3	

7
	movq %r8, %reg1	
	addl %reg2, %reg3	

7
	movq $316, %reg0	
	movq $.string2_l, %rdi	

7
	movq %rax, %rdi	
	cmpl $0, %reg2	

7
	movq %rax, %r13	
	movq -8(%rbp), %rdx	

7
	subl %eax, %edi	
	movq $12, %rsi	

7
	movq %reg0, %rbx	
	movq %reg2, %rax	

7
	movq $.string8, %r12	
	movq 0(%rbx), %reg2	

7
	movq %reg0, %reg1	
	movq $2, %rax	

7
	movq 8(%rbx), %reg1	
	call *%rax	

7
	movq $6, %reg0	
	movq 0(%reg1), %reg2	

7
	movq %r13, %reg1	
	movq %rax, %rdx	

7
	movq %rdi, 8(%rax)	
	movq $1, %rdi	

7
	movq %r13, %rsi	
	movq %rax, %reg3	

7
	movq -16(%rbp), %rdi	
	cmpl %reg2, %eax	

7
	idivl %edi	
	movq %reg1, %reg2	

7
	movq 120(%reg0), %reg0	
	movq %reg1, %rdi	

7
	idivl %r8d	
	movq $12, %rcx	

7
	movq $316, %rsi	
	movq $.string2_l, %reg1	

7
	movq 48(%r14), %r14	
	movq %reg1, %reg2	

7
	movq $1, %reg0	
	movq %rsi, %reg2	

7
	movq %reg0, %r13	
	movq -8(%rbp), %rdx	

7
	movq 72(%r12), %r12	
	movq %rax, %rdi	

7
	movq %rax, %reg1	
	movq -152(%rbp), %rax	

7
	movq %reg0, %rax	
	movq $0, %r9	

7
	movq %reg0, %reg1	
	movq $3, %reg0	

7
	movq 16(%reg0), %reg0	
	leave	

7
	call *%reg0	
.Main.main_11:	

7
	idivl %reg0d	
	movq $12, %rcx	

7
	movq %reg0, %reg1	
	movq -64(%rbp), %rsi	

7
	movq %reg0, %rax	
	movq %r12, %reg0	

7
	movq %r12, %reg1	
	imull %reg2	

7
	movq %reg0, %rsi	
	movq %r14, %rdx	

7
	movq %rax, %rdi	
	call *%r13	

7
	movq %reg0, %rax	
	movq %r14, %reg3	

7
	movq -112(%rbp), %reg1	
	addl %reg2, %reg3	

7
	movq 48(%r14), %r14	
	movq %reg1, %rdi	

7
	movq %reg0, %rax	
	movq -32(%rbp), %reg3	

7
	idivl %ecx	
	addl %reg1, %esi	

7
	.string "Foo"	
.string2:	

7
	movq %reg0, %rax	
	movq 0(%rax), %rbx	

7
	movq %rdi, 8(%reg1)	
	movq $1, %rdi	

7
	movq %r12, %reg1	
	cmpl %reg2, %edi	

7
	movq $12, %reg0	
	movq -24(%rbp), %rax	

7
.Main.main_1:	
	movq $0, %rax	

7
	movq %reg0, %r12	
	cmpl $0, %r12d	

7
	movq %rax, %reg1	
	movq -120(%rbp), %rax	

7
	movq -16(%rbp), %reg1	
	cmpl %edi, %reg3	

7
	movq %r12, %rax	
	movq %reg2, %rdi	

7
	movq %r12, %rsi	
	movq %r13, %reg3	

7
	movq %reg0, %reg1	
	movq -184(%rbp), %reg0	

7
	movq %rax, %reg1	
	movq -80(%rbp), %rax	

7
	call *%r12	
	movq 0(%rbx), %r12	

7
	idivl %esi	
	subl %eax, %reg2	

7
	idivl %esi	
	movq %reg1, %r12	

7
.Main.main_1:	
	movq 0(%rax), %r12	

7
	movq 80(%rax), %rax	
	movq %r13, %rdi	

7
	movq %r8, %rcx	
	addl %ecx, %reg3	

7
	movq $0, %reg0	
	leave	

7
	movq %r13, %reg1	
	call String.substr	

7
	movq $2, %reg0	
	movq %reg1, %rcx	

7
	movq -40(%rbp), %reg1	
	addl %reg2, %reg3	

7
	call *%reg0	
.Main.main_14:	

7
.Main.main_3:	
	movq $0, %reg0	

7
	movq -16(%rbp), %rdi	
	addl %reg2, %reg3	

7
	movq 56(%rax), %rax	
	movq %r12, %reg2	

7
	movq $12, %reg0	
	movq -112(%rbp), %rax	

7
	idivl %esi	
	addl %eax, %edi	

7
	movq -56(%rbp), %reg1	
	addl %reg2, %eax	

7
	movq $1, %reg0	
	movq %r12, %rdi	

7
	call *%r12	
.Main.main_4:	

7
	movq %rax, %rdi	
	negl %edi	

7
	movq %rdi, %reg1	
	movq 16(%reg1), %reg1	

7
	movq %r12, %reg1	
	movq %r13, %rdx	

7
	idivl %esi	
	subl %reg1, %edi	

7
	movq %r14, %reg1	
	subl %reg2, %reg3	

7
	movq %reg0, %r14	
	pushq %rax	

7
	movq %reg0, %rax	
	movq 16(%rax), %rax	

7
	cmpl %r10d, %r9d	
	sete %r10b	

7
	movq %rax, %reg1	
	movq -128(%rbp), %rax	

7
	idivl %r9d	
	movq %reg1, %reg2	

7
	idivl %reg0d	
	movq %reg1, %r8	

7
	movq 0(%reg0), %rax	
	movq 24(%rax), %rax	

7
	movq %rax, %r14	
	movq %reg2, %reg3	

6
	movq $5, %reg0	
	movq 0(%rbx), %reg2	

6
	addl %reg0, %eax	
	movq -80(%rbp), %rdi	

6
	movq $5, %reg0	
	cmpl %reg1, %esi	

6
	movq %reg0, %reg1	
	movq -56(%rbp), %rdi	

6
	movq $.string6, %rax	
	movq %rax, %reg1	

6
	negl %esi	
	movq %rsi, %reg2	

6
	addl %r10d, %eax	
	movq %reg2, %r10	

6
	movq $2, %rcx	
	movq %reg1, %reg2	

6
	movq $2, %reg0	
	movq %rsi, %reg2	

6
	movq $3, %rcx	
	movq %reg1, %rsi	

6
	movq -32(%rbp), %rax	
	subl %reg2, %reg3	

6
	movq $5, %rcx	
	cmpl %reg1, %esi	

6
	movq -80(%rbp), %reg1	
	cmpl %reg2, %reg3	

6
	movq -96(%rbp), %rax	
	movq %reg2, %reg3	

6
	movq $1, %reg0	
	movq %rdi, %reg2	

6
	movq -88(%rbp), %rdi	
	cmpl %edi, %reg3	

6
	movq $.string9, %rax	
	movq 0(%reg1), %reg2	

6
	movq 16(%reg0), %reg1	
	call *%rax	

6
	movq $10, %reg0	
	movq $.string5_l, %rdi	

6
	movq %reg0, %rax	
	movq $12, %reg0	

6
	movq $1, %rcx	
	movq %rdi, %reg2	

6
	movq %r12, %reg1	
	movq %r14, %reg3	

6
	movq 48(%rbx), %rbx	
	movq %rax, %rdi	

6
	movq $3, %r8	
	movq %reg1, %rcx	

6
	movq %rcx, %reg1	
	imull %esi	

6
	movq -128(%rbp), %rax	
	movq %reg2, %rsi	

6
	movq 96(%rax), %rax	
	movq %reg1, %rdi	

6
	movq %r12, %reg1	
	sete %reg2l	

6
	addl %reg0, %reg1	
	movq -128(%rbp), %reg3	

6
	movq -48(%rbp), %reg1	
	cmpl %reg2, %eax	

6
	movq -16(%rbp), %reg1	
	movq -32(%rbp), %reg3	

6
	movq %r13, %reg1	
	addl %eax, %edi	

6
	addl %r10d, %reg1	
	movq %rax, %r10	

6
	movq %r12, %r13	
	movq %rbx, %r14	

6
	movq -96(%rbp), %reg1	
	addl %edi, %reg3	

6
	addl %edi, %reg1	
	movq -80(%rbp), %rdi	

6
	movq -80(%rbp), %rax	
	addl %reg2, %reg3	

6
	movq -48(%rbp), %rax	
	movq %reg2, %rdi	

6
.Main.main_2:	
	cdq	

6
	movq -48(%rbp), %reg1	
	movq %reg2, %rdi	

6
	movq -8(%rbp), %rdi	
	movq %r14, %rsi	

6
	movq $.string9, %reg0	
	movq %reg1, %reg2	

6
	call *%reg0	
	movq $12, %rdi	

6
Foo.getX:	
	pushq %rbp	

6
	addl %edi, %eax	
	movq %reg2, %r14	

6
	pushq %reg0	
	movq %r14, %reg2	

6
	popq %rax	
	cmpl $0, %r12d	

6
	movq -80(%rbp), %reg1	
	subl %reg2, %eax	

6
	movq %reg0, %reg1	
	pushq %reg0	

6
	addl %r10d, %eax	
	movq %rax, %r10	

6
	movq 0(%r12), %reg1	
	movq 48(%reg1), %reg1	

6
	call out_error	
.Main.main_11:	

6
	movq $12, %reg0	
	movq -120(%rbp), %reg2	

6
	call *%r13	
	movq %reg1, %r13	

6
	addl %edi, %eax	
	movq -80(%rbp), %rdi	

6
	movq 56(%r12), %r12	
	movq %rbx, %reg2	

6
	movq %rax, %reg1	
	pushq %rax	

6
	movq -48(%rbp), %rax	
	cmpl %reg2, %reg3	

6
	movq 48(%r12), %r12	
	movq %reg1, %reg2	

6
	movq $.string6, %reg0	
	movq %reg0, %rdi	

6
	movq 0(%reg0), %rbx	
	movq 88(%rbx), %rbx	

6
	movq %reg0, %reg1	
	movq $.string6, %reg2	

6
	testq $1, %rax	
	je .Main.main_7	

6
	movq -136(%rbp), %reg1	
	subl %reg2, %reg3	

6
	movq $31, %rsi	
	movq $.string5_l, %rdi	

6
	movq $1, %r8	
	movq %reg1, %rcx	

6
	idivl %reg0d	
	subl %eax, %reg2	

6
	movq $5, %rcx	
	cmpl %ecx, %esi	

6
	movq $4, %rcx	
	movq %reg1, %rsi	

6
	movq 152(%reg0), %reg0	
	movq %rax, %reg2	

6
	movq %reg0, %reg1	
	movq $12, %r8	

6
	cmpl $0, %r14d	
	setl %r14b	

6
	.globl Foo.getX	
	.type Foo.getX, @function	

6
	movq -40(%rbp), %rdi	
	addl %reg2, %reg3	

6
	movq %reg0, %reg1	
	movq %rdx, %reg0	

6
	movq $4, %reg0	
	movq %rdi, %rsi	

6
	movq $3, %reg0	
	movq %rsi, %rcx	

6
	movq %reg0, %r12	
	movq 0(%r12), %reg0	

6
	movq %reg0, %reg1	
	movq %r12, %rdi	

6
	movq 0(%rax), %reg1	
	movq 152(%reg1), %reg1	

6
	movq %rax, 24(%rbx)	
	movq $0, %rax	

6
	movq $5, %rsi	
	cmpl %esi, %edi	

6
	movq -56(%rbp), %rdi	
	cmpl %edi, %eax	

6
	movq $1, %r8	
	movq %reg1, %reg2	

6
	movq $0, %reg0	
	movq %reg1, %rdi	

6
	movq -32(%rbp), %reg1	
	addl %reg2, %reg3	

6
	movq 56(%r12), %r12	
	movq %rbx, %rdi	

6
	addl %edi, %reg1	
	movq %reg2, %r14	

6
	movq %rax, %reg1	
	movq -168(%rbp), %rax	

6
	movq -56(%rbp), %rdi	
	cmpl %reg2, %reg3	

6
	movq %rax, %r14	
	movq %reg2, %rdx	

6
	call *%reg0	
	movq $2147483647, %reg0	

6
	movq $2147483647, %reg0	
	negl %eax	

6
	call *%reg0	
.Main.main_7:	

6
	movq %reg0, %rbx	
	pushq %reg2	

6
	movq %rax, -112(%rbp)	
	movq %reg2, %reg3	

6
	movq %rbx, %reg1	
	addl %reg2, %reg3	

6
	movq $1, %reg0	
	movq %reg0, 8(%rax)	

6
	idivl %ecx	
	addl %reg1, %edi	

6
	movq $3, %r8	
	movq %rsi, %rcx	

6
	movq 48(%r12), %r12	
	movq %rax, %rdi	

6
	movq 16(%rbx), %reg1	
	call *%rax	

6
	movq $10, %rsi	
	movq $.string5_l, %rdi	

6
	movq %reg0, -112(%rbp)	
	movq -8(%rbp), %reg3	

6
	call String.cmp	
	movq %reg0, %rbx	

6
	movq %rax, %rsi	
	movq -128(%rbp), %rax	

6
	movq $3, %r8	
	movq %reg1, %reg2	

6
	movq $.string9, %rax	
	movq 0(%rbx), %reg2	

6
	movq 96(%rax), %rax	
	movq %reg1, %reg2	

6
	movq $5, %rsi	
	cmpl %reg1, %edi	

6
	movq $0, %rax	
	movq %rax, 32(%rbx)	

6
	movq $142, %rsi	
	movq $.string2_l, %reg1	

6
	movq %rbx, %r14	
	pushq %reg2	

6
	addl %r10d, %reg1	
	movq %reg2, %r10	

6
	movq $3, %reg0	
	movq $.string3_l, %rdi	

6
	movq %rax, 8(%rdi)	
	movq %rdi, %rax	

6
	imull %reg0	
	movq -184(%rbp), %reg2	

6
	movq -152(%rbp), %reg1	
	cmpl %reg2, %reg3	

6
.Main.main_11:	
	jmp .Main.main_12	

6
	movq 0(%rax), %r12	
	movq 48(%r12), %r12	

6
	movq %r12, 8(%reg1)	
	movq %reg1, %reg2	

6
	movq $4, %rcx	
	movq %rdi, %rsi	

6
	movq %rdi, %rax	
	movq 8(%rax), %reg2	

6
	movq 152(%reg0), %reg0	
	movq %reg1, %rdi	

6
	popq %reg0	
	cmpl $0, %r12d	

6
	movq %r14, %reg1	
	cmpl %reg2, %eax	

6
	movq -48(%rbp), %reg1	
	cmpl %eax, %reg3	

6
	movq $4, %reg0	
	movq %rsi, %reg2	

6
	movq %rax, %rdi	
	movq %r13, %rax	

6
	movq %rax, %rdi	
	movq -80(%rbp), %rax	

6
	cmpl %reg0d, %r10d	
	sete %reg0b	

6
	movq 0(%reg0), %reg1	
	movq 128(%reg1), %reg1	

6
	movq $1, %r8	
	movq %rsi, %reg2	

6
	call out_error	
.Main.main_12:	

6
	movq -32(%rbp), %reg1	
	imull %reg2	

6
	movq $1, %r8	
	movq %rsi, %rcx	

6
	movq %reg0, %reg1	
	movq -152(%rbp), %rsi	

6
	movq %reg0, %rax	
	movq %r13, %rdi	

6
	movq %reg0, %r14	
	movq %reg2, %rdx	

6
	.type Foo.getX, @function	
Foo.getX:	

6
	movq -128(%rbp), %reg1	
	addl %reg2, %reg3	

6
.Main.main_10:	
	movq $5, %reg0	

6
	idivl %edi	
	movq %rax, %reg2	

6
	movq %r13, %rax	
	subl %reg2, %reg3	

6
	call *%reg0	
	movq $.string8, %reg0	

6
	movq 88(%rbx), %rbx	
	movq %reg1, %reg2	

6
	movq %r14, %reg1	
	cmpl %edi, %reg3	

6
	movq %reg0, %r12	
	popq %reg0	

6
	call out_error	
.Main.main_10:	

6
	addl %r8d, %eax	
	movq %rax, %r8	

6
	movq $.string6, %r12	
	movq %reg1, %rdx	

6
	movq 0(%reg0), %rax	
	movq 96(%rax), %rax	

6
	movq %reg0, %rsi	
	movq %r12, %reg3	

6
	movq %rax, %r12	
	movq 0(%r12), %rax	

6
	movq %reg0, %rax	
	movq %rsi, %rbx	

6
.Main.main_4:	
	popq %r12	

6
	movq $.string9, %reg0	
	movq 0(%reg1), %r12	

6
	movq $4, %reg0	
	movq %rdi, %reg2	

6
	movq -88(%rbp), %rdi	
	cmpl %reg2, %reg3	

6
	movq %reg0, %rdi	
	movq -32(%rbp), %reg0	

6
	movq %rbx, %rsi	
	call String.cmp	

6
	movq $0, %reg0	
	movq %reg0, 32(%rbx)	

6
	negl %reg0	
	movq %rsi, %rcx	

6
	.quad .string0_l	
	.quad 3	

6
	idivl %r8d	
	addl %reg1, %reg2	

6
	movq %reg0, -112(%rbp)	
	movq %reg2, %reg3	

6
	movq $2, %reg0	
	cmpl %reg1, %edi	

6
	movq $1, %rdi	
	movq $2, %reg1	

6
	movq $2, %reg0	
	imull %reg1	

6
	movq %r12, %reg1	
	movq %reg2, %r13	

6
	movq $5, %rcx	
	cmpl %ecx, %reg2	

6
	movq $10, %rsi	
	movq $.string5_l, %reg1	

6
	movq %rdi, %rbx	
	movq $1, %r12	

6
	movq -128(%rbp), %reg1	
	imull %reg2	

6
	call Bool.new	
	movq %r12, 8(%rax)	

6
	movq %reg0, %r14	
	movq -8(%rbp), %reg3	

6
	movq %reg0, 8(%rdi)	
	movq %rdi, %reg0	

6
	movq $5, %reg0	
	cmpl %ecx, %reg2	

6
	movq $4, %reg0	
	imull %reg1	

6
	movq %r12, %reg1	
	movq %rbx, %r14	

6
	movq -16(%rbp), %rdi	
	movq %reg2, %rsi	

6
	movq %rbx, %reg1	
	call String.cmp	

6
	movq %r13, %rdi	
	addl %eax, %reg3	

6
	movq %r15, %rax	
	movq %reg2, %rdi	

6
	movq 96(%reg0), %reg0	
	movq %rbx, %reg2	

6
	movq $1, %rcx	
	movq %rdi, %rsi	

6
	call *%reg0	
	jmp .Main.main_11	

6
	movq 48(%r12), %r12	
	movq %reg1, %rdi	

6
	movq %reg0, %reg1	
	movq 0(%reg2), %r12	

6
	movq $142, %rsi	
	movq $.string2_l, %rdi	

6
	idivl %r9d	
	movq $12, %reg1	

6
	call *%rax	
.Main.main_4:	

6
	movq $4, %reg0	
	movq %rsi, %rcx	

6
	addl %edi, %eax	
	movq -80(%rbp), %reg3	

6
	movq -8(%rbp), %rdi	
	movq %r14, %reg3	

6
	movq %r14, %reg1	
	movq %rax, %reg3	

6
	movq %reg0, %rax	
	movq 8(%rax), %reg2	

6
	movq %reg0, %rsi	
	movq %r12, %rdx	

6
	movq %reg0, %rax	
	movq -160(%rbp), %reg3	

6
	cmpl $0, %r12d	
	movq %r12, %rdi	

6
	addl %reg0, %reg1	
	movq %rax, %r14	

6
	movq -88(%rbp), %reg1	
	cmpl %edi, %eax	

6
	movq $2, %r8	
	movq %reg1, %reg2	

6
	movq %reg0, %rbx	
	movq $1, %r12	

6
	idivl %reg0d	
	movq $12, %r8	

6
	movq 56(%rax), %rax	
	movq %r13, %rdi	

6
	movq $24, %reg0	
	call getmem	

6
	movq -88(%rbp), %reg1	
	cmpl %edi, %reg3	

6
	idivl %reg0d	
	subl %reg1, %reg2	

6
	movq -96(%rbp), %reg1	
	addl %edi, %eax	

6
	movq -120(%rbp), %rax	
	movq %reg2, %reg3	

6
	movq %reg0, %reg1	
	movq -24(%rbp), %rax	

6
	movq $4, %r8	
	movq %reg1, %rcx	

6
	ret	
	.size Foo.getX, .-Foo.getX	

6
	movq $2, %reg0	
	movq 0(%rbx), %reg2	

6
Foo.getX:	
	pushq %reg0	

6
	movq %reg0, %reg1	
	movq %reg1, %r13	

6
	addl %r8d, %reg1	
	movq %rax, %r8	

6
	movq $.string6, %r12	
	movq -8(%rbp), %rdx	

6
	movq $5, %rdi	
	movq %r12, %reg2	

6
	movq %reg0, 24(%rbx)	
	movq $0, %reg0	

6
	movq %rax, %reg1	
	movq -88(%rbp), %rax	

6
	movq %r13, %rax	
	addl %reg2, %reg3	

6
	movq $1, %reg0	
	cmpl %edi, %reg2	

6
	movq %r12, %reg1	
	subl %reg2, %reg3	

6
	movq %r12, %r13	
	movq %rbx, %reg3	

6
	call *%r12	
	movq 0(%rbx), %rax	

6
	cdq	
	idivl %r10d	

6
	movq 0(%reg0), %reg1	
	movq 112(%reg1), %reg1	

6
	movq $24, %rdi	
	call getmem	

6
	movq %reg0, %r13	
	movq %rbx, %r14	

6
	movq %reg0, %reg1	
	movq %rbx, %rdx	

6
	movq $2, %rdi	
	cmpl %reg1, %reg2	

6
	movq 96(%reg0), %reg0	
	movq %rbx, %rdi	

6
	movq $5, %rdi	
	movq %r12, %rax	

6
	movq $1, %rax	
	subl %eax, %reg2	

6
	idivl %reg0	
	movq -16(%rbp), %reg2	

6
	addl %reg0, %eax	
	movq -96(%rbp), %reg3	

6
	movq -144(%rbp), %reg1	
	imull %reg2	

6
.Main.main_1:	
	movq %r12, %reg1	

6
	movq %r13, %reg1	
	negl %reg2	

6
	movq $5, %rsi	
	cmpl %reg1, %reg2	

6
	movq 48(%rbx), %rbx	
	movq %reg1, %reg2	

6
	movq %r12, 8(%rax)	
	movq %rax, %rdi	

6
	movq %reg0, 40(%reg1)	
	movq $0, %reg0	

6
	call *%reg0	
	movq $1, %rdi	

6
.string11:	
	.quad String_vtable	

6
	movq %reg0, %rbx	
	movq $0, %rax	

6
	movq -40(%rbp), %reg1	
	addl %reg2, %eax	

6
	movq 0(%r13), %rax	
	movq 72(%rax), %rax	

6
	movq %reg0, %reg1	
	movq %r12, %rdx	

6
	movq -72(%rbp), %reg1	
	negl %reg2	

6
	addl %reg0, %reg1	
	movq %r12, %reg3	

6
	movq %reg0, %rax	
	movq -160(%rbp), %reg0	

6
	movq $2, %reg0	
	movq %rdi, %rsi	

6
	negl %esi	
	movq %rsi, %rcx	

6
	movq $5, %reg0	
	movq %r12, %reg2	

6
	addl %reg0, %reg1	
	movq -80(%rbp), %rdi	

6
	movq $5, %reg0	
	cmpl %esi, %reg2	

6
	movq $.string6, %r12	
	movq -8(%rbp), %reg2	

6
	movq %reg0, %reg1	
	movq -88(%rbp), %reg0	

6
	movq %reg0, %rdi	
	movq -56(%rbp), %reg3	

6
.Main.main_2:	
	movq $0, %rax	

6
	movq $2, %rdi	
	cmpl %edi, %reg2	

6
	movq %r13, %rax	
	cmpl %reg2, %reg3	

6
	movq %reg0, 48(%reg1)	
	movq $0, %reg0	

6
	sete %r11b	
	testq $1, %r11	

6
	movq %r12, 8(%rax)	
	movq %rax, %reg2	

6
	call *%rax	
	popq %r15	

6
	movq 0(%rbx), %r12	
	movq 56(%r12), %r12	

6
	negl %eax	
	addl %eax, %reg1	

6
	movq $2, %reg0	
	cmpl %edi, %reg2	

6
	movq %rdi, %rax	
	movq %rsi, %rbx	

6
	movq -88(%rbp), %reg1	
	movq %reg2, %reg3	

6
	.quad 2	
.string7_l:	

6
	movq 8(%rbx), %rdi	
	call *%reg2	

6
.Main.main_2:	
	movq 0(%reg0), %r12	

6
	idivl %r8d	
	subl %eax, %reg2	

6
	movq $1, %rdi	
	movq %rdi, 8(%rax)	

6
	movq %rdi, %reg1	
	movq $.string6, %reg2	

6
	movq %rsi, %reg1	
	movq 0(%reg2), %reg3	

6
	addl %reg0, %eax	
	movq %reg2, %r14	

6
	pushq %rbx	
	movq $16, %reg1	

6
	idivl %r8d	
	addl %eax, %reg2	

6
	movq $1, %reg0	
	movq %rdi, %rsi	

6
	movq $0, %rax	
	movq %rax, 32(%reg1)	

6
	movq %reg0, %rax	
	movq -56(%rbp), %rdi	

6
	movq $4, %r8	
	movq %rsi, %reg2	

6
	movq %reg0, %rcx	
	movq $12, %r8	

6
	addl %edi, %reg1	
	movq %rax, %r14	

6
	movq -40(%rbp), %rdi	
	addl %edi, %eax	

6
	movq -48(%rbp), %rax	
	cmpl %eax, %reg3	

6
	movq $3, %reg0	
	movq %rdi, %rsi	

6
	movq 72(%rax), %rax	
	movq %r13, %rdi	

6
	call Bool.new	
	movq %r12, 8(%reg1)	

6
	movq 0(%reg0), %reg1	
	movq 152(%reg1), %reg1	

6
	movq %reg0, %reg1	
	movq -32(%rbp), %rax	

6
	call *%r12	
	movq 0(%reg1), %rax	

6
	movq 72(%reg0), %reg0	
	movq %r13, %reg2	

6
	call *%r12	
	movq 0(%rbx), %reg2	

6
	movq %reg0, %rax	
	movq -128(%rbp), %reg3	

6
.Main.main_8:	
	movq 0(%reg0), %reg1	

6
	movq $1, %rdi	
	cmpl %edi, %reg2	

6
	movq $1, %rcx	
	movq %reg1, %rsi	

6
	movq $3, %rcx	
	movq %rdi, %reg2	

6
	movq $1, %rax	
	subl %reg1, %edi	

6
	movq %reg0, %reg1	
	movq -80(%rbp), %rsi	

6
	movq -48(%rbp), %reg1	
	imull %reg2	

6
	movq $4, %rcx	
	movq %reg1, %reg2	

6
	movq 16(%rbx), %rdi	
	call *%rax	

6
	movq %reg0, %rax	
	testq $1, %rax	

6
	movq %r13, %reg1	
	addl %reg2, %edi	

6
	pushq %rax	
	movq %r14, %rdi	

6
	movq %rbx, %r14	
	pushq %rax	

6
	movq %rax, -112(%rbp)	
	movq -8(%rbp), %rdx	

6
	movq $1, %rax	
	subl %reg1, %reg2	

6
	negl %ecx	
	addl %ecx, %reg1	

6
	call *%r15	
	movq %reg1, %rax	

6
	movq $0, %reg0	
	movq %reg0, 56(%reg1)	

6
	pushq %rbx	
	movq $16, %rdi	

6
	movq -176(%rbp), %reg1	
	imull %reg2	

6
	movq 48(%rbx), %rbx	
	movq %rax, %reg2	

6
	movq -24(%rbp), %reg1	
	movq %reg2, %rsi	

6
	movq 152(%reg0), %reg0	
	movq %rax, %rdi	

6
	movq %rcx, %reg1	
	imull %reg2	

6
	call *%reg0	
	movq $.string6, %r12	

6
	movq %r12, 8(%reg1)	
	movq %reg1, %rdi	

6
	movq %r12, %reg1	
	sete %dil	

6
	imull %reg0d	
	movq $12, %reg0	

6
	movq $4, %r8	
	movq %rsi, %rcx	

6
	movq 48(%reg0), %reg0	
	movq %r12, %reg2	

6
	pushq %reg0	
	movq %r14, %rdi	

6
	movq 72(%reg0), %reg0	
	movq %r13, %rdi	

6
	movq %reg0, %rax	
	movq %r14, %rdi	

6
	movq %rax, %reg1	
	movq -184(%rbp), %rax	

6
	movq $2, %reg0	
	movq %rdi, %reg2	

6
	movq $12, %reg0	
	movq -120(%rbp), %rax	

6
	movq $142, %reg0	
	movq $.string2_l, %rdi	

6
	movq $7, %reg0	
	movq 0(%reg1), %reg2	

6
	movq %reg0, %rcx	
	movq $12, %reg2	

6
	movq %rcx, %rsi	
	imull %reg2	

6
	call *%rax	
	jmp .Main.main_2	

6
	movq 56(%rax), %rax	
	movq %r13, %reg2	

6
	movq -40(%rbp), %rdi	
	addl %reg2, %eax	

6
	movq %r14, %reg1	
	cmpl %edi, %eax	

6
	movq -8(%rbp), %reg1	
	movq %r14, %reg3	

6
	movq $2, %rdi	
	movq $1, %reg1	

6
	movq %reg0, %r14	
	movq %reg2, %r13	

6
	movq %reg0, %rbx	
	pushq %rax	

6
	movq %rbx, %reg1	
	cmpl %reg2, %eax	

6
	movq %rax, %r14	
	movq -8(%rbp), %reg3	

6
	movq $3, %rcx	
	movq %reg1, %reg2	

6
	movq $1, %rdi	
	movq %rdi, 8(%reg1)	

6
	movq 72(%rax), %rax	
	movq %r13, %reg2	

6
	.quad String_vtable	
	.quad .string11_l	

6
	movq %reg0, %rax	
	movq %r12, %rdi	

6
	movq 8(%reg0), %reg1	
	movq %r12, %reg3	

6
	movq 0(%reg0), %r12	
	movq 48(%r12), %r12	

6
	movq %r12, %rdi	
	sete %reg2l	

6
	movq $2, %rcx	
	movq %reg1, %rsi	

6
	movq -128(%rbp), %reg1	
	movq %reg2, %rsi	

6
	movq %r13, %rdi	
	addl %eax, %edi	

6
	movq -48(%rbp), %reg1	
	addl %reg2, %reg3	

6
	movq %reg0, %rsi	
	movq -128(%rbp), %reg0	

6
	movq %reg0, -112(%rbp)	
	movq -8(%rbp), %rdx	

6
	call *%rax	
	movq $2147483647, %rax	

6
	movq $2, %reg0	
	movq 0(%reg1), %r12	

6
	movq %reg0, -112(%rbp)	
	movq %reg2, %rdx	

6
	movq %reg0, %reg1	
	movq -168(%rbp), %reg0	

6
	movq $5, %reg0	
	cmpl %reg1, %edi	

6
	movq $31, %reg0	
	movq $.string5_l, %reg1	

6
	movq -88(%rbp), %rdi	
	cmpl %edi, %eax	

6
	movq $4, %reg0	
	movq %reg1, %rsi	

6
	movq %rax, %r14	
	movq -8(%rbp), %rdx	

6
	movq $4, %rcx	
	movq %rdi, %reg2	

6
	movq $1, %rdi	
	cmpl %reg1, %reg2	

6
	movq $3, %reg0	
	movq $.string3_l, %reg1	

6
	movq %reg0, %reg1	
	movq %r13, %rdi	

6
	movq 48(%rbx), %rbx	
	movq %reg1, %rdi	

6
	movq $.string6, %r12	
	movq %reg1, %reg2	

6
	movq $2, %r8	
	movq %rsi, %reg2	

6
	movq 88(%rbx), %rbx	
	movq %reg1, %rdi	

6
	call Foo.new	
	cmpl $0, %reg0	

6
	addl %reg0, %eax	
	movq %rax, %r14	

6
	movq -160(%rbp), %reg1	
	addl %reg2, %reg3	

6
	movq %r14, %rax	
	addl %reg2, %eax	

6
	movq 0(%r13), %rax	
	movq 56(%rax), %rax	

6
	jmp .Main.main_11	
.Main.main_10:	

6
	movq -40(%rbp), %reg1	
	addl %edi, %reg3	

6
	jmp .Main.main_12	
.Main.main_11:	

6
	movq $142, %reg0	
	movq $.string2_l, %reg1	

6
	movq 0(%rbx), %reg1	
	movq 96(%reg1), %reg1	

6
	movq 0(%rax), %rbx	
	movq 48(%rbx), %rbx	

6
.Main.main_14:	
.Main.main_12:	

6
	idivl %r9d	
	movq $12, %r8	

6
	movq $0, %reg0	
	cmpl %reg0d, %r10d	

6
	movq -8(%rbp), %reg1	
	movq %r14, %rsi	

6
	call Foo.new	
	cmpl $0, %eax	

6
	movq %r12, %rdi	
	sete %dil	

6
	movq %rdi, %rax	
	movq %reg2, %rbx	

6
	movq %rax, -112(%rbp)	
	movq -8(%rbp), %reg3	

6
	idivl %r8d	
	subl %reg1, %reg2	

6
	cmpl $0, %reg0	
	setl %reg1	

6
.Main.main_3:	
	movq $1, %reg0	

6
	movq $2, %r8	
	movq %rsi, %rcx	

6
	movq %reg0, %reg1	
	movq -184(%rbp), %reg3	

6
	movq %rax, -112(%rbp)	
	movq %reg2, %rdx	

6
	movq $3, %rsi	
	movq $.string3_l, %reg1	

6
	call *%rax	
	movq $.string6, %r12	

6
	movq -40(%rbp), %reg1	
	negl %reg2	

6
	movq %r12, %r14	
	movq %reg2, %reg3	

6
	call String.cmp	
	movq %rax, %rbx	

6
	movq 48(%r12), %r12	
	movq %rax, %reg2	

6
	movq $3, %reg0	
	movq %rsi, %reg2	

6
	movq 8(%reg0), %rdi	
	call *%rax	

6
	.quad Main.main	
	.quad Main.printY	

6
	movq %reg0, %rax	
	movq -168(%rbp), %reg3	

6
	movq %reg0, %r13	
	movq %rbx, %reg3	

6
	movq $1, %reg0	
	subl %eax, %edi	

6
	.quad .string7_l	
	.quad 1	

6
	movq %reg0, %rdi	
	movq %r13, %reg0	

6
	cmpl $0, %r13d	
	setl %r13b	

6
	movq %reg0, %reg1	
	movq -128(%rbp), %rsi	

6
	addl %edi, %reg1	
	movq -80(%rbp), %reg3	

6
	movq %reg0, %r14	
	movq -8(%rbp), %rdx	

6
	movq $5, %reg0	
	movq %r12, %rax	

6
	movq -80(%rbp), %rax	
	movq %reg2, %rdi	

6
	movq %reg0, %rdi	
	movq %r14, %reg0	

6
	movq $2147483647, %rax	
	negl %reg1	

6
	movq %rax, %rcx	
	movq $12, %r8	

6
	movq $2, %reg0	
	movq %rsi, %rcx	

6
	movq %reg0, %reg1	
	movq %r14, %rdi	

6
	movq -40(%rbp), %rdi	
	addl %edi, %reg3	

6
	movq %rax, %rdi	
	movq %r14, %rax	

6
	movq $2147483647, %rax	
	negl %eax	

6
.Main.main_7:	
	movq 0(%reg0), %reg1	

6
	movq $2, %r8	
	movq %reg1, %rcx	

6
	movq $4, %r8	
	movq %reg1, %reg2	

6
	pushq %rax	
	movq %r14, %reg2	

6
	call *%r12	
	cmpl $0, %ebx	

6
	testq $1, %rax	
	je .Main.main_5	

6
	call *%reg0	
	movq $.string6, %rax	

6
	movq %rax, %r12	
	popq %rax	

6
	movq $0, %reg0	
	movq %reg0, 48(%reg1)	

6
	idivl %ecx	
	addl %eax, %edi	

6
	movq -32(%rbp), %reg1	
	movq %reg2, %rsi	

6
	movq $2, %rcx	
	movq %rdi, %reg2	

6
	movq $3, %reg0	
	movq %reg1, %rsi	

6
	movq -56(%rbp), %rdi	
	cmpl %edi, %reg3	

6
	testq $1, %reg0	
	je .Main.main_12	

6
	movq -152(%rbp), %reg1	
	negl %reg2	

6
	movq 152(%reg0), %reg0	
	movq %reg1, %reg2	

6
	movq $1, %rcx	
	movq %reg1, %reg2	

6
	movq %rdi, %rax	
	movq $0, %reg2	

6
	movq $3, %r8	
	movq %rsi, %reg2	

6
	call *%r12	
	movq 0(%reg1), %reg2	

6
	movq $10, %reg0	
	movq $.string5_l, %reg1	

6
	movq $2147483647, %reg0	
	negl %reg1	

6
	movq %rcx, %rsi	
	imull %esi	

6
	movq %rax, %reg1	
.Main.main_1:	

6
	jne .Main.main_1	
	movq %reg0, %reg1	

6
	movq $1, %reg0	
	subl %eax, %reg2	

6
	movq %r15, %reg1	
	movq %reg2, %rdi	

6
	movq $1, %rax	
	subl %eax, %edi	

6
	movq 8(%rbx), %rdi	
	call *%rax	

6
	movq %rax, %reg1	
	movq $12, %r8	

6
	movq 16(%reg0), %rdi	
	call *%rax	

6
	movq 16(%rbx), %reg1	
	call *%reg2	

6
	addl %reg0, %reg1	
	movq %reg2, %r14	

6
	movq $3, %reg0	
	movq %rdi, %reg2	

6
	movq %reg0, %reg1	
	movq %rbx, %r14	

6
	movq $5, %rsi	
	cmpl %esi, %reg2	

6
	movq $2, %rcx	
	movq %rdi, %rsi	

6
	addl %edi, %eax	
	movq %rax, %r14	

6
	movq %rax, %rcx	
	movq $12, %reg2	

6
.Main.main_3:	
	movq %reg0, %reg1	

6
	testq $1, %rdi	
	je .Main.main_9	

6
	movq %reg0, %reg1	
	cmpl $0, %edi	

6
	movq $1, %reg0	
	call Int.new	

6
	movq -56(%rbp), %rdi	
	cmpl %reg2, %eax	

6
	movq $31, %rsi	
	movq $.string5_l, %reg1	

6
	movq $1, %reg0	
	movq $2, %rdi	

6
	movq %r12, %r14	
	movq %reg2, %r13	

6
	movq 8(%reg0), %reg1	
	movq 0(%reg0), %r12	

6
	movq $3, %rcx	
	movq %rdi, %rsi	

6
	movq 48(%reg0), %reg0	
	movq %r12, %rdi	

6
	movq %rax, %reg1	
	movq %rbx, %rax	

6
.Main.main_1:	
	movq 0(%r12), %reg1	

6
	movq -80(%rbp), %reg1	
	addl %reg2, %eax	

6
	movq $3, %rsi	
	movq $.string3_l, %rdi	

6
	call *%reg0	
	jmp .Main.main_12	

6
	call *%rax	
	jmp .Main.main_8	

6
	movq $1, %reg0	
	subl %reg1, %edi	

6
	movq %rax, %reg1	
	movq -64(%rbp), %rax	

6
	movq -152(%rbp), %reg1	
	addl %reg2, %reg3	

6
	movq $5, %rcx	
	cmpl %reg1, %reg2	

6
	movq %reg0, %rsi	
	movq %rbx, %rdx	

6
	subl %reg0, %reg1	
	movq %reg2, %rbx	

6
	movq -40(%rbp), %reg1	
	addl %edi, %eax	

6
	call *%reg0	
.Main.main_6:	

6
	movq $1, %reg0	
	movq %reg0, %r14	

6
	movq 0(%r13), %reg1	
	movq 72(%reg1), %reg1	

6
	movq %r14, %rax	
	cmpl %reg2, %reg3	

6
	movq $5, %reg0	
	cmpl %ecx, %esi	

6
	movq 16(%rbx), %rdi	
	call *%reg2	

6
	movq $31, %reg0	
	movq $.string5_l, %rdi	

6
	movq %reg0, %rdi	
	movq -80(%rbp), %reg0	

6
	movq %r13, %rdi	
	addl %reg2, %edi	

6
	movq $5, %reg0	
	cmpl %esi, %edi	

6
	movq %rax, 24(%reg1)	
	movq $0, %rax	

6
	jmp .Main.main_5	
.Main.main_4:	

6
	movq $2, %reg0	
	movq %reg1, %rsi	

6
	movq $2, %reg0	
	movq $1, %rdi	

6
	movq -88(%rbp), %rdi	
	cmpl %reg2, %eax	

6
	movq -80(%rbp), %reg1	
	movq %reg2, %rdi	

6
	movq %rax, %reg1	
	cmpl $0, %reg1d	

6
	movq $1, %reg0	
	movq %reg1, %rsi	

5
	movq -160(%rbp), %rax	
	movq %reg2, %rdi	

5
	movq -56(%rbp), %reg1	
	cmpl %eax, %edi	

5
	movq %rbx, %rax	
	cmpl %reg2, %reg3	

5
	movq $23, %reg0	
	movq $.string3_l, %rdi	

5
	cmpl %reg0, %esi	
	setl %reg2l	

5
	movq %rax, %reg1	
	movq $3, %rax	

5
	jmp .Main.main_10	
.Main.main_9:	

5
	movq 8(%reg0), %reg1	
	sete %dil	

5
	addl %reg0, %reg1	
	movq -24(%rbp), %reg3	

5
	movq -88(%rbp), %rax	
	negl %eax	

5
	movq %r13, %rax	
	cmpl %reg2, %eax	

5
	movq -104(%rbp), %reg1	
	cmpl %edi, %eax	

5
	movq %reg0, %rax	
	movq -160(%rbp), %rdi	

5
.Main.main_2:	
	movq $1, %reg0	

5
	addl %eax, %esi	
	movq %rdi, %rax	

5
	negl %ecx	
	addl %ecx, %eax	

5
	addl %reg0, %eax	
	movq %r12, %rdi	

5
	movq 32(%rax), %rax	
	movq %reg1, %reg2	

5
	.quad 0	
.string6_l:	

5
	movq -104(%rbp), %rdi	
	cmpl %edi, %eax	

5
	movq %reg0, %reg1	
	movq 0(%rax), %reg3	

5
	pushq %rbx	
	movq %rdi, %rbx	

5
	movq %reg0, %reg1	
	call Bool.new	

5
	movq 32(%rbx), %reg1	
	sete %reg2	

5
.Main.main_4:	
	jmp .Main.main_5	

5
	movq -144(%rbp), %reg1	
	addl %eax, %reg3	

5
	movq %r13, %reg1	
	imull %esi	

5
.Main.main_6:	
	movq $3, %reg0	

5
	movq -56(%rbp), %reg1	
	movq %reg2, %rsi	

5
	call *%reg0	
.Main.main_8:	

5
	movq -96(%rbp), %reg1	
	cmpl %edi, %reg3	

5
	movq %reg0, -152(%rbp)	
	movq %reg2, %rdx	

5
	movq -128(%rbp), %rax	
	negl %eax	

5
	movq $0, %reg0	
	movq %reg0, 24(%rax)	

5
	movq $14, %reg0	
	movq $.string3_l, %reg1	

5
	movq %reg0, -80(%rbp)	
	movq %reg2, %rdx	

5
	movq $.string9, %reg0	
	movq %reg1, %rdx	

5
	movq %rdi, 16(%rax)	
	movq $0, %rdi	

5
	cmpl %reg0, %reg1d	
	sete %bl	

5
	movq 0(%rax), %rbx	
	movq 88(%rbx), %rbx	

5
	movq 8(%reg0), %rdi	
	sete %dil	

5
	call String.length	
	movq %rax, %r12	

5
	movq -88(%rbp), %reg1	
	subl %reg2, %reg3	

5
	movq %rbx, %reg1	
	cmpl %edi, %reg3	

5
	testq $1, %rax	
	je .Main.main_13	

5
	movq %rax, -80(%rbp)	
	movq %reg2, %reg3	

5
	cmpl %edi, %esi	
	setl %reg2l	

5
	movq -128(%rbp), %reg1	
	addl %reg2, %eax	

5
	movq %r14, %rax	
	addl %edi, %eax	

5
	movq %rbx, %reg1	
	addl %edi, %eax	

5
	idivl %reg0d	
	subl %eax, %reg2d	

5
	movq %rsp, %rbp	
	movq $24, %reg2	

5
	movq -152(%rbp), %reg1	
	addl %reg2, %eax	

5
	movq %rax, %reg1	
	cmpl $0, 16(%reg2)	

5
	movq %rdi, 16(%reg1)	
	movq $0, %rdi	

5
	movq -80(%rbp), %rdi	
	addl %reg2, %reg3	

5
	movq %rax, %reg1	
	movq -56(%rbp), %rax	

5
	movq 24(%rbx), %rbx	
	movq %reg1, %reg2	

5
	movq %reg0, %r12	
	cmpl $0, 16(%reg2)	

5
	movq -168(%rbp), %reg1	
	cmpl %reg2, %eax	

5
	movq $0, %reg0	
	movq %reg0, %r14	

5
	movq 88(%reg0), %reg0	
	movq 16(%rbx), %reg2	

5
	movq %reg0, %r12	
	cmpl $0, 16(%rbx)	

5
	movq $Bar_vtable, 0(%reg0)	
	movq $0, %rdi	

5
	idivl %reg0d	
	addl %reg1, %ecx	

5
	movq %rbx, %rdi	
	addl %reg2, %reg3	

5
	movq %reg0, %rbx	
	movq %reg2, %reg0	

5
	movq 88(%r14), %r14	
	movq %reg1, %rdi	

5
	pushq %r13	
	movq %rdi, %rax	

5
	movq %reg0, %rbx	
	movq $2, %reg2	

5
	movq $0, %rbx	
	cmpl %reg1, %reg2d	

5
.Main.main_2:	
	movq 0(%rax), %r12	

5
	cmpl $0, %reg0	
	setl %al	

5
	pushq %r13	
	movq %reg1, %rax	

5
	cmpl $0, 32(%reg0)	
	movq 32(%reg0), %reg1	

5
	movq %reg0, -160(%rbp)	
	movq %reg2, %rdx	

5
	movq %reg0, -40(%rbp)	
	movq -8(%rbp), %rdx	

5
	movq %rbx, %rdi	
	addl %edi, %reg3	

5
	movq -80(%rbp), %reg1	
	addl %edi, %reg3	

5
	movq -72(%rbp), %reg1	
	cmpl %reg2, %reg3	

5
	call *%reg0	
	movq %reg1, %r12	

5
	movq $1, %reg0	
	addl %edi, %reg2	

5
	movq %reg0, %rax	
	movq %rax, %r13	

5
	movq 88(%rbx), %rbx	
	movq %rax, %rdi	

5
	movq $0, %rax	
	popq %r12	

5
	idivl %r9d	
	movq %rax, %r8	

5
	sete %bl	
	testq $1, %reg1	

5
	addl %edi, %eax	
	movq %r12, %reg3	

5
	movq $1, %rax	
	movq %r13, %rdi	

5
	movq %reg0, %rax	
	movq %reg0, %reg2	

5
	call Object.cmp	
	movq %rax, %r13	

5
	movq $2, %reg0	
	imull %edi	

5
	call *%r12	
	popq %r14	

5
	movq %r14, %rax	
	movq %reg2, %rsi	

5
	movq %reg0, %rax	
	movq -56(%rbp), %reg0	

5
	movq %reg0, %reg1	
	call Main.func	

5
	call *%r12	
	jmp .Main.main_11	

5
	movq $0, %reg0	
	movq %reg0, 8(%rdi)	

5
	call *%rax	
	jmp .Main.main_6	

5
	movq %rax, -80(%rbp)	
	movq -8(%rbp), %reg3	

5
	movq %rax, -120(%rbp)	
	movq -8(%rbp), %rdx	

5
	movq $0, %r12	
	movq 0(%rax), %reg2	

5
	movq -16(%rbp), %reg1	
	imull %esi	

5
	cmpl %reg0, %esi	
	setle %dil	

5
	addl %r9d, %reg1	
	movq %reg2, %r9	

5
	movq %rax, %reg1	
	movq -72(%rbp), %rax	

5
	movq 0(%reg0), %r13	
	movq 56(%r13), %r13	

5
	movq 88(%reg0), %reg0	
	movq 16(%reg1), %reg2	

5
	movq 72(%rbx), %rbx	
	movq %rax, %rdi	

5
	addl %reg0, %reg1	
	movq 0(%reg2), %r12	

5
	imull %reg0d	
	addl %eax, %ecx	

5
	movq -104(%rbp), %reg1	
	addl %reg2, %reg3	

5
	movq -56(%rbp), %reg1	
	cmpl %reg2, %edi	

5
	movq %rax, -160(%rbp)	
	movq %reg2, %reg3	

5
	sete %bl	
	testq $1, %rbx	

5
	movq $23, %rsi	
	movq $.string3_l, %reg1	

5
	movq 88(%rax), %rax	
	movq 16(%reg1), %reg2	

5
	movq $.string8, %reg0	
	movq %reg0, %reg1	

5
	movq 0(%rax), %reg1	
	movq 24(%reg1), %reg1	

5
	movq 0(%reg0), %rax	
	movq 32(%rax), %rax	

5
	movq %r13, %rax	
	addl %reg2, %eax	

5
	movq %reg0, %rbx	
	call String.new	

5
	movq $1, %rax	
	movq %r13, %reg2	

5
	movq -160(%rbp), %reg1	
	addl %reg2, %eax	

5
	movq %reg0, %reg1	
	call Cons.new	

5
	cmpl %edi, %esi	
	setle %dil	

5
	movq $1, %rbx	
	movq 0(%rax), %r12	

5
	movq 88(%rax), %rax	
	movq 16(%rbx), %rdi	

5
	movq $0, %r13	
	cmpl %r13d, %reg1d	

5
	addl %edi, %reg1	
	movq -96(%rbp), %rdi	

5
	movq %rdi, %reg1	
	movq $0, %rax	

5
	setl %reg0l	
	cmpl %edi, %reg2	

5
	movq %reg0, %rdi	
	movq -136(%rbp), %reg3	

5
.Main.main_12:	
.Main.main_8:	

5
	movq -104(%rbp), %rdi	
	cmpl %reg2, %reg3	

5
	movq 0(%rax), %rbx	
	movq 72(%rbx), %rbx	

5
	movq -16(%rbp), %rdi	
	addl %reg2, %eax	

5
	movq $0, %rdi	
	movq $0, %rsi	

5
	movq -24(%rbp), %reg1	
	addl %reg2, %eax	

5
	movq %rdi, %rax	
	movq $1, %reg2	

5
	testq $1, %reg0	
	je .Main.main_19	

5
	movq $0, %rax	
	movq %rax, 40(%reg1)	

5
	subl %eax, %edi	
	movq %rdi, %r12	

5
	movq 8(%reg0), %r12	
	movq 0(%reg2), %reg0	

5
	movq -16(%rbp), %rdi	
	addl %edi, %reg3	

5
	jmp .Main.main_8	
.Main.main_1:	

5
	movq $.string9, %reg0	
	movq -8(%rbp), %rdx	

5
	movq %reg0, %reg1	
	movq $24, %reg2	

5
	movq %rsp, %reg1	
	movq $1, %rax	

5
	movq %reg0, %reg1	
	movq -104(%rbp), %rsi	

5
	subl %eax, %reg1	
	movq %reg2, %r12	

5
	movq %rax, -144(%rbp)	
	movq -8(%rbp), %rdx	

5
	call *%reg0	
.Main.main_5:	

5
	call *%r12	
.Main.main_6:	

5
	movq $0, %reg0	
	movq 0(%rax), %rbx	

5
	movq 88(%reg0), %reg0	
	movq 16(%rbx), %rdi	

5
	movq $0, %reg0	
	movq $0, %rsi	

5
	movq 0(%rbx), %r13	
	movq 72(%r13), %r13	

5
	movq $.string9, %rax	
	movq 0(%rbx), %r12	

5
	movq 56(%r13), %r13	
	movq %reg1, %reg2	

5
	movq $Foo_vtable, 0(%reg0)	
	movq %reg0, %reg1	

5
	call Object.cmp	
	movq %reg0, %r12	

5
	movq %reg0, %r12	
	movq $1, %reg2	

5
	addl %reg0, %eax	
	movq 0(%reg2), %r12	

5
	movq 16(%reg0), %reg1	
	cmpl %reg2, %reg3	

5
	movq -64(%rbp), %rax	
	movq %reg2, %reg3	

5
	addl %reg0, %eax	
	movq %r12, %reg3	

5
	addl %edi, %eax	
	movq 0(%reg2), %reg3	

5
	movq %rdi, %reg1	
	movq %reg1, %r12	

5
	movq $1, %reg0	
	negl %reg1	

5
	movq -112(%rbp), %rax	
	movq $0, %reg2	

5
	movq $4, %rsi	
	movq $.string1_l, %reg1	

5
	movq %reg0, %reg1	
	cmpl $0, 16(%reg2)	

5
	movq 136(%reg0), %reg0	
	movq %reg1, %reg2	

5
	movq $4, %reg0	
	movq $.string1_l, %rdi	

5
	movq %r13, %reg1	
	call Object.cmp	

5
	movq %r9, %reg1	
	movq %reg2, %r9	

5
	.quad Object.type_name	
	.quad Foo.setX	

5
	movq 88(%rax), %rax	
	movq 16(%reg1), %rdi	

5
	movq -16(%rbp), %rbx	
	movq %reg2, %rax	

5
	movq 32(%reg0), %rax	
	sete %reg2	

5
	movq %rax, -40(%rbp)	
	movq -8(%rbp), %rdx	

5
	cmpl $0, %eax	
	setl %al	

5
	movq -16(%rbp), %rbx	
	movq %reg2, %reg3	

5
	movq %r13, %rdi	
	movq %r12, %reg3	

5
	call *%reg0	
	movq $2147483647, %rax	

5
	movq $13, %reg0	
	movq $.string3_l, %reg1	

5
	call String.length	
	movq %reg0, %rdi	

5
	movq $1, %rbx	
	movq 0(%reg1), %reg2	

5
	movq %r13, %rax	
	negl %eax	

5
	movq -112(%rbp), %rax	
	addl %reg2, %reg3	

5
	movq %rax, %rsi	
	movq -112(%rbp), %rax	

5
	movq $1, %rdi	
	addl %edi, %reg2	

5
	movq %reg0, %rdi	
	subl %eax, %reg3	

5
	call String.new	
	movq %reg0, 8(%reg1)	

5
	movq %rbx, %rdi	
	addl %edi, %eax	

5
	movq $1, %reg0	
	addl %reg1, %reg2	

5
	movq %reg0, %rdx	
	movq %reg2, %rcx	

5
	movq %rax, %reg1	
	movq -104(%rbp), %rax	

5
	movq $6, %reg0	
	movq 0(%reg1), %r12	

5
Foo.setX:	
	pushq %rbp	

5
	movq %reg0, %reg1	
	movq $24, %rdi	

5
	cmpl %edi, %esi	
	setle %reg2l	

5
	.globl Foo.setX	
	.type Foo.setX, @function	

5
	testq $1, %rdi	
	je .Main.main_5	

5
	movq %reg0, %reg1	
	movq -16(%rbp), %rsi	

5
	movq 120(%reg0), %reg0	
	movq %rbx, %reg2	

5
	movq %rax, -40(%rbp)	
	movq %reg2, %reg3	

5
	movq %reg0, 24(%rbx)	
	movq %rbx, %reg0	

5
	call *%r12	
	jmp .Main.main_4	

5
	movq 24(%rbx), %rbx	
	movq %reg1, %rdi	

5
	idivl %r9d	
	movq %rax, %reg2	

5
	movq -80(%rbp), %rdi	
	addl %edi, %reg3	

5
	movq 32(%rax), %rax	
	movq %reg1, %rdi	

5
	movq $6, %reg0	
	movq 0(%rax), %reg2	

5
	movq 32(%rbx), %rax	
	sete %al	

5
	movq -80(%rbp), %rax	
	addl %eax, %reg3	

5
	movq %reg0, %rax	
	movq -96(%rbp), %rdi	

5
	.type Foo.setX, @function	
Foo.setX:	

5
	.quad .string8_l	
	.quad 1	

5
	movq -136(%rbp), %reg1	
	imull %reg2	

5
	imull %r8d	
	addl %reg1, %reg2	

5
	movq %reg0, %rdx	
	movq %reg2, %reg3	

5
	movq -16(%rbp), %reg1	
	sete %reg2	

5
	movq -96(%rbp), %reg1	
	imull %ecx	

5
	movq -16(%rbp), %reg1	
	movq 0(%reg1), %rax	

5
	movq $0, %rdi	
	movq $0, %reg1	

5
	movq $0, %reg0	
	movq 0(%reg1), %rbx	

5
	.quad 7	
.string8_l:	

5
	movq 0(%rdx), %r12	
	movq 56(%r12), %r12	

5
	movq %rsp, %rbp	
	movq $1, %reg2	

5
	movq $1, %reg0	
	movq %r13, %rdi	

5
	movq $2, %rax	
	movq 0(%reg1), %r12	

5
	movq %r12, %reg1	
	call Object.cmp	

5
	movq %rax, -152(%rbp)	
	movq %reg2, %rdx	

5
	movq %r13, %reg1	
	call *%r14	

5
	movq 72(%r13), %r13	
	movq %rbx, %rdi	

5
	addl %reg0, %eax	
	movq %rbx, %reg3	

5
	movq %reg0, 24(%reg1)	
	movq %reg1, %reg0	

5
	movq %rsp, %reg1	
	movq $24, %rdi	

5
	movq -160(%rbp), %reg1	
	movq %reg2, %rdi	

5
	movq -40(%rbp), %reg1	
	imull %ecx	

5
	testq $1, %rax	
	je .Main.main_9	

5
	movq %rax, -160(%rbp)	
	movq -8(%rbp), %reg3	

5
	movq -88(%rbp), %reg1	
	negl %eax	

5
.Main.main_13:	
	movq 0(%reg0), %reg1	

5
	addl %edi, %reg1	
	movq 0(%rbx), %reg3	

5
	movq 0(%rbx), %reg1	
	movq 120(%reg1), %reg1	

5
	movq -128(%rbp), %reg1	
	movq %reg2, %rdi	

5
	movq %rax, -152(%rbp)	
	movq -8(%rbp), %reg3	

5
	movq %r12, %rsi	
	call Object.cmp	

5
	movq -40(%rbp), %reg1	
	negl %eax	

5
	movq %rax, %reg1	
	movq -160(%rbp), %rax	

5
	idivl %reg0d	
	addl %eax, %ecx	

5
	movq %reg0, -152(%rbp)	
	movq -8(%rbp), %reg3	

5
	.quad 2	
.string10_l:	

5
	movq $.string9, %reg0	
	movq 0(%rbx), %r12	

5
	call String.length	
	movq %rax, %rdi	

5
	addl %edi, %reg1	
	movq -96(%rbp), %reg3	

5
	movq -96(%rbp), %rdi	
	addl %edi, %eax	

5
	movq -128(%rbp), %rax	
	movq %reg2, %rdi	

5
	movq -128(%rbp), %rax	
	negl %reg2	

5
	movq -32(%rbp), %reg1	
	addl %reg2, %eax	

5
	testq $1, %reg0	
	je .Main.main_41	

5
	testq $1, %reg0	
	je .Main.main_16	

5
	movq -80(%rbp), %rdi	
	addl %edi, %eax	

5
	call *%rax	
	movq 0(%rax), %reg1	

5
	movq $3, %reg0	
	movq 0(%rax), %reg2	

5
	movq $12, %rdi	
	movq %rdi, %rsi	

5
	movq %reg0, -80(%rbp)	
	movq %reg2, %reg3	

5
	movq %reg0, 16(%rax)	
	movq $0, %reg0	

5
	movq -64(%rbp), %reg1	
	imull %reg2	

5
	movq %rdi, %rax	
	movq %rax, %r13	

5
	movq %reg0, -40(%rbp)	
	movq %reg2, %rdx	

5
	movq $13, %rsi	
	movq $.string3_l, %reg1	

5
	movq %reg0, -80(%rbp)	
	movq -8(%rbp), %rdx	

5
	movq %reg0, -120(%rbp)	
	movq %reg2, %reg3	

5
Foo.setX:	
	pushq %reg0	

5
	movq -64(%rbp), %reg1	
	addl %reg2, %eax	

5
	movq 112(%reg0), %reg0	
	movq %reg1, %rdi	

5
	movq %rbx, %reg1	
	addl %reg2, %eax	

5
.Main.main_13:	
	movq $7, %reg0	

5
	call *%reg0	
	movq $0, %reg0	

5
	movq %rbx, %reg1	
	cmpl %edi, %eax	

5
	movq %r14, %rax	
	subl %reg2, %reg3	

5
	addl %reg0, %eax	
	movq 0(%rbx), %r12	

5
	addl %reg0, %reg1	
	movq 0(%rbx), %r12	

5
	movq %reg0, %r14	
	movq 0(%rbx), %reg0	

5
	movq %reg0, -120(%rbp)	
	movq -8(%rbp), %reg3	

5
	movq $1, %rax	
	leave	

5
	pushq %rbx	
	movq %reg1, %rbx	

5
	movq -96(%rbp), %rdi	
	cmpl %reg2, %eax	

5
	movq %r12, %rdi	
	cmpl %reg2, %eax	

5
	movq %reg0, -160(%rbp)	
	movq %reg2, %reg3	

5
	movq 8(%reg0), %rdi	
	sete %reg2l	

5
	movq %reg0, %rbp	
	movq $1, %reg2	

5
	jmp .Main.main_3	
.Main.main_4:	

5
	addl %reg0, %reg1	
	movq %rdi, %r12	

5
	movq $0, %rax	
	movq %reg1, %reg2	

5
	movq %rdi, %reg1	
	cmpl %reg2, %eax	

5
	movq -176(%rbp), %reg1	
	addl %reg2, %reg3	

5
	movq -120(%rbp), %reg1	
	negl %reg2	

5
	cmpl %edi, %esi	
	setl %dil	

5
	movq 0(%rbx), %reg1	
	movq 104(%reg1), %reg1	

5
	addl %edi, %reg1	
	movq 0(%rbx), %r12	

5
	call *%r13	
	movq %rax, %r13	

5
	movq %rax, %reg1	
	movq -96(%rbp), %rax	

5
	movq 88(%rbx), %rbx	
	movq %rax, %reg2	

5
	call String.new	
	movq %rax, 8(%reg1)	

5
	movq %rdi, %rbx	
	movq $2, %reg2	

5
	movq %r13, %rax	
	addl %edi, %eax	

5
	call *%reg0	
	jmp .Main.func_7	

5
	subl %reg0, %reg1	
	movq %rdi, %r12	

5
	movq -16(%rbp), %reg1	
	addl %edi, %eax	

5
	setl %dil	
	cmpl %reg1, %eax	

5
	movq %rax, 24(%rbx)	
	movq %rbx, %rax	

5
	call String.new	
	movq %reg0, 8(%rbx)	

5
	sete %reg0	
	testq $1, %rbx	

5
	movq %rax, -152(%rbp)	
	movq -8(%rbp), %rdx	

5
	movq $0, %rbx	
	cmpl %ebx, %reg2d	

5
	movq -96(%rbp), %reg1	
	negl %reg2	

5
.Main.main_5:	
	jmp .Main.main_8	

5
	movq 8(%reg0), %rdi	
	movq %r12, %rsi	

5
	movq %r8, %reg1	
	imull %ecx	

5
	movq -32(%rbp), %reg1	
	cmpl %reg2, %reg3	

5
	movq $13, %rsi	
	movq $.string3_l, %rdi	

5
	imull %r8d	
	addl %reg1, %ecx	

5
	movq $0, %reg0	
	movq %reg0, %r13	

5
	movq $Bar_vtable, 0(%reg0)	
	movq $0, %reg1	

5
	movq %reg0, -160(%rbp)	
	movq -8(%rbp), %rdx	

5
.Main.main_8:	
	popq %reg0	

5
	movq 104(%reg0), %reg0	
	movq %rbx, %rdi	

5
	movq %reg0, %rax	
	movq $1, %reg2	

5
	movq %rax, %reg1	
	movq -136(%rbp), %rax	

5
	movq 8(%rbx), %rdi	
	movq %rax, %rsi	

5
	movq -16(%rbp), %rax	
	sete %al	

5
	movq -72(%rbp), %reg1	
	cmpl %reg2, %eax	

5
	movq $5, %reg0	
	movq 0(%rax), %reg2	

5
	movq 96(%reg0), %reg0	
	movq %rax, %rdi	

5
	negl %reg0	
	movq -96(%rbp), %reg2	

5
	movq 128(%reg0), %reg0	
	movq %reg1, %reg2	

5
	movq %reg0, %rax	
	movq %r14, %reg0	

5
	movq %rax, %r12	
	cmpl $0, 16(%reg2)	

5
	movq $3, %reg0	
	movq 0(%rbx), %reg2	

5
	movq %r12, %rdi	
	cmpl %edi, %reg3	

5
	movq %rdi, %reg1	
	movq $0, %r12	

5
	cmpl $0, 32(%reg0)	
	movq 32(%reg0), %rax	

5
	call *%rbx	
	popq %r12	

5
	negl %ecx	
	movq %rsi, %rax	

5
	call *%r12	
	popq %r13	

5
	movq 8(%reg0), %reg1	
	movq 0(%reg2), %reg0	

5
	addl %eax, %edi	
	movq %reg2, %r12	

5
	call *%rax	
	movq %rax, %r14	

5
	movq $0, %reg0	
	movq %reg0, 64(%reg1)	

5
	movq 32(%reg0), %reg1	
	sete %al	

5
	cmpl $0, -16(%rbp)	
	movq -16(%rbp), %rax	

5
	movq %rax, -40(%rbp)	
	movq %reg2, %rdx	

5
	movq 8(%rax), %reg1	
	movq 0(%rbx), %rax	

5
	movq 0(%rdx), %rax	
	movq 56(%rax), %rax	

5
	movq -104(%rbp), %rdi	
	cmpl %reg2, %eax	

5
	movq %rax, %reg1	
	cmpl $0, %reg2d	

5
	movq %r13, %reg1	
	subl %eax, %reg3	

5
	movq %r9, %rax	
	movq %reg2, %r9	

5
	movq %rax, -152(%rbp)	
	movq %reg2, %reg3	

5
	movq 0(%rax), %reg1	
	movq 96(%reg1), %reg1	

5
	movq -40(%rbp), %rax	
	negl %reg2	

5
	imull %r9d	
	movq %reg1, %r9	

5
	movq %reg0, %r12	
	movq %r12, %reg2	

5
	movq %reg0, %reg1	
	movq %r11, %reg0	

5
	movq %reg0, %rsi	
	movq -112(%rbp), %reg0	

5
	cmpl $0, %eax	
	setl %reg1	

5
	movq -96(%rbp), %rdi	
	addl %reg2, %reg3	

5
	movq -80(%rbp), %reg1	
	addl %eax, %reg3	

5
	call *%reg0	
	movq $2147483647, %reg1	

5
	movq 8(%reg0), %reg1	
	movq %r12, %rsi	

5
	imull %r8d	
	movq $12, %r8	

5
	movq %reg0, %reg1	
	movq %r10, %reg0	

5
	movq $1, %rbx	
	movq 0(%rax), %reg2	

5
	setl %dil	
	cmpl %reg1, %reg2	

5
	movq %r14, %rax	
	addl %edi, %reg3	

5
	addl %edi, %eax	
	movq 0(%rbx), %reg3	

5
	movq %rsp, %reg1	
	movq $24, %reg2	

5
	call Foo.new	
	movq %rax, %r12	

5
	call *%reg0	
	jmp .Main.main_7	

5
	movq %reg0, %rax	
	movq %r15, %reg3	

5
	movq -104(%rbp), %reg1	
	negl %eax	

5
	movq -104(%rbp), %rax	
	negl %eax	

5
	movq -56(%rbp), %rax	
	cmpl %eax, %edi	

5
	movq %rax, %r14	
	movq 0(%rbx), %rax	

5
	movq %rsi, %rdi	
	movq %reg2, %rsi	

5
	movq $1, %reg0	
	leave	

5
	movq 8(%rbx), %reg1	
	movq %rax, %rsi	

5
	movq %rax, %reg1	
	cmpl $0, 16(%rbx)	

5
	movq %rax, -96(%rbp)	
	movq %reg2, %rdx	

5
	movq $2, %rax	
	movq 0(%rbx), %reg2	

5
	movq %reg0, -160(%rbp)	
	movq -8(%rbp), %reg3	

5
	movq 120(%reg0), %reg0	
	movq %rbx, %rdi	

5
	movq %r12, %rsi	
	movq %rbx, %reg3	

5
	movq %rdi, %reg1	
	cmpl $0, %reg2	

5
	movq -96(%rbp), %reg1	
	cmpl %edi, %eax	

5
	movq 128(%reg0), %reg0	
	movq %reg1, %rdi	

5
	movq %reg0, -136(%rbp)	
	movq %reg2, %reg3	

5
	movq %r13, %rsi	
	call Object.cmp	

5
	movq %rax, -136(%rbp)	
	movq -8(%rbp), %reg3	

5
	movq %reg0, -96(%rbp)	
	movq -8(%rbp), %reg3	

5
	call Object.cmp	
	movq %reg0, %r13	

5
	movq -56(%rbp), %rax	
	cmpl %reg2, %edi	

5
	call *%rax	
	movq $.string8, %reg1	

5
.Main.main_6:	
	movq 0(%reg0), %reg1	

5
	addl %reg0, %reg1	
	movq -96(%rbp), %rdi	

5
	movq %reg0, %reg1	
	cmpl $0, 16(%rbx)	

5
	testq $1, %reg0	
	je .Main.main_47	

5
	movq %rbx, %reg1	
	movq %reg2, %rdx	

5
	movq $0, %reg0	
	cmpl %ebx, %reg2d	

5
	movq %rax, %reg1	
	movq -48(%rbp), %rax	

5
	movq %r13, %rax	
	cmpl %edi, %reg3	

5
	movq $4, %reg0	
	movq $.string1_l, %reg1	

5
	movq %reg0, -136(%rbp)	
	movq %reg2, %rdx	

5
	call *%reg0	
	movq %rax, %r12	

5
	movq %rdi, %reg1	
	cmpl %esi, %reg3	

5
	setl %dil	
	cmpl %edi, %reg2	

5
	movq %rax, %r12	
	cmpl $0, 16(%rbx)	

5
	.quad Object.type_name	
	.quad Main.main	

5
	movq %rdi, %reg1	
	cmpl %esi, %eax	

5
	movq 72(%rbx), %rbx	
	movq %rax, %reg2	

5
	movq %reg0, %rdi	
	movq -136(%rbp), %rsi	

5
	imull %r8d	
	addl %eax, %reg2	

5
	movq 112(%reg0), %reg0	
	movq %reg1, %reg2	

5
	movq %reg0, %rsi	
	movq %reg2, %rcx	

5
	movq %rax, -136(%rbp)	
	movq %reg2, %rdx	

5
	movq $14, %reg0	
	movq $.string3_l, %rdi	

5
	addl %reg0, %reg1	
	movq 0(%reg2), %reg3	

5
	movq %rax, -160(%rbp)	
	movq -8(%rbp), %rdx	

5
	movq %rbx, %reg1	
	addl %edi, %reg3	

5
	movq %rax, %rdi	
	movq -64(%rbp), %rax	

5
	movq -88(%rbp), %rax	
	negl %reg2	

5
	movq %reg0, %reg1	
	call Bar.new	

5
	movq %reg0, -96(%rbp)	
	movq %reg2, %reg3	

5
	addl %reg0, %esi	
	movq %rdi, %rax	

5
	movq %rax, %r12	
	cmpl $0, %r12d	

5
	movq $0, %reg0	
	movq %reg0, 40(%rbx)	

5
	movq 8(%rax), %r12	
	movq 0(%reg2), %rax	

5
	movq 32(%reg0), %rax	
	sete %al	

5
	movq 8(%rax), %r12	
	movq 0(%rbx), %rax	

5
	subl %reg0, %edi	
	movq %rdi, %r12	

5
	movq 56(%r13), %r13	
	movq %reg1, %rdi	

5
	movq %r13, %rax	
	negl %reg2	

5
	movq $0, %rdi	
	movq %rdi, 24(%reg1)	

5
	movq $Bar_vtable, 0(%rax)	
	movq $0, %reg1	

5
	movq -24(%rbp), %rax	
	movq %reg2, %rsi	

5
	movq -56(%rbp), %rax	
	movq %reg2, %rsi	

5
	movq %reg0, -152(%rbp)	
	movq -8(%rbp), %rdx	

5
	cmpl %reg0, %esi	
	setle %reg2l	

5
	movq 24(%reg0), %reg0	
	movq %rax, %reg2	

5
	movq %rax, -144(%rbp)	
	movq %reg2, %rdx	

5
	movq $14, %rsi	
	movq $.string3_l, %reg1	

5
	movq %rax, -96(%rbp)	
	movq -8(%rbp), %reg3	

5
	movq -144(%rbp), %rax	
	addl %eax, %reg3	

5
	addl %reg0, %esi	
	movq %rdi, %reg3	

5
	movq %reg0, %reg1	
	movq -136(%rbp), %rdi	

5
	movq %rsi, %reg1	
	movq %reg2, %reg3	

5
	setl %reg0l	
	cmpl %reg1, %eax	

5
	movq $4, %rsi	
	movq $.string1_l, %rdi	

5
	movq $1, %rax	
	movq %rax, %r14	

5
	movq %reg0, -144(%rbp)	
	movq %reg2, %rdx	

5
	movq %reg0, %reg1	
	imull %reg2d	

5
	movq %rdi, %rbx	
	movq $0, %rax	

5
	addl %edi, %reg1	
	movq %r12, %rdi	

5
	addl %reg0, %eax	
	movq 0(%reg2), %reg3	

5
	movq -16(%rbp), %reg1	
	sete %al	

5
	movq $14, %rsi	
	movq $.string3_l, %rdi	

5
	movq $0, %rax	
	movq %rax, 40(%rbx)	

5
	movq -104(%rbp), %rdi	
	cmpl %edi, %reg3	

5
	addl %edi, %reg1	
	movq 0(%reg2), %reg3	

5
	addl %edi, %eax	
	movq 0(%reg2), %r12	

5
	.quad .string2_l	
	.quad 4	

5
	.quad .string7_l	
	.quad 2	

5
	movq %rax, %rdi	
	movq -32(%rbp), %rax	

5
	movq %reg0, %rax	
	imull %reg2d	

5
	movq $4, %reg0	
	movq %reg0, %reg1	

5
	movq $0, %rdi	
	movq %rdi, 24(%rax)	

5
	movq -112(%rbp), %reg1	
	negl %reg2	

5
	setl %reg0b	
	jge .Main.main_9	

5
	movq %reg0, -144(%rbp)	
	movq -8(%rbp), %reg3	

5
	movq %r12, %reg1	
	movq %rbx, %rdx	

5
	addl %reg0, %reg1	
	movq -56(%rbp), %reg3	

5
	movq -16(%rbp), %reg1	
	addl %edi, %reg3	

5
	movq 0(%reg0), %r14	
	movq 88(%r14), %r14	

5
	movq 8(%reg0), %reg1	
	sete %reg2l	

5
	movq $12, %rdi	
	movq %rdi, %reg1	

5
	addl %eax, %esi	
	movq %rdi, %reg3	

5
	negl %ecx	
	movq %rsi, %reg2	

5
	movq -88(%rbp), %reg1	
	addl %reg2, %eax	

5
	movq 8(%reg0), %rdi	
	movq %r12, %reg3	

5
	movq %r14, %rax	
	subl %eax, %reg3	

5
	movq %rbx, %rsi	
	movq %reg2, %rdx	

5
	movq %r12, %rdi	
	cmpl %edi, %eax	

5
	sete %r13b	
	testq $1, %r13	

5
	movq 8(%rbx), %rdi	
	movq %rax, %reg3	

5
	movq %reg0, %reg1	
	movq -176(%rbp), %reg0	

5
	movq -104(%rbp), %rax	
	negl %reg2	

5
	movq %reg0, -96(%rbp)	
	movq %reg2, %rdx	

5
	movq 8(%reg0), %reg1	
	movq %rax, %reg3	

5
	movq %reg0, %reg1	
	movq -160(%rbp), %rdi	

5
	movq 88(%rax), %rax	
	movq 16(%rbx), %reg2	

5
	movq -80(%rbp), %rdi	
	addl %reg2, %eax	

5
	addl %eax, %reg1	
	movq %rdi, %r12	

5
	movq $0, %rax	
	movq %rax, %r13	

5
	cmpl $0, 32(%rbx)	
	movq 32(%rbx), %reg1	

5
	movq $0, %reg0	
	popq %r12	

5
	addl %edi, %reg1	
	movq 0(%reg2), %r12	

5
	negl %reg0	
	movq %rsi, %rax	

5
	movq %rax, -120(%rbp)	
	movq -8(%rbp), %reg3	

5
	imull %reg0d	
	addl %reg1, %reg2	

5
	movq 104(%reg0), %reg0	
	movq %rbx, %reg2	

5
	movq $2, %rax	
	movq 0(%reg1), %reg2	

5
	cmpl %r13d, %reg1d	
	sete %r13b	

5
	testq $1, %reg0	
	je .Main.main_21	

5
	movq $0, %r12	
	movq 0(%reg1), %rbx	

5
	cmpl %reg0, %esi	
	setl %dil	

5
	imull %reg0d	
	addl %reg1, %ecx	

5
	addl %reg0, %reg1	
	movq 0(%rbx), %reg3	

5
	movq $3, %reg0	
	movq %reg0, %reg1	

5
	movq %reg0, %reg1	
	movq -88(%rbp), %rsi	

5
	call *%reg0	
	movq $1, %reg0	

5
	call *%reg0	
	movq $0, %reg1	

5
	movq %reg0, %rax	
	movq -80(%rbp), %reg3	

5
	movq 72(%r13), %r13	
	movq %rbx, %reg2	

5
	movq 24(%rbx), %rbx	
	movq %rax, %rdi	

5
	movq -16(%rbp), %rdi	
	addl %edi, %eax	

5
	movq %reg0, %rax	
	movq -136(%rbp), %rdi	

5
	movq %rax, -144(%rbp)	
	movq -8(%rbp), %reg3	

5
	movq %reg0, %rdi	
	movq -64(%rbp), %reg0	

5
	movq 32(%rbx), %rax	
	sete %reg2	

5
	movq %reg0, %rbp	
	movq $1, %rax	

5
	movq %reg0, -40(%rbp)	
	movq -8(%rbp), %reg3	

5
	call *%r15	
	cmpl $0, %reg1	

5
	addl %reg0, %eax	
	movq -96(%rbp), %rdi	

5
	movq %rax, %reg1	
	movq -16(%rbp), %rax	

5
	movq 8(%reg0), %rdi	
	movq %rax, %rsi	

5
	movq -96(%rbp), %rdi	
	cmpl %edi, %reg3	

5
	subl %eax, %edi	
	movq %reg2, %r12	

5
	movq -24(%rbp), %reg1	
	imull %reg2	

5
	movq 136(%reg0), %reg0	
	movq %reg1, %rdi	

5
	movq -80(%rbp), %reg1	
	cmpl %reg2, %eax	

5
	movq %r12, %rsi	
	movq %rbx, %rdx	

5
	movq 88(%r14), %r14	
	movq %rbx, %reg2	

5
	movq %reg0, %rdi	
	subl %reg2, %edi	

5
	movq $2, %reg0	
	movq 0(%rbx), %r12	

5
	cmpl %ebx, %reg1d	
	sete %bl	

5
	movq %r9, %r8	
	addl %r8d, %eax	

5
	addl %reg0, %eax	
	movq 0(%rbx), %reg3	

5
	movq $1, %rdi	
	addl %reg1, %reg2	

5
	.quad .string6_l	
	.quad 4	

5
	movq %r12, %reg1	
	subl %reg2, %eax	

5
	call Foo.new	
	movq %reg0, %r12	

5
	movq $0, %rax	
	movq %rax, 8(%rdi)	

5
	movq %rbx, %rdx	
	call *%reg2	

5
.Main.main_6:	
	movq $3, %r12	

5
	movq %r8, %rcx	
	imull %ecx	

5
	movq 8(%reg0), %reg1	
	movq 0(%rbx), %reg0	

5
	negl %reg0	
	movq $2, %reg1	

5
	imull %reg0d	
	addl %eax, %reg2	

5
	movq -80(%rbp), %reg1	
	addl %edi, %eax	

5
	movq %reg0, %rdi	
	movq $1, %reg0	

5
	addl %reg0, %eax	
	movq -64(%rbp), %reg3	

5
	movq $12, %reg0	
	movq %reg0, %rsi	

5
	setl %dil	
	cmpl %edi, %eax	

5
	movq $7, %reg0	
	movq 0(%reg1), %r12	

5
	movq %reg0, %reg1	
	movq 8(%reg2), %rax	

5
	movq -152(%rbp), %reg1	
	imull %esi	

5
	addl %reg0, %reg1	
	movq -64(%rbp), %reg3	

5
	movq %reg0, -120(%rbp)	
	movq %reg2, %rdx	

5
	movq -112(%rbp), %reg1	
	movq $0, %reg2	

5
	movq $2, %rax	
	movq 0(%rbx), %r12	

5
	call String.substr	
	movq %reg0, %r12	

5
	movq $0, %rax	
	testq $1, %rax	

5
	call *%r12	
	movq $2147483647, %reg1	

5
	movq %r14, %reg1	
	subl %eax, %reg3	

5
	movq %reg0, -152(%rbp)	
	movq %reg2, %reg3	

5
	movq %reg0, -144(%rbp)	
	movq %reg2, %reg3	

5
	movq %r13, %reg1	
	call String.concat	

5
	movq %reg0, -96(%rbp)	
	movq -8(%rbp), %rdx	

5
	movq %rax, -80(%rbp)	
	movq %reg2, %rdx	

5
	movq %reg0, %rdi	
	subl %eax, %edi	

5
	movq %rax, -120(%rbp)	
	movq %reg2, %reg3	

5
	addl %r9d, %eax	
	movq %reg2, %r9	

5
	setl %reg0l	
	cmpl %reg1, %reg2	

5
	movq %r13, %rax	
	addl %edi, %reg3	

5
	call *%r12	
	movq $2147483647, %rax	

5
	movq %reg0, %reg1	
	movq -112(%rbp), %rsi	

5
	movq %rsp, %rbp	
	movq $1, %rax	

5
	movq 8(%rbx), %reg1	
	movq %r12, %reg3	

5
	movq %rsp, %reg1	
	movq $1, %reg2	

5
	movq %reg0, -136(%rbp)	
	movq -8(%rbp), %reg3	

5
	movq %rax, -96(%rbp)	
	movq %reg2, %reg3	

5
	movq %rax, %r14	
	movq 0(%reg2), %rax	

5
	cmpl $0, %r14d	
	sete %r14b	

5
	movq %r13, %reg1	
	negl %eax	

5
	addl %reg0, %edi	
	movq %rdi, %r12	

5
	.quad Foo.setX	
	.quad Foo.getX	

5
	movq %reg0, -40(%rbp)	
	movq %reg2, %reg3	

5
	movq %rdi, %reg1	
	movq %reg1, %r13	

5
	movq %reg0, 56(%reg1)	
	movq $0, %reg0	

5
	call String.length	
	movq %reg0, %r12	

5
	movq %rax, -136(%rbp)	
	movq %reg2, %reg3	

5
	movq %rax, -144(%rbp)	
	movq %reg2, %reg3	

5
	movq %r13, %rax	
	cmpl %edi, %eax	

5
	movq -48(%rbp), %reg1	
	imull %ecx	

5
	call String.substr	
	movq %rax, %r12	

5
	movq $23, %rsi	
	movq $.string3_l, %rdi	

5
	movq %reg0, %rax	
	movq -72(%rbp), %reg3	

5
	movq %reg0, 64(%reg1)	
	movq $0, %reg0	

5
	movq %r9, %reg1	
	addl %reg1d, %eax	

5
	movq %r9, %reg1	
	addl %reg1d, %reg2	

5
	movq 24(%rbx), %rbx	
	movq %rax, %reg2	

5
	movq 0(%rax), %rbx	
	movq 24(%rbx), %rbx	

5
	movq $.string9, %reg0	
	movq -8(%rbp), %reg2	

5
	cmpl $0, 32(%rbx)	
	movq 32(%rbx), %rax	

5
	movq $.string9, %rax	
	movq 0(%reg1), %r12	

5
	movq %reg0, %reg1	
	movq -72(%rbp), %rsi	

5
	movq -96(%rbp), %rdi	
	cmpl %edi, %eax	

5
	movq %reg0, -120(%rbp)	
	movq -8(%rbp), %rdx	

5
	movq %reg0, -136(%rbp)	
	movq -8(%rbp), %rdx	

5
	movq 8(%reg0), %r12	
	movq 0(%rbx), %reg0	

5
	movq -96(%rbp), %rdi	
	addl %edi, %reg3	

5
	jmp .Main.main_5	
.Main.main_2:	

5
	movq -88(%rbp), %rax	
	movq %reg2, %reg3	

5
	movq %reg0, %rbp	
	movq $24, %reg2	

5
	movq $1, %rbx	
	movq 0(%reg1), %r12	

5
	movq 8(%reg0), %rdi	
	movq %rax, %reg3	

5
	ret	
	.size Foo.setX, .-Foo.setX	

5
	movq %rbx, %rdi	
	addl %reg2, %eax	

5
	movq %rax, -120(%rbp)	
	movq %reg2, %rdx	

5
	movq 8(%rax), %reg1	
	movq 0(%reg2), %rax	

5
	movq %r9, %r8	
	addl %r8d, %reg2	

5
	movq 0(%rbx), %r14	
	movq 88(%r14), %r14	

5
	movq %reg0, %rcx	
	call *%reg2	

5
	movq -96(%rbp), %rdi	
	addl %reg2, %eax	

5
	movq %reg0, %r12	
.Main.main_1:	

5
	movq 0(%reg0), %rbx	
	movq 24(%rbx), %rbx	

5
	movq %rax, -96(%rbp)	
	movq -8(%rbp), %rdx	

5
	sete %reg0b	
	jne .Main.main_1	

5
	addl %edi, %eax	
	movq -96(%rbp), %reg3	

5
	movq $0, %r12	
	movq 0(%rax), %rbx	

5
	movq $.string7, %reg0	
	movq 0(%rbx), %reg2	

5
	subl %eax, %reg1	
	movq %rdi, %r12	

5
	subl %reg0, %edi	
	movq %reg2, %r12	

5
	.quad 4	
.string6_l:	

5
	movq %rax, -80(%rbp)	
	movq -8(%rbp), %rdx	

5
	imull %r8d	
	addl %eax, %ecx	

5
	movq %reg0, %rdi	
	cmpl $0, %edi	

5
	movq %reg0, -144(%rbp)	
	movq -8(%rbp), %rdx	

5
	movq 24(%reg0), %reg0	
	movq %rax, %rdi	

5
	movq -16(%rbp), %rdx	
	movq 0(%rdx), %rax	

5
	idivl %reg0d	
	subl %reg1, %reg2d	

5
	addl %edi, %eax	
	movq -96(%rbp), %rdi	

5
	addl %edi, %reg1	
	movq %r12, %reg3	

5
	call *%rbx	
	movq %reg1, %reg2	

5
	movq -16(%rbp), %reg1	
	addl %reg2, %eax	

5
	movq %reg0, %r14	
	movq 0(%reg2), %reg0	

5
	jmp .Main.main_12	
.Main.main_9:	

5
	movq 8(%reg0), %rax	
	movq 0(%reg0), %reg2	

5
	movq $23, %reg0	
	movq $.string3_l, %reg1	

5
	movq %rax, -40(%rbp)	
	movq -8(%rbp), %reg3	

5
	.quad Object.type_name	
String_vtable:	

5
	movq %rax, 24(%reg1)	
	movq %reg1, %rax	

5
	movq %rsi, %reg1	
	movq %rdx, %rsi	

5
	movq -104(%rbp), %reg1	
	cmpl %edi, %reg3	

5
	jmp .Main.main_7	
.Main.main_6:	

5
	call out_error	
.Main.main_15:	

5
	movq %reg0, %reg1	
	movq $5, %reg0	

5
	movq $1, %reg0	
	movq 0(%rax), %r12	

5
	cmpl $0, 8(%reg0)	
	movq 8(%reg0), %rdi	

5
	addl %edi, %eax	
	movq 0(%rbx), %r12	

5
	movq 8(%rbx), %reg1	
	movq %rax, %reg3	

5
	addl %reg0, %reg1	
	movq %r12, %rdi	

5
	addl %eax, %reg1	
	movq %reg2, %r12	

5
	movq 88(%reg0), %reg0	
	movq 16(%reg1), %rdi	

5
	movq 8(%reg0), %reg1	
	movq %rax, %rsi	

5
	movq %reg0, %rax	
	movq -104(%rbp), %rdi	

5
	movq -128(%rbp), %reg1	
	negl %eax	

5
	call *%reg0	
	movq %reg0, %r14	

5
	cmpl %ebx, %reg1d	
	sete %reg2	

5
	movq 88(%r14), %r14	
	movq %reg1, %reg2	

5
	movq %rsp, %rbp	
	movq $24, %rdi	

5
	movq -40(%rbp), %rax	
	negl %eax	

5
	setl %reg0l	
	cmpl %edi, %eax	

5
	movq -72(%rbp), %reg1	
	addl %reg2, %eax	

5
	movq %reg0, %reg1	
	movq -96(%rbp), %rdi	

5
	.quad .string0	
	.quad 2	

5
	movq %reg0, %rbp	
	movq $24, %rdi	

5
	movq %rax, %rdi	
	movq $1, %rax	

5
	movq 88(%r14), %r14	
	movq %rbx, %rdi	

5
	addl %reg0, %edi	
	movq %reg2, %r12	

5
	movq -16(%rbp), %rax	
	sete %reg2	

5
	movq %reg0, -80(%rbp)	
	movq -8(%rbp), %reg3	

5
	movq %reg0, -16(%rbp)	
	movq %reg2, %reg3	

5
	movq -160(%rbp), %reg1	
	cmpl %reg2, %eax	

5
	addl %eax, %edi	
	movq %rdi, %r12	

5
	movq %r8, %rcx	
	imull %reg2	

5
	movq %rax, -160(%rbp)	
	movq %reg2, %rdx	

5
	call *%reg0	
	movq 0(%reg0), %reg1	

5
	movq %rax, %reg1	
	movq $2, %rax	

5
.Main.main_1:	
	movq 0(%r12), %rax	

5
	movq %rax, %rbx	
	call String.new	

5
	movq 32(%rbx), %reg1	
	sete %al	

5
	movq $Foo_vtable, 0(%rax)	
	movq %rax, %reg1	

5
	movq %reg0, %reg1	
	movq -104(%rbp), %rdi	

5
.Main.main_7:	
.Main.main_5:	

5
	call String.new	
	movq %rax, 8(%rbx)	

5
	call Object.cmp	
	movq %rax, %r12	

5
.Main.main_4:	
	movq 0(%reg0), %rax	

5
	movq %r13, %rsi	
	call String.concat	

5
	testq $1, %rsi	
	je .Main.main_1	

5
	idivl %reg0d	
	movq %rax, %r8	

5
	movq 96(%reg0), %reg0	
	movq %rax, %reg2	

5
	movq %reg0, %reg1	
	cmpl $0, %reg2d	

5
	movq %rax, %reg1	
	call Main.func	

5
	setl %reg0l	
	jge .Main.main_2	

5
	movq -96(%rbp), %rdi	
	cmpl %reg2, %reg3	

5
	movq $Bar_vtable, 0(%rax)	
	movq $0, %rdi	

5
	movq $13, %reg0	
	movq $.string3_l, %rdi	

5
	movq %reg0, %reg1	
	movq $0, %r12	

5
	movq %r8, %reg1	
	imull %reg2	

5
	movq 32(%reg0), %reg1	
	sete %reg2	

5
	movq %rax, -136(%rbp)	
	movq -8(%rbp), %rdx	

5
	addl %edi, %eax	
	movq %r12, %rdi	

4
	movq %reg0, 40(%rbx)	
	movq %rbx, %reg0	

4
	negl %reg0	
	movq %rax, %rdi	

4
	je .Main.main_2	
	movq $4, %rsi	

4
	movq -64(%rbp), %rax	
	addl %reg2, %reg3	

4
	movq 8(%reg0), %rdx	
	movq 0(%rdx), %r12	

4
	.quad .string6_l	
	.quad 2	

4
	movq %reg0, %reg1	
	movq $0, %rbx	

4
.string6_l:	
	.string "\\n"	

4
	movq %rax, -24(%rbp)	
	movq %reg2, %reg3	

4
	call out_error	
.Main.main_18:	

4
	movq 0(%rax), %r15	
	movq 56(%r15), %r15	

4
	imull %reg0d	
	subl %reg1, %reg2d	

4
	movq $2, %r12	
	movq 0(%reg1), %reg2	

4
	movq -96(%rbp), %reg1	
	subl %reg2, %reg3	

4
	movq -16(%rbp), %reg1	
	call *%rax	

4
	movq -136(%rbp), %reg1	
	cmpl %reg2, %reg3	

4
	movq $7, %reg0	
	movq $.string3_l, %rdi	

4
	movq -48(%rbp), %rcx	
	imull %ecx	

4
	movq $0, %rdi	
	movq %rdi, 48(%rax)	

4
	movq %reg0, %rax	
	movq -64(%rbp), %rsi	

4
	movq %r12, 8(%reg1)	
	movq %reg1, 24(%reg2)	

4
	movq $0, %reg0	
	movq %reg0, 32(%rax)	

4
	movq %reg0, %rdi	
	movq -128(%rbp), %reg3	

4
	call *%rbx	
	jmp .Main.main_4	

4
	movq -120(%rbp), %rax	
	negl %reg2	

4
	movq $1, %rdi	
	cmpl %edi, %eax	

4
	movq 88(%r12), %r12	
	movq %rax, %reg2	

4
	cmpl %r9d, %ecx	
	sete %r9b	

4
	movq -160(%rbp), %rdi	
	addl %reg2, %reg3	

4
	movq -64(%rbp), %rdi	
	addl %reg2, %reg3	

4
	movq -72(%rbp), %rdi	
	cmpl %edi, %eax	

4
	movq %reg0, 48(%rax)	
	movq $0, %reg0	

4
	movq %r8, %reg1	
	cmpl %r9d, %reg3	

4
	movq $2, %rdi	
	movq $1, %rsi	

4
	movq -184(%rbp), %rax	
	subl %reg2, %reg3	

4
	movq -72(%rbp), %rdi	
	cmpl %reg2, %eax	

4
	movq -72(%rbp), %rsi	
	call *%rax	

4
	movq -184(%rbp), %reg1	
	movq %reg2, %reg3	

4
	movq %rax, %reg1	
	movq %reg1, %reg2	

4
	movq -152(%rbp), %rsi	
	imull %reg2	

4
	movq 56(%r15), %r15	
	movq %rax, %reg2	

4
	movq %rdi, 40(%reg1)	
	movq $0, %rdi	

4
	call *%rax	
	movq $.string8, %rax	

4
	movq %r10, %rax	
	movq %r11, %r10	

4
	movq -136(%rbp), %rax	
	movq %reg2, %rsi	

4
	movq -72(%rbp), %reg1	
	cmpl %edi, %eax	

4
	call *%r12	
	jmp .Main.main_2	

4
	movq $12, %reg0	
	movq -72(%rbp), %rax	

4
	movq $3, %r12	
	movq 0(%rbx), %rax	

4
	movq -24(%rbp), %rax	
	cmpl %reg2, %reg3	

4
	movq %rax, %reg1	
	movq %r10, %rax	

4
	movq -120(%rbp), %rax	
	negl %eax	

4
	imull %r9d	
	movq %rax, %r9	

4
	movq -184(%rbp), %reg1	
	negl %esi	

4
	movq %r12, %rax	
	negl %eax	

4
	movq %reg0, -16(%rbp)	
	movq -8(%rbp), %rdx	

4
	movq -128(%rbp), %rsi	
	call *%reg2	

4
	movq -72(%rbp), %rax	
	negl %reg2	

4
	movq 0(%reg0), %r14	
	movq 56(%r14), %r14	

4
	movq -24(%rbp), %reg1	
	cmpl %eax, %reg3	

4
	jne .Main.main_1	
	movq %r12, %reg1	

4
	movq %reg0, %rsi	
	movq -48(%rbp), %reg3	

4
	movq %reg0, -8(%rbp)	
	movq -8(%rbp), %reg2	

4
	movq %reg0, %reg1	
	movq 8(%reg1), %rbx	

4
	addl %eax, %r8d	
	movq %r8, %reg2	

4
	testq $1, %reg0	
	je .Main.main_37	

4
	movq %r8, %rcx	
	cmpl %r9d, %reg3	

4
	addl %reg0, %reg1	
	movq -128(%rbp), %rdi	

4
	movq %reg0, -128(%rbp)	
	movq %reg2, %reg3	

4
	movq -16(%rbp), %rax	
	movq %reg2, %rbx	

4
	movq %reg0, %rax	
	movq -40(%rbp), %rsi	

4
	subl %reg0, %eax	
	movq -152(%rbp), %reg3	

4
	testq $1, %reg0	
	je .Main.main_59	

4
	movq $1, %reg0	
	cmpl %edi, %eax	

4
	movq %r13, %reg1	
	subl %reg2, %eax	

4
	movq 8(%rbx), %reg1	
	pushq %reg2	

4
	movq %reg0, %rdi	
	movq -16(%rbp), %reg3	

4
	movq %r12, %rax	
	imull %reg2	

4
	addl %edi, %reg1	
	movq -128(%rbp), %rdi	

4
	call out_error	
.Main.main_16:	

4
	movq -112(%rbp), %rsi	
	call *%rax	

4
	negl %esi	
	movq -112(%rbp), %rax	

4
	movq -96(%rbp), %reg1	
	movq %reg2, %rax	

4
	movq %rax, %reg1	
	call Object.abort	

4
	movq %rdi, %rsi	
	cmpl %esi, %eax	

4
	movq %reg0, %reg1	
	movq %r12, %rax	

4
	movq -40(%rbp), %reg1	
	cmpl %esi, %reg3	

4
	movq %reg0, -56(%rbp)	
	movq -8(%rbp), %rdx	

4
	movq 8(%rbx), %reg1	
	pushq %rax	

4
	cmpl $0, %r12d	
	setl %r12b	

4
	movq -128(%rbp), %reg1	
	call *%rax	

4
	movq 152(%r13), %r13	
	movq %rax, %rdi	

4
	movq -88(%rbp), %reg1	
	imull %edi	

4
	movq %reg0, %reg1	
	movq $5, %reg2	

4
.Main.main_3:	
	movq $1, %rbx	

4
	movq -8(%rbp), %reg1	
	movq -112(%rbp), %reg3	

4
	movq %reg0, %rdi	
	movq -40(%rbp), %reg0	

4
	movq 8(%reg0), %reg1	
	movq 0(%reg1), %r12	

4
	movq -40(%rbp), %rsi	
	cmpl %esi, %eax	

4
	movq -144(%rbp), %reg1	
	addl %reg2, %eax	

4
	negl %reg0d	
	negl %reg0d	

4
	addl %edi, %reg1	
	movq %rsi, %rdi	

4
	movq -48(%rbp), %reg1	
	addl %reg2, %eax	

4
	movq $1, %reg0	
	subl %edi, %reg2	

4
	movq 56(%r14), %r14	
	movq %reg1, %rdi	

4
	movq -184(%rbp), %reg1	
	subl %reg2, %reg3	

4
	movq %rbx, %rax	
	movq %reg2, %rsi	

4
	call String.concat	
	movq %rax, %r12	

4
	movq %rdx, %rsi	
	movq %reg2, 8(%reg3)	

4
	movq -96(%rbp), %rax	
	addl %reg2, %reg3	

4
	movq %rax, -24(%rbp)	
	movq -8(%rbp), %rdx	

4
	movq -104(%rbp), %rcx	
	imull %reg2	

4
	call *%rax	
	jmp .Main.main_5	

4
.string6_l:	
	.string "Hello"	

4
.Main.main_8:	
	popq %r14	

4
	testq $1, %reg0	
	je .Main.main_43	

4
	movq $1, %reg0	
	cmpl %esi, %edi	

4
	movq %rdi, %rax	
	cmpl $0, %reg2	

4
	movq %rax, %rdi	
	movq %r15, %rsi	

4
	movq $0, %rdi	
	movq %rdi, 40(%rax)	

4
	setle %dil	
	testq $1, %rdi	

4
	movq %reg0, %r11	
	movq %reg2, %reg0	

4
	movq %rdi, %rsi	
	cmpl %esi, %reg3	

4
	movq %rax, %reg1	
	movq %r15, %reg3	

4
	setle %reg0	
	jg .Main.main_13	

4
	movq -120(%rbp), %rax	
	addl %reg2, %reg3	

4
	movq %reg0, %rsi	
	movq -24(%rbp), %reg3	

4
	movq -8(%rbp), %rdi	
	movq -96(%rbp), %reg3	

4
	movq %reg0, 32(%rax)	
	movq $0, %reg0	

4
	movq -64(%rbp), %reg1	
	addl %edi, %reg3	

4
	movq %reg0, -104(%rbp)	
	movq %reg2, %rdx	

4
	movq 8(%reg0), %reg0	
	movq 0(%rbx), %r12	

4
	movq 8(%rbx), %rdi	
	movq %r12, %reg3	

4
	subl %reg0, %ecx	
	movq $12, %r8	

4
	movq %reg0, -168(%rbp)	
	movq %reg2, %reg3	

4
	call *%rbx	
	popq %r15	

4
	movq %rbx, %reg1	
	call *%r13	

4
	sete %r14b	
	jne .Main.main_1	

4
	imull %reg0	
	movq 0(%reg1), %r12	

4
	jmp .Main.main_24	
.Main.main_23:	

4
	movq %rdi, -8(%rbp)	
	movq -8(%rbp), %reg2	

4
	movq 16(%reg0), %reg0	
	call *%reg0	

4
	movq %reg0, %rax	
	addl %ecx, %reg3	

4
	movq %r12, %rdi	
	cmpl %reg2, %edi	

4
	movq %reg0, %rbx	
	movq -32(%rbp), %rax	

4
	movq -64(%rbp), %rdi	
	addl %edi, %reg3	

4
	movq -128(%rbp), %rdi	
	addl %reg2, %eax	

4
	movq -88(%rbp), %rdi	
	addl %edi, %reg3	

4
	movq -184(%rbp), %rsi	
	negl %reg2	

4
	movq -48(%rbp), %rdi	
	addl %edi, %eax	

4
	movq %r13, %rdi	
	movq %rax, %rsi	

4
	movq -152(%rbp), %rsi	
	imull %esi	

4
	setl %al	
	movq $1, %reg1	

4
	movq -24(%rbp), %reg1	
	movq $0, %reg2	

4
	movq 120(%rax), %rax	
	movq %reg1, %rdi	

4
	movq %rax, 16(%rbx)	
	movq 0(%rbx), %rax	

4
	movq 72(%reg0), %reg0	
	movq 8(%reg1), %reg2	

4
	cmpq $Int_vtable, 0(%reg0)	
	je .Main.main_3	

4
	movq -72(%rbp), %reg1	
	call *%rax	

4
	movq $0, %rax	
	cmpl $0, %reg1	

4
	movq -48(%rbp), %reg1	
	addl %edi, %reg3	

4
	movq %rax, %reg1	
	cmpl $0, %edi	

4
	imull %edi	
	movq 0(%rbx), %reg2	

4
	movq -40(%rbp), %rcx	
	imull %ecx	

4
	movq %rsi, %rdi	
	movq %rdx, %rsi	

4
	addl %edi, %eax	
	movq -128(%rbp), %rdi	

4
	movq %rdi, 8(%reg1)	
	movq %rsi, 16(%reg1)	

4
	movq -48(%rbp), %reg1	
	cmpl %eax, %esi	

4
	call Bar.new	
	movq %rax, %reg1	

4
	movq -144(%rbp), %reg1	
	imull %esi	

4
	movq 48(%reg0), %reg0	
	movq -16(%rbp), %reg2	

4
	addl %edi, %esi	
	movq %reg2, %rdi	

4
	movq %rax, -16(%rbp)	
	movq %reg2, %reg3	

4
	idivl %reg0d	
	subl %eax, %esi	

4
	movq 24(%reg0), %reg0	
	movq %r12, %rdi	

4
	call String.new	
	movq %reg0, %rdi	

4
	negl %eax	
	movq $2, %rdi	

4
	imull %edi	
	movq 0(%reg1), %reg2	

4
	movq %reg0, %r10	
	imull %r10d	

4
	movq 8(%rax), %reg1	
	movq 0(%rax), %reg2	

4
	movq 8(%rbx), %reg1	
	movq 0(%rbx), %reg2	

4
.Main.main_3:	
	movq 0(%rax), %reg1	

4
	movq %rax, %r11	
	movq %r10, %rax	

4
	movq %rax, %rdi	
	movq %r15, %reg3	

4
	movq %reg0, %rbx	
	movq 0(%rax), %r12	

4
	movq %r8, %reg1	
	cmpl %reg2d, %reg3	

4
	.type Foo.func, @function	
Foo.func:	

4
	movq -160(%rbp), %rdi	
	cmpl %reg2, %eax	

4
	movq $2, %reg0	
	movq $1, %rsi	

4
	addl %reg0, %reg1	
	movq -32(%rbp), %reg3	

4
	.string "\\n"	
.string6:	

4
	movq $0, %reg0	
	movq %reg0, 72(%reg1)	

4
	movq %reg0, -104(%rbp)	
	movq -8(%rbp), %rdx	

4
	movq -104(%rbp), %rdi	
	addl %reg2, %reg3	

4
	movq %reg0, %reg1	
	movq 8(%reg1), %reg0	

4
	call *%reg0	
	movq %rbx, %reg0	

4
	cmpl %reg0, %r11d	
	sete %bl	

4
	movq -72(%rbp), %rax	
	movq %reg2, %rdi	

4
	movq %rbx, %reg1	
	subl %reg2, %reg3	

4
	movq %rax, -168(%rbp)	
	movq -8(%rbp), %reg3	

4
	movq 0(%rbx), %r13	
	movq 64(%r13), %r13	

4
	movq -136(%rbp), %reg1	
	movq %reg2, %rsi	

4
	call *%r15	
	cmpl $0, %eax	

4
	movq -112(%rbp), %reg1	
	cmpl %reg2, %reg3	

4
	movq $0, %rdi	
	movq %rdi, 32(%rax)	

4
	movq $3, %r12	
	movq 0(%rbx), %reg2	

4
	call *%r13	
	movq %rax, %reg2	

4
	movq -40(%rbp), %reg1	
	cmpl %esi, %eax	

4
	movq -128(%rbp), %reg1	
	cmpl %reg2, %reg3	

4
	movq %reg0, 8(%reg1)	
	movq %rsi, 16(%reg1)	

4
	movq %reg0, -32(%rbp)	
	movq %reg2, %reg3	

4
	movq $.string8, %r13	
	movq %reg1, %reg2	

4
	movq -112(%rbp), %reg1	
	call *%rax	

4
	addl %reg0, %reg1	
	movq -104(%rbp), %reg3	

4
	movq -80(%rbp), %reg1	
	subl %edi, %eax	

4
	movq -96(%rbp), %reg1	
	call *%reg2	

4
	movq %rdi, %reg1	
	negl %reg2	

4
	movq -144(%rbp), %reg1	
	movq %reg2, %rdi	

4
	movq $0, %reg0	
	cmpl $0, %eax	

4
	addl %reg0, %reg1	
	movq %rsi, %rdi	

4
	testq $1, %rdi	
	je .Main.main_8	

4
	subl %edi, %reg1	
	movq 0(%rbx), %reg3	

4
	je .Main.main_2	
	movq $7, %rsi	

4
	movq 8(%reg0), %reg1	
	pushq %reg2	

4
	call *%rbx	
.Main.main_7:	

4
	movq %reg0, -24(%rbp)	
	movq %reg2, %reg3	

4
	movq -88(%rbp), %rdi	
	addl %reg2, %eax	

4
	movq $5, %rax	
	movq 0(%rbx), %reg2	

4
	movq %rax, %rdi	
	movq -40(%rbp), %rax	

4
	movq %reg0, %rax	
	movq -112(%rbp), %reg3	

4
	.size Foo.setX, .-Foo.setX	
	.globl Foo.getX	

4
	movq %reg0, %r11	
	movq %r10, %reg0	

4
	movq 8(%rbx), %rax	
	movq 0(%rbx), %r12	

4
	movq -64(%rbp), %rdi	
	addl %edi, %eax	

4
	movq %reg0, -72(%rbp)	
	movq %reg2, %rdx	

4
	movq 104(%rbx), %rbx	
	movq %reg1, %rdi	

4
	movq $20, %rax	
	movq %rax, %reg1	

4
	movq %reg0, -64(%rbp)	
	movq -8(%rbp), %reg3	

4
Foo.func:	
	pushq %reg0	

4
	movq 56(%r14), %r14	
	movq %reg1, %reg2	

4
	negl %reg0	
	movq -144(%rbp), %reg2	

4
	movq %r13, %rdx	
	call *%reg2	

4
	movq -128(%rbp), %rdi	
	addl %reg2, %reg3	

4
	movq %rax, -168(%rbp)	
	movq %reg2, %reg3	

4
	movq %rax, -24(%rbp)	
	movq -8(%rbp), %reg3	

4
	movq $3, %reg0	
	movq 0(%rbx), %rax	

4
	movq 8(%reg0), %reg0	
	movq 0(%rbx), %reg2	

4
	movq %reg0, %rcx	
	cmpl %r9d, %ecx	

4
	movq %r9, %r8	
	subl %r8d, %eax	

4
	movq %reg0, %rsi	
	call Main.func	

4
	movq -48(%rbp), %rdi	
	addl %reg2, %reg3	

4
	movq $6, %reg0	
	movq $.string3_l, %reg1	

4
.Main.main_9:	
	movq 0(%rax), %reg1	

4
	movq 104(%rbx), %rbx	
	movq %rax, %rdi	

4
	movq -40(%rbp), %rsi	
	cmpl %reg2, %reg3	

4
	movq %reg0, %reg1	
	movq 0(%rax), %r12	

4
	movq %rax, -16(%rbp)	
	movq -8(%rbp), %reg3	

4
	movq -96(%rbp), %reg1	
	imull %esi	

4
	movq %reg0, %rdi	
	movq -72(%rbp), %rsi	

4
	movq -160(%rbp), %reg1	
	addl %edi, %reg3	

4
	movq -88(%rbp), %reg1	
	subl %reg2, %eax	

4
.Main.main_11:	
	movq 0(%reg0), %reg1	

4
	movq 8(%reg0), %reg1	
	cmpl $0, 16(%reg0)	

4
	movq 0(%reg0), %rbx	
	movq 104(%rbx), %rbx	

4
	movq %rax, %reg1	
	movq %reg2, %rcx	

4
	movq %rdi, 8(%rax)	
	movq %reg2, 16(%rax)	

4
	imull %reg0	
	movq 0(%reg1), %reg2	

4
	movq -64(%rbp), %rdi	
	addl %reg2, %eax	

4
	setle %bl	
	jg .Main.main_13	

4
	movq $2, %rdi	
	movq %rdi, %rsi	

4
	je .Main.main_2	
	movq $4, %reg0	

4
	movq -96(%rbp), %reg1	
	call *%rax	

4
.Main.main_4:	
	movq 0(%r12), %reg1	

4
	movq %reg0, %rdi	
	movq -120(%rbp), %reg3	

4
	movq -72(%rbp), %reg1	
	negl %eax	

4
	movq %rax, %rsi	
	movq %r13, %reg3	

4
	movq $20, %reg0	
	movq %reg0, %reg1	

4
	movq %rax, -128(%rbp)	
	movq -8(%rbp), %reg3	

4
	movq 48(%reg0), %reg0	
	movq -16(%rbp), %rdi	

4
	movq -32(%rbp), %reg1	
	subl %reg2, %eax	

4
	idivl %r8d	
	addl %reg1, %esi	

4
	movq %rax, %rdi	
	call *%r14	

4
	movq %rax, -72(%rbp)	
	movq %reg2, %rdx	

4
	movq %reg0, %rdi	
	movq -112(%rbp), %rsi	

4
	call String.length	
	movq 0(%reg0), %reg1	

4
	movq -144(%rbp), %rax	
	movq %reg2, %rdi	

4
	movq %reg0, %rbx	
	movq $0, %r12	

4
	movq -128(%rbp), %reg1	
	subl %reg2, %reg3	

4
	negl %reg0	
	movq %r13, %rax	

4
	movq -72(%rbp), %rax	
	negl %eax	

4
	movq -104(%rbp), %rcx	
	imull %ecx	

4
	movq %reg0, %reg1	
	movq %reg2, 8(%rax)	

4
	movq -80(%rbp), %rax	
	subl %reg2, %reg3	

4
	movq %rax, %rsi	
	call Main.func	

4
.Main.main_1:	
	movq 0(%rax), %r13	

4
	movq -16(%rbp), %rdi	
	subl %reg2, %reg3	

4
	movq %reg0, %rax	
	movq -144(%rbp), %reg3	

4
	movq $8, %reg0	
	movq $.string2_l, %reg1	

4
	idivl %r11d	
	subl %reg1, %reg2d	

4
	testq $1, %reg0	
	je .Main.main_25	

4
	movq 48(%rax), %rax	
	movq %r12, %rdi	

4
	movq %rdi, %reg1	
	movq $2, %rdi	

4
	je .Main.main_3	
	movq $7, %rsi	

4
	subl %reg0, %eax	
	movq 0(%reg2), %reg3	

4
	movq %reg0, -128(%rbp)	
	movq %reg2, %rdx	

4
	movq %rdi, %rbx	
	movq 8(%rbx), %reg2	

4
	movq -40(%rbp), %rsi	
	cmpl %esi, %reg3	

4
	addl %reg0, %eax	
	movq -128(%rbp), %rdi	

4
	movq -160(%rbp), %reg1	
	cmpl %eax, %esi	

4
	movq 104(%rbx), %rbx	
	movq %reg1, %reg2	

4
	movq -160(%rbp), %rdi	
	addl %edi, %eax	

4
	movq $7, %reg0	
	movq 0(%rax), %reg2	

4
	movq %rdi, -8(%rbp)	
	movq -8(%rbp), %rdx	

4
	je .Main.main_2	
	movq $7, %reg0	

4
	imull %ecx	
	subl %eax, %esi	

4
	movq -128(%rbp), %rsi	
	call *%rax	

4
	addl %r9d, %eax	
	movq %rax, %r9	

4
	movq %r9, %reg1	
	subl %reg1d, %reg2	

4
	movq -48(%rbp), %reg1	
	cmpl %edi, %eax	

4
	movq %rdi, 64(%rax)	
	movq $0, %rdi	

4
	movq $39, %reg0	
	movq $.string7_l, %rdi	

4
	call *%rbx	
	movq $.string6, %reg1	

4
	movq 88(%reg0), %reg0	
	movq %r12, %rdi	

4
	imull %edi	
	movq 0(%rbx), %r12	

4
	movq -48(%rbp), %rax	
	cmpl %eax, %esi	

4
	subl %reg0, %reg1	
	movq $12, %r8	

4
	movq -40(%rbp), %rsi	
	cmpl %reg2, %eax	

4
	.quad 4	
.string1_l:	

4
	movq %reg0, 8(%reg1)	
	movq %reg1, 24(%reg2)	

4
	movq $8, %reg0	
	movq $.string2_l, %rdi	

4
	movq %r12, %reg1	
	subl %edi, %eax	

4
	movq %rax, %rdi	
	movq -152(%rbp), %rax	

4
	movq %rdi, %rax	
	negl %reg2	

4
	movq %rsi, 16(%reg1)	
	leave	

4
	movq -184(%rbp), %rsi	
	negl %esi	

4
	addl %edi, %esi	
	movq %rsi, %reg3	

4
.Main.main_5:	
	movq 0(%reg0), %reg1	

4
	movq -112(%rbp), %reg1	
	negl %eax	

4
	movq 64(%r13), %r13	
	movq %rax, %rdi	

4
	movq -104(%rbp), %rdi	
	addl %edi, %eax	

4
	movq %reg0, -56(%rbp)	
	movq %reg2, %reg3	

4
	movq -24(%rbp), %rax	
	cmpl %eax, %reg3	

4
	movq %rdi, %reg1	
	movq $.string6, %rax	

4
	movq %reg0, %rdi	
	call *%r14	

4
	movq -144(%rbp), %rsi	
	imull %reg2	

4
	movq %reg0, %rsi	
	movq -144(%rbp), %reg0	

4
	movq 8(%rbx), %rax	
	movq 0(%rbx), %reg2	

4
	movq $3, %r12	
	movq 0(%reg1), %rax	

4
	negl %reg0	
	movq -112(%rbp), %rax	

4
	movq $.string13, %reg0	
	movq 0(%rbx), %reg2	

4
	imull %reg0d	
	subl %eax, %reg2d	

4
	setle %reg0l	
	testq $1, %rdi	

4
	movq %rdi, %rsi	
	cmpl %reg2, %eax	

4
	movq %rax, -104(%rbp)	
	movq -8(%rbp), %reg3	

4
	imull %reg0	
	subl %eax, %esi	

4
	movq -112(%rbp), %rsi	
	call *%reg2	

4
	movq $2, %reg0	
	movq %reg0, %rsi	

4
	movq %rdi, 8(%reg1)	
	movq %reg2, 16(%reg1)	

4
	movq %rax, -72(%rbp)	
	movq -8(%rbp), %reg3	

4
	movq -128(%rbp), %reg1	
	call *%reg2	

4
	movq 8(%rbx), %rdi	
	movq %r12, %rsi	

4
	movq %r12, 8(%rax)	
	movq %rax, 24(%rbx)	

4
	movq %reg0, %rdi	
	cmpl %eax, %edi	

4
	subl %eax, %ecx	
	movq $12, %r8	

4
	testq $1, %reg0	
	je .Main.main_51	

4
	negl %reg0	
	movq -112(%rbp), %reg2	

4
	movq -80(%rbp), %rdi	
	subl %reg2, %reg3	

4
	movq -160(%rbp), %rdi	
	addl %edi, %reg3	

4
	negl %reg0	
	movq -120(%rbp), %reg2	

4
	movq -152(%rbp), %reg1	
	cmpl %reg2, %eax	

4
	movq $0, %rdi	
	movq %rdi, 32(%reg1)	

4
	movq %rax, %reg1	
	movq $5, %rax	

4
	movq 72(%reg0), %reg0	
	movq 8(%rbx), %reg2	

4
	movq %reg0, %r12	
	movq $0, %reg0	

4
	movq %rax, %rsi	
	movq -104(%rbp), %rax	

4
	movq -48(%rbp), %reg1	
	cmpl %edi, %reg3	

4
	movq %rdi, %reg1	
	movq 8(%reg1), %rdi	

4
	movq 64(%r13), %r13	
	movq %rax, %reg2	

4
	call out_error	
.Main.main_21:	

4
	movq %reg0, %rsi	
	movq -168(%rbp), %reg3	

4
	movq %reg0, 8(%rax)	
	movq %rax, 24(%rbx)	

4
	movq $3, %reg0	
	movq 0(%rax), %rbx	

4
	movq %reg0, %rax	
	subl %esi, %reg3	

4
	movq $0, %rdi	
	movq %rdi, 56(%reg1)	

4
	movq -112(%rbp), %reg1	
	addl %reg2, %eax	

4
	movq %reg0, %rcx	
	cmpl %r9d, %reg3	

4
	movq %reg0, %rax	
	movq -120(%rbp), %reg3	

4
	movq 0(%rbx), %rax	
	movq 104(%rax), %rax	

4
	movq 16(%reg0), %reg1	
	movq %reg2, %reg3	

4
	je .Main.main_1	
	movq $6, %rsi	

4
	je .Main.main_3	
	movq $7, %reg0	

4
	je .Main.main_2	
	movq $6, %rsi	

4
	movq %reg0, %rdi	
	movq -56(%rbp), %rax	

4
	movq -104(%rbp), %reg1	
	addl %edi, %eax	

4
	movq -128(%rbp), %rdi	
	addl %edi, %eax	

4
	movq %rdx, %reg1	
	movq %rdi, 8(%rax)	

4
	movq %reg0, %reg1	
	popq %r15	

4
	testq $1, %reg0	
	je .Main.main_24	

4
	movq -160(%rbp), %reg1	
	cmpl %reg2, %esi	

4
	movq -24(%rbp), %rax	
	movq $0, %reg2	

4
	movq 64(%r13), %r13	
	movq %rbx, %rdi	

4
	addl %r9d, %reg1	
	movq %rax, %r9	

4
	movq 24(%reg0), %reg0	
	movq %r12, %reg2	

4
	movq %reg0, %rax	
	movq %r15, %rdi	

4
	movq $39, %reg0	
	movq $.string7_l, %reg1	

4
	movq %reg0, %reg1	
	movq %reg1, %rax	

4
	movq %reg0, %rdi	
	movq -24(%rbp), %reg3	

4
	negl %reg0	
	movq %rax, %rsi	

4
	movq %rax, -56(%rbp)	
	movq %reg2, %rdx	

4
	movq %reg0, %reg1	
	movq -176(%rbp), %reg3	

4
	addl %reg0, %r8d	
	movq %r8, %rax	

4
	movq %reg0, -104(%rbp)	
	movq -8(%rbp), %reg3	

4
	movq -80(%rbp), %rdi	
	subl %edi, %reg3	

4
	movq %rax, 40(%reg1)	
	movq %reg1, %rax	

4
	movq %rax, %reg1	
	movq %r13, %rdx	

4
	addl %reg0, %reg1	
	movq -48(%rbp), %reg3	

4
	movq %reg0, %reg1	
	jmp .Main.main_1	

4
	movq %rax, %reg1	
	movq %r15, %rsi	

4
	movq 56(%r15), %r15	
	movq %rax, %rdi	

4
	addl %reg0, %eax	
	movq -40(%rbp), %rdi	

4
	movq %rax, %rsi	
	movq %r13, %rdx	

4
	movq 0(%reg0), %r13	
	movq 152(%r13), %r13	

4
	call *%reg0	
	call Object.new	

4
	movq %reg0, %rax	
	imull %r8d	

4
	movq $4, %rdi	
	imull %reg1	

4
	movq %rdi, %reg1	
	movq $1, %rsi	

4
	movq -24(%rbp), %rax	
	addl %reg2, %reg3	

4
	movq -72(%rbp), %rdi	
	addl %reg2, %reg3	

4
	.string "\\n"	
.string8:	

4
	movq %r12, %rax	
	negl %reg2	

4
	movq $0, %rax	
	movq %rax, %r14	

4
	imull %reg0	
	movq 0(%rbx), %reg2	

4
	movq $Bar_vtable, 0(%rax)	
	movq %rax, %reg1	

4
	call Object.new	
	cmpl $0, %reg0	

4
	call String.new	
	movq %rax, %rdi	

4
	movq %rdi, 24(%reg1)	
	movq $0, %rdi	

4
	movq %reg0, %reg1	
	movq %r15, %rdi	

4
	imull %reg0	
	movq -160(%rbp), %reg2	

4
	je .Main.main_3	
	movq $3, %reg0	

4
	movq 0(%reg0), %rax	
	movq 128(%rax), %rax	

4
	movq %reg0, %rsi	
	movq %rdi, 8(%rax)	

4
	movq $12, %reg0	
	movq -48(%rbp), %rax	

4
	negl %reg0d	
	movq %reg1, %reg2	

4
	movq %r12, %rdi	
	cmpl %eax, %reg3	

4
	movq 8(%rbx), %reg1	
	movq 0(%rbx), %r12	

4
	addl %edi, %reg1	
	movq %rsi, %reg3	

4
	movq -80(%rbp), %rdi	
	subl %edi, %eax	

4
	movq $21, %rsi	
	movq $.string3_l, %rdi	

4
	movq -104(%rbp), %reg1	
	imull %ecx	

4
	movq %rdi, 8(%rax)	
	movq %rsi, 16(%rax)	

4
	movq %rax, %rsi	
	movq -144(%rbp), %rax	

4
	movq -8(%rbp), %reg1	
	movq -96(%rbp), %reg3	

4
	movq -120(%rbp), %rcx	
	imull %reg2	

4
	movq 72(%reg0), %reg0	
	movq 8(%rbx), %rdi	

4
	movq $0, %rdi	
	movq %rdi, 48(%reg1)	

4
	setle %reg0l	
	testq $1, %reg1	

4
	movq %reg0, %r12	
	call Cons.new	

4
	movq $1, %rdi	
	subl %reg1, %reg2	

4
	movq %reg0, -64(%rbp)	
	movq %reg2, %rdx	

4
	movq -160(%rbp), %reg1	
	imull %reg2	

4
	movq %reg0, %reg1	
	movq %reg1, %rdx	

4
	movq $4, %reg0	
	movq $.string2_l, %rdi	

4
	movq $1, %rdi	
	cmpl %reg1, %eax	

4
	movq -80(%rbp), %rax	
	addl %reg2, %edi	

4
	movq -120(%rbp), %reg1	
	negl %eax	

4
	movq -8(%rbp), %reg1	
	movq -72(%rbp), %reg3	

4
	movq -72(%rbp), %reg1	
	addl %edi, %reg3	

4
	movq $0, %rax	
	cmpl $0, %eax	

4
	call out_error	
.Main.main_24:	

4
	movq %reg0, -24(%rbp)	
	movq -8(%rbp), %rdx	

4
	movq 8(%reg0), %rax	
	movq 0(%reg0), %r12	

4
	movq %rsi, 16(%rax)	
	leave	

4
	movq $12, %reg0	
	movq -72(%rbp), %reg2	

4
	movq %rdx, %reg1	
	movq %reg2, 8(%reg3)	

4
	addl %edi, %reg1	
	movq -40(%rbp), %reg3	

4
	call *%r14	
	movq %rax, %r14	

4
	movq $1, %rax	
	negl %reg1	

4
	movq -8(%rbp), %reg1	
	movq -128(%rbp), %rsi	

4
	movq -80(%rbp), %rax	
	addl %eax, %edi	

4
	movq %reg0, %rax	
	movq -40(%rbp), %reg0	

4
	movq %r15, %reg1	
	cmpl %reg2, %eax	

4
	movq -32(%rbp), %reg1	
	addl %edi, %reg3	

4
	movq $1, %reg0	
	cmpl %reg1, %eax	

4
	movq -144(%rbp), %rsi	
	imull %esi	

4
	movq $1, %reg0	
	subl %edi, %eax	

4
	movq -16(%rbp), %rsi	
	imull %esi	

4
	movq -16(%rbp), %rsi	
	imull %reg2	

4
	call *%rax	
	testq $1, %rax	

4
	movq %r12, %rdi	
	cmpl %eax, %edi	

4
	addl %reg0, %eax	
	movq -104(%rbp), %reg3	

4
	movq %reg0, %rbx	
	movq 0(%rax), %reg3	

4
	movq $4, %rdi	
	imull %edi	

4
	call *%reg0	
	movq %rax, 8(%rbx)	

4
	movq %rdx, %reg1	
	movq %reg2, %reg3	

4
	subl %eax, %ecx	
	movq $12, %reg2	

4
	call *%r12	
.Main.main_14:	

4
	movq %reg0, 8(%reg1)	
	cmpq $Int_vtable, 0(%reg1)	

4
	subl %reg0, %reg1	
	movq 0(%reg2), %reg3	

4
	.quad IO.out_string	
	.quad Bazz.printh	

4
	movq $0, %rdi	
	movq %rdi, 64(%reg1)	

4
	movq %reg0, 40(%reg1)	
	movq %reg1, %reg0	

4
	movq $1, %rsi	
	cmpl %reg1, %reg2	

4
	call Bar.new	
	cmpl $0, %reg0	

4
	movq 104(%reg0), %reg0	
	movq %rax, %rdi	

4
	movq -160(%rbp), %reg1	
	cmpl %edi, %reg3	

4
	call *%rax	
	movq $0, %rax	

4
	addl %edi, %reg1	
	movq -40(%rbp), %rdi	

4
	movq %reg0, %rax	
	movq %r13, %rsi	

4
	movq %reg0, %rbx	
	movq $2, %rax	

4
	addl %reg0, %r8d	
	movq %r8, %reg2	

4
	movq $12, %reg0	
	movq -16(%rbp), %reg2	

4
	movq $.string6, %r12	
	movq 0(%reg1), %reg2	

4
	movq $1, %rax	
	movq %rax, 8(%reg1)	

4
	movq 104(%rax), %rax	
	movq %rbx, %rdi	

4
	movq $12, %reg0	
	movq -48(%rbp), %reg2	

4
	call *%reg0	
	movq %rbx, %reg2	

4
	movq %rbx, %rdx	
	call *%r13	

4
	movq %rdi, %rax	
	cmpl $0, %eax	

4
	movq %r12, 8(%rax)	
	movq %rax, 24(%reg2)	

4
	movq %reg0, -72(%rbp)	
	movq %reg2, %reg3	

4
	movq $12, %reg0	
	movq -104(%rbp), %reg2	

4
	movq $7, %reg0	
	movq $.string3_l, %reg1	

4
	movq %rax, -104(%rbp)	
	movq %reg2, %rdx	

4
	testq $1, %rax	
	je .Main.main_14	

4
	movq 0(%reg0), %rax	
	movq 120(%rax), %rax	

4
	movq %reg0, %rdi	
	call Object.type_name	

4
	movq %reg0, 8(%reg1)	
	movq 0(%rbx), %reg0	

4
	movq %rax, %reg1	
	cmpl %esi, %reg3	

4
	movq %reg0, %reg1	
	subq $8, %reg0	

4
	movq %reg0, %reg1	
	movq %rdi, 8(%reg3)	

4
	movq $0, %reg0	
	movq %reg0, 64(%rax)	

4
	movq %reg0, %reg1	
	call Object.abort	

4
	movq %rbx, %rdi	
	cmpl %reg2, %eax	

4
	movq -80(%rbp), %reg1	
	subl %edi, %reg3	

4
	addl %reg0, %esi	
	movq %reg2, %rdi	

4
	movq $1, %rax	
	testq $1, %rax	

4
	movq -48(%rbp), %rdi	
	cmpl %reg2, %eax	

4
	movq 8(%reg0), %reg0	
	movq 0(%reg1), %reg2	

4
	movq -8(%rbp), %reg1	
	movq -72(%rbp), %rsi	

4
	movq %reg0, %rdi	
	movq -96(%rbp), %rsi	

4
	movq %rdi, %reg1	
	movq 8(%reg1), %rax	

4
	movq $1, %reg0	
	cmpl %esi, %reg2	

4
	idivl %reg0d	
	subl %reg1, %esi	

4
	call *%r13	
	popq %r13	

4
	movq $7, %rsi	
	movq $.string3_l, %reg1	

4
	movq -128(%rbp), %reg1	
	addl %edi, %reg3	

4
	movq $0, %reg0	
	movq %reg0, 40(%rax)	

4
	movq -32(%rbp), %reg1	
	movq %rbx, %reg3	

4
	addl %edi, %eax	
	movq -40(%rbp), %reg3	

4
	movq -8(%rbp), %rdi	
	movq -128(%rbp), %reg3	

4
	movq -160(%rbp), %rax	
	cmpl %eax, %esi	

4
	call *%r13	
	movq %reg1, %r12	

4
	subl %reg0, %reg1	
	movq 0(%rbx), %reg3	

4
	addl %reg0, %reg1	
	movq -24(%rbp), %rdi	

4
	movq -32(%rbp), %reg1	
	addl %edi, %eax	

4
	movq %rax, -72(%rbp)	
	movq %reg2, %reg3	

4
	setl %reg0	
	movq $1, %reg1	

4
	movq %rdi, 40(%rax)	
	movq $0, %rdi	

4
	movq -160(%rbp), %reg1	
	cmpl %eax, %reg3	

4
	call *%r12	
	call String.new	

4
	call *%rbx	
	movq $.string6, %rbx	

4
	call String.concat	
	movq %reg0, %r12	

4
	movq -72(%rbp), %reg1	
	movq %reg2, %rdi	

4
	movq -72(%rbp), %reg1	
	addl %edi, %eax	

4
.Main.main_2:	
	popq %r12	

4
	movq %reg0, %rax	
	movq 8(%rax), %reg0	

4
	movq 8(%rax), %rax	
	movq 0(%rbx), %r12	

4
	movq %r9, %r8	
	subl %r8d, %reg2	

4
	movq %reg0, %reg1	
	subl %reg2, %reg3d	

4
	movq $4, %reg0	
	movq 0(%rbx), %reg2	

4
	je .Main.main_2	
	movq $6, %reg0	

4
	movq 0(%r12), %reg1	
	movq 24(%reg1), %reg1	

4
	movq %rax, %reg1	
	cmpl %reg2, %edi	

4
	movq 96(%rax), %rax	
	movq %rbx, %reg2	

4
	movq $1, %rax	
	movq %r12, %rdi	

4
	movq -160(%rbp), %rdi	
	cmpl %reg2, %reg3	

4
	movq %rax, -24(%rbp)	
	movq %reg2, %rdx	

4
	movq $12, %reg0	
	movq -40(%rbp), %rax	

4
	movq %r14, %reg1	
	call String.concat	

4
	movq %rax, 40(%rbx)	
	movq %rbx, %rax	

4
	movq %reg0, %reg1	
	movq %rdi, 8(%rax)	

4
	movq $0, %reg0	
	movq %reg0, 48(%rax)	

4
	movq 8(%reg0), %reg0	
	movq 0(%reg1), %r12	

4
	movq %rdx, %rsi	
	movq %reg2, 8(%rax)	

4
	negl %r8d	
	negl %r8d	

4
	movq $0, %reg0	
	cmpl %reg1, %r11d	

4
	call *%reg0	
	movq %reg1, 8(%rbx)	

4
	movq %reg0, 16(%rbx)	
	movq 0(%rbx), %reg0	

4
	movq $7, %rsi	
	movq $.string3_l, %rdi	

4
	movq -24(%rbp), %reg1	
	imull %esi	

4
	addl %reg0, %reg1	
	movq -40(%rbp), %reg3	

4
	cmpl %r9d, %reg1	
	sete %r9b	

4
	negl %r8d	
	movq %reg1, %reg2	

4
	movq %reg0, 24(%rax)	
	movq $0, %reg0	

4
	movq %rax, -104(%rbp)	
	movq %reg2, %reg3	

4
	movq %reg0, %reg1	
	movq %reg2, 8(%reg3)	

4
	movq -48(%rbp), %rdi	
	cmpl %edi, %reg3	

4
	movq -72(%rbp), %rdi	
	addl %reg2, %eax	

4
	movq $0, %reg0	
	cmpl %ebx, %r11d	

4
	call *%reg0	
	call Int.new	

4
	movq %r14, %reg1	
	movq %reg2, %rdi	

4
	call *%r14	
	movq %reg1, %reg2	

4
	subl %edi, %eax	
	movq 0(%rbx), %reg3	

4
	movq %rdx, %rsi	
	movq %rdi, 8(%reg3)	

4
	.quad 4	
percentlld_string_l:	

4
	movq -16(%rbp), %reg1	
	call *%reg2	

4
	testq $1, %reg0	
	je .Main.main_27	

4
	movq -32(%rbp), %rax	
	movq %reg2, %rsi	

4
	movq -8(%rbp), %rdi	
	movq -72(%rbp), %reg3	

4
	movq %reg0, %rax	
	movq %r11, %reg0	

4
	imull %reg0	
	movq -176(%rbp), %reg2	

4
	addl %edi, %reg1	
	movq -24(%rbp), %reg3	

4
	movq -8(%rbp), %rdi	
	movq -112(%rbp), %reg3	

4
	movq 48(%rax), %rax	
	movq %r12, %reg2	

4
	movq $0, %rdi	
	movq %rdi, 64(%rax)	

4
	idivl %reg0d	
	addl %eax, %esi	

4
	movq -184(%rbp), %reg1	
	addl %reg2, %reg3	

4
	movq %reg0, %r14	
	movq %rbx, %reg3	

4
	movq %rax, %reg1	
	movq $4, %rax	

4
	movq -128(%rbp), %reg1	
	movq %reg2, %rax	

4
	movq %reg0, -16(%rbp)	
	movq %reg2, %rdx	

4
	movq %reg0, %rdi	
	movq -72(%rbp), %reg3	

4
	movq %reg0, %rdi	
	movq -96(%rbp), %reg3	

4
	movq %rax, -64(%rbp)	
	movq -8(%rbp), %reg3	

4
	movq -8(%rbp), %rdi	
	movq -96(%rbp), %rsi	

4
	addl %reg0, %eax	
	movq -40(%rbp), %reg3	

4
	movq -72(%rbp), %reg1	
	cmpl %edi, %reg3	

4
	addl %edi, %eax	
	movq -40(%rbp), %rdi	

4
	je .Main.main_1	
	movq $6, %reg0	

4
	negl %reg0	
	movq -96(%rbp), %rax	

4
	movq %rdx, %reg1	
	movq %reg2, 8(%rax)	

4
	movq -48(%rbp), %rdi	
	cmpl %edi, %eax	

4
	movq %reg0, %r8	
	movq %reg2, %reg3	

4
	movq %reg0, %reg1	
	imull %r8d	

4
	movq -16(%rbp), %rbx	
	movq -32(%rbp), %reg3	

4
	movq %reg0, %reg1	
	movq %reg0, %rdi	

4
	movq -64(%rbp), %reg1	
	addl %edi, %eax	

4
	call *%rax	
	movq $.string6, %r14	

4
	movq %reg0, %reg1	
	movq -144(%rbp), %rsi	

4
	movq %rdi, 56(%rax)	
	movq $0, %rdi	

4
	movq %reg0, -56(%rbp)	
	movq -8(%rbp), %reg3	

4
	movq %reg0, %reg1	
	movq $0, %rsi	

4
	movq %reg0, 64(%rax)	
	movq $0, %reg0	

4
	movq %reg0, %rbx	
	movq $.string6, %reg2	

4
	movq $21, %reg0	
	movq $.string3_l, %reg1	

4
	negl %eax	
	movq %rax, %rsi	

4
	movq 0(%r12), %rax	
	movq 48(%rax), %rax	

4
	movq $3, %r12	
	movq 0(%rax), %reg2	

4
	movq -168(%rbp), %rax	
	negl %eax	

4
	movq %rax, %rsi	
	movq -24(%rbp), %rax	

4
	movq %reg0, 16(%reg1)	
	movq 0(%reg1), %reg0	

4
	movq $2, %rax	
	movq $1, %reg1	

4
	testq $1, %reg0	
	je .Main.main_18	

4
	movq %rax, -16(%rbp)	
	movq %reg2, %rdx	

4
	movq $6, %rsi	
	movq $.string3_l, %reg1	

4
	movq -80(%rbp), %reg1	
	cmpl %edi, %reg3	

4
	call *%rax	
.Main.main_8:	

4
	movq %reg0, 40(%rax)	
	movq $0, %reg0	

4
	movq $4, %rsi	
	movq $.string2_l, %reg1	

4
	movq $1, %rsi	
	cmpl %esi, %edi	

4
	movq -88(%rbp), %rdi	
	addl %reg2, %reg3	

4
	movq %reg0, %rbx	
	movq -32(%rbp), %reg3	

4
	movq %reg0, %reg1	
	movq $3, %reg2	

4
	movq %r9, %reg1	
	subl %reg1d, %eax	

4
	movq -120(%rbp), %rax	
	movq $0, %reg2	

4
	movq %r8, %rcx	
	cmpl %r9d, %ecx	

4
	movq %rdi, %rax	
	movq $0, %rdi	

4
	movq $12, %reg0	
	movq -104(%rbp), %rax	

4
	movq %reg0, %rax	
	movq %reg0, %rdi	

4
	movq %rax, %rcx	
	movq %r13, %rax	

4
	call *%r13	
	movq 0(%reg1), %reg2	

4
	movq $0, %reg0	
	call DicNode.new	

4
	testq $1, %reg0	
	je .Main.main_53	

4
	movq %rax, -64(%rbp)	
	movq -8(%rbp), %rdx	

4
	movq $2, %reg0	
	movq 0(%rax), %reg2	

4
	movq %reg0, -24(%rbp)	
	movq -8(%rbp), %reg3	

4
	movq -160(%rbp), %reg1	
	cmpl %edi, %eax	

4
	testq $1, %reg0	
	je .Main.main_33	

4
	addl %edi, %eax	
	movq -24(%rbp), %rdi	

4
	movq 104(%reg0), %reg0	
	movq %rax, %reg2	

4
	movq %reg0, %rax	
	popq %r13	

4
	movq $.string7, %r12	
	movq 0(%reg1), %reg2	

4
	call *%rax	
	cmpl $0, -16(%rbp)	

4
	call *%rax	
	movq 0(%rax), %r12	

4
	movq %reg0, -56(%rbp)	
	movq %reg2, %rdx	

4
	movq %reg0, %rdi	
	call Object.abort	

4
	movq -96(%rbp), %rsi	
	call *%reg2	

4
	movq %reg0, %reg1	
	popq %r13	

4
	addl %edi, %esi	
	movq %rsi, %rdi	

4
	movq %rax, -72(%rbp)	
	movq -8(%rbp), %rdx	

4
.string8_l:	
	.string "\\n"	

4
	movq %reg0, -128(%rbp)	
	movq -8(%rbp), %reg3	

4
	movq %rbx, %rax	
	cmpl %eax, %reg3	

4
.Main.main_2:	
	movq %reg0, %rdi	

4
	movq %reg0, %reg1	
	movq -120(%rbp), %rsi	

4
	movq -128(%rbp), %reg1	
	addl %edi, %eax	

4
	movq 16(%rbx), %reg1	
	cmpl %reg2, %reg3	

4
	movq -112(%rbp), %rax	
	negl %eax	

4
	call Int.new	
	movq %rbx, 8(%reg1)	

4
	movq $0, %rbx	
	cmpl %ebx, %r11d	

4
	movq $4, %reg0	
	imull %edi	

4
	movq %rax, 16(%reg1)	
	movq 0(%reg1), %rax	

4
.Main.main_2:	
	movq %r12, %reg1	

4
	movq 152(%r13), %r13	
	movq %rax, %reg2	

4
	.quad Object.type_name	
	.quad Bar.getX	

4
	movq $1, %rsi	
	cmpl %esi, %reg2	

4
	movq %reg0, %rsi	
	movq %reg2, 8(%rax)	

4
	movq $.string10, %reg0	
	movq 0(%reg1), %reg2	

4
	movq $1, %rdi	
	subl %edi, %reg2	

4
	call *%r12	
	movq %reg1, %rax	

4
	movq %reg0, %rax	
	addl %ecx, %eax	

4
	movq %reg0, %reg1	
	movq $1, %rsi	

4
	movq %reg0, %rsi	
	movq -104(%rbp), %reg0	

4
	movq $0, %reg0	
	movq %r12, %reg2	

4
	movq %reg0, %rbx	
	movq 0(%reg2), %reg3	

4
	subq $8, %rsp	
	pushq %reg1	

4
	idivl %r11d	
	subl %eax, %reg2d	

4
	movq %r10, %reg1	
	movq %r11, %r10	

4
	movq -48(%rbp), %rdi	
	addl %reg2, %eax	

4
	movq %reg0, %rsi	
	movq -160(%rbp), %reg3	

4
	movq -80(%rbp), %reg1	
	cmpl %edi, %eax	

4
	.quad 40	
.string6_l:	

4
	movq %rdi, %rbx	
	movq $0, %r12	

4
	movq -104(%rbp), %reg1	
	addl %reg2, %eax	

4
	movq %rdi, %rbx	
	movq $.string6, %reg2	

4
	movq $1, %rdi	
	movq %r13, %rax	

4
	movq -24(%rbp), %reg1	
	call *%reg2	

4
	movq -16(%rbp), %reg1	
	movq %reg2, %rbx	

4
	movq %rbx, %reg1	
	movq %reg2, %rax	

4
	movq -80(%rbp), %reg1	
	imull %reg2	

4
	movq $3, %r12	
	movq 0(%reg1), %rbx	

4
	movq %r13, %rdi	
	movq %rax, %reg3	

4
	movq 120(%rax), %rax	
	movq %rbx, %reg2	

4
	movq 88(%reg0), %reg0	
	movq %r12, %reg2	

4
	movq 24(%rax), %rax	
	movq %r12, %rdi	

4
	movq %r10, %reg1	
	movq %reg2, %r10	

4
	je .Main.main_3	
	movq $3, %rsi	

4
	movq $2, %reg0	
	movq $2, %reg1	

4
	imull %esi	
	movq -184(%rbp), %rsi	

4
	idivl %r8d	
	subl %eax, %esi	

4
	movq 72(%reg0), %reg0	
	movq 8(%reg1), %rdi	

4
	movq -104(%rbp), %rdi	
	addl %reg2, %eax	

4
	movq %reg0, %rbp	
	subq $8, %reg0	

4
	addl %reg0, %eax	
	movq -128(%rbp), %reg3	

4
	movq $3, %rax	
	movq %rax, %reg1	

4
	movq %reg0, 8(%rax)	
	movq 0(%rbx), %reg0	

4
	movq %reg0, 8(%rax)	
	movq 0(%reg2), %reg0	

4
	movq $.string13, %reg0	
	movq 0(%reg1), %reg2	

4
	movq %reg0, %rbx	
	movq 8(%rbx), %reg2	

4
	movq %reg0, %r12	
	movq 8(%reg2), %reg3	

4
	movq $12, %rcx	
	movq -120(%rbp), %reg2	

4
	movq $8, %rsi	
	movq $.string2_l, %reg1	

4
	movq $Bar_vtable, 0(%reg0)	
	movq %reg0, %reg1	

4
	call *%reg0	
	movq -40(%rbp), %reg2	

4
	movq $0, %reg0	
	movq %reg0, 56(%rax)	

4
	movq %reg0, 56(%rax)	
	movq $0, %reg0	

4
	movq %rax, %rdi	
	movq %rbx, %rax	

4
	subq $8, %reg0	
	pushq %reg1	

4
	movq -112(%rbp), %rax	
	negl %reg2	

4
	movq %reg0, %rax	
	movq $1, %rsi	

4
	call Object.new	
	cmpl $0, %eax	

4
	testq $1, %reg0	
	je .Main.func_1	

4
	call Bar.new	
	cmpl $0, %eax	

4
	movq -48(%rbp), %reg1	
	addl %edi, %eax	

4
	movq -160(%rbp), %rdi	
	cmpl %edi, %reg3	

4
	movq $12, %reg0	
	movq -168(%rbp), %rax	

4
	movq $12, %reg0	
	movq -136(%rbp), %reg2	

4
	movq 56(%r12), %r12	
	movq %rax, %reg2	

4
	call String.length	
	movq 0(%rbx), %reg1	

4
	movq %rax, -128(%rbp)	
	movq %reg2, %rdx	

4
	movq -120(%rbp), %reg1	
	movq $0, %reg2	

4
	movq $5, %rax	
	movq 0(%reg1), %reg2	

4
	movq $12, %reg0	
	movq -168(%rbp), %reg2	

4
	movq -72(%rbp), %rdi	
	addl %edi, %reg3	

4
	call *%rbx	
	movq $.string6, %rax	

4
	movq %reg0, 8(%reg1)	
	movq %reg2, 16(%reg1)	

4
	movq %rax, -56(%rbp)	
	movq -8(%rbp), %rdx	

4
	call DicNode.new	
	cmpl $0, %eax	

4
	movq 8(%rax), %rax	
	movq 0(%rbx), %reg2	

4
	movq -8(%rbp), %rdi	
	movq -128(%rbp), %rsi	

4
	movq %rbx, %rdi	
	cmpl %edi, %reg3	

4
	movq $1, %rsi	
	cmpl %reg1, %edi	

4
	call *%r12	
	jmp .Main.main_3	

4
	movq %reg0, 32(%rbx)	
	movq $0, %reg0	

4
	movq %r12, 8(%rax)	
	cmpq $Int_vtable, 0(%rax)	

4
	movq -168(%rbp), %rax	
	negl %reg2	

4
	movq -24(%rbp), %rdi	
	addl %reg2, %reg3	

4
	movq %rdi, %reg1	
	cmpl $0, %eax	

4
	movq -160(%rbp), %rax	
	cmpl %reg2, %esi	

4
	call *%reg0	
	jmp .Main.main_10	

4
	movq %reg0, %rdi	
	testq $1, %rdi	

4
	movq %r12, %reg1	
	negl %eax	

4
	movq %reg0, -24(%rbp)	
	movq %reg2, %rdx	

4
	imull %edi	
	movq 0(%reg1), %r12	

4
	movq %rsi, %reg1	
	movq 8(%reg2), %reg3	

4
	movq $12, %reg0	
	movq -136(%rbp), %rax	

4
	cmpl %reg0, %r11d	
	sete %reg2	

4
	movq %reg0, -72(%rbp)	
	movq -8(%rbp), %rdx	

4
	movq -120(%rbp), %rcx	
	imull %ecx	

4
	movq %rax, %reg1	
	jmp .Main.main_1	

4
	addl %reg0, %esi	
	movq %rsi, %rdi	

4
	movq %reg0, %rax	
	movq -96(%rbp), %rsi	

4
	testq $1, %reg0	
	je .Main.main_34	

4
	movq 0(%r12), %rax	
	movq 24(%rax), %rax	

4
	movq %reg0, %r9	
	addl %r9d, %eax	

4
	movq %rax, -128(%rbp)	
	movq -8(%rbp), %rdx	

4
	movq -32(%rbp), %rax	
	movq %rbx, %reg3	

4
	.quad 7	
.string7_l:	

4
	movq 24(%rax), %rax	
	movq %r12, %reg2	

4
	movq $4, %reg0	
	movq 0(%rax), %reg2	

4
	movq -48(%rbp), %rdi	
	cmpl %reg2, %reg3	

4
	movq -40(%rbp), %reg1	
	movq %reg2, %rax	

4
.Main.main_4:	
	movq 0(%r12), %rax	

4
	movq $.string7, %rbx	
	movq %reg1, %reg2	

4
	movq %r8, %reg1	
	cmpl %reg2d, %ecx	

4
	imull %ecx	
	subl %eax, %reg2	

4
	movq %reg0, %reg1	
	call Object.type_name	

4
	movq 0(%rax), %r13	
	movq 64(%r13), %r13	

4
	movq %rax, -104(%rbp)	
	movq -8(%rbp), %rdx	

4
	movq $1, %reg0	
	movq %r13, %rax	

4
	movq $1, %reg0	
	addl %edi, %eax	

4
	movq -160(%rbp), %rdi	
	addl %reg2, %eax	

4
	movq %r14, %rax	
	movq %reg2, %rdi	

4
	movq $1, %reg0	
	movq %reg0, 8(%rbx)	

4
	movq %rdi, 48(%rax)	
	movq $0, %rdi	

4
	addl %edi, %esi	
	movq %reg2, %reg3	

4
	movq -112(%rbp), %reg1	
	cmpl %reg2, %eax	

4
	movq %reg0, %rdi	
	movq -24(%rbp), %reg0	

4
	movq %reg0, %rdi	
	cmpl %eax, %reg3	

4
	movq %reg0, %rsi	
	movq -48(%rbp), %rax	

4
	subl %reg0, %reg1	
	movq -96(%rbp), %reg3	

4
	movq $1, %rax	
	movq %rax, 8(%rbx)	

4
	movq %r8, %rcx	
	cmpl %reg2d, %reg3	

4
	movq %rbx, %rdi	
	cmpl %reg2, %reg3	

4
	movq 0(%rax), %r12	
	movq 88(%r12), %r12	

4
	movq %reg0, %reg1	
	cmpl %esi, %edi	

4
	movq -120(%rbp), %reg1	
	imull %ecx	

4
	movq 104(%rbx), %rbx	
	movq %rax, %reg2	

4
	negl %reg0	
	movq -88(%rbp), %reg2	

4
	movq %rdi, %rax	
	movq 8(%rax), %rdi	

4
	movq 8(%rbx), %reg1	
	movq %r12, %rsi	

4
	addl %eax, %r8d	
	movq %r8, %rax	

4
	movq -160(%rbp), %reg1	
	addl %edi, %eax	

4
	movq -48(%rbp), %rdi	
	addl %edi, %reg3	

4
	cmpl %ebx, %r11d	
	sete %bl	

4
	movq %reg0, %rax	
	movq %rax, %r12	

4
	movq %reg0, %reg1	
	movq -160(%rbp), %rax	

4
	movq 120(%rax), %rax	
	movq %rbx, %rdi	

4
	movq %reg0, -64(%rbp)	
	movq %reg2, %reg3	

4
	movq 0(%reg0), %rax	
	movq 40(%rax), %rax	

4
	ret	
	.size Foo.func, .-Foo.func	

4
	cmpl $0, %reg0	
	movq %reg0, %rdi	

4
	movq %reg0, 8(%rax)	
	movq %rax, 24(%reg2)	

4
	movq %reg0, %rsi	
	movq -24(%rbp), %reg0	

4
	movq %reg0, -64(%rbp)	
	movq -8(%rbp), %rdx	

4
	movq %rdi, %rax	
	movq %rax, %r12	

4
	movq %reg0, %rdi	
	movq %rbx, %reg0	

4
	movq -16(%rbp), %rax	
	movq %reg2, %rsi	

4
	movq $1, %rdi	
	movq %r13, %reg2	

4
	movq $2, %rdi	
	movq %rdi, %reg1	

4
	negl %reg0	
	movq $1, %reg1	

4
	idivl %r8d	
	addl %eax, %esi	

4
	call out_error	
.Main.main_47:	

4
	addl %edi, %reg1	
	movq -24(%rbp), %rdi	

4
	addl %reg0, %eax	
	movq -24(%rbp), %rdi	

4
	negl %reg0	
	movq $2, %rdi	

4
	movq %reg0, %rax	
	xorq $1, %rax	

4
	movq %r13, %reg1	
	movq %rax, %rsi	

4
	movq %rsp, %rbp	
	subq $8, %rsp	

4
	movq 64(%r13), %r13	
	movq %rbx, %reg2	

4
	imull %esi	
	movq -184(%rbp), %reg2	

4
	movq %reg0, %r11	
	movq $0, %reg0	

4
	movq %reg0, -168(%rbp)	
	movq -8(%rbp), %reg3	

4
	movq $4, %reg0	
	movq 0(%reg1), %r12	

4
	call String.substr	
	movq 0(%rbx), %r12	

4
	movq -120(%rbp), %reg1	
	addl %reg2, %eax	

4
	addl %reg0, %reg1	
	movq -88(%rbp), %reg3	

4
	negl %eax	
	movq %rax, %rdi	

4
	movq %reg0, %rcx	
	movq %reg2, %reg3	

4
	movq -32(%rbp), %rax	
	movq %rbx, %rdi	

4
	movq 56(%r12), %r12	
	movq %rax, %rdi	

4
	movq %rax, %rsi	
	movq %reg2, %rcx	

4
	subl %reg0, %eax	
	movq 0(%rbx), %reg3	

4
	movq $0, %rdi	
	movq %rdi, 56(%rax)	

4
	movq %reg0, %reg1	
	movq -152(%rbp), %rdi	

4
	subl %edi, %reg1	
	movq 0(%reg2), %reg3	

4
	movq -64(%rbp), %reg1	
	cmpl %reg2, %reg3	

4
	call Int.new	
	movq %rbx, 8(%rax)	

4
	call String.concat	
	cmpl $0, %reg0	

4
	movq %r14, %reg1	
	imull %reg2	

4
	movq %rdi, %reg1	
	movq 8(%reg1), %r12	

4
	cdq	
	idivl %r12d	

4
	movq -32(%rbp), %reg1	
	movq %rbx, %rdi	

4
	movq -88(%rbp), %reg1	
	addl %edi, %eax	

4
	subl %reg0, %reg1	
	movq %r12, %reg3	

4
Foo.func:	
	pushq %rbp	

4
	call *%r14	
	movq %reg1, %r14	

4
	movq 152(%r13), %r13	
	movq %reg1, %rdi	

4
	movq %rax, -64(%rbp)	
	movq %reg2, %rdx	

4
	movq -72(%rbp), %reg1	
	call *%reg2	

4
	movq 88(%r12), %r12	
	movq %rax, %rdi	

4
	movq -48(%rbp), %rcx	
	imull %reg2	

4
	call *%r13	
	movq %rax, %r12	

4
	testq $1, %reg0	
	je .Main.main_55	

4
	movq -104(%rbp), %reg1	
	addl %edi, %reg3	

4
	movq %reg0, %reg1	
	xorq $1, %reg1	

4
	movq -8(%rbp), %reg1	
	movq -96(%rbp), %rsi	

4
	movq %reg0, %rbx	
	movq 0(%reg2), %r12	

4
	movq %rax, %rdi	
	movq -120(%rbp), %rax	

4
	movq %reg0, 8(%rax)	
	movq %reg2, 16(%rax)	

4
	movq %reg0, -104(%rbp)	
	movq %reg2, %reg3	

4
	imull %reg0	
	subl %reg1, %esi	

4
.Main.main_1:	
	movq 0(%rbx), %reg1	

4
	movq -176(%rbp), %reg1	
	negl %reg2	

4
	imull %ecx	
	subl %reg1, %reg2	

4
	movq -72(%rbp), %rdi	
	cmpl %reg2, %reg3	

4
	movq %reg0, %rax	
	subl %esi, %eax	

4
	movq -88(%rbp), %reg1	
	addl %edi, %reg3	

4
	call out_error	
.Main.main_41:	

4
	movq %reg0, %rcx	
	call *%r15	

4
	movq %reg0, -168(%rbp)	
	movq -8(%rbp), %rdx	

4
.Main.main_2:	
	popq %reg0	

4
	call DicNode.new	
	cmpl $0, %reg0	

4
	movq %r14, %reg1	
	call *%r15	

4
	movq %rbx, %rdi	
	cmpl %edi, %eax	

4
	movq -8(%rbp), %reg1	
	movq -112(%rbp), %rsi	

4
	movq %reg0, %rsi	
	movq %rdi, 8(%reg3)	

4
	movq -16(%rbp), %rbx	
	movq -32(%rbp), %rax	

4
	movq $4, %reg0	
	movq $.string2_l, %reg1	

4
	.string "Hello"	
.string6:	

4
	movq -48(%rbp), %rax	
	cmpl %reg2, %esi	

4
	movq $6, %rsi	
	movq $.string3_l, %rdi	

4
	movq -80(%rbp), %reg1	
	negl %reg2	

4
	movq 8(%reg0), %reg1	
	pushq %rax	

4
	movq $.string6, %rax	
	movq %rax, %rdi	

4
	negl %reg0	
	movq -32(%rbp), %reg2	

4
.Main.main_2:	
	movq 0(%rbx), %reg1	

4
	negl %reg0	
	movq %r13, %reg2	

4
	call *%reg0	
	movq 0(%reg0), %r12	

4
	subl %edi, %eax	
	movq 0(%reg2), %reg3	

4
	movq $6, %reg0	
	movq $.string3_l, %rdi	

4
	movq %reg0, -16(%rbp)	
	movq -8(%rbp), %reg3	

4
	movq $3, %reg0	
	movq 0(%reg1), %rbx	

4
	call *%r13	
	cmpl $0, %reg1	

4
	movq %rax, %rdi	
	call Object.abort	

4
	call *%reg0	
	movq $.string6, %r14	

4
	addl %reg0, %eax	
	movq -24(%rbp), %reg3	

4
	movq %rdi, 64(%reg1)	
	movq $0, %rdi	

4
	movq -72(%rbp), %rdi	
	addl %edi, %eax	

4
	call *%rax	
	popq %r14	

4
	.quad .string10_l	
	.quad 1	

4
	addl %reg0, %eax	
	movq -56(%rbp), %reg3	

4
	movq %r12, %rdx	
	call *%reg2	

4
	movq -96(%rbp), %rsi	
	call *%rax	

4
	movq -64(%rbp), %reg1	
	cmpl %reg2, %eax	

4
	setl %reg0b	
	jge .Main.main_2	

4
	movq -160(%rbp), %rdi	
	cmpl %edi, %eax	

4
	movq 16(%reg0), %reg1	
	movq %r12, %reg3	

4
	movq $1, %reg0	
	negl %eax	

4
	.string "hello"	
.string6:	

4
	movq $1, %rdi	
	subl %edi, %eax	

4
	movq %reg0, %rax	
	movq -152(%rbp), %rdi	

4
	movq -120(%rbp), %reg1	
	imull %edi	

4
	movq $1, %reg0	
	testq $1, %reg0	

4
	movq %reg0, %rax	
	popq %r15	

4
	movq %r10, %rax	
	movq %reg2, %r10	

4
	subl %eax, %reg1	
	movq -152(%rbp), %reg3	

4
	movq %rbx, %reg1	
	imull %reg2	

4
	movq %rax, -168(%rbp)	
	movq %reg2, %rdx	

4
	negl %reg0d	
	movq %reg1, %rax	

4
	movq $2, %rax	
	movq $1, %rdi	

4
	negl %r8d	
	movq %reg1, %rax	

4
	call *%reg0	
	testq $1, %reg0	

4
	movq %rsi, %reg1	
	movq %reg1, %rax	

4
	movq %reg0, %reg1	
	movq -48(%rbp), %rsi	

4
	movq %reg0, -8(%rbp)	
	movq -8(%rbp), %rdx	

4
	movq -16(%rbp), %reg1	
	movq -32(%rbp), %rax	

4
	movq %rax, -56(%rbp)	
	movq %reg2, %reg3	

4
	movq -104(%rbp), %rdi	
	addl %edi, %reg3	

4
	movq %r13, %rax	
	subl %eax, %reg3	

4
.Main.main_3:	
	movq $0, %rax	

4
	movq %rdi, %reg1	
	movq $2, %rax	

4
	movq %reg0, %rdi	
	movq -128(%rbp), %rsi	

4
	addl %reg0, %reg1	
	movq -40(%rbp), %rdi	

4
	negl %eax	
	movq $2, %reg1	

4
.Main.main_9:	
	movq 0(%reg0), %r12	

4
	movq $0, %rdi	
	movq %rdi, 40(%reg1)	

4
	negl %reg0	
	movq -176(%rbp), %reg2	

4
	movq $21, %rsi	
	movq $.string3_l, %reg1	

4
	idivl %r8d	
	subl %reg1, %esi	

4
	movq %reg0, 8(%rax)	
	movq %rsi, 16(%rax)	

4
	movq %r14, %reg1	
	movq %reg2, %rcx	

4
	call *%reg0	
	cmpl $0, -16(%rbp)	

4
	negl %reg0	
	addl %reg0, %esi	

4
	movq $12, %rcx	
	movq -120(%rbp), %rax	

4
	.quad 5	
String_vtable:	

4
	movq -136(%rbp), %reg1	
	negl %reg2	

4
	movq -48(%rbp), %reg1	
	cmpl %reg2, %esi	

4
	movq %r12, %reg1	
	subl %edi, %reg3	

4
	movq -24(%rbp), %reg1	
	negl %reg2	

4
	movq -24(%rbp), %reg1	
	call *%rax	

4
	movq %reg0, %rdi	
	movq -120(%rbp), %reg0	

4
	call *%reg0	
	movq $5, %reg0	

4
	movq -104(%rbp), %reg1	
	imull %reg2	

4
	movq %rax, %rdi	
	movq -24(%rbp), %rax	

4
	movq %reg0, 8(%reg1)	
	movq 0(%reg2), %reg0	

4
	negl %edi	
	subl %edi, %eax	

4
	movq $21, %reg0	
	movq $.string3_l, %rdi	

4
	movq -112(%rbp), %reg1	
	call *%reg2	

4
	movq %rdi, %rbx	
	movq %reg2, %rdi	

4
	call *%reg0	
	movq %rax, 8(%reg2)	

4
	movq %rdi, 56(%reg1)	
	movq $0, %rdi	

4
	movq -40(%rbp), %reg1	
	subl %reg2, %reg3	

4
	movq %rdi, %rbx	
	movq %rsi, %rdi	

4
	movq 120(%rax), %rax	
	movq %reg1, %reg2	

4
	movq %reg0, %reg1	
	movq 8(%reg1), %rax	

4
	movq 104(%rax), %rax	
	movq %rbx, %reg2	

4
	movq $1, %rdi	
	addl %reg1, %eax	

4
	imull %reg0	
	movq 0(%rbx), %r12	

4
	movq 8(%rax), %rax	
	movq 0(%reg1), %reg2	

4
	movq 96(%rax), %rax	
	movq %rbx, %rdi	

4
	movq -72(%rbp), %rsi	
	call *%reg2	

4
	movq $3, %reg0	
	movq 0(%reg1), %rax	

4
	movq %rdi, 32(%rax)	
	movq $0, %rdi	

4
.Main.main_1:	
	movq 0(%reg0), %r13	

4
	movq %reg0, -72(%rbp)	
	movq -8(%rbp), %reg3	

4
	movq %rdx, %reg1	
	movq %rdi, 8(%reg3)	

4
	movq -8(%rbp), %rdi	
	movq -72(%rbp), %rsi	

4
	movq -80(%rbp), %rdi	
	subl %reg2, %eax	

4
	subl %reg0, %r8d	
	movq %r8, %reg2	

4
	imull %reg0	
	movq -88(%rbp), %reg2	

4
	movq -136(%rbp), %reg1	
	subl %reg2, %eax	

4
	movq %r10, %reg1	
	movq $0, %r10	

4
	negl %edi	
	subl %edi, %reg1	

4
	movq %rdi, 24(%rax)	
	movq $0, %rdi	

4
	movq %rdi, 32(%reg1)	
	movq $0, %rdi	

4
	movq $0, %rbx	
	cmpl %reg1, %r11d	

4
	movq -136(%rbp), %reg1	
	cmpl %reg2, %eax	

4
	call *%r12	
	jmp .Main.main_5	

4
	movq %rdi, %reg1	
	movq %reg1, %rdx	

4
	setle %dil	
	testq $1, %reg1	

4
	movq %reg0, %r9	
	addl %r9d, %reg2	

4
	idivl %reg0d	
	addl %reg1, %esi	

4
	movq %rdx, %rsi	
	movq %rdi, 8(%rax)	

4
	movq $39, %rsi	
	movq $.string7_l, %reg1	

4
	movq $8, %rsi	
	movq $.string2_l, %rdi	

4
	movq %reg0, %reg1	
	movq $4, %reg0	

4
	movq 0(%rbx), %rax	
	movq 120(%rax), %rax	

4
	movq %r8, %reg1	
	cmpl %r9d, %ecx	

4
	movq -160(%rbp), %rax	
	cmpl %reg2, %reg3	

4
	movq $39, %rsi	
	movq $.string7_l, %rdi	

4
	movq $1, %rax	
	negl %eax	

4
	call Bar.new	
	movq %reg0, %reg1	

4
	movq %rsi, %reg1	
	movq 0(%rax), %reg3	

4
	subl %eax, %reg1	
	movq $12, %r8	

4
	movq 0(%rax), %rbx	
	movq 104(%rbx), %rbx	

4
	.quad .string8_l	
	.quad 2	

4
	imull %ecx	
	subl %reg1, %esi	

4
	movq -72(%rbp), %rdi	
	cmpl %edi, %reg3	

4
	call *%reg0	
	movq %reg1, 8(%reg2)	

4
	movq %rax, -168(%rbp)	
	movq -8(%rbp), %rdx	

4
	movq %rax, -56(%rbp)	
	movq -8(%rbp), %reg3	

4
	movq %reg0, %reg1	
	movq %rsi, %rax	

4
	movq %rax, %r12	
.Main.main_1:	

4
	movq $12, %reg0	
	movq -40(%rbp), %reg2	

4
	movq -160(%rbp), %reg1	
	subl %reg2, %reg3	

4
	movq %rax, 32(%reg1)	
	movq $0, %rax	

4
	movq %rsp, %reg1	
	subq $8, %rsp	

4
	negl %esi	
	movq -112(%rbp), %reg2	

4
	movq -80(%rbp), %reg1	
	addl %reg2, %edi	

4
	movq %rax, %reg1	
	cmpl %esi, %edi	

4
	movq $1, %r12	
	call Int.new	

4
	call *%reg0	
	call String.new	

4
	movq 16(%rax), %rax	
	call *%rax	

4
	addl %edi, %eax	
	movq -128(%rbp), %reg3	

4
	movq %reg0, %rsi	
	movq %reg2, 8(%reg3)	

4
	movq 0(%rax), %r13	
	movq 152(%r13), %r13	

4
	cmpl %ebx, %r11d	
	sete %reg2	

4
	movq $5, %reg0	
	movq 0(%reg1), %r12	

4
	movq $1, %reg0	
	subl %reg1, %eax	

4
	movq %reg0, %rbx	
	movq %rsi, %reg0	

4
	movq %reg0, %reg1	
	movq 8(%reg1), %r12	

4
	movq $1, %reg0	
	addl %reg1, %eax	

4
.Main.main_10:	
	movq %reg0, %reg1	

4
	movq %rdi, %rbx	
	movq $2, %rax	

4
	movq %reg0, -168(%rbp)	
	movq %reg2, %rdx	

4
	movq %rax, %reg1	
	cmpl %reg2, %reg3	

4
	movq $3, %r12	
	movq 0(%rax), %rbx	

4
	movq $4, %r12	
	movq 0(%reg1), %reg2	

4
	movq -160(%rbp), %rax	
	cmpl %eax, %reg3	

4
	movq %rax, -64(%rbp)	
	movq %reg2, %reg3	

4
	imull %reg0	
	movq -184(%rbp), %rsi	

4
	movq %r14, %rsi	
	call String.concat	

4
	movq 0(%rax), %r12	
	movq 56(%r12), %r12	

4
	call String.concat	
	movq %reg0, %rdi	

4
	call String.concat	
	cmpl $0, %ebx	

4
	movq -144(%rbp), %reg1	
	cmpl %reg2, %reg3	

4
	addl %edi, %eax	
	movq -24(%rbp), %reg3	

4
	setl %dil	
	jge .Main.main_2	

4
	movq $0, %reg0	
	movq $1, %reg1	

4
	movq -128(%rbp), %rdi	
	addl %edi, %reg3	

4
	movq %reg0, 8(%reg1)	
	movq %reg1, 24(%rbx)	

4
	movq $1, %rdi	
	subl %reg1, %eax	

4
	movq %reg0, %r13	
	movq %rax, %reg3	

4
	testq $1, %rax	
	je .Main.main_10	

4
	.size Main.main, .-Main.main	
	.globl Foo.setX	

4
	subq $8, %reg0	
	pushq %rbx	

4
.string6_l:	
	.string "hello"	

4
	movq -16(%rbp), %reg1	
	negl %reg2	

4
	movq %rdi, 48(%reg1)	
	movq $0, %rdi	

4
	movq $12, %reg0	
	movq -16(%rbp), %rax	

4
	idivl %reg0d	
	addl %reg1, %reg2d	

4
	movq %reg0, %rsi	
	movq -160(%rbp), %rax	

4
	movq %r12, 8(%reg1)	
	cmpq $Int_vtable, 0(%reg1)	

4
	movq $1, %rax	
	movq %r12, %reg2	

4
	addl %edi, %reg1	
	movq -128(%rbp), %reg3	

4
	movq 0(%rax), %reg1	
	movq 104(%reg1), %reg1	

4
	call String.substr	
	movq 0(%reg0), %r12	

4
	movq 152(%r13), %r13	
	movq %reg1, %reg2	

4
	movq %reg0, %rdi	
	movq -152(%rbp), %reg0	

4
	movq -8(%rbp), %reg1	
	movq -128(%rbp), %reg3	

4
	movq %reg0, 8(%rax)	
	cmpq $Int_vtable, 0(%rax)	

4
	movq %rdi, %rax	
	movq $1, %rsi	

4
	movq %reg0, %reg1	
	cmpl %r9d, %reg3	

4
	movq -40(%rbp), %rcx	
	imull %reg2	

4
	movq -168(%rbp), %reg1	
	negl %eax	

4
	call *%reg0	
.Main.main_12:	

4
	movq %rax, -16(%rbp)	
	movq -8(%rbp), %rdx	

4
	movq %reg0, %rdi	
	movq -112(%rbp), %reg3	

4
	movq %reg0, -128(%rbp)	
	movq -8(%rbp), %rdx	

4
	movq %reg0, %rdi	
	movq -48(%rbp), %reg3	

4
	movq %rax, %r11	
	movq %reg2, %rax	

4
	movq -88(%rbp), %rdi	
	addl %edi, %eax	

4
	movq %reg0, %rcx	
	movq %r13, %reg0	

4
	movq %reg0, %reg1	
	cmpl %r9d, %ecx	

4
	movq %r12, 8(%reg1)	
	movq %reg1, 24(%rbx)	

4
	movq %reg0, %rax	
	movq %rbx, %reg0	

4
	movq $1, %rdi	
	addl %edi, %eax	

4
	movq %rbx, %reg1	
	cmpl %eax, %reg3	

4
	.globl Foo.func	
	.type Foo.func, @function	

4
	movq -8(%rbp), %rdi	
	movq -112(%rbp), %rsi	

4
	movq %r8, %rcx	
	cmpl %reg2d, %ecx	

4
	movq %rax, 32(%rbx)	
	movq $0, %rax	

4
	movq -80(%rbp), %reg1	
	addl %eax, %edi	

4
	.quad 5	
abort_string_l:	

4
	movq %rax, %reg1	
	cmpl $0, %eax	

4
	subq $8, %rsp	
	pushq %rbx	

4
	movq 0(%r12), %reg1	
	movq 88(%reg1), %reg1	

4
	movq 0(%rbx), %rax	
	movq 96(%rax), %rax	

4
	movq %reg0, %reg1	
	movq $.string6, %rax	

4
	movq 8(%rax), %rax	
	movq 0(%reg1), %r12	

4
	movq $4, %rsi	
	movq $.string2_l, %rdi	

4
	movq %reg0, %rdi	
	movq %rdx, %reg0	

4
	movq %rax, %rdi	
	cmpl $0, %edi	

4
	movq %rax, -128(%rbp)	
	movq %reg2, %reg3	

4
	testq $1, %reg0	
	je .Main.main_17	

4
	movq %reg0, %reg1	
	movq $.string10, %reg2	

4
	subl %reg0, %ecx	
	movq $12, %reg2	

4
	idivl %reg0d	
	addl %eax, %reg2d	

4
	call *%reg0	
.Main.main_10:	

3
	movq 0(%r12), %rax	
	movq 32(%rax), %rax	

3
	testq $1, %reg0	
	je .Main.main_23	

3
	movq 72(%r14), %r14	
	movq %reg1, %rdi	

3
	movq %r14, %rdx	
	call String.substr	

3
	testq $1, %rdi	
	je .Main.main_7	

3
	call *%reg0	
	movq %reg0, -144(%rbp)	

3
	movq $2, %rax	
	cmpl %eax, %reg2	

3
	movq %r15, %reg1	
	cmpl %eax, %esi	

3
	movq -24(%rbp), %rdi	
	addl %reg2, %eax	

3
	movq %reg0, %rdi	
	movq $5, %reg0	

3
	imull %reg0	
	movq $4, %rdi	

3
	movq -8(%rbp), %rdi	
	movq -104(%rbp), %rsi	

3
	movq %r12, %reg1	
	imull %edi	

3
	movq 32(%reg0), %rdx	
	movq 0(%rdx), %rax	

3
	movq %reg0, %rax	
	movq %rsi, %r12	

3
	movq $.string8, %rbx	
	movq %reg1, %reg2	

3
	movq %rdx, %reg1	
	movq %rcx, %reg3	

3
	movq $2, %rdi	
	cmpl %edi, %esi	

3
	call out_error	
.Main.main_26:	

3
	movq %r12, %r14	
	movq %rax, %reg3	

3
	movq %rdi, 8(%reg1)	
	movq %reg1, 8(%reg1)	

3
	idivl %r8d	
	negl %eax	

3
	addl %edi, %eax	
	movq -16(%rbp), %reg3	

3
	movq -16(%rbp), %rdi	
	movq %rax, %rsi	

3
	movq %reg0, %rbx	
	movq $5, %reg2	

3
	call Foo.new	
	movq %reg0, 8(%rbx)	

3
	.quad Bazz.printh	
	.quad Foo.doh	

3
	movq %reg0, %rax	
	subl %reg2, %reg3d	

3
	movq %rax, %reg1	
	movq -136(%rbp), %reg3	

3
	testq $1, %reg0	
	je .Main.main_48	

3
	movq -24(%rbp), %reg1	
	subl %reg2, %reg3	

3
	movq %rbx, %reg1	
	movq %reg2, %rdi	

3
	movq -96(%rbp), %reg1	
	addl %eax, %reg3	

3
	movq 16(%rax), %rdx	
	movq 0(%rdx), %reg2	

3
	call IO.new	
	cmpl $0, %eax	

3
	addl %reg0, %edi	
	movq %reg2, %rsi	

3
	movq 0(%rbx), %rax	
	movq 16(%rax), %rax	

3
	movq $12, %reg0	
	movq %r13, %reg2	

3
	call *%reg0	
	movq %rbx, %rax	

3
	imull %edi	
	movq $4, %rdi	

3
	movq %rax, %rbx	
	cmpl $0, %reg2d	

3
	movq -24(%rbp), %reg1	
	addl %reg2, %edi	

3
	movq 0(%reg0), %reg1	
	movq 16(%reg1), %reg1	

3
	movq -32(%rbp), %rax	
	subl %eax, %reg3	

3
	negl %reg0	
	subl %reg0, %ecx	

3
	addl %esi, %reg1	
	movq %rdi, %reg3	

3
	addl %reg0, %reg1	
	movq -88(%rbp), %rdi	

3
	call out_error	
.Main.main_72:	

3
	movq -24(%rbp), %rdi	
	cmpl %reg2, %eax	

3
	jne .Main.main_3	
	movq $1, %r12	

3
	addl %reg0, %eax	
	movq -88(%rbp), %reg3	

3
	jmp .Main.main_5	
.Main.main_6:	

3
	subl %reg0, %reg1d	
	movq %reg2, %reg3	

3
	testq $1, %reg0	
	je .Main.main_72	

3
	addl %edi, %reg1	
	movq -104(%rbp), %rdi	

3
	movq $2, %rdi	
	cmpl %reg1, %esi	

3
	call *%reg0	
	movq -168(%rbp), %reg2	

3
	call *%rax	
.Main.main_5:	

3
	movq $4, %rdi	
	movq %rdi, %rsi	

3
	movq $1, %rsi	
	movq $2, %rdi	

3
	movq -32(%rbp), %reg1	
	imull %esi	

3
	movq -144(%rbp), %reg1	
	addl %edi, %eax	

3
	addl %reg0, %reg1	
	movq %rax, %rbx	

3
	movq -40(%rbp), %rsi	
	call *%reg2	

3
	movq $20, %rsi	
	movq $.string3_l, %reg1	

3
	movq %reg0, %rax	
	movq -168(%rbp), %rdi	

3
	movq 16(%rbx), %reg1	
	cmpl %edi, %reg3	

3
	call *%reg0	
	movq %reg0, -72(%rbp)	

3
	addl %reg0, %eax	
	movq -88(%rbp), %rdi	

3
	movq $.string13, %reg0	
	movq 0(%reg1), %r12	

3
	movq %reg0, %reg1	
	movq %rax, %rcx	

3
	movq -136(%rbp), %reg1	
	cmpl %edi, %eax	

3
	movq 32(%reg0), %reg1	
	call *%rax	

3
	movq -72(%rbp), %rax	
	addl %eax, %edi	

3
	movq $2, %reg0	
	cmpl %edi, %esi	

3
	movq %rax, %reg1	
	movq $10, %rax	

3
	call *%reg0	
	movq %r12, %reg0	

3
	movq -168(%rbp), %rdi	
	cmpl %edi, %reg3	

3
	movq $4, %rbx	
	movq 0(%rax), %r12	

3
	movq $1, %reg0	
	cmpl %eax, %edi	

3
	movq 24(%reg0), %reg1	
	movq %reg2, %reg3	

3
	call *%rax	
	movq %rax, -144(%rbp)	

3
	movq -176(%rbp), %reg1	
	addl %edi, %eax	

3
	.quad 2	
.string9_l:	

3
Baz.new:	
	pushq %reg0	

3
	movq 16(%reg0), %reg1	
	cmpl %edi, %eax	

3
	movq $12, %r10	
	movq %reg1, %rax	

3
	subl %edi, %eax	
	movq 0(%rbx), %r12	

3
	movq $.string6, %r13	
	movq %reg1, %reg2	

3
	movq -152(%rbp), %reg1	
	cmpl %edi, %eax	

3
	movq -168(%rbp), %reg1	
	movq %reg2, %rcx	

3
	movq %r12, %reg1	
	movq %rax, %r14	

3
	movq 32(%reg0), %reg0	
	movq %r12, %reg2	

3
	movq %rdi, %reg1	
	negl %eax	

3
	call Foo.new	
	movq %rax, 8(%reg1)	

3
	movq 0(%reg0), %rax	
	movq 16(%rax), %rax	

3
	movq %reg0, %reg1	
	movq -144(%rbp), %rax	

3
	testq $1, %reg0	
	je .Main.main_66	

3
	movq -16(%rbp), %reg1	
	addl %eax, %edi	

3
	movq 88(%rax), %rax	
	movq %r12, %rdi	

3
	call String.substr	
	movq %reg0, %rdi	

3
.Main.main_14:	
	movq 0(%reg0), %reg1	

3
	movq $2, %rdi	
	imull %reg1	

3
	movq $1, %r13	
	movq %reg1, %reg2	

3
	movq -144(%rbp), %reg1	
	addl %edi, %reg3	

3
.Main.main_13:	
	movq 0(%reg0), %rax	

3
	movq %reg0, %rdi	
	movq -16(%rbp), %rsi	

3
	call out_error	
.Main.main_29:	

3
	movq %r14, %rdi	
	addl %reg2, %eax	

3
	movq -16(%rbp), %reg1	
	subl %reg2, %eax	

3
	movq %rdi, %rax	
	movq %reg2, %r12	

3
	movq $153, %rsi	
	movq $.string5_l, %rdi	

3
	movq -56(%rbp), %reg1	
	negl %reg2	

3
	movq %rbx, %rsi	
	movq %r12, %rdx	

3
	addl %reg0, %eax	
	movq -160(%rbp), %reg3	

3
	call out_error	
.Main.main_20:	

3
	jmp .Main.main_18	
.Main.main_17:	

3
	movq $2, %reg0	
	cmpl $0, %reg1d	

3
	movq -48(%rbp), %rax	
	movq $0, %reg2	

3
	call String.concat	
	movq 0(%reg0), %reg1	

3
	addl %reg0, %reg1	
	movq -16(%rbp), %reg3	

3
	testq $1, %rdi	
	je .Main.main_11	

3
	movq 16(%rax), %rdi	
	sete %reg2l	

3
	movq -128(%rbp), %reg1	
	movq %reg2, %rcx	

3
	movq %reg0, %rdi	
	movq -152(%rbp), %reg3	

3
	call String.length	
	movq 0(%rbx), %r12	

3
	movq -176(%rbp), %reg1	
	movq %reg2, %reg3	

3
	.string "Main"	
.string2:	

3
	movq %reg0, -176(%rbp)	
	movq -8(%rbp), %reg3	

3
	movq $2147483647, %rax	
	movq $1, %reg1	

3
	movq %reg0, %rdi	
	movq -80(%rbp), %reg3	

3
	movq -168(%rbp), %rax	
	cmpl %eax, %reg3	

3
	call *%reg0	
	movq %reg0, -64(%rbp)	

3
	cmpl %r11d, %ebx	
	sete %r11b	

3
	movq $2, %r12	
	movq 0(%rax), %reg2	

3
	movq %rsi, %r12	
	call Cons.new	

3
.Main.main_10:	
	movq 0(%reg0), %reg1	

3
	movq -8(%rbp), %rdi	
	movq -40(%rbp), %reg3	

3
	movq %rax, -48(%rbp)	
	movq -8(%rbp), %reg3	

3
	addl %edi, %eax	
	movq -32(%rbp), %reg3	

3
	testq $1, %reg0	
	je .Main.main_64	

3
	call *%reg0	
	movq %reg0, -24(%rbp)	

3
	movq %r13, %reg1	
	call *%r12	

3
	movq %reg0, %rdx	
	movq %rax, %reg3	

3
	movq %r13, %rax	
	subl %reg2, %ecx	

3
	movq %reg0, %rax	
	movq -16(%rbp), %reg0	

3
	movq -96(%rbp), %rax	
	addl %eax, %reg3	

3
	movq %r11, %rax	
	movq %reg2, %r11	

3
	movq %rdi, 80(%reg1)	
	movq $0, %rdi	

3
	cmpl $0, 16(%reg0)	
	movq 16(%reg0), %rdi	

3
	movq $1, %rax	
	cmpl %reg1, %edi	

3
	movq -48(%rbp), %reg1	
	movq $0, %reg2	

3
	movq %r14, %rdi	
	movq %rax, %rsi	

3
	subl %eax, %r9d	
	movq %r9, %rax	

3
.Main.main_10:	
	movq $5, %r12	

3
	movq -8(%rbp), %rdi	
	movq -144(%rbp), %reg3	

3
	movq $2, %reg0	
	cmpl %esi, %edi	

3
	movq -32(%rbp), %reg1	
	cmpl %reg2, %eax	

3
	movq -120(%rbp), %reg1	
	addl %reg2, %edi	

3
	jge .Main.main_9	
	pushq %reg0	

3
	movq -96(%rbp), %rsi	
	imull %reg2	

3
	movq -8(%rbp), %rdi	
	movq -144(%rbp), %rsi	

3
	movq %rbx, %reg1	
	subl %eax, %reg3	

3
	movq -128(%rbp), %rsi	
	movq %reg2, %reg3	

3
	movq $10, %rax	
	movq %rax, %reg1	

3
	movq %reg0, %r13	
	movq $0, %reg0	

3
	movq %r12, %r13	
	movq %rax, %r14	

3
	movq %reg0, %reg1	
	cmpl $0, %r13d	

3
	movq %rax, -176(%rbp)	
	movq -8(%rbp), %rdx	

3
	movq -8(%rbp), %rdi	
	movq -40(%rbp), %rsi	

3
	movq $name_Int, %reg0	
	movq 0(%rbx), %reg2	

3
	call *%r14	
	cmpl $0, %eax	

3
	subl %reg0, %eax	
	movq %reg2, %rbx	

3
	imull %esi	
	cmpl %eax, %edi	

3
	movq $1, %rax	
	movq $2, %reg1	

3
	jmp .Main.main_4	
.Main.main_4:	

3
	movq %rax, %r14	
	movq $1, %rax	

3
	movq $Foo_vtable, 0(%reg0)	
	movq %reg0, %rbx	

3
	imull %ecx	
	movq -176(%rbp), %rcx	

3
	movq $12, %reg0	
	movq -56(%rbp), %rax	

3
	movq -184(%rbp), %rax	
	negl %eax	

3
	call String.substr	
	movq %rax, %rdi	

3
	movq -24(%rbp), %rdi	
	addl %edi, %reg3	

3
	movq %reg0, %rbx	
	cmpl $0, %reg2d	

3
	negl %reg0	
	movq $0, %reg1	

3
	movq 48(%r14), %r14	
	movq %rax, %rdi	

3
	call Foo.new	
	movq %rax, 8(%rbx)	

3
.Main.main_41:	
	cdq	

3
	movq $12, %reg0	
	movq %rbx, %rax	

3
	movq -80(%rbp), %reg1	
	call *%reg2	

3
	pushq %r14	
	movq %rdi, %rax	

3
	movq -8(%rbp), %reg1	
	movq -40(%rbp), %reg3	

3
	movq -16(%rbp), %reg1	
	sete %dil	

3
	movq 0(%rax), %r14	
	movq 56(%r14), %r14	

3
	call *%r12	
	call Object.new	

3
	addl %reg0, %reg1	
	movq -176(%rbp), %reg3	

3
	addl %esi, %edi	
	movq %rdi, %rsi	

3
	movq $2, %reg0	
	cmpl $0, %r12d	

3
	movq %rdi, %reg1	
	movq $0, %r13	

3
	movq 24(%rbx), %reg1	
	imull %edi	

3
	movq %reg0, %rax	
	movq -48(%rbp), %rsi	

3
	setle %bl	
	jg .Main.main_3	

3
	movq %reg0, %reg1	
	movq 8(%rax), %reg3	

3
	movq $2, %rax	
	cmpl %eax, %edi	

3
	movq -16(%rbp), %reg1	
	addl %reg2, %edi	

3
	movq %r13, %reg1	
	movq %reg2, %rax	

3
	movq $12, %rcx	
	movq -104(%rbp), %rax	

3
	movq 8(%reg0), %reg1	
	movq 0(%reg2), %reg3	

3
	call *%r13	
	movq 0(%reg1), %rax	

3
	movq 16(%reg0), %reg1	
	movq %reg2, %rsi	

3
	movq $5, %reg0	
	movq %r14, %rax	

3
	cmpl $0, 8(%rbx)	
	movq 8(%rbx), %rdi	

3
	movq -144(%rbp), %reg1	
	addl %eax, %esi	

3
	je .Main.main_6	
	movq $11, %reg0	

3
	movq %reg0, %reg1	
	movq %rax, %r13	

3
	movq $1, %rax	
	cmpl %eax, %edi	

3
	movq %rsi, %r12	
	movq 8(%reg2), %reg3	

3
	movq 112(%rax), %rax	
	movq %rbx, %rdi	

3
.Main.main_9:	
	pushq %rax	

3
	subl %eax, %reg1d	
	movq %reg2, %rax	

3
	movq -176(%rbp), %rdi	
	addl %reg2, %eax	

3
	testq $1, %rcx	
	je .Main.main_9	

3
	movq -56(%rbp), %reg1	
	addl %edi, %eax	

3
	movq -184(%rbp), %rax	
	addl %reg2, %reg3	

3
	movq %reg0, %reg1	
	movq -160(%rbp), %rsi	

3
	movq %reg0, %r15	
	movq %reg2, %reg3	

3
	movq $37, %reg0	
	movq $.string3_l, %rdi	

3
	movq 88(%rax), %rax	
	movq -8(%rbp), %reg2	

3
	movq -152(%rbp), %rsi	
	call *%rax	

3
	movq -152(%rbp), %reg1	
	subl %reg2, %edi	

3
	call *%rbx	
	jmp .Main.main_7	

3
.Main.main_6:	
	movq 0(%reg0), %rax	

3
	movq $.string7, %reg0	
	movq %reg1, %rdi	

3
	movq -64(%rbp), %rsi	
	cmpl %esi, %eax	

3
	call out_error	
.Main.main_69:	

3
	movq %reg0, %rcx	
	movq -32(%rbp), %reg0	

3
	subl %reg0, %eax	
	movq %rax, %rbx	

3
	movq $4, %r12	
	movq 0(%rbx), %rax	

3
	movq -168(%rbp), %reg1	
	cmpl %edi, %reg3	

3
	movq 0(%reg0), %r12	
	movq 136(%r12), %r12	

3
	movq %reg0, %reg1	
	movq -32(%rbp), %rdi	

3
Bar.getX:	
	pushq %rbp	

3
	movq %reg0, %rdi	
	movq -152(%rbp), %rsi	

3
	movq 56(%reg0), %reg0	
	movq -8(%rbp), %rdi	

3
	negl %reg0	
	movq %rax, %rcx	

3
	movq %r14, %reg1	
	movq %rax, %rsi	

3
	movq -120(%rbp), %rsi	
	call *%reg2	

3
	movq %rax, %rdi	
	movq 16(%reg2), %rax	

3
	movq -112(%rbp), %reg1	
	imull %esi	

3
	movq -80(%rbp), %rsi	
	movq %reg2, %rax	

3
	addl %reg0, %eax	
	movq -56(%rbp), %rdi	

3
	jne .Main.main_3	
	movq $1, %reg0	

3
	movq %reg0, %rcx	
	movq %r14, %reg0	

3
	testq $1, %reg0	
	je .Main.main_26	

3
	movq -120(%rbp), %rdi	
	imull %edi	

3
	movq -72(%rbp), %reg1	
	addl %eax, %edi	

3
	movq -8(%rbp), %rdi	
	movq -104(%rbp), %reg3	

3
	movq %rbx, %rax	
	negl %eax	

3
	movq -56(%rbp), %reg1	
	addl %edi, %reg3	

3
	movq %rbx, %rsi	
	negl %reg2	

3
	movq -40(%rbp), %rsi	
	imull %esi	

3
	movq %rax, %r13	
	pushq %rax	

3
	imull %reg0	
	movq -120(%rbp), %reg2	

3
	movq %rdi, %rax	
	movq -40(%rbp), %rdi	

3
	movq %rsi, %reg1	
	movq -160(%rbp), %rsi	

3
	movq %rax, %reg1	
	cmpl $0, -16(%rbp)	

3
	movq $4, %r12	
	movq 0(%rbx), %reg2	

3
	subl %reg0, %edi	
	movq %rdi, %rbx	

3
	call getmem	
	movq $Baz_vtable, 0(%rax)	

3
	movq %r13, %rdi	
	cmpl %edi, %reg3	

3
	movq $2, %reg0	
	cmpl %esi, %reg2	

3
	call String.length	
	movq 0(%reg0), %r12	

3
	movq %rdi, -8(%rbp)	
	movq %reg2, %reg3	

3
	movq %r14, %reg1	
	cmpl %eax, %esi	

3
	movq %reg0, %reg1	
	movq %r14, %rax	

3
	movq -32(%rbp), %reg1	
	subl %eax, %reg3	

3
	movq $4, %reg0	
	movq 0(%reg1), %rax	

3
	movq $.string8, %r13	
	movq -8(%rbp), %rdx	

3
	movq %r12, %rdx	
	call *%r13	

3
	movq 0(%reg0), %r15	
	movq 64(%r15), %r15	

3
	testq $1, %reg0	
	je .Main.main_54	

3
	movq %rdi, %reg1	
	movq 8(%reg1), %rbx	

3
	movq $2, %r12	
	movq 0(%rax), %rbx	

3
	movq $.string13, %rax	
	movq 0(%rbx), %reg2	

3
	cmpl %reg0d, %ebx	
	sete %reg0b	

3
	movq $0, %rax	
	movq %reg1, %rdi	

3
	subl %eax, %reg1	
	movq -96(%rbp), %reg3	

3
	movq %r12, %r14	
	movq %rbx, %reg3	

3
	movq $.string7, %reg0	
	movq 0(%rax), %reg2	

3
	pushq %r12	
	movq %rdi, %r12	

3
	movq %reg0, %rsi	
	movq -24(%rbp), %rax	

3
	movq %r12, %rax	
	cmpl %eax, %reg3	

3
	movq %r11, %rbx	
	movq $0, %r11	

3
	movq %reg0, %r12	
	pushq %reg2	

3
	movq %reg0, %rdi	
	movq -120(%rbp), %rsi	

3
	subl %edi, %reg1	
	movq 0(%rbx), %r12	

3
	addl %edi, %reg1	
	movq -56(%rbp), %rdi	

3
	movq 64(%r13), %r13	
	movq -8(%rbp), %reg2	

3
	movq $.string13, %rax	
	movq 0(%reg1), %reg2	

3
	negl %esi	
	movq %r13, %rax	

3
	movq %rax, %rsi	
	movq -88(%rbp), %rax	

3
	movq 128(%reg0), %reg0	
	movq %rbx, %reg2	

3
	movq $32, %reg0	
	call getmem	

3
	movq %reg0, -176(%rbp)	
	movq %reg2, %reg3	

3
	movq -144(%rbp), %rdi	
	cmpl %reg2, %reg3	

3
	movq %rax, %r8	
	negl %r8d	

3
	movq 128(%reg0), %reg0	
	movq %rbx, %rdi	

3
	movq %reg0, %reg1	
	movq 8(%rdi), %reg3	

3
	testq $1, %reg0	
	je .Main.main_52	

3
	subl %reg0, %r8d	
	movq %r8, %rax	

3
	movq %reg0, -88(%rbp)	
	movq %reg2, %rdx	

3
	movq %rsp, %reg1	
	movq %rsi, %reg3	

3
	movq $2, %rsi	
	cmpl %reg1, %reg2	

3
	call *%r13	
	movq 0(%rbx), %reg2	

3
	addl %edi, %reg1	
	movq -32(%rbp), %reg3	

3
	movq -176(%rbp), %rdi	
	addl %edi, %reg3	

3
	movq $5, %rsi	
	movq $.string3_l, %rdi	

3
	movq -72(%rbp), %rax	
	addl %eax, %reg3	

3
	movq $0, %rdi	
	movq %rdi, 72(%reg1)	

3
	movq -32(%rbp), %reg1	
	sete %al	

3
	movq -96(%rbp), %reg1	
	negl %eax	

3
	jmp .Main.main_3	
.Main.main_2:	

3
	imull %edi	
	movq $4, %reg1	

3
	addl %reg0, %eax	
	movq -48(%rbp), %rdi	

3
	movq -8(%rbp), %rdi	
	movq -120(%rbp), %reg3	

3
	movq $12, %reg0	
	movq -56(%rbp), %reg2	

3
	movq %rdi, %rax	
	movq 8(%rax), %r12	

3
	movq %reg0, %rsi	
	movq -56(%rbp), %rax	

3
	idivl %r9d	
	movq %reg1, %r9	

3
	movq %r12, %r14	
	movq %rbx, %r13	

3
	movq %reg0, %r14	
	movq %rax, %reg3	

3
	movq %reg0, %rbp	
	movq 8(%reg2), %reg3	

3
	movq %rax, %rdi	
	movq 8(%rbx), %reg3	

3
	movq %rax, %rcx	
	movq -32(%rbp), %rax	

3
	movq -24(%rbp), %reg1	
	addl %eax, %edi	

3
	movq -80(%rbp), %rsi	
	movq %reg2, %reg3	

3
	je .Main.main_2	
	movq $5, %rsi	

3
	addl %edi, %eax	
	movq -88(%rbp), %rdi	

3
	movq $12, %reg0	
	movq -64(%rbp), %rax	

3
	call Object.new	
	movq %rax, %reg1	

3
	movq 56(%reg0), %reg0	
	movq -8(%rbp), %reg2	

3
	movq %reg0, %rdi	
	movq -40(%rbp), %reg3	

3
	movq %rsi, %r12	
	movq 0(%reg2), %reg3	

3
	movq -64(%rbp), %rsi	
	negl %esi	

3
	movq %r13, %reg1	
	movq %r14, %rdi	

3
	movq $2, %rax	
	cmpl $0, %r12d	

3
.Main.main_9:	
	movq 0(%rbx), %reg1	

3
	movq $7, %rbx	
	movq 0(%rax), %reg2	

3
	movq -8(%rbp), %reg1	
	movq -80(%rbp), %rsi	

3
	movq 16(%rax), %reg1	
	movq 0(%reg1), %reg2	

3
	movq -32(%rbp), %rax	
	imull %reg2	

3
	subl %edi, %reg1	
	movq %reg2, %r12	

3
	call *%rbx	
	jmp .Main.func_7	

3
Baz.new:	
	pushq %rbp	

3
	movq %rax, -88(%rbp)	
	movq -8(%rbp), %reg3	

3
	movq -120(%rbp), %rax	
	addl %reg2, %edi	

3
	movq $.string13, %reg0	
	movq 0(%rbx), %r12	

3
	movq $1, %rsi	
	movq $2, %reg1	

3
	movq -112(%rbp), %reg1	
	movq %r13, %reg3	

3
	subl %eax, %reg1	
	movq %reg2, %rsi	

3
	movq -144(%rbp), %rdi	
	cmpl %reg2, %eax	

3
	call out_error	
.Main.main_30:	

3
	movq $.string7, %rbx	
	movq -8(%rbp), %rdx	

3
	movq %reg0, %rax	
	movq -24(%rbp), %rdi	

3
	movq %reg0, %reg1	
	movq $10, %reg0	

3
	testq $1, %reg0	
	je .Main.main_30	

3
	movq %rax, %reg1	
	movq 16(%rbx), %rax	

3
	movq %reg0, %rsi	
	movq -168(%rbp), %reg0	

3
	imull %reg0	
	cmpl %eax, %edi	

3
	cmpl $0, -32(%rbp)	
	movq -32(%rbp), %reg1	

3
	movq 0(%rax), %r14	
	movq 48(%r14), %r14	

3
	movq 0(%rbx), %reg1	
	movq 16(%reg1), %reg1	

3
	movq %reg0, %rbx	
.Main.main_1:	

3
	addl %edi, %reg1	
	movq -64(%rbp), %reg3	

3
	movq %r14, %rsi	
	call *%r15	

3
	testq $1, %reg0	
	je .Main.main_46	

3
.Main.main_3:	
	movq 0(%r13), %reg1	

3
	movq 32(%rbx), %reg1	
	movq 0(%reg1), %rax	

3
	call String.concat	
	movq %reg0, %r14	

3
	movq %rbx, %rsi	
	negl %esi	

3
	negl %reg0	
	movq %r12, %reg2	

3
	call *%rax	
	movq %rax, -88(%rbp)	

3
	jg .Main.main_3	
	movq $0, %r12	

3
	movq 32(%rbx), %rdi	
	call *%reg2	

3
	movq %rax, 32(%reg1)	
	cmpl $0, 32(%reg1)	

3
	movq -152(%rbp), %rax	
	negl %eax	

3
	movq %reg0, %rbp	
	movq 8(%rdi), %reg3	

3
	movq 64(%r13), %r13	
	movq -8(%rbp), %rdi	

3
	addl %esi, %edi	
	movq %rdi, %reg3	

3
	movq -80(%rbp), %rax	
	negl %eax	

3
	movq %reg0, %rdi	
	movq -80(%rbp), %rsi	

3
.Main.main_8:	
.Main.main_6:	

3
	movq %reg0, %rdi	
	movq -184(%rbp), %rsi	

3
	subl %eax, %reg1d	
	movq %reg2, %reg3	

3
	movq 8(%reg0), %rbx	
	cmpl $0, 16(%reg0)	

3
	movq $12, %r8	
	movq -40(%rbp), %rax	

3
	je .Main.main_2	
	movq $3, %rsi	

3
	movq %rax, %r15	
	movq -8(%rbp), %reg3	

3
	movq %reg0, 8(%reg1)	
	movq %reg1, 8(%reg1)	

3
	movq $1, %r12	
	movq 0(%rax), %rbx	

3
	movq $.string6, %r14	
	movq %reg1, %rdx	

3
	movq 0(%rbx), %rax	
	movq 24(%rax), %rax	

3
	call *%rax	
	movq %rax, -104(%rbp)	

3
	movq %rdi, %reg1	
	xorq $1, %reg1	

3
	movq %reg0, %reg1	
	subl %reg2, %r8d	

3
	movq $1, %r13	
	movq %r12, %rdi	

3
	subl %reg0, %r9d	
	movq %r9, %rax	

3
	call *%r12	
	jmp .Main.main_14	

3
	subl %reg0, %reg1	
	movq %rbx, %reg3	

3
	testq $1, %reg0	
	je .Main.main_63	

3
	subl %eax, %reg1	
	movq -96(%rbp), %rax	

3
	movq %reg0, -88(%rbp)	
	movq -8(%rbp), %reg3	

3
	call *%r12	
	movq $0, %reg1	

3
	movq %r14, %rdx	
	movq %rax, %reg3	

3
	movq %reg0, -8(%rbp)	
	movq %reg2, %reg3	

3
	movq %r14, %rdi	
	addl %edi, %eax	

3
	movq -152(%rbp), %reg1	
	subl %eax, %reg3	

3
	movq -176(%rbp), %rax	
	negl %reg2	

3
	movq -64(%rbp), %rsi	
	cmpl %reg2, %reg3	

3
	movq -16(%rbp), %reg1	
	movq %rax, %reg3	

3
	subl %edi, %reg1	
	movq %rax, %r12	

3
	movq -168(%rbp), %rdi	
	cmpl %edi, %eax	

3
	idivl %reg0	
	movq %reg1, %rdx	

3
	movq 8(%rbx), %reg1	
	movq 0(%reg1), %r12	

3
	idivl %reg0	
	movq -16(%rbp), %rdi	

3
	movq -144(%rbp), %rsi	
	call *%rax	

3
	subl %eax, %edi	
	movq %rdi, %rbx	

3
	movq -152(%rbp), %rdi	
	cmpl %reg2, %reg3	

3
	movq %reg0, %reg1	
	movq -168(%rbp), %rdi	

3
	call *%reg0	
	movq %reg0, -40(%rbp)	

3
	movq $2, %rax	
	cmpl %reg1, %edi	

3
	movq %rbx, %rsi	
	movq %r12, %reg3	

3
	movq $10, %reg0	
	movq %reg1, %reg2	

3
	call *%rax	
	movq %rax, -96(%rbp)	

3
	movq $4, %rsi	
	movq $.string7_l, %reg1	

3
	movq -24(%rbp), %reg1	
	cmpl %edi, %eax	

3
	movq -72(%rbp), %reg1	
	addl %eax, %reg3	

3
	.quad Object.type_name	
List_vtable:	

3
	addl %reg0, %reg1	
	negl %reg1	

3
	addl %reg0, %reg1	
	movq -160(%rbp), %reg3	

3
	movq $20, %reg0	
	movq $.string3_l, %rdi	

3
	subl %reg0, %reg1	
	movq %rax, %r12	

3
	movq 8(%rbx), %rdi	
	sete %reg2l	

3
	negl %esi	
	movq %rdi, %rax	

3
	addl %reg0, %eax	
	negl %eax	

3
	movq -48(%rbp), %reg1	
	subl %eax, %reg3	

3
	call *%rax	
	movq %rax, -40(%rbp)	

3
	imull %reg0	
	cmpl %reg1, %reg2	

3
	movq -96(%rbp), %reg1	
	movq -48(%rbp), %reg3	

3
	je .Main.main_2	
	movq $8, %rsi	

3
	idivl %reg0d	
	negl %eax	

3
	movq %rax, -88(%rbp)	
	movq -8(%rbp), %rdx	

3
	movq %rax, %reg1	
	movq $1, %reg2	

3
	subl %eax, %r8d	
	movq %r8, %rax	

3
	movq $4, %reg0	
	movq $.string7_l, %reg1	

3
	movq -112(%rbp), %rdi	
	cmpl %edi, %eax	

3
	movq %rax, %r15	
	movq %reg2, %reg3	

3
	movq -144(%rbp), %reg1	
	movq %reg2, %rax	

3
	je .Main.main_3	
	cmpq $Object_vtable, 0(%reg0)	

3
	movq %r14, %rdi	
	cmpl %reg2, %reg3	

3
	negl %edi	
	imull %edi	

3
	movq %rbx, %rax	
	popq %r13	

3
	addl %reg0, %reg1	
	movq -16(%rbp), %rdi	

3
	call *%r12	
	movq %reg1, %rdi	

3
	negl %eax	
	movq $12, %rdi	

3
	movq %reg0, %r13	
	movq %rax, %r14	

3
	movq 0(%r12), %reg1	
	movq 72(%reg1), %reg1	

3
.Main.main_5:	
	movq $0, %reg0	

3
	movq %reg0, 8(%reg0)	
	leave	

3
	call getmem	
	movq $List_vtable, 0(%reg0)	

3
	negl %eax	
	subl %eax, %ecx	

3
	movq $1, %reg0	
	movq $2, %rsi	

3
	movq %r12, %rsi	
	movq %r14, %rdx	

3
	call *%rax	
	jmp .Main.main_3	

3
	movq %reg0, %rdi	
	movq -144(%rbp), %rsi	

3
	addl %esi, %reg1	
	movq %rdi, %rsi	

3
	movq $.string7, %rbx	
	movq -8(%rbp), %reg2	

3
	movq %reg0, %rsi	
	movq -120(%rbp), %reg0	

3
	idivl %reg0	
	movq -8(%rbp), %reg2	

3
	movq -40(%rbp), %rdi	
	cmpl %edi, %reg3	

3
	movq %reg0, -48(%rbp)	
	movq -8(%rbp), %reg3	

3
	movq %rax, 8(%reg1)	
	call Foo.new	

3
	movq 88(%reg0), %reg0	
	movq 32(%reg1), %rdi	

3
	movq 112(%rax), %rax	
	movq %reg1, %reg2	

3
	call *%reg0	
	movq %reg0, -56(%rbp)	

3
	movq 56(%r15), %r15	
	movq %rbx, %rdi	

3
	imull %reg0	
	cmpl %eax, %reg2	

3
	movq 8(%reg0), %reg0	
	testq $1, %reg0	

3
	call *%reg0	
	movq %reg0, -120(%rbp)	

3
	movq -56(%rbp), %reg1	
	cmpl %eax, %esi	

3
	.globl List.new	
	.type List.new, @function	

3
	subl %eax, %r8d	
	movq %r8, %reg2	

3
List.new:	
	pushq %rbp	

3
	movq -136(%rbp), %rdi	
	cmpl %edi, %reg3	

3
	testq $1, %reg0	
	je .Main.main_58	

3
	movq -8(%rbp), %rdi	
	movq -120(%rbp), %rsi	

3
	movq -24(%rbp), %reg1	
	addl %edi, %reg3	

3
	movq $0, %rax	
	cmpl %reg1, %edi	

3
	movq 16(%rax), %rdi	
	sete %dil	

3
	movq -80(%rbp), %rsi	
	call *%reg2	

3
	movq %rsi, %rbx	
	movq 0(%reg2), %r12	

3
	idivl %reg0	
	subl %eax, %esi	

3
	addl %edi, %eax	
	movq -56(%rbp), %rdi	

3
	movq 0(%rdx), %r13	
	movq 64(%r13), %r13	

3
	movq %r12, %reg1	
	pushq %rax	

3
	movq %reg0, %rax	
	movq -80(%rbp), %rsi	

3
	movq $2, %rdi	
	cmpl %reg1, %eax	

3
	movq %rax, -176(%rbp)	
	movq %reg2, %reg3	

3
	testq $1, %reg0	
	je .Main.main_70	

3
	movq %r13, %rdi	
	addl %edi, %eax	

3
	movq %r13, %rax	
	imull %esi	

3
	movq 16(%reg0), %reg1	
	movq %r12, %rsi	

3
	movq 64(%r15), %r15	
	movq %reg1, %reg2	

3
	movq $0, %rax	
	cmpl %eax, %edi	

3
	movq %r12, %rdi	
	addl %edi, %reg3	

3
	movq %r13, %rdi	
	addl %reg2, %eax	

3
	movq -128(%rbp), %reg1	
	imull %reg1d	

3
	movq -24(%rbp), %rdi	
	cmpl %edi, %eax	

3
	movq %reg0, %rsi	
	movq %r15, %rax	

3
	movq %rsi, %rax	
	movq $0, %rsi	

3
	call *%reg0	
	movq %reg0, %r15	

3
	call *%rax	
	movq %rax, -152(%rbp)	

3
	movq -152(%rbp), %rdi	
	cmpl %reg2, %eax	

3
	movq %rdi, 80(%rax)	
	movq $0, %rdi	

3
	movq %r15, %rax	
	cmpl %eax, %esi	

3
	addl %reg0, %reg1	
	movq -48(%rbp), %rdi	

3
	movq $2, %reg0	
	negl %reg1	

3
	addl %reg0, %eax	
	movq -64(%rbp), %rdi	

3
	movq %r15, %rdi	
	cmpl %edi, %reg3	

3
	addl %edi, %eax	
	movq -48(%rbp), %rdi	

3
	imull %esi	
	cmpl %eax, %reg2	

3
	movq -24(%rbp), %reg1	
	cmpl %eax, %esi	

3
	movq -96(%rbp), %rsi	
	movq %reg2, %rax	

3
	movq %reg0, -48(%rbp)	
	movq %reg2, %reg3	

3
	call *%r14	
	cmpl $0, %reg1	

3
	movq $.string8, %rbx	
	movq -8(%rbp), %reg2	

3
	movq %rax, %reg1	
	movq -176(%rbp), %rax	

3
	movq 88(%rax), %rax	
	movq 32(%reg1), %rdi	

3
	call *%rax	
	movq %rax, -24(%rbp)	

3
	call *%reg0	
	movq %reg0, -136(%rbp)	

3
	movq 16(%rbx), %reg1	
	cmpl %edi, %eax	

3
	call *%rax	
	movq -16(%rbp), %reg2	

3
	movq 16(%rbx), %reg1	
	movq %r12, %reg3	

3
	movq -8(%rbp), %reg1	
	movq -104(%rbp), %rsi	

3
	movq -136(%rbp), %rdi	
	cmpl %reg2, %reg3	

3
	movq 136(%r12), %r12	
	movq %reg1, %reg2	

3
	movq 32(%reg0), %rdx	
	movq 0(%rdx), %reg2	

3
	.quad .string5_l	
	.quad 42	

3
	testq $1, %reg0	
	je .Main.main_82	

3
	movq -8(%rbp), %reg1	
	movq -152(%rbp), %reg3	

3
	call *%rax	
	movq %rax, -128(%rbp)	

3
	movq %rdi, %reg1	
	movq %reg2, %rdx	

3
	movq %rcx, %reg1	
	movq $12, %rcx	

3
	call out_error	
.Main.main_36:	

3
	movq -88(%rbp), %rax	
	subl %reg2, %reg3	

3
	movq 16(%reg0), %rdi	
	sete %reg2l	

3
	.quad Baz.new	
	.quad Object.abort	

3
	movq %rdi, %rbx	
	movq $.string6, %rax	

3
	movq $5, %rsi	
	movq $.string3_l, %reg1	

3
.Main.main_2:	
	pushq %reg0	

3
	movq -24(%rbp), %reg1	
	cmpl %reg2, %eax	

3
	movq -40(%rbp), %rdi	
	cmpl %edi, %eax	

3
	imull %reg0	
	movq -40(%rbp), %reg2	

3
	idivl %esi	
	movq -8(%rbp), %rdx	

3
	movq %rsi, %rbx	
	movq 0(%rax), %r12	

3
	movq -96(%rbp), %rsi	
	cmpl %esi, %reg3	

3
	testq $1, %rdi	
	je .Main.main_13	

3
	movq %reg0, %reg1	
	movq %r12, %r13	

3
	cmpl %r13d, %r12d	
	sete %r13b	

3
	movq %reg0, %rdi	
	movq -176(%rbp), %reg3	

3
	movq -104(%rbp), %rsi	
	call *%reg2	

3
	movq $5, %reg0	
	movq %r14, %reg2	

3
	movq %reg0, %reg1	
	movq -40(%rbp), %rdi	

3
	movq $1, %rdi	
	movq %r14, %rax	

3
	call *%reg0	
	movq %reg0, -16(%rbp)	

3
	movq -24(%rbp), %reg1	
	cmpl %edi, %reg3	

3
	movq %reg0, %rax	
	movq -32(%rbp), %rdi	

3
	movq -64(%rbp), %reg1	
	cmpl %esi, %eax	

3
	.quad Foo.getX	
String_vtable:	

3
	movq %r11, %reg1	
	movq %reg2, %r11	

3
	movq -112(%rbp), %reg1	
	cmpl %edi, %eax	

3
	movq %reg0, 8(%rbx)	
	call Foo.new	

3
	movq -168(%rbp), %reg1	
	cmpl %edi, %eax	

3
	movq %rbx, %rax	
	subl %reg2, %reg3	

3
	movq -168(%rbp), %rdi	
	cmpl %reg2, %reg3	

3
	addl %reg0, %eax	
	movq %reg2, %rbx	

3
	movq -152(%rbp), %rax	
	subl %reg2, %edi	

3
	movq %r15, %rax	
	cmpl %reg2, %esi	

3
.Main.main_4:	
	movq 0(%rbx), %reg1	

3
	subl %reg0, %eax	
	movq $12, %reg2	

3
.Main.main_3:	
	movq 0(%r12), %rax	

3
	movq -40(%rbp), %rsi	
	call *%rax	

3
	movq -40(%rbp), %rdi	
	cmpl %reg2, %eax	

3
	call out_error	
.Main.main_48:	

3
	movq %reg0, %reg1	
	movq $.string6, %reg0	

3
	movq -24(%rbp), %rax	
	cmpl %reg2, %esi	

3
	movq %r15, %rdi	
	cmpl %edi, %eax	

3
	movq -120(%rbp), %rdi	
	imull %reg2	

3
	movq %r14, %rdi	
	addl %edi, %reg3	

3
	subl %reg0, %eax	
	movq %rax, %r12	

3
	movq -168(%rbp), %reg1	
	negl %ecx	

3
	movq $0, %reg0	
	cmpl %eax, %edi	

3
	movq %r12, %rax	
	subl %reg2, %eax	

3
	movq 8(%rbx), %rdi	
	sete %dil	

3
	testq $1, %rax	
	je .Main.main_19	

3
	movq %r14, %rax	
	cmpl %reg2, %eax	

3
	movq -176(%rbp), %rcx	
	imull %reg2	

3
	movq %rsi, %reg1	
	movq 0(%reg2), %r12	

3
	movq -96(%rbp), %rax	
	negl %eax	

3
	movq 24(%rbx), %reg1	
	imull %reg2	

3
	jmp .Main.main_6	
.Main.main_3:	

3
	idivl %esi	
	movq -16(%rbp), %reg2	

3
	movq %reg0, %reg1	
.Main.main_3:	

3
.Main.main_15:	
	movq 0(%reg0), %reg1	

3
	movq %reg0, -48(%rbp)	
	movq %reg2, %rdx	

3
	movq $12, %rcx	
	movq -104(%rbp), %reg2	

3
	movq %reg0, %r15	
	movq %reg2, %rdx	

3
	movq $103, %reg0	
	movq $.string2_l, %rdi	

3
	cmpl %r9d, %r10d	
	sete %r9b	

3
	movq $.string8, %r13	
	movq %reg1, %rdx	

3
	movq %reg0, %reg1	
	movq $0, %r13	

3
	movq $0, %reg0	
	cmpl %reg0d, %r12d	

3
	movq %r12, %r14	
	movq %rax, %r13	

3
	movq $1, %reg0	
	movq 0(%rax), %rbx	

3
	movq -16(%rbp), %reg1	
	movq -24(%rbp), %reg3	

3
	movq -176(%rbp), %reg1	
	imull %ecx	

3
	subl %eax, %edi	
	movq %reg2, %rbx	

3
	imull %esi	
	cmpl %reg1, %edi	

3
	movq 32(%rbx), %reg1	
	movq 0(%reg1), %reg2	

3
	negl %reg0	
	movq $12, %rdi	

3
	subl %reg0, %r9d	
	movq %r9, %reg2	

3
	movq -8(%rbp), %reg1	
	movq -136(%rbp), %reg3	

3
	testq $1, %reg0	
	je .Main.main_20	

3
	movq -64(%rbp), %rcx	
	imull %ecx	

3
	movq %r14, %rax	
	cmpl %eax, %esi	

3
.Main.main_47:	
	cdq	

3
	movq %rbx, %r13	
	pushq %reg2	

3
	movq $5, %r12	
	movq 0(%reg1), %reg2	

3
	negl %reg0	
	movq %rbx, %reg2	

3
	movq $2, %reg0	
	movq %reg0, 8(%reg1)	

3
	movq $.string13, %rax	
	movq 0(%rbx), %r12	

3
	movq -96(%rbp), %rsi	
	cmpl %reg2, %eax	

3
	movq -64(%rbp), %reg1	
	cmpl %esi, %reg3	

3
	testq $1, %rdi	
	je .Main.main_6	

3
	.quad 3	
percentlld_string_l:	

3
	movq $4, %reg0	
	movq 0(%rax), %r12	

3
	movq -40(%rbp), %reg1	
	imull %esi	

3
	movq $.string8, %r13	
	movq -8(%rbp), %reg2	

3
	movq $1, %reg0	
	movq $.string6, %reg1	

3
	call out_error	
.Main.main_27:	

3
	movq -152(%rbp), %rax	
	subl %eax, %reg3	

3
	movq $0, %reg0	
	movq %rax, %reg2	

3
	call out_error	
.Main.main_37:	

3
	movq 24(%reg0), %reg1	
	imull %edi	

3
	movq -64(%rbp), %rsi	
	cmpl %reg2, %eax	

3
	movq -120(%rbp), %rax	
	addl %eax, %edi	

3
	movq %reg0, %rdi	
	movq 16(%rbx), %reg0	

3
	addl %reg0, %eax	
	movq %rbx, %rdi	

3
	movq %r13, %rax	
	movq %r14, %rdi	

3
	addl %edi, %reg1	
	movq -88(%rbp), %rdi	

3
	cmpl $0, -32(%rbp)	
	movq -32(%rbp), %rax	

3
	movq %reg0, %rdx	
	call *%rax	

3
	call *%reg0	
	movq %reg0, -80(%rbp)	

3
	movq -96(%rbp), %rsi	
	imull %esi	

3
	movq %r14, %rdx	
	movq %reg2, %rcx	

3
	movq %reg0, %rdi	
	movq -64(%rbp), %reg3	

3
	movq %reg0, %rdi	
	movq -64(%rbp), %rsi	

3
	subl %eax, %reg1	
	movq %reg2, %rbx	

3
	addl %reg0, %reg1	
	movq -112(%rbp), %reg3	

3
	movq %reg0, %r12	
	pushq %rax	

3
	movq -16(%rbp), %rdi	
	sete %reg2l	

3
	movq %rdi, %rax	
	movq -16(%rbp), %rdi	

3
	movq -32(%rbp), %rax	
	addl %reg2, %reg3	

3
	movq -56(%rbp), %rax	
	cmpl %reg2, %esi	

3
	movq -184(%rbp), %rax	
	negl %reg2	

3
	movq %rax, %rdi	
	cmpl %reg2, %reg3	

3
	subl %reg0, %reg1	
	movq -136(%rbp), %reg3	

3
	movq -184(%rbp), %reg1	
	addl %eax, %reg3	

3
	.quad 6	
.string7_l:	

3
	jmp .Main.main_16	
.Main.main_15:	

3
	movq -168(%rbp), %reg1	
	addl %reg2, %reg3	

3
	movq %r12, %reg1	
	movq %r14, %rdi	

3
	movq 88(%reg0), %reg0	
	movq -8(%rbp), %rdi	

3
	movq 56(%r14), %r14	
	movq %rax, %rdi	

3
	call *%rax	
	movq $.string6, %r13	

3
	movq $204, %rsi	
	movq $.string5_l, %reg1	

3
	movq %r9, %reg1	
	movq $0, %r9	

3
	movq $5, %rax	
	movq %rax, %reg1	

3
	movq $4, %rbx	
	movq 0(%rax), %reg2	

3
	movq %reg0, %reg1	
	movq 8(%rdi), %rax	

3
	call out_error	
.Main.main_59:	

3
	movq 112(%rax), %rax	
	movq %reg1, %rdi	

3
	movq %rdi, %reg1	
.Main.main_1:	

3
	movq $2, %reg0	
	addl %reg1, %reg2	

3
	setl %r14b	
	jge .Main.main_9	

3
	addl %edi, %reg1	
	movq -64(%rbp), %rdi	

3
	call getmem	
	movq $Baz_vtable, 0(%reg0)	

3
	movq %rdi, %reg1	
	movq $3, %reg2	

3
	testq $1, %reg0	
	je .Main.main_28	

3
	movq 0(%r12), %reg1	
	movq 64(%reg1), %reg1	

3
	movq %rsp, %rbp	
	movq %rsi, %reg3	

3
	cmpl %reg0d, %r14d	
	sete %reg0b	

3
	movq -64(%rbp), %reg1	
	negl %esi	

3
	movq %rax, %rcx	
	call *%r15	

3
	movq %rax, %rcx	
	call *%reg2	

3
	call Matrix.new	
	movq %reg0, %reg1	

3
	movq $0, %r10	
	cmpl %r10d, %r11d	

3
	movq 88(%rax), %rax	
	movq 32(%reg1), %reg2	

3
	addl %edi, %eax	
	movq -32(%rbp), %rdi	

3
	movq %r12, %reg1	
	movq %rbx, %r13	

3
	movq $1, %r13	
	movq %r12, %reg2	

3
	movq %r12, %rdi	
	negl %reg2	

3
	movq 32(%rbx), %rdx	
	movq 0(%rdx), %reg2	

3
	addl %edi, %reg1	
	movq -48(%rbp), %rdi	

3
	movq %reg0, -32(%rbp)	
	movq -8(%rbp), %reg3	

3
	testq $1, %reg0	
	je .Main.main_56	

3
	movq %reg0, %rax	
	movq -72(%rbp), %rdi	

3
	movq -144(%rbp), %rdi	
	cmpl %edi, %reg3	

3
.Main.main_3:	
	movq $0, %r12	

3
	movq %r13, %rdi	
	cmpl %reg2, %reg3	

3
	movq %rdi, 72(%rax)	
	movq $0, %rdi	

3
	movq -176(%rbp), %reg1	
	imull %esi	

3
	movq $0, %r11	
	cmpl %r11d, %r10d	

3
	movq %reg0, -48(%rbp)	
	movq -8(%rbp), %rdx	

3
	movq %rbx, %reg1	
	negl %eax	

3
	call *%reg0	
	movq -16(%rbp), %reg2	

3
	addl %reg0, %eax	
	movq -48(%rbp), %reg3	

3
	movq %rax, %rbx	
	cmpl $0, %r13d	

3
	movq -24(%rbp), %rax	
	movq %rdi, %reg3	

3
	movq 8(%rbx), %rdx	
	movq 0(%rdx), %r12	

3
	testq $1, %reg0	
	je .Main.main_36	

3
	movq -136(%rbp), %reg1	
	cmpl %edi, %reg3	

3
	movq -8(%rbp), %rdi	
	movq -152(%rbp), %rsi	

3
	movq -40(%rbp), %reg1	
	movq %reg2, %rsi	

3
	movq -136(%rbp), %reg1	
	movq %reg2, %rax	

3
	movq %reg0, %r14	
	movq %reg2, %reg0	

3
	movq -48(%rbp), %rax	
	subl %eax, %reg3	

3
	movq -8(%rbp), %reg1	
	movq -136(%rbp), %rsi	

3
	movq -144(%rbp), %rax	
	addl %eax, %esi	

3
	subl %reg0, %reg1	
	movq -104(%rbp), %reg3	

3
	movq %rdi, %rbx	
	movq %reg2, %rdx	

3
	movq %reg0, %rdi	
	movq -184(%rbp), %reg3	

3
	call *%rax	
	movq %r12, %rax	

3
	call out_error	
.Main.main_25:	

3
	movq %reg0, 72(%rax)	
	movq $0, %reg0	

3
	movq $0, %reg0	
	movq %reg0, 80(%reg1)	

3
	movq -152(%rbp), %rax	
	movq %reg2, %rsi	

3
	movq $200, %rsi	
	movq $.string5_l, %rdi	

3
	call out_error	
.Main.main_44:	

3
	movq %reg0, %rbx	
	movq $.string6, %rax	

3
	movq %reg0, %rsi	
	movq %r15, %reg3	

3
	movq -160(%rbp), %reg1	
	negl %reg2	

3
	testq $1, %reg0	
	je .Main.main_75	

3
	movq -32(%rbp), %rdx	
	movq 0(%rdx), %rax	

3
	pushq %r15	
	movq %reg1, %rbx	

3
	movq 88(%rax), %rax	
	movq -8(%rbp), %rdi	

3
	negl %esi	
	subl %esi, %reg1	

3
	movq %rax, 8(%rax)	
	leave	

3
	movq -112(%rbp), %rdi	
	cmpl %edi, %reg3	

3
	.quad List.new	
	.quad Object.abort	

3
	imull %esi	
	cmpl %reg1, %reg2	

3
	movq -184(%rbp), %reg1	
	negl %eax	

3
	movq %r13, %rdi	
	addl %edi, %reg3	

3
	movq %rsi, %reg1	
	movq %rdi, %reg3	

3
	movq %reg0, -176(%rbp)	
	movq -8(%rbp), %rdx	

3
	movq -112(%rbp), %reg1	
	imull %reg2	

3
	movq $2, %rdi	
	imull %edi	

3
	movq %rbx, %reg1	
	movq -88(%rbp), %reg3	

3
	movq $12, %r9	
	movq %reg1, %reg2	

3
	movq 0(%rbx), %r15	
	movq 56(%r15), %r15	

3
	movq %r14, %reg1	
	imull %edi	

3
	movq 48(%rax), %rax	
	movq -16(%rbp), %rdi	

3
	movq $10, %reg0	
	movq %reg0, %reg1	

3
	movq -136(%rbp), %reg1	
	movq %reg2, %rdi	

3
	movq %reg0, -32(%rbp)	
	movq %reg2, %rdx	

3
	movq -32(%rbp), %rdi	
	addl %edi, %reg3	

3
	movq $1, %reg0	
	movq %reg0, %r13	

3
	movq $12, %reg0	
	movq -80(%rbp), %rax	

3
	setle %reg0	
	jg .Main.main_6	

3
.Main.main_12:	
	movq 0(%reg0), %reg1	

3
	movq %reg0, %rdi	
	movq 16(%reg2), %reg0	

3
	movq -8(%rbp), %reg1	
	movq -144(%rbp), %rsi	

3
	movq %rbx, %rcx	
	negl %reg2	

3
	movq $2, %reg0	
	movq 0(%rax), %rbx	

3
	movq -160(%rbp), %reg1	
	subl %reg2, %eax	

3
	movq %r13, %rsi	
	call *%r12	

3
	movq 72(%r14), %r14	
	movq %reg1, %reg2	

3
	movq 24(%reg0), %reg1	
	addl %reg2, %reg3	

3
	movq $88, %rsi	
	movq $.string2_l, %rdi	

3
	movq -8(%rbp), %reg1	
	movq -80(%rbp), %reg3	

3
	movq $153, %rsi	
	movq $.string5_l, %reg1	

3
	movq %r12, %reg1	
	movq %rax, %r13	

3
	movq 64(%r15), %r15	
	movq %reg1, %rdi	

3
	.type Bar.getX, @function	
Bar.getX:	

3
	movq %rsp, %reg1	
	movq 8(%rdi), %rax	

3
	movq %rax, %rdi	
	movq -56(%rbp), %rax	

3
	je .Main.main_1	
	movq $7, %reg0	

3
	movq %reg0, %reg1	
	movq $10, %reg2	

3
	movq -96(%rbp), %reg1	
	cmpl %esi, %reg3	

3
	call out_error	
.Main.main_32:	

3
	movq 32(%reg0), %reg0	
	movq %r12, %rdi	

3
	call Foo.new	
	movq %reg0, 8(%reg1)	

3
	movq -120(%rbp), %reg1	
	addl %eax, %edi	

3
	je .Main.main_3	
	movq $0, %reg0	

3
	movq %r15, %rdi	
	cmpl %reg2, %eax	

3
	movq %reg0, 80(%rax)	
	movq $0, %reg0	

3
	testq $1, %reg0	
	je .Main.main_44	

3
	jge .Main.main_2	
	pushq %rax	

3
	subl %reg0, %reg1	
	movq %r12, %rax	

3
	movq %r14, %rdi	
	cmpl %edi, %eax	

3
	movq %rsp, %reg1	
	movq 8(%reg2), %reg3	

3
	movq $0, %reg0	
	movq %reg0, 80(%rax)	

3
	movq 24(%rax), %rax	
	movq %rbx, %reg2	

3
	movq -16(%rbp), %reg1	
	movq %reg2, %rdi	

3
	movq %reg0, %rsi	
	movq -88(%rbp), %reg0	

3
	movq %rdi, %rax	
	cmpl %reg2, %reg3	

3
	movq -48(%rbp), %reg1	
	negl %reg2	

3
	movq 40(%rax), %rax	
	movq %reg1, %reg2	

3
	movq %reg0, %rdi	
	movq 8(%reg2), %reg3	

3
	movq %rsi, %reg1	
	movq $12, %rsi	

3
	idivl %edi	
	movq %reg1, %rdi	

3
	movq -176(%rbp), %rdi	
	addl %reg2, %reg3	

3
	movq %reg0, %rdi	
	movq -144(%rbp), %reg3	

3
	movq -80(%rbp), %reg1	
	subl %eax, %reg3	

3
	setle %reg0	
	jg .Main.main_10	

3
	movq %reg0, %rdi	
	movq 8(%rbx), %reg3	

3
	movq -24(%rbp), %rax	
	subl %reg2, %reg3	

3
	movq %reg0, %reg1	
	jmp .Main.main_24	

3
	imull %reg0d	
	addl %eax, %reg2d	

3
	movq $2147483647, %rax	
	movq $1, %rdi	

3
	movq %r12, %rdi	
	addl %reg2, %eax	

3
	movq %reg0, %r13	
	movq %r13, %r12	

3
	negl %reg0d	
	imull %reg0d	

3
	movq $4, %r12	
	movq 0(%reg1), %rax	

3
	movq 16(%rbx), %reg1	
	cmpl %reg2, %eax	

3
	negl %eax	
	movq %rax, %rcx	

3
	movq %r15, %reg1	
	cmpl %eax, %reg3	

3
	cmpl $0, -16(%rbp)	
	movq -16(%rbp), %rdi	

3
	movq $0, %rax	
	movq %rax, %rdi	

3
	movq %rdi, %rbx	
	movq -8(%rbp), %rdx	

3
	movq $1, %rax	
	movq $2, %rdi	

3
	movq -120(%rbp), %rax	
	addl %eax, %reg3	

3
	movq 16(%reg0), %rdi	
	movq %r12, %reg3	

3
	call out_error	
.Main.main_66:	

3
	movq -136(%rbp), %reg1	
	addl %reg2, %reg3	

3
	movq %rax, -32(%rbp)	
	movq -8(%rbp), %reg3	

3
	movq 88(%rax), %rax	
	movq 32(%rbx), %reg2	

3
	movq %rdi, %reg1	
	movq $0, %rbx	

3
	subl %reg0, %eax	
	movq 0(%reg2), %r12	

3
	movq -96(%rbp), %reg1	
	subl %reg2, %eax	

3
	movq $37, %rsi	
	movq $.string3_l, %rdi	

3
	call *%r12	
	jmp .Main.main_12	

3
.Main.main_2:	
	movq 8(%reg0), %reg1	

3
.Main.main_7:	
	movq 0(%rbx), %reg1	

3
	movq 88(%rax), %rax	
	movq %r12, %reg2	

3
	movq %reg0, -176(%rbp)	
	movq %reg2, %rdx	

3
	movq -168(%rbp), %rsi	
	movq %reg2, %reg3	

3
	movq -16(%rbp), %reg1	
	addl %eax, %reg3	

3
	movq -80(%rbp), %rdi	
	cmpl %edi, %reg3	

3
	movq %rdi, %reg1	
	movq %r12, %rdi	

3
	movq %rax, %reg1	
	cmpl $0, %r13d	

3
.Main.main_2:	
	movq 0(%r12), %reg1	

3
	call *%rax	
	movq %rbx, %rax	

3
	movq %reg0, %rdi	
	movq -104(%rbp), %rsi	

3
.Main.main_2:	
	movq 0(%rbx), %rax	

3
	.quad .string9_l	
	.quad 2	

3
	movq %rbx, %rax	
	movq %reg2, %rdi	

3
	movq $.string7, %rax	
	movq 0(%rbx), %reg2	

3
	movq %reg0, %rax	
	movq -48(%rbp), %rdi	

3
	idivl %ecx	
	subl %eax, %esi	

3
	movq -24(%rbp), %rsi	
	imull %reg2	

3
	subl %reg0, %edi	
	movq -152(%rbp), %reg3	

3
	movq -48(%rbp), %reg1	
	subl %reg2, %reg3	

3
	jne .Main.main_1	
	movq %reg0, %r13	

3
	call out_error	
.Main.main_46:	

3
	idivl %r8d	
	negl %reg1	

3
	ret	
	.size List.new, .-List.new	

3
	call *%r12	
.Main.main_12:	

3
	movq %rdi, 72(%reg1)	
	movq $0, %rdi	

3
	movq $0, %reg0	
	movq %reg0, 72(%rax)	

3
	movq %reg0, %reg1	
	movq -184(%rbp), %reg1	

3
	movq $4, %reg0	
	movq $.string7_l, %rdi	

3
	movq $2, %reg0	
	cmpl %reg1, %esi	

3
	movq $12, %reg0	
	movq %r14, %rax	

3
	call Matrix.new	
	movq %rax, %reg1	

3
	movq $4, %rbx	
	movq 0(%reg1), %r12	

3
	.size Main.new, .-Main.new	
	.globl Bar.new	

3
	movq -136(%rbp), %rdi	
	cmpl %edi, %eax	

3
	movq %reg0, %rcx	
	movq -48(%rbp), %reg0	

3
	jg .Main.main_13	
	movq $6, %reg0	

3
List.new:	
	pushq %reg0	

3
	movq %reg0, -32(%rbp)	
	movq -8(%rbp), %rdx	

3
	movq -168(%rbp), %reg1	
	movq %reg2, %rax	

3
	movq %r13, %rax	
	movq %r14, %reg3	

3
	movq -176(%rbp), %rdi	
	addl %edi, %eax	

3
	subl %reg0, %reg1	
	movq $12, %rcx	

3
	movq $.string9, %rax	
	movq %reg1, %rdx	

3
	movq -96(%rbp), %rax	
	imull %reg2	

3
	movq 16(%rax), %reg1	
	sete %dil	

3
	movq -24(%rbp), %rdi	
	addl %edi, %eax	

3
	call *%rax	
	movq %rax, -32(%rbp)	

3
	movq -32(%rbp), %rax	
	sete %reg2	

3
	movq 112(%reg0), %reg0	
	movq %rbx, %reg2	

3
	movq 64(%rax), %rax	
	movq %r12, %rdi	

3
	je .Main.main_6	
	movq $3, %reg0	

3
	movq -32(%rbp), %reg1	
	sete %reg2	

3
	movq 112(%reg0), %reg0	
	movq %rbx, %rdi	

3
	movq %rax, %reg1	
	movq 8(%rbx), %reg3	

3
	movq -96(%rbp), %rcx	
	imull %ecx	

3
	call *%reg0	
	jmp .Main.out_whatever_5	

3
	movq $5, %rdi	
	movq %r14, %reg2	

3
	jg .Main.main_10	
	movq $4, %reg0	

3
	jmp .Main.main_22	
.Main.main_21:	

3
	movq -64(%rbp), %reg1	
	imull %reg1d	

3
	subl %edi, %eax	
	movq %reg2, %r12	

3
	movq %r12, %r13	
	movq %rax, %reg3	

3
	movq %reg0, %reg1	
	movq -168(%rbp), %rsi	

3
.Main.main_4:	
	movq %reg0, %reg1	

3
	movq %rbx, %rcx	
	negl %ecx	

3
	movq %r13, %reg1	
	movq %r12, %rsi	

3
	movq %rax, %r15	
	movq %reg2, %rdx	

3
	addl %reg0, %eax	
	movq -104(%rbp), %rdi	

3
	call out_error	
.Main.main_34:	

3
	movq %reg0, %reg1	
	movq %rax, %r14	

3
	movq %rax, %rsi	
	movq -168(%rbp), %rax	

3
	movq $2, %rsi	
	cmpl %esi, %reg2	

3
	movq %reg0, %r15	
	movq -8(%rbp), %rdx	

3
	movq -40(%rbp), %rax	
	movq %reg2, %rsi	

3
	idivl %esi	
	movq %reg1, %rdx	

3
	jg .Main.main_6	
	movq $2, %reg0	

3
	movq -24(%rbp), %rdi	
	cmpl %edi, %reg3	

3
	setl %al	
	movq $1, %rdi	

3
.Main.main_7:	
	movq 0(%reg0), %rax	

3
	movq $2, %reg0	
	cmpl %edi, %eax	

3
	movq %r13, %reg1	
	subl %edi, %reg3	

3
	movq %rax, %r15	
	movq -8(%rbp), %rdx	

3
	movq 64(%reg0), %reg0	
	movq 8(%reg1), %rdi	

3
	movq 64(%reg0), %reg0	
	movq 8(%reg1), %reg2	

3
	je .Main.main_1	
	movq $7, %rsi	

3
	.quad Object.type_name	
Baz_vtable:	

3
.Main.main_3:	
	cdq	

3
	movq -16(%rbp), %rdi	
	movq %rax, %reg3	

3
.Main.main_9:	
	movq 0(%rax), %r12	

3
	movq $153, %reg0	
	movq $.string5_l, %reg1	

3
.Main.main_3:	
	movq 0(%r12), %reg1	

3
	movq -144(%rbp), %rsi	
	call *%reg2	

3
	movq -128(%rbp), %rsi	
	imull %esi	

3
	movq -32(%rbp), %rdx	
	movq 0(%rdx), %reg2	

3
	call *%rax	
	jmp .Main.out_whatever_5	

3
	movq %r14, %rdi	
	addl %reg2, %reg3	

3
.Main.main_26:	
	cdq	

3
	addl %edi, %eax	
	movq -104(%rbp), %reg3	

3
	movq 56(%rax), %rax	
	movq -8(%rbp), %reg2	

3
	movq 32(%reg0), %reg1	
	movq 0(%reg1), %reg2	

3
	movq -32(%rbp), %reg1	
	subl %edi, %eax	

3
	movq %r12, %rax	
	cmpl %eax, %edi	

3
	addl %edi, %eax	
	movq -48(%rbp), %reg3	

3
	movq $4, %reg0	
	movq %reg0, %rsi	

3
	movq %rdi, %rax	
	negl %eax	

3
	movq -64(%rbp), %rsi	
	cmpl %esi, %reg3	

3
	movq %rsp, %rbp	
	movq 8(%reg2), %rax	

3
	movq %rax, %reg1	
	movq 16(%reg2), %rax	

3
	movq %reg0, %rdi	
	movq -184(%rbp), %reg0	

3
	movq %reg0, %rax	
	movq -80(%rbp), %rax	

3
	movq %reg0, %rax	
	movq -40(%rbp), %rdi	

3
	subl %reg0, %edi	
	movq %reg2, %rbx	

3
	movq %reg0, %rdi	
	movq %r12, %rax	

3
	movq -64(%rbp), %rax	
	addl %eax, %reg3	

3
	movq $5, %reg0	
	movq $.string3_l, %reg1	

3
	movq -8(%rbp), %rdi	
	movq -80(%rbp), %reg3	

3
	movq $0, %reg0	
	cmpl %reg0d, %r14d	

3
	movq %r14, %rdx	
	movq %rax, %rcx	

3
	movq %reg0, %r12	
.Main.main_3:	

3
	movq -144(%rbp), %reg1	
	cmpl %edi, %eax	

3
	movq %reg0, %rax	
	movq %reg2, %r12	

3
	jg .Main.main_3	
	movq $0, %reg0	

3
	subl %reg0, %eax	
	movq 0(%rbx), %r12	

3
	movq -80(%rbp), %rax	
	subl %eax, %reg3	

3
	setl %reg0	
	movq $1, %rdi	

3
	addl %edi, %eax	
	movq -88(%rbp), %reg3	

3
	movq %reg0, %rax	
	movq -152(%rbp), %rsi	

3
	movq 88(%rax), %rax	
	movq 32(%rbx), %rdi	

3
	movq %rdi, %rax	
	movq $0, %rbx	

3
	movq -72(%rbp), %reg1	
	addl %reg2, %edi	

3
	movq %reg0, %rdi	
	movq -56(%rbp), %reg0	

3
	movq %reg0, %rdx	
	movq %rax, %rcx	

3
	negl %reg0	
	addl %reg0, %reg1d	

3
	subl %eax, %reg1	
	movq %r12, %rax	

3
	ret	
	.size Baz.new, .-Baz.new	

3
	movq %rdi, %rax	
	movq 8(%rax), %rbx	

3
	imull %reg0	
	movq -176(%rbp), %rcx	

3
	sete %reg0l	
	jne .Main.main_3	

3
	movq %rbx, %reg1	
	popq %r13	

3
	movq %reg0, %rdi	
	cmpl %esi, %edi	

3
	movq %rax, %rdi	
	movq 16(%rbx), %rax	

3
	setle %reg0	
	jg .Main.main_3	

3
	movq $37, %reg0	
	movq $.string3_l, %reg1	

3
	movq 24(%rax), %rax	
	movq %rbx, %rdi	

3
	movq $0, %r11	
	cmpl %r11d, %ebx	

3
	movq %rax, -88(%rbp)	
	movq %reg2, %rdx	

3
	imull %reg0	
	movq $4, %reg1	

3
	call *%reg0	
	call Bool.new	

3
	subl %reg0, %reg1	
	movq 0(%rbx), %r12	

3
	movq -152(%rbp), %reg1	
	movq %reg2, %rsi	

3
	movq %rax, %rdi	
	movq -112(%rbp), %rax	

3
	movq -136(%rbp), %rdi	
	cmpl %reg2, %eax	

3
	movq 88(%reg0), %reg0	
	movq 32(%reg1), %reg2	

3
	movq 48(%r14), %r14	
	movq %rax, %reg2	

3
	movq 32(%rax), %rax	
	movq %r12, %reg2	

3
	movq $2, %r12	
	movq 0(%reg1), %rbx	

3
	setle %bl	
	jg .Main.main_10	

3
	movq $1, %rdi	
	movq $2, %rax	

3
	negl %esi	
	subl %esi, %eax	

3
	movq -24(%rbp), %reg1	
	movq 0(%reg1), %reg2	

3
	movq $.string6, %reg0	
	movq 0(%reg1), %rax	

3
	call *%reg0	
	movq %reg0, -88(%rbp)	

3
.Main.main_6:	
	movq %reg0, %reg1	

3
	movq 56(%r14), %r14	
	movq %rax, %reg2	

3
.Main.main_6:	
	cdq	

3
	cmpl $0, 16(%rax)	
	movq 16(%rax), %reg1	

3
	movq $0, %rax	
	cmpl %reg1, %reg2	

3
	movq %reg0, 8(%reg1)	
	call Foo.new	

3
	movq %rcx, %rax	
	movq -56(%rbp), %rcx	

3
	addl %edi, %eax	
	movq -104(%rbp), %rdi	

3
	movq %reg0, %rdi	
	cmpl %esi, %reg3	

3
	call *%rax	
	movq %rax, -120(%rbp)	

3
	movq %reg0, %rdi	
	movq -40(%rbp), %rsi	

3
	subl %reg0, %eax	
	movq %reg2, %r12	

3
	movq %r12, %reg1	
	movq %r14, %rdx	

3
	movq %reg0, %reg1	
	movq -72(%rbp), %rdi	

3
	cmpl %r11d, %reg1	
	sete %r11b	

3
	movq 64(%rax), %rax	
	movq %r12, %reg2	

3
	movq -128(%rbp), %rsi	
	imull %reg2	

3
	movq $0, %rdi	
	movq %rdi, 80(%reg1)	

3
	movq -144(%rbp), %reg1	
	cmpl %reg2, %eax	

3
	movq 16(%reg0), %reg1	
	cmpl %edi, %reg3	

3
Bar.getX:	
	pushq %reg0	

3
	movq -112(%rbp), %rdi	
	cmpl %reg2, %reg3	

3
	call *%reg0	
	movq %reg0, -96(%rbp)	

3
	movq $2, %rsi	
	cmpl %reg1, %edi	

3
	movq 8(%rbx), %reg1	
	sete %reg2l	

3
.Main.main_3:	
	movq %reg0, %rdi	

3
	movq 16(%reg0), %rdi	
	movq %reg2, %rsi	

3
	movq -40(%rbp), %reg1	
	call *%rax	

3
	movq %reg0, %r14	
	pushq %reg0	

3
	movq $1, %r12	
	movq 0(%rax), %reg2	

3
	movq %rax, -48(%rbp)	
	movq -8(%rbp), %rdx	

3
	movq %reg0, %reg1	
	movq -184(%rbp), %rsi	

3
.Main.main_13:	
	movq $7, %rbx	

3
	cmpl %r11d, %reg1d	
	sete %r11b	

3
	call *%rax	
	movq %rax, -64(%rbp)	

3
	testq $1, %reg0	
	je .Main.main_60	

3
	movq -64(%rbp), %reg1	
	addl %eax, %reg3	

3
	movq 16(%rax), %reg1	
	sete %reg2l	

3
	movq -168(%rbp), %rsi	
	movq %reg2, %rax	

3
	movq %rax, -32(%rbp)	
	movq %reg2, %reg3	

3
	addl %edi, %reg1	
	movq -16(%rbp), %reg3	

3
	movq $7, %reg0	
	movq 0(%rax), %r12	

3
	movq -152(%rbp), %reg1	
	subl %eax, %edi	

3
	addl %edi, %reg1	
	movq -48(%rbp), %reg3	

3
	movq 32(%reg0), %reg1	
	movq 0(%reg1), %rax	

3
	movq -8(%rbp), %reg1	
	movq -40(%rbp), %rsi	

3
	movq $1, %r13	
	movq %reg1, %rdi	

3
	movq -80(%rbp), %rdi	
	cmpl %reg2, %reg3	

3
	movq $0, %rax	
	movq %rax, %r12	

3
	movq %r14, %rax	
	cmpl %reg2, %esi	

3
	movq $1, %rax	
	cmpl %eax, %reg2	

3
	je .Main.main_6	
	movq $11, %rsi	

3
	movq %reg0, %rax	
	movq -96(%rbp), %reg0	

3
	movq $1, %r12	
	movq 0(%reg1), %rbx	

3
	subl %eax, %reg1	
	movq %r12, %reg3	

3
	call *%rax	
	movq %rax, %r15	

3
	movq $0, %r13	
	cmpl %r13d, %r12d	

3
	movq $32, %rdi	
	call getmem	

3
.Main.main_9:	
	movq 0(%reg0), %rax	

3
	call *%rax	
	movq %rax, -56(%rbp)	

3
	imull %reg0d	
	subl %reg1, %reg2	

3
	call *%r15	
	movq %reg1, %rdx	

3
	movq 0(%reg0), %rax	
	movq 112(%rax), %rax	

3
	movq %r15, %reg1	
	cmpl %edi, %reg3	

3
	movq %rdi, -8(%rbp)	
	movq %rsi, %reg3	

3
	movq %rax, %rdi	
	movq 8(%reg2), %reg3	

3
	movq %reg0, %rdi	
	movq -48(%rbp), %rax	

3
	movq $2, %reg0	
	cmpl %reg1, %eax	

3
	movq %r13, %reg1	
	subl %edi, %eax	

3
	movq %r14, %reg1	
	call String.substr	

3
	movq -40(%rbp), %reg1	
	cmpl %edi, %reg3	

3
	jge .Main.main_9	
	pushq %rax	

3
	movq $5, %reg0	
	call Int.new	

3
	movq 24(%reg0), %reg0	
	movq %rbx, %rdi	

3
	movq 32(%rax), %rax	
	movq %r12, %rdi	

3
	call *%r15	
	movq $12, %reg1	

3
	movq -120(%rbp), %reg1	
	call *%rax	

3
	movq $.string7, %rax	
	movq 0(%reg1), %reg2	

3
	movq %reg0, %reg1	
	movq %reg1, %rdi	

3
	movq 88(%reg0), %reg0	
	movq -8(%rbp), %reg2	

3
	movq $12, %reg0	
	movq -64(%rbp), %reg2	

3
	movq $0, %reg0	
	cmpl %eax, %reg2	

3
	movq %r14, %reg1	
	cmpl %eax, %reg3	

3
	movq %rax, %reg1	
	call Bar.new	

3
	movq %r12, %reg1	
	movq 8(%rbx), %reg3	

3
	movq $12, %reg0	
	movq %rbx, %reg2	

3
	movq %rcx, %reg1	
	movq -56(%rbp), %rcx	

3
	cdq	
	idivl %r14d	

3
	call *%reg0	
	movq %reg0, -104(%rbp)	

3
	movq -152(%rbp), %reg1	
	call *%reg2	

3
	movq %rbx, %rax	
	negl %reg2	

3
	call *%reg0	
	movq %reg0, -152(%rbp)	

3
	movq -24(%rbp), %rax	
	movq %rdi, %rsi	

3
	movq %reg0, %reg1	
	movq -112(%rbp), %rdi	

3
	movq 16(%reg0), %reg1	
	sete %dil	

3
	movq -80(%rbp), %reg1	
	movq %reg2, %rax	

3
	call out_error	
.Main.main_58:	

3
	movq %reg0, %rdi	
	movq $0, %reg2	

3
	movq -120(%rbp), %rsi	
	call *%rax	

3
	addl %reg0, %reg1	
	movq -56(%rbp), %rdi	

3
	call out_error	
.Main.main_45:	

3
	movq %reg0, 8(%reg1)	
	movq $3, %reg0	

3
	jmp .Main.main_20	
.Main.main_19:	

3
	movq 88(%reg0), %reg0	
	movq 32(%rbx), %reg2	

3
	movq %rdi, %reg1	
	movq $5, %reg2	

3
	movq $5, %reg0	
	movq %reg0, %reg1	

3
	call out_error	
.Main.main_51:	

3
	movq %r12, %reg1	
	call String.concat	

3
	movq $0, %reg0	
	cmpl %reg0d, %ebx	

3
	imull %reg0d	
	addl %reg1, %reg2d	

3
	subl %reg0, %reg1	
	movq 0(%reg2), %r12	

3
	movq %reg0, 80(%reg1)	
	movq $0, %reg0	

3
	movq -32(%rbp), %reg1	
	movq -144(%rbp), %reg3	

3
	call String.new	
	movq %rax, %r12	

3
	movq -88(%rbp), %rdi	
	imull %edi	

3
	movq %reg0, %rax	
	movq $2, %reg0	

3
	movq $.string6, %r13	
	movq -8(%rbp), %rdx	

3
	movq -96(%rbp), %rsi	
	movq %reg2, %reg3	

3
	movq $2, %rdi	
	cmpl %edi, %eax	

3
	movq %r12, %rax	
	movq 8(%reg2), %reg3	

3
	movq $0, %r11	
	cmpl %r11d, %reg1d	

3
	subl %reg0, %reg1	
	movq -96(%rbp), %rax	

3
	movq -24(%rbp), %rax	
	cmpl %eax, %esi	

3
	movq %r14, %reg1	
	movq %rax, %rcx	

3
	movq $138, %rsi	
	movq $.string4_l, %reg1	

3
	movq -176(%rbp), %rax	
	negl %eax	

3
	movq -96(%rbp), %rsi	
	cmpl %reg2, %reg3	

3
	movq -144(%rbp), %reg1	
	call *%reg2	

3
	testq $1, %reg0	
	je .Main.main_73	

3
	movq -128(%rbp), %reg1	
	imull %esi	

3
	movq $1, %reg0	
	cmpl %eax, %reg2	

3
	movq %rax, %reg1	
	movq $0, %reg2	

3
	negl %esi	
	movq %r13, %reg2	

3
	movq %reg0, %reg1	
	movq -48(%rbp), %rdi	

3
	movq -24(%rbp), %reg1	
	movq %rdi, %rsi	

3
	movq -40(%rbp), %reg1	
	cmpl %edi, %eax	

3
	.quad 4	
percentd_string_l:	

3
	movq %r11, %reg1	
	movq %rbx, %r11	

3
.Main.main_5:	
	cdq	

3
	movq %reg0, %rax	
	movq -144(%rbp), %reg0	

3
	movq 32(%reg0), %reg1	
	call *%reg2	

3
	movq %reg0, %r13	
	movq %r13, %reg2	

3
	movq %reg0, %rax	
	movq %r13, %reg0	

3
	movq $2, %rax	
	movq %rax, %reg1	

3
	movq %reg0, %rax	
	movq $0, %rbx	

3
	movq -152(%rbp), %reg1	
	cmpl %edi, %reg3	

3
	addl %reg0, %eax	
	movq -32(%rbp), %rdi	

3
	movq 72(%reg0), %reg0	
	movq %r12, %reg2	

3
	movq %r13, %rdi	
	cmpl %reg2, %eax	

3
	call *%rax	
	movq $5, %rax	

3
	movq %r12, %rax	
	subl %reg2, %reg3	

3
	movq %reg0, 72(%reg1)	
	movq $0, %reg0	

3
.Main.main_2:	
	pushq %rax	

3
	movq 16(%reg0), %rdi	
	cmpl %reg2, %reg3	

3
	movq $name_Int, %reg0	
	movq 0(%reg1), %reg2	

3
	movq %rbx, %reg1	
	imull %esi	

3
	movq 40(%rax), %rax	
	movq %reg1, %rdi	

3
	movq $2, %reg0	
	call Int.new	

3
	movq $.string6, %r14	
	movq -8(%rbp), %rdx	

3
	movq %reg0, %rax	
	movq 8(%rax), %r12	

3
	movq -24(%rbp), %reg1	
	movq %rdi, %reg3	

3
	movq 8(%rax), %rbx	
	cmpl $0, 16(%rax)	

3
	movq -112(%rbp), %reg1	
	addl %eax, %reg3	

3
	movq -120(%rbp), %reg1	
	call *%reg2	

3
	movq $Foo_vtable, 0(%rax)	
	movq %rax, %rbx	

3
	movq %r15, %rax	
	cmpl %eax, %reg3	

3
	testq $1, %rax	
	je .Main.main_8	

3
	movq -32(%rbp), %reg1	
	movq 0(%reg1), %reg2	

3
	movq %reg0, %rax	
	movq 8(%rax), %rbx	

3
	movq %rax, %rsi	
	movq -120(%rbp), %rax	

3
	movq %r12, %rsi	
	movq %r14, %reg3	

3
	movq -144(%rbp), %rdi	
	cmpl %edi, %eax	

3
	movq %reg0, 8(%rax)	
	movq %rax, 8(%rax)	

3
	movq -64(%rbp), %rsi	
	negl %reg2	

3
	movq $20, %rsi	
	movq $.string3_l, %rdi	

3
	imull %reg0	
	movq %r12, %reg2	

3
	movq -168(%rbp), %reg1	
	cmpl %eax, %reg3	

3
	movq 32(%reg0), %rdi	
	call *%reg2	

3
	movq %r12, %reg1	
	negl %edi	

3
	movq %r14, %rax	
	cmpl %edi, %reg3	

3
	movq %rsi, %reg1	
	call Cons.new	

3
	jge .Main.main_2	
	pushq %reg0	

3
	movq %reg0, %reg1	
	movq -56(%rbp), %rsi	

3
	movq -152(%rbp), %reg1	
	negl %eax	

3
	cmpq $String_vtable, 0(%reg0)	
	je .Main.main_2	

3
	call *%rax	
	movq %rax, -48(%rbp)	

3
	movq -64(%rbp), %rcx	
	imull %reg2	

3
	movq -16(%rbp), %reg1	
	subl %eax, %reg3	

3
	movq -104(%rbp), %rax	
	movq %reg2, %rcx	

3
	movq %reg0, %r13	
	pushq %reg0	

3
	movq %r12, %reg1	
	imull %esi	

3
	movq $1, %rdi	
	movq $2, %rsi	

3
	movq $0, %rax	
	cmpl %eax, %reg2	

3
	movq %r15, %rax	
	cmpl %reg2, %reg3	

3
	idivl %reg0d	
	negl %reg1	

3
	testq $1, %rdi	
	je .Main.main_10	

3
	movq -16(%rbp), %rdi	
	sete %dil	

3
	movq %rax, %rdi	
	movq -184(%rbp), %rax	

3
	movq -8(%rbp), %rdi	
	movq -152(%rbp), %reg3	

3
	movq $.string13, %rax	
	movq 0(%reg1), %r12	

3
	movq $4, %reg0	
	movq 0(%rbx), %rax	

3
	ret	
	.size Bar.getX, .-Bar.getX	

3
	call out_error	
.Main.main_60:	

3
	pushq %r12	
	movq %reg1, %r12	

3
	movq $12, %r8	
	movq -40(%rbp), %reg2	

3
	movq %rdi, %reg1	
	movq -160(%rbp), %rdi	

3
	movq 32(%rbx), %rdx	
	movq 0(%rdx), %rax	

3
	idivl %reg0	
	movq -8(%rbp), %rdx	

3
	movq 8(%reg0), %rax	
	movq %reg2, %reg3	

3
	movq $.string8, %rdi	
	movq %rdi, %reg1	

3
	movq %reg0, %rcx	
	movq %reg2, %r8	

3
	call *%rax	
	movq %rax, -16(%rbp)	

3
	addl %esi, %edi	
	movq %reg2, %rsi	

3
	movq $200, %reg0	
	movq $.string5_l, %rdi	

3
	testq $1, %reg0	
	je .Main.main_67	

3
	movq -16(%rbp), %reg1	
	sete %reg2l	

3
	movq 136(%r12), %r12	
	movq %reg1, %rdi	

3
	movq 64(%reg0), %reg0	
	movq 8(%rbx), %reg2	

3
.string7_l:	
	.string "\\n"	

3
	movq %r14, %rdi	
	movq %rax, %reg3	

3
.Main.main_1:	
	movq 0(%rbx), %rax	

3
	movq %rax, %rcx	
	movq -48(%rbp), %rax	

3
	movq $5, %reg0	
	movq 0(%rax), %r12	

3
	idivl %r9d	
	addl %reg1, %ecx	

3
	movq 56(%rax), %rax	
	movq -8(%rbp), %rdi	

3
	movq -112(%rbp), %reg1	
	cmpl %edi, %reg3	

3
	movq -72(%rbp), %rax	
	addl %reg2, %edi	

3
.Main.main_2:	
	movq %r12, %rdi	

3
	movq -184(%rbp), %rax	
	addl %eax, %reg3	

3
	addl %edi, %reg1	
	movq -88(%rbp), %reg3	

3
	movq %rdi, %reg1	
	movq -8(%rbp), %reg3	

3
	.quad .string3_l	
	.quad 4	

3
	movq %r12, %rdi	
	addl %edi, %eax	

3
	.quad 6	
percentd_string_l:	

3
	movq %r12, %rax	
	subl %edi, %reg3	

3
	movq %rbx, %rax	
	subl %eax, %reg3	

3
	call *%reg0	
	movq 8(%reg1), %reg0	

3
	movq %r10, %r11	
	movq $0, %r10	

3
	movq %reg0, %reg1	
	movq -144(%rbp), %rdi	

3
	movq %r13, %reg1	
	subl %reg2, %ecx	

3
	movq $4, %rbx	
	movq 0(%reg1), %reg2	

3
	movq %rax, -32(%rbp)	
	movq %reg2, %rdx	

3
	movq -32(%rbp), %rdi	
	addl %reg2, %eax	

3
	idivl %r9d	
	movq %rax, %r9	

3
	movq -8(%rbp), %reg1	
	movq -144(%rbp), %reg3	

3
	movq 16(%reg0), %rdi	
	movq %r12, %rsi	

3
.Main.main_5:	
	jmp .Main.main_6	

3
	movq %r13, %rdi	
	movq %r12, %rsi	

3
	movq %reg0, %reg1	
	movq %rbx, %r13	

3
	movq $2147483647, %reg0	
	movq $1, %rdi	

3
	movq %reg0, %rbp	
	movq %rsi, %reg3	

3
	movq %r12, %rsi	
	call String.concat	

3
	movq 16(%reg0), %rdi	
	sete %dil	

3
	call *%r13	
	cmpl $0, %eax	

3
	movq %rax, %r14	
	movq %reg2, %rax	

3
.Main.main_1:	
	movq %reg0, %rdi	

3
	subl %reg0, %reg1	
	movq -88(%rbp), %reg3	

3
	imull %reg0d	
	subl %eax, %reg2	

3
	addl %reg0, %reg1	
	movq -64(%rbp), %rdi	

3
	.quad 7	
.string11_l:	

3
	movq $103, %rsi	
	movq $.string2_l, %rdi	

3
	movq %r14, %reg1	
	cmpl %reg2, %esi	

3
	movq %r14, %rdx	
	movq %reg2, %reg3	

3
	movq 0(%rbx), %rax	
	movq 112(%rax), %rax	

3
	movq -168(%rbp), %rcx	
	negl %ecx	

3
	imull %reg0	
	cmpl %reg1, %edi	

3
	call String.concat	
	movq %rax, %rdi	

3
	movq -144(%rbp), %rax	
	addl %reg2, %esi	

3
	movq 16(%reg0), %reg1	
	cmpl %reg2, %eax	

3
	idivl %reg0	
	movq -40(%rbp), %reg2	

3
	je .Main.main_2	
	movq $5, %reg0	

3
	.quad 1	
abort_string_l:	

3
	addl %edi, %reg1	
	movq %rbx, %rdi	

3
	.quad .string2	
	.quad 0	

3
	movq $20, %reg0	
	movq $.string3_l, %reg1	

3
	negl %eax	
	movq -144(%rbp), %reg2	

3
	movq %rbx, %reg1	
	movq %r12, %rdx	

3
	movq $0, %r9	
	cmpl %r9d, %r10d	

3
	movq -8(%rbp), %rdi	
	movq -80(%rbp), %rsi	

3
	movq %rax, %rdi	
	cmpl %esi, %reg3	

3
	addl %edi, %eax	
	movq -64(%rbp), %rdi	

3
	movq $1, %reg0	
	movq $2, %rax	

3
	movq 88(%reg0), %reg0	
	movq 32(%rbx), %rdi	

3
	movq %rdi, %rax	
	movq %r12, %rdi	

3
	movq %r13, %rax	
	imull %reg2	

3
	movq $empty_string, %reg0	
	movq %reg0, %reg1	

3
	movq 56(%r15), %r15	
	movq %rbx, %reg2	

3
	movq $.string7, %reg0	
	movq 0(%reg1), %r12	

3
	movq %r14, %rax	
	cmpl %eax, %reg3	

3
	call *%reg0	
	movq %reg0, -32(%rbp)	

3
	movq -152(%rbp), %rdi	
	cmpl %edi, %reg3	

3
	call *%rax	
.Main.main_10:	

3
	subl %eax, %edi	
	movq %reg2, %rsi	

3
	movq %rsi, %rax	
	movq -160(%rbp), %rsi	

3
	movq -56(%rbp), %rdi	
	addl %reg2, %eax	

3
	addl %reg0, %reg1	
	movq %reg2, %rbx	

3
Main_vtable:	
	.quad .string2	

3
.Main.main_1:	
	movq 0(%rax), %rbx	

3
	call *%reg0	
	movq -128(%rbp), %reg2	

3
	movq %reg0, %rsi	
	movq -56(%rbp), %reg3	

3
	movq $.string6, %r14	
	movq %reg1, %reg2	

3
	movq %r12, %rax	
	cmpl %reg2, %edi	

3
	movq $0, %r11	
	cmpl %r11d, %reg1	

3
	movq $204, %reg0	
	movq $.string5_l, %reg1	

3
	movq %r14, %rax	
	cmpl %edi, %eax	

3
.Main.main_1:	
	movq %r12, %r13	

3
	movq -80(%rbp), %reg1	
	call *%rax	

3
	movq %rax, %rdi	
	cmpl %reg2, %edi	

3
	movq $7, %rbx	
	movq 0(%reg1), %reg2	

3
	call *%rax	
	movq %rax, -72(%rbp)	

3
	movq -64(%rbp), %reg1	
	subl %reg2, %reg3	

3
	movq $2, %rax	
	cmpl $0, %reg1d	

3
	movq %rsi, %r12	
	movq %r12, %reg2	

3
.Main.main_1:	
	movq 0(%reg0), %rbx	

3
	movq %reg0, %r14	
	movq %rbx, %r13	

3
	movq $.string9, %reg0	
	movq 0(%rbx), %rax	

3
	movq -24(%rbp), %reg1	
	cmpl %reg2, %esi	

3
	movq %rax, -88(%rbp)	
	movq %reg2, %reg3	

3
	movq $.string8, %rbx	
	movq -8(%rbp), %rdx	

3
	movq $88, %reg0	
	movq $.string2_l, %rdi	

3
	movq %r12, %rax	
	movq 8(%rbx), %reg3	

3
	movq 48(%rax), %rax	
	movq -16(%rbp), %reg2	

3
	addl %edi, %reg1	
	movq -16(%rbp), %rdi	

3
	movq %rax, -48(%rbp)	
	movq %reg2, %reg3	

3
	movq -104(%rbp), %rsi	
	call *%rax	

3
	testq $1, %reg0	
	je .Main.main_29	

3
	movq $4, %rdi	
	movq %rdi, %reg1	

3
	addl %reg0, %reg1	
	movq -32(%rbp), %rdi	

3
	.globl Baz.new	
	.type Baz.new, @function	

3
	movq %r13, %reg1	
	subl %eax, %ecx	

3
	movq $12, %r9	
	movq %reg1, %rax	

3
	movq %reg0, -88(%rbp)	
	movq %reg2, %reg3	

3
	call *%rax	
	movq $1, %rax	

3
	cmpl %reg0d, %r12d	
	sete %reg0b	

3
	movq -32(%rbp), %rdi	
	addl %reg2, %reg3	

3
	movq -40(%rbp), %reg1	
	call *%reg2	

3
	movq -56(%rbp), %rdi	
	addl %edi, %eax	

3
	movq 128(%rax), %rax	
	movq %reg1, %reg2	

3
	movq %r13, %rdi	
	cmpl %edi, %eax	

3
	movq -104(%rbp), %reg1	
	call *%reg2	

3
	movq -24(%rbp), %reg1	
	addl %eax, %reg3	

3
	movq 24(%reg0), %reg1	
	imull %reg2	

3
	addl %reg0, %eax	
	movq -16(%rbp), %reg3	

3
	movq -32(%rbp), %reg1	
	subl %edi, %reg3	

3
	movq $88, %rsi	
	movq $.string2_l, %reg1	

3
	.quad 50	
.string2_l:	

3
	.type Baz.new, @function	
Baz.new:	

3
	idivl %esi	
	movq -8(%rbp), %reg2	

3
	addl %edi, %reg1	
	movq %rbx, %reg3	

3
	movq $103, %reg0	
	movq $.string2_l, %reg1	

3
	movq -176(%rbp), %rcx	
	imull %ecx	

3
	call *%r13	
	movq 0(%rbx), %rax	

3
	movq 8(%rbx), %reg1	
	sete %dil	

3
	movq %reg0, %rsi	
	movq %r14, %rax	

3
	movq %r15, %rdi	
	cmpl %reg2, %reg3	

3
	movq 0(%reg0), %r14	
	movq 72(%r14), %r14	

3
	movq %reg0, %reg1	
	jmp .Main.main_3	

3
	movq %reg0, 32(%rbx)	
	cmpl $0, 32(%rbx)	

3
	movq -120(%rbp), %reg1	
	addl %edi, %eax	

3
	call out_error	
.Main.main_52:	

3
	movq 32(%reg0), %rdi	
	call *%rax	

3
	movq %reg0, %reg1	
	cmpl $0, -16(%rbp)	

3
	movq %reg0, %r14	
	movq %rax, %r13	

3
	movq -72(%rbp), %rax	
	addl %reg2, %reg3	

3
	movq -136(%rbp), %reg1	
	call *%rax	

3
	testq $1, %rax	
	je .Main.main_15	

3
	movq -80(%rbp), %rax	
	negl %reg2	

3
	movq %rdi, %reg1	
	movq 0(%reg2), %r12	

3
	movq $.string9, %rax	
	movq -8(%rbp), %rdx	

3
	movq 8(%rax), %reg1	
	cmpl $0, 16(%rax)	

3
	movq %reg0, %rax	
	subl %eax, %reg3d	

3
	call *%reg0	
	jmp .Main.main_1	

3
	movq -96(%rbp), %rax	
	negl %reg2	

3
	call *%rax	
	movq %rax, -168(%rbp)	

3
	movq -176(%rbp), %reg1	
	negl %eax	

3
	movq -48(%rbp), %rax	
	subl %reg2, %reg3	

3
	movq $.string7, %rbx	
	movq %reg1, %rdx	

3
	movq -16(%rbp), %reg1	
	movq %r13, %reg3	

3
	addl %esi, %edi	
	movq %reg2, %reg3	

3
	movq -96(%rbp), %rcx	
	imull %reg2	

3
	setl %r14b	
	jge .Main.main_2	

3
	.quad 1	
percentd_string_l:	

3
	call out_error	
.Main.main_55:	

3
	movq 0(%rbx), %reg1	
	movq 128(%reg1), %reg1	

3
	movq %reg0, %rax	
	movq -184(%rbp), %rax	

3
	movq -152(%rbp), %reg1	
	subl %reg2, %reg3	

3
	movq %rax, 8(%rbx)	
	call Foo.new	

3
	movq $6, %reg0	
	movq 0(%rax), %r12	

3
	movq %reg0, -8(%rbp)	
	movq %rsi, %reg3	

3
	movq -64(%rbp), %reg1	
	imull %ecx	

3
	addl %reg0, %edi	
	movq %rdi, %rsi	

3
	subl %eax, %edi	
	movq -152(%rbp), %reg3	

3
	movq -88(%rbp), %rdi	
	imull %reg2	

3
	movq %reg0, %reg1	
	subl %eax, %reg3d	

3
	movq -8(%rbp), %rdi	
	movq -136(%rbp), %reg3	

3
	movq -152(%rbp), %rax	
	subl %reg2, %reg3	

3
	movq %rsp, %rbp	
	movq 8(%rdi), %rax	

3
	movq %reg0, %reg1	
	movq -24(%rbp), %rdi	

3
	call *%reg0	
	movq $.string8, %rdi	

3
	subl %eax, %r9d	
	movq %r9, %reg2	

3
	.globl Bar.getX	
	.type Bar.getX, @function	

3
	movq -152(%rbp), %rdi	
	cmpl %edi, %eax	

3
	movq 16(%reg0), %rdi	
	movq %reg2, %reg3	

3
	subl %reg0, %reg1	
	movq -80(%rbp), %reg3	

3
	movq %rdi, %reg1	
	movq $.string10, %reg2	

3
	call *%r12	
	jmp .Main.main_8	

3
	.quad 4	
name_String_l:	

3
	movq -8(%rbp), %reg1	
	movq -120(%rbp), %reg3	

3
.string2_l:	
	.string "Main"	

3
	movq %rbx, %r13	
	pushq %rax	

3
	movq -24(%rbp), %rdi	
	cmpl %reg2, %reg3	

3
	movq %rsi, %rbx	
	movq 0(%rax), %reg3	

3
	movq -168(%rbp), %rcx	
	negl %reg2	

3
	movq %r11, %reg1	
	movq $0, %r11	

3
.Main.main_5:	
	movq $0, %rax	

3
	movq 32(%rbx), %rdi	
	call *%rax	

3
	movq $0, %reg0	
	movq %reg0, %r12	

3
	movq %reg0, %r8	
	movq %reg2, %rcx	

3
	movq -32(%rbp), %rdi	
	addl %edi, %eax	

3
	movq $12, %rcx	
	movq -48(%rbp), %rax	

3
	movq 0(%r12), %reg1	
	movq 32(%reg1), %reg1	

3
	addl %edi, %eax	
	movq %rbx, %reg3	

3
	testq $1, %rdi	
	je .Main.func_1	

3
	call String.concat	
	movq %rax, %r14	

3
	movq %r12, %reg1	
	movq 8(%reg2), %reg3	

3
	movq -56(%rbp), %rdi	
	addl %edi, %reg3	

3
	movq -136(%rbp), %rax	
	movq %reg2, %rdi	

3
	movq 8(%reg0), %reg1	
	cmpl $0, %reg2	

3
	idivl %r9d	
	addl %reg1, %reg2	

3
	idivl %r9d	
	addl %eax, %reg2	

3
	call out_error	
.Main.main_19:	

3
	testq $1, %reg0	
	je .Main.main_31	

3
	movq $5, %rdi	
	movq %r14, %rax	

3
	movq %reg0, 32(%reg1)	
	cmpl $0, 32(%reg1)	

3
	movq %reg0, -88(%rbp)	
	movq -8(%rbp), %rdx	

3
	idivl %reg0	
	subl %reg1, %esi	

3
	negl %reg0	
	movq %rdi, %reg2	

3
	call *%reg0	
	movq $0, %rax	

3
	movq $2, %reg0	
	cmpl %eax, %reg2	

3
	movq 0(%r12), %rax	
	movq 88(%rax), %rax	

3
	testq $1, %reg0	
	je .Main.main_45	

3
	movq -176(%rbp), %reg1	
	addl %reg2, %eax	

3
	movq %rdi, %rbx	
	movq -8(%rbp), %reg3	

3
	movq %reg0, %reg1	
	movq 16(%rbx), %reg0	

3
	movq -120(%rbp), %reg1	
	addl %eax, %reg3	

3
	movq $153, %reg0	
	movq $.string5_l, %rdi	

3
	call *%rax	
.Main.main_11:	

3
	movq $.string9, %rax	
	movq -8(%rbp), %reg2	

3
	call getmem	
	movq $List_vtable, 0(%rax)	

3
	movq $2, %reg0	
	movq 0(%reg1), %rbx	

3
	movq $204, %reg0	
	movq $.string5_l, %rdi	

3
	movq 24(%reg0), %reg0	
	movq %rbx, %reg2	

3
	negl %esi	
	movq %rdi, %reg2	

3
	movq %rsp, %reg1	
	movq 8(%reg2), %rax	

3
	movq -152(%rbp), %rsi	
	call *%reg2	

3
	movq $1, %reg0	
	movq %r14, %reg2	

3
	movq %reg0, %rdx	
	call *%r14	

3
.Main.main_24:	
	cdq	

3
	movq -144(%rbp), %reg1	
	negl %reg2	

3
	movq -112(%rbp), %rax	
	addl %eax, %reg3	

3
	movq %rax, %r12	
	movq $0, %rax	

3
	movq %rax, %rcx	
	movq %r14, %rax	

3
	movq %reg0, %reg1	
	movq -176(%rbp), %rsi	

3
	call out_error	
.Main.main_63:	

3
	call out_error	
.Main.main_73:	

3
	idivl %r9d	
	addl %eax, %ecx	

3
	movq %rax, %reg1	
	movq $12, %rax	

3
	movq -40(%rbp), %rsi	
	imull %reg2	

3
	movq %reg0, %rdi	
	movq -112(%rbp), %reg0	

3
	call out_error	
.Main.main_17:	

3
	movq -112(%rbp), %rdi	
	cmpl %reg2, %eax	

3
	movq $200, %reg0	
	movq $.string5_l, %reg1	

3
	movq %r13, %rdx	
	call *%r14	

3
	call *%rax	
	movq $1, %reg1	

3
	movq -32(%rbp), %rax	
	sete %al	

3
	movq %r12, %rdi	
	negl %edi	

3
	.quad 1	
name_String_l:	

3
	movq %rax, -32(%rbp)	
	movq -8(%rbp), %rdx	

3
	call String.new	
	movq %reg0, %r12	

3
.Main.main_5:	
	movq 8(%reg0), %reg1	

3
	movq -128(%rbp), %reg1	
	imull %ecx	

3
	movq %rax, %reg1	
	movq 8(%reg2), %reg3	

3
	movq %r11, %rax	
	movq %rbx, %r11	

3
	cmpl %r11d, %r10d	
	sete %r11b	

3
	movq 0(%rbx), %reg1	
	movq 112(%reg1), %reg1	

3
	addl %edi, %eax	
	movq %rbx, %rdi	

3
	movq $1, %reg0	
	movq %r14, %rax	

3
	movq $138, %reg0	
	movq $.string4_l, %rdi	

3
	movq -8(%rbp), %reg1	
	movq -152(%rbp), %rsi	

3
	movq %rdi, 8(%rax)	
	movq %rax, 8(%rax)	

3
	addl %reg0, %eax	
	movq -32(%rbp), %reg3	

3
	.type List.new, @function	
List.new:	

3
	movq -40(%rbp), %rdi	
	cmpl %reg2, %reg3	

3
	movq -168(%rbp), %rdi	
	cmpl %reg2, %eax	

3
	subl %edi, %eax	
	movq 0(%reg2), %r12	

3
	movq %r12, %rax	
	subl %edi, %eax	

3
	movq 0(%r12), %rax	
	movq 64(%rax), %rax	

3
	addl %edi, %eax	
	movq -56(%rbp), %reg3	

3
	movq $10, %reg0	
	movq %reg1, %rax	

3
	addl %reg0, %eax	
	movq -16(%rbp), %rdi	

3
	movq $0, %reg0	
	cmpl %reg0d, %r11d	

3
	subl %reg0, %reg1d	
	movq %reg2, %rax	

3
	subl %reg0, %edi	
	movq %reg2, %rsi	

3
	cdq	
	idivl %ebx	

3
	negl %eax	
	movq -176(%rbp), %reg2	

3
	movq -16(%rbp), %rsi	
	movq %reg2, %reg3	

3
	movq $0, %rdi	
	movq %rdi, 80(%rax)	

3
	movq %reg0, %rbx	
	movq $0, %r13	

3
	subl %reg0, %reg1	
	movq -128(%rbp), %reg3	

3
	movq $12, %rcx	
	movq -48(%rbp), %reg2	

3
	movq -56(%rbp), %reg1	
	cmpl %reg2, %esi	

3
	movq %rbx, %reg1	
	negl %ecx	

3
	movq $2, %rsi	
	cmpl %esi, %edi	

3
	movq -8(%rbp), %reg1	
	movq -104(%rbp), %reg3	

3
	movq %reg0, %rax	
	movq -144(%rbp), %rdi	

3
	movq -104(%rbp), %reg1	
	movq %reg2, %rcx	

3
	cmpl $0, 16(%rax)	
	movq 16(%rax), %rdi	

3
	movq %rsp, %rbp	
	movq 8(%rdi), %reg3	

3
	movq %rax, -176(%rbp)	
	movq -8(%rbp), %reg3	

3
	addl %reg0, %reg1	
	movq -104(%rbp), %rdi	

3
	movq $7, %rbx	
	movq 0(%rax), %r12	

3
	testq $1, %rax	
	je .Main.main_21	

3
	je .Main.main_2	
	movq $8, %reg0	

3
	call *%rax	
	movq %rax, -80(%rbp)	

3
	movq %reg0, %rax	
	movq -88(%rbp), %rsi	

3
	movq 72(%reg0), %reg0	
	movq %r12, %rdi	

3
	movq $2147483647, %reg0	
	movq $1, %reg1	

3
	subl %reg0, %reg1	
	movq %rax, %rbx	

3
	movq $.string9, %reg0	
	movq 0(%reg1), %rax	

3
	movq -168(%rbp), %rax	
	cmpl %reg2, %reg3	

3
	.string "\\n"	
.string7:	

3
	movq -80(%rbp), %rdi	
	cmpl %edi, %eax	

3
	movq %rax, 32(%rbx)	
	cmpl $0, 32(%rbx)	

3
	movq %reg0, %reg1	
	movq 16(%reg2), %reg0	

3
	call *%reg0	
	movq %reg0, -128(%rbp)	

3
	movq $138, %rsi	
	movq $.string4_l, %rdi	

3
	movq %rdi, %rax	
	movq $2, %rdi	

3
	movq $0, %reg0	
	movq %reg0, %rdi	

3
	call IO.new	
	cmpl $0, %reg0	

3
	movq %reg0, %rbp	
	movq 8(%rdi), %rax	

3
	movq $.string6, %reg0	
	movq 0(%rbx), %rax	

3
	.quad 2	
.string3_l:	

3
	movq %reg0, %reg1	
	movq $.string7, %reg2	

3
	movq %reg0, %rax	
	movq -112(%rbp), %rdi	

3
	subl %edi, %eax	
	movq %rax, %r12	

3
	addl %edi, %eax	
	movq -16(%rbp), %rdi	

3
	negl %eax	
	addl %eax, %reg1d	

3
	addl %edi, %reg1	
	movq -56(%rbp), %reg3	

3
	movq %rdi, %reg1	
	movq %reg2, %rax	

3
	movq %rax, -48(%rbp)	
	movq %reg2, %rdx	

3
	movq %reg0, %reg1	
	cmpl $0, %ebx	

3
	movq $200, %rsi	
	movq $.string5_l, %reg1	

3
	movq 16(%reg0), %reg1	
	sete %reg2l	

3
	movq $1, %rax	
	movq %rax, %r13	

3
	movq $5, %reg0	
	movq $.string3_l, %rdi	

3
	movq $204, %rsi	
	movq $.string5_l, %rdi	

3
	movq $4, %rsi	
	movq $.string7_l, %rdi	

3
	movq $2, %rax	
	movq $2, %reg1	

3
	movq %reg0, %rbp	
	movq 8(%reg2), %rax	

3
	movq -32(%rbp), %reg1	
	subl %reg2, %edi	

3
	.quad 0	
.string8_l:	

3
	movq 112(%rax), %rax	
	movq %rbx, %reg2	

3
	movq %r12, %rax	
	movq %r14, %rdi	

3
	movq %rax, -176(%rbp)	
	movq %reg2, %rdx	

3
	movq $37, %rsi	
	movq $.string3_l, %reg1	

3
	movq -96(%rbp), %rsi	
	cmpl %esi, %eax	

3
	movq $.string6, %r13	
	movq %reg1, %rdx	

3
	movq $1, %rdi	
	movq %r14, %reg2	

3
	movq -24(%rbp), %reg1	
	addl %edi, %eax	

3
	movq -32(%rbp), %reg1	
	negl %reg2	

3
	movq %reg0, %rdi	
	cmpl $0, %eax	

3
	movq -152(%rbp), %rax	
	negl %reg2	

3
	call *%rax	
	movq $.string8, %rdi	

3
	movq 64(%reg0), %reg0	
	movq 8(%rbx), %rdi	

3
	movq -136(%rbp), %rax	
	subl %reg2, %reg3	

3
	movq 64(%reg0), %reg0	
	movq %r12, %rdi	

3
	addl %reg0, %eax	
	movq %rax, %rbx	

3
	movq %rax, %r14	
	pushq %rax	

3
	jne .Main.main_1	
	movq %r12, %r13	

3
.Main.main_4:	
	popq %r13	

3
	call *%r14	
	cmpl $0, %reg1d	

3
	movq %rdi, %rax	
	movq %rsi, %r12	

3
	addl %reg0, %reg1	
	movq %rbx, %rdi	

3
	call *%rbx	
	jmp .Main.main_14	

3
	movq -80(%rbp), %reg1	
	negl %eax	

3
	subl %edi, %reg1	
	movq 0(%reg2), %r12	

3
	negl %ecx	
	subl %ecx, %eax	

3
	subl %eax, %reg1	
	movq %rdi, %rbx	

3
	movq %rsi, %rbx	
	movq 0(%reg2), %reg3	

3
	movq 128(%rax), %rax	
	movq %reg1, %rdi	

3
	movq -144(%rbp), %reg1	
	addl %reg2, %esi	

3
	movq %rcx, %rax	
	movq $12, %rcx	

3
	movq $12, %reg0	
	movq -80(%rbp), %reg2	

3
	call *%reg0	
	movq %reg0, -48(%rbp)	

3
	movq %rax, %rdi	
	cmpl %esi, %edi	

3
	movq -136(%rbp), %rsi	
	call *%reg2	

3
	testq $1, %reg0	
	je .Main.main_69	

3
	call *%rax	
	movq $1, %rdi	

3
	movq 64(%reg0), %reg0	
	movq %r12, %reg2	

3
	movq $.string6, %reg0	
	movq 0(%rax), %reg2	

3
	movq $1, %reg0	
	movq 16(%reg1), %reg2	

3
	call Object.new	
	movq %reg0, %reg1	

3
	movq %reg0, %r15	
	movq -8(%rbp), %reg3	

3
	movq -96(%rbp), %reg1	
	cmpl %esi, %eax	

3
	movq 16(%rbx), %reg1	
	movq %reg2, %reg3	

3
	.quad 7	
.string9_l:	

3
	movq %rdi, %reg1	
	movq -40(%rbp), %rdi	

3
	movq %reg0, %rax	
	movq 8(%rbx), %reg3	

3
	movq %r14, %rdi	
	cmpl %reg2, %eax	

3
	movq %reg0, %reg1	
	movq -80(%rbp), %reg1	

3
	movq %rdi, %rbx	
	movq $5, %reg2	

3
	movq %rax, %reg1	
	jmp .Main.main_3	

3
.Main.main_1:	
	movq %reg0, %r13	

3
	movq $1, %reg0	
	movq 0(%reg1), %rbx	

3
	movq $0, %rsi	
	movq %reg1, %reg2	

3
	movq $7, %rbx	
	movq 0(%reg1), %r12	

3
	movq %reg0, %rax	
	movq 8(%reg2), %reg3	

3
	testq $1, %reg0	
	je .Main.main_32	

3
	movq $.string6, %r14	
	movq -8(%rbp), %reg2	

3
	call *%reg0	
	movq %reg0, -160(%rbp)	

3
	movq %reg0, %rbx	
	cmpl $0, %r13d	

3
	movq 0(%reg0), %rax	
	movq 136(%rax), %rax	

3
	movq -16(%rbp), %rax	
	movq %reg2, %rdi	

3
	movq -32(%rbp), %reg1	
	movq 0(%reg1), %rax	

3
	movq %rbx, %reg1	
	negl %esi	

3
	movq -24(%rbp), %rdx	
	movq 0(%rdx), %reg2	

3
	imull %ecx	
	movq -176(%rbp), %reg2	

3
	movq 0(%rbx), %reg1	
	movq 24(%reg1), %reg1	

3
	movq -8(%rbp), %rdi	
	movq -136(%rbp), %rsi	

3
	movq -56(%rbp), %rax	
	cmpl %eax, %esi	

3
	movq %r13, %rax	
	subl %eax, %ecx	

3
	movq $88, %reg0	
	movq $.string2_l, %reg1	

3
	negl %reg0	
	movq %rdi, %rax	

3
	call out_error	
.Main.main_56:	

3
	call *%reg0	
	movq %reg0, -112(%rbp)	

3
	movq -152(%rbp), %reg1	
	call *%rax	

3
	movq %rdi, %reg1	
	movq -16(%rbp), %rdi	

3
	.quad 6	
.string1_l:	

3
	movq 8(%rax), %rax	
	testq $1, %rax	

3
	movq -16(%rbp), %reg1	
	movq %rax, %rsi	

3
	movq %reg0, %reg1	
	movq %r15, %rax	

3
	movq -16(%rbp), %reg1	
	subl %edi, %reg3	

3
	movq -144(%rbp), %reg1	
	call *%rax	

3
	movq -144(%rbp), %reg1	
	cmpl %edi, %reg3	

3
	addl %reg0, %reg1	
	movq %rdi, %rsi	

3
	movq -80(%rbp), %rdi	
	cmpl %reg2, %eax	

3
	movq %rsi, %reg1	
	movq 0(%rax), %r12	

3
	call *%rax	
	movq %rax, -160(%rbp)	

3
	cmpl $0, -24(%rbp)	
	movq -24(%rbp), %reg1	

3
	movq $2, %reg0	
	cmpl %eax, %edi	

3
	movq $1, %rax	
	cmpl %reg1, %reg2	

3
	subl %reg0, %reg1	
	movq %rdi, %rbx	

3
	addl %edi, %reg1	
	movq -104(%rbp), %reg3	

3
	movq %r13, %rdi	
	subl %reg2, %reg3	

3
	movq %r15, %reg1	
	cmpl %edi, %eax	

3
	setle %bl	
	jg .Main.main_6	

3
	cmpl %r10d, %r11d	
	sete %r10b	

3
	movq -8(%rbp), %reg1	
	movq -120(%rbp), %rsi	

3
	movq %reg0, %rax	
	movq -72(%rbp), %reg0	

3
	movq -32(%rbp), %rax	
	subl %reg2, %eax	

3
.Main.main_9:	
	pushq %reg0	

3
	pushq %r15	
	movq %rdi, %rbx	

3
	negl %ecx	
	subl %ecx, %reg1	

3
	call *%rax	
	movq %rax, -136(%rbp)	

3
	addl %edi, %reg1	
	movq -32(%rbp), %rdi	

3
	movq $0, %rdi	
	movq %rdi, 72(%rax)	

3
	cmpl %reg0d, %r11d	
	sete %reg0b	

3
	call *%reg0	
	movq %reg0, -168(%rbp)	

3
	movq %rsp, %rbp	
	movq 8(%reg2), %reg3	

3
	movq 32(%rbx), %reg1	
	call *%rax	

3
	.quad 2	
.string0_l:	

3
	movq -136(%rbp), %rsi	
	call *%rax	

3
	call *%reg0	
	movq $.string6, %r13	

3
	movq $12, %reg0	
	movq %r14, %reg2	

3
	movq -184(%rbp), %rax	
	movq %reg2, %reg3	

3
	addl %edi, %eax	
	movq -64(%rbp), %reg3	

3
	movq -120(%rbp), %reg1	
	addl %edi, %reg3	

3
	movq -104(%rbp), %reg1	
	call *%rax	

3
	movq $12, %r10	
	movq %reg1, %reg2	

3
	movq %rsp, %reg1	
	movq 8(%rdi), %reg3	

3
	movq %r15, %reg1	
	cmpl %reg2, %esi	

3
	movq -24(%rbp), %rsi	
	imull %esi	

3
	movq %r12, %reg1	
	pushq %reg2	

3
	movq %r12, %rax	
	movq %r14, %reg3	

3
	pushq %r14	
	movq %reg1, %rax	

3
	movq -152(%rbp), %rax	
	subl %eax, %edi	

3
	movq $0, %rdi	
	testq $1, %rdi	

3
	movq -112(%rbp), %rax	
	movq %r13, %reg3	

3
	movq $138, %reg0	
	movq $.string4_l, %reg1	

3
	movq -176(%rbp), %reg1	
	addl %edi, %reg3	

3
	movq -80(%rbp), %rsi	
	call *%rax	

3
	movq %rdi, %rbx	
	movq $0, %r13	

3
	movq %rax, %rdi	
	cmpl $0, %eax	

3
	movq %reg0, %rdi	
	movq -104(%rbp), %reg3	

3
	je .Main.main_2	
	movq $3, %reg0	

3
	movq $2, %rax	
	cmpl %reg1, %reg2	

3
	movq -16(%rbp), %rsi	
	movq %reg2, %rax	

3
	movq -56(%rbp), %rdi	
	addl %reg2, %reg3	

3
	call out_error	
.Main.main_54:	

3
	call *%r12	
	movq %rbx, %reg2	

3
	movq 32(%rbx), %reg1	
	call *%reg2	

3
	movq -136(%rbp), %reg1	
	call *%reg2	

3
	movq %reg0, %r14	
	movq $1, %reg0	

3
	movq $.string9, %rax	
	movq %reg1, %reg2	

3
	movq $103, %rsi	
	movq $.string2_l, %reg1	

3
	movq %rsi, %rax	
	movq $12, %rsi	

3
	movq %rdi, %reg1	
	movq -8(%rbp), %rdx	

3
	movq $.string6, %r13	
	movq -8(%rbp), %reg2	

3
	subl %reg0, %reg1	
	movq -152(%rbp), %rsi	

3
	movq %r14, %rdi	
	cmpl %edi, %reg3	

3
	movq %rdi, %rax	
	xorq $1, %rax	

3
	movq $.string8, %rbx	
	movq %reg1, %rdx	

3
	call *%rax	
	movq %rax, -112(%rbp)	

3
	idivl %ecx	
	subl %reg1, %esi	

2
.Main.main_14:	
	movq 0(%rbx), %reg1	

2
	movq %r13, %rsi	
	imull %esi	

2
	movq $10, %rsi	
	movq $.string3_l, %rdi	

2
	movq -152(%rbp), %rdi	
	addl %reg2, %reg3	

2
	movq -96(%rbp), %rax	
	subl %reg2, %reg3	

2
	movq -104(%rbp), %reg1	
	movq %reg2, %r8	

2
	movq $17, %rsi	
	movq $.string3_l, %rdi	

2
	movq 48(%reg0), %rax	
	sete %reg2	

2
	movq -160(%rbp), %rsi	
	movq %reg2, %reg3	

2
	movq $name_Int, %reg0	
	movq 0(%reg1), %r12	

2
	cmpq $String_vtable, 0(%rax)	
	je .Main.main_4	

2
	subl %edi, %reg1	
	movq %rax, -72(%rbp)	

2
	call out_error	
.Main.main_184:	

2
	movq $2, %rdi	
	negl %edi	

2
	testq $1, %rsi	
	je .Main.main_80	

2
	movq %reg0, %rsi	
	movq %rdi, %reg3	

2
	movq $.string7, %rax	
	movq 0(%reg1), %r12	

2
	movq %reg0, %r13	
	jmp .Main.main_1	

2
	movq $11, %reg0	
	movq %reg0, %reg1	

2
	call *%reg0	
.Main.main_3:	

2
	subq $32, %rsp	
	pushq %reg1	

2
	call out_error	
.Main.main_70:	

2
	movq %reg0, %reg1	
	movq 16(%reg2), %reg3	

2
	imull %r8d	
	subl %eax, %ecx	

2
.string0_l:	
	.string "Bar"	

2
	movq $0, %reg0	
	movq %reg0, 112(%reg1)	

2
	movq 32(%r12), %r12	
	movq %rax, %reg2	

2
	movq %rax, %r13	
	movq $0, %rax	

2
	movq %reg0, %r13	
	call Baz.new	

2
.Main.main_181:	
	cdq	

2
	movq %r11, %reg1	
	addl %reg1d, %reg2	

2
	subl %edi, %reg1	
	movq $0, %reg2	

2
	movq -88(%rbp), %rdi	
	subl %reg2, %reg3	

2
Cons.init:	
	pushq %rbp	

2
	call out_error	
.Main.main_22:	

2
	je .Main.main_1	
	cmpq $IO_vtable, 0(%reg0)	

2
	movq %rdi, 136(%rax)	
	movq $0, %rdi	

2
	movq $156, %rsi	
	movq $.string5_l, %reg1	

2
	negl %r8d	
	imull %r8d	

2
	movq $0, %rdi	
	movq %rdi, 184(%reg1)	

2
	movq -168(%rbp), %rax	
	addl %reg2, %esi	

2
	movq $2, %reg0	
	movq %reg1, %rdi	

2
	movq $12, %rsi	
	movq -56(%rbp), %rax	

2
	addl %edi, %reg1	
	movq -112(%rbp), %rdi	

2
	movq $.string6, %r12	
	movq 0(%reg1), %rbx	

2
	call *%rax	
	jmp .Main.main_10	

2
	imull %ecx	
	movq %r12, %rcx	

2
	movq %reg0, %rsi	
	movq -32(%rbp), %rax	

2
	cmpq $Bool_vtable, 0(%rax)	
	je .Main.main_4	

2
	movq %reg0, %rcx	
	movq %r12, %reg0	

2
	movq -64(%rbp), %reg1	
	negl %eax	

2
	movq %rax, %r12	
.Main.main_3:	

2
	imull %reg0	
	movq %rbx, %reg2	

2
	movq -16(%rbp), %rax	
	subl %reg2, %reg3	

2
	movq -48(%rbp), %reg1	
	movq -16(%rbp), %reg3	

2
	movq 16(%rbx), %rdi	
	movq %r12, %rsi	

2
	movq -168(%rbp), %reg1	
	cmpl %esi, %eax	

2
	movq $empty_string, %reg0	
	movq %reg0, %rdi	

2
	movq %r12, %rax	
	movq %r13, %r12	

2
	movq %reg0, %rcx	
	cmpl %ecx, %r8d	

2
	movq %rbx, %rax	
	cmpl %eax, %edi	

2
	movq $.string8, %r12	
	movq %reg1, %reg2	

2
	movq -64(%rbp), %reg1	
	movq %reg2, %rdi	

2
	movq $.string8, %rax	
	movq %rax, %reg1	

2
	imull %reg0d	
	addl %reg1, %r8d	

2
	subl %reg0, %esi	
	movq $12, %reg2	

2
	movq %reg0, %rbx	
	jmp .Main.main_24	

2
	movq 48(%rbx), %reg1	
	movq 0(%reg1), %reg2	

2
	addl %ecx, %reg1	
	addl %reg1, %eax	

2
	movq 80(%r13), %r13	
	movq %rax, %rdi	

2
	movq %rdx, -128(%rbp)	
	movq -8(%rbp), %rdx	

2
	call *%r12	
	call Bool.new	

2
	movq %reg0, %r8	
	movq -160(%rbp), %reg0	

2
List.cons:	
	pushq %reg0	

2
.Main.main_63:	
	cdq	

2
	movq %rdi, %rbx	
	call Bar.new	

2
	movq %r13, %rdi	
	imull %edi	

2
	movq %reg0, %reg1	
	movq -24(%rbp), %rsi	

2
	movq %rcx, %rax	
	movq -96(%rbp), %rax	

2
	movq %reg0, %rdi	
	movq -176(%rbp), %rsi	

2
	cmpq $Main_vtable, 0(%reg0)	
	je .Main.main_4	

2
.Main.main_5:	
	movq 8(%rbx), %rdx	

2
	negl %edi	
	movq -88(%rbp), %rax	

2
	movq -120(%rbp), %rsi	
	addl %reg2, %reg3	

2
	movq %rdi, %rbx	
	movq $.string10, %reg2	

2
	movq %reg0, %reg1	
	call Baz.new	

2
.Main.func_1:	
	movq 0(%reg0), %rax	

2
	.globl List.cons	
	.type List.cons, @function	

2
	movq $0, %rdi	
	movq %rdi, 96(%rax)	

2
	movq $10, %rsi	
	movq %reg1, %reg2	

2
	movq %reg0, 32(%reg1)	
	movq $100, %reg0	

2
	.quad IO.out_string	
	.quad Main.getFoo	

2
	subl %eax, %reg1	
	movq -120(%rbp), %rax	

2
	movq -152(%rbp), %rdi	
	addl %edi, %reg3	

2
	call out_error	
.Main.main_82:	

2
	movq %r14, %rax	
	popq %reg2	

2
	movq %rbx, %rax	
	cmpl %reg2, %esi	

2
	call *%r12	
	call IO.new	

2
	movq %reg0, 168(%reg1)	
	movq $0, %reg0	

2
	movq $3, %rax	
	movq $4, %rsi	

2
	movq -16(%rbp), %rax	
	cmpl %eax, %reg3	

2
	movq $.string7, %reg0	
	movq %reg0, %rdi	

2
	subl %reg0, %reg1	
	movq -16(%rbp), %reg3	

2
	testq $1, %rax	
	jne .Main.main_17	

2
	movq -8(%rbp), %rdi	
	movq -24(%rbp), %rsi	

2
	movq $8, %rsi	
	movq $.string1_l, %reg1	

2
	movq %reg0, %rsi	
	movq -128(%rbp), %rax	

2
	movq -176(%rbp), %reg1	
	subl %reg2, %eax	

2
Yaz.new:	
	pushq %rbp	

2
	movq -176(%rbp), %rsi	
	call *%reg2	

2
	addl %edi, %eax	
	movq %reg2, %rdx	

2
	movq $12, %r10	
	movq %r10, %reg1	

2
	.quad .string8_l	
	.quad 4	

2
	movq -136(%rbp), %rdi	
	subl %reg2, %eax	

2
	subl %reg0, %edi	
	movq -120(%rbp), %rax	

2
	movq -128(%rbp), %rdi	
	subl %edi, %reg3	

2
	movq -16(%rbp), %rcx	
	negl %reg2	

2
	movq %r14, %rax	
	popq %r15	

2
	je .Main.main_3	
	movq $.string6, %reg0	

2
	.string "Baz"	
.string1:	

2
	movq -88(%rbp), %reg1	
	cmpl %eax, %reg3	

2
.Main.main_35:	
	cdq	

2
	movq -120(%rbp), %rsi	
	imull %esi	

2
	movq 48(%rbx), %rax	
	sete %reg2	

2
	negl %eax	
	addl %eax, %r9d	

2
	movq %reg0, 48(%rbx)	
	movq $0, %reg0	

2
	addl %reg0, %eax	
	movq -160(%rbp), %rdi	

2
	movq %reg0, %reg1	
	movq $16, %reg0	

2
.Main.main_5:	
	movq 0(%rbx), %reg1	

2
	movq %rdi, %reg1	
	cmpl %eax, %reg3	

2
	call *%reg0	
	movq %r13, %reg2	

2
	subq $16, %rsp	
	pushq %rbx	

2
	jge .Main.main_2	
	movq $1, %reg0	

2
	movq %rdi, %reg1	
	movq 24(%reg1), %reg1	

2
	movq $0, %reg0	
	movq %reg0, 160(%rax)	

2
	movq -136(%rbp), %reg1	
	addl %reg2, %eax	

2
	movq %reg0, %rdi	
	movq -88(%rbp), %reg3	

2
	movq -136(%rbp), %rdi	
	subl %edi, %reg3	

2
	movq %reg0, 8(%rax)	
	movq %reg2, %rax	

2
.Main.main_1:	
	movq 0(%reg0), %r14	

2
.Main.main_6:	
	movq 0(%rax), %reg1	

2
	movq %reg0, %reg1	
	movq $.string10, %r12	

2
	movq $0, %reg0	
	movq $1, %rax	

2
	cmpl $0, 48(%rbx)	
	movq 48(%rbx), %reg1	

2
	subl %edi, %reg1	
	movq %reg2, -72(%rbp)	

2
	movq %reg0, 8(%rax)	
	movq $3, %reg0	

2
	movq -112(%rbp), %reg1	
	subl %reg2, %reg3	

2
	movq 24(%rbx), %reg1	
	movq 24(%rbx), %reg2	

2
	movq -120(%rbp), %rdi	
	addl %edi, %eax	

2
	testq $1, %rsi	
	je .Main.main_26	

2
	movq %reg0, %r12	
	call Yaz.new	

2
	.quad Object.type_name	
	.quad Foo.setBar	

2
	.text 	
	.globl List.new	

2
	movq $.string7, %r13	
	movq %reg1, %reg2	

2
Foo.setBar:	
	pushq %rbp	

2
	.quad .string11_l	
	.quad 2	

2
	movq %rsi, %rax	
	movq -96(%rbp), %rsi	

2
	addl %reg0, %eax	
	movq -144(%rbp), %reg3	

2
	movq -72(%rbp), %rsi	
	movq %reg2, %reg3	

2
	movq $0, %rdi	
	movq %rdi, 128(%rax)	

2
	movq -72(%rbp), %rax	
	movq -112(%rbp), %reg3	

2
	movq 0(%reg0), %r13	
	movq 88(%r13), %r13	

2
.Main.main_43:	
	cdq	

2
	movq $2, %rax	
	addl %reg1, %edi	

2
	pushq %reg0	
	movq $48, %reg1	

2
	addl %eax, %reg1	
	movq -128(%rbp), %reg3	

2
	movq %rbx, %reg1	
	subl %eax, %edi	

2
	imull %reg0d	
	subl %eax, %r8d	

2
	testq $1, %reg0	
	je .Main.main_96	

2
	subl %reg0, %reg1	
	movq -80(%rbp), %rdi	

2
	movq %reg0, %rbx	
	cmpl $0, %reg2	

2
	movq -48(%rbp), %reg1	
	cmpl %esi, %reg3	

2
	.string "e"	
.string8:	

2
	je .Main.main_2	
	cmpq $IO_vtable, 0(%reg0)	

2
	testq $1, %rax	
	je .Main.main_34	

2
	movq %rbx, %reg1	
	movq %r12, %rbx	

2
	movq -128(%rbp), %rdi	
	cmpl %reg2, %reg3	

2
	movq %reg0, 16(%rax)	
	movq $10, %reg0	

2
	movq %reg0, %reg1	
	movq %r9, %reg3	

2
	negl %reg0	
	movq $0, %rsi	

2
.Main.main_77:	
	cdq	

2
	movq 136(%reg0), %reg0	
	movq %rbx, %rdi	

2
.Main.main_56:	
	cdq	

2
	movq %reg0, 136(%reg1)	
	movq $0, %reg0	

2
	movq $11, %rax	
	movq 0(%reg1), %r12	

2
	movq $12, %rcx	
	movq -24(%rbp), %rax	

2
	movq %rax, %r13	
	movq %r12, %rax	

2
	addl %edi, %reg1	
	movq -8(%rbp), %reg3	

2
	testq $1, %reg0	
	je .Main.main_57	

2
	imull %edi	
	movq $12, %reg1	

2
	movq %reg0, %r12	
	movq 8(%r12), %reg2	

2
	addl %eax, %reg1d	
	movq $12, %reg2	

2
	movq %reg0, %rcx	
	movq -136(%rbp), %reg0	

2
	imull %reg0	
	movq $2, %reg1	

2
	call *%reg0	
	movq $.string9, %rax	

2
	call Main.new	
	movq %rax, %r12	

2
	movq -16(%rbp), %rdi	
	movq %r13, %reg3	

2
	movq 0(%rax), %reg1	
	movq 120(%reg1), %reg1	

2
	movq %rax, %reg1	
	movq $14, %rax	

2
	movq %r13, %reg1	
	movq %r14, %rcx	

2
	testq $1, %rcx	
	je .Main.main_178	

2
	movq $31, %reg0	
	movq $.string2_l, %rdi	

2
	movq %rbx, %reg1	
	cmpl %eax, %edi	

2
	addl %reg0, %eax	
	movq %r13, %reg3	

2
	movq %reg0, %rdi	
	movq $1, %reg2	

2
	movq %reg0, 152(%reg1)	
	movq $0, %reg0	

2
	call *%r12	
	movq $0, %rax	

2
	movq %reg0, %rsi	
	movq -144(%rbp), %rax	

2
	movq %rdi, %reg1	
	call Baz.new	

2
	movq 40(%reg0), %reg0	
	movq %rbx, %reg2	

2
	movq 0(%r13), %reg1	
	movq 88(%reg1), %reg1	

2
	negl %reg0	
	movq 0(%reg1), %reg2	

2
	movq %reg0, %r10	
	movq %reg2, %reg0	

2
	cmpl $0, 24(%reg0)	
	movq 24(%reg0), %reg1	

2
	idivl %r8d	
	movq -48(%rbp), %rcx	

2
	movq 48(%rbx), %reg1	
	call *%rax	

2
	jg .Main.main_6	
	movq $2, %r12	

2
	movq -112(%rbp), %reg1	
	movq $0, %r8	

2
	movq $1, %reg0	
	movq 8(%rax), %reg2	

2
	call *%reg0	
	movq -120(%rbp), %rax	

2
	movq %r13, %reg1	
	movq %reg2, %r13	

2
	movq 8(%r12), %reg1	
	movq 0(%rbx), %reg3	

2
	movq %rdi, %rax	
	cmpl %eax, %esi	

2
	movq 72(%r12), %r12	
	movq 8(%reg1), %reg2	

2
	movq 8(%reg0), %reg1	
	movq 8(%reg0), %reg0	

2
	movq $12, %r8	
	movq %r14, %reg2	

2
	movq %reg0, 48(%rbx)	
	cmpl $0, 32(%rbx)	

2
	idivl %r10d	
	movq %reg1, %r10	

2
	movq -72(%rbp), %rcx	
	addl %reg2, %reg3	

2
	addl %edi, %reg1	
	movq -72(%rbp), %reg3	

2
.Main.main_62:	
	cdq	

2
	movq %r13, %r12	
	movq 0(%reg2), %rax	

2
	movq -136(%rbp), %rdi	
	subl %edi, %eax	

2
	jmp .Main.new_4	
.Main.new_3:	

2
	movq $.string8, %rax	
	movq 0(%reg1), %reg2	

2
	addl %edi, %eax	
	movq -112(%rbp), %rdi	

2
	movq %reg0, 8(%rbx)	
	movq $1, %reg0	

2
	movq -96(%rbp), %reg1	
	negl %edi	

2
	movq $100, %rdi	
	movq %rdi, 40(%reg1)	

2
.Main.main_66:	
	cdq	

2
	movq %reg0, %reg1	
	movq $7, %reg0	

2
	movq -8(%rbp), %rdi	
	movq -16(%rbp), %reg3	

2
	je .Main.main_5	
	movq $3, %reg0	

2
	movq -24(%rbp), %rax	
	addl %eax, %reg3	

2
	movq $1, %reg0	
	movq 16(%reg1), %rdi	

2
	movq %reg0, %reg1	
	movq $17, %reg0	

2
	movq $11, %rdi	
	movq %rdi, 32(%reg1)	

2
	movq -40(%rbp), %rax	
	movq %reg2, %r9	

2
	subl %reg0, %r10d	
	movq %r10, %reg2	

2
	call *%r15	
	movq %reg1, %rdi	

2
	subl %reg0, %eax	
	movq %reg2, -72(%rbp)	

2
	.quad Main.printY	
Bool_vtable:	

2
	addl %reg0, %eax	
	movq -8(%rbp), %rdx	

2
.Main.main_12:	
	cdq	

2
	movq %reg0, -8(%rbp)	
	movq %rsi, %rbx	

2
	cmpq $Object_vtable, 0(%reg0)	
	je .Main.main_1	

2
	call getmem	
	movq $Yaz_vtable, 0(%rax)	

2
	movq -8(%rbp), %reg1	
	movq -176(%rbp), %reg3	

2
	movq %rax, %rcx	
	movq -136(%rbp), %rax	

2
	movq %rdi, %reg1	
	cmpl %ecx, %reg3d	

2
	movq -160(%rbp), %rax	
	movq %reg2, %r9	

2
	movq -136(%rbp), %reg1	
	subl %edi, %eax	

2
	movq -88(%rbp), %rsi	
	cmpl %reg2, %reg3	

2
	call *%r15	
	movq $1, %rdi	

2
	pushq %reg0	
	movq $0, %rax	

2
	movq 16(%reg0), %rax	
	cmpl %reg2, %reg3	

2
	movq %rdi, 168(%rax)	
	movq $0, %rdi	

2
	movq %reg0, %rbp	
	subq $32, %reg0	

2
	jge .Main.main_1	
	movq $1, %reg0	

2
	negl %edi	
	movq $0, %rsi	

2
	movq $2, %reg0	
	addl %reg1, %edi	

2
	call getmem	
	movq $Cons_vtable, 0(%reg0)	

2
	movq %rsi, %reg1	
	movq 8(%rax), %reg3	

2
	movq %rdx, -128(%rbp)	
	movq %reg2, %rdx	

2
	movq -112(%rbp), %rax	
	imull %reg2	

2
	movq %rdi, %rax	
	movq -40(%rbp), %rax	

2
	movq %reg0, %reg1	
	movq %reg1, -128(%rbp)	

2
	movq %rbx, %rsi	
	movq %r13, %rdx	

2
	movq 24(%rax), %reg1	
	addl %esi, %edi	

2
	movq $111, %rdi	
	movq %rdi, 64(%reg1)	

2
	movq %rax, %rdi	
	movq -136(%rbp), %rax	

2
	movq 128(%rax), %rax	
	movq %rbx, %rdi	

2
	movq $.string6, %reg0	
	movq %reg0, %r12	

2
	testq $1, %reg0	
	je .Main.main_50	

2
	movq $12, %r8	
	movq -144(%rbp), %reg2	

2
	movq %rsi, %reg1	
	movq %rdx, %reg3	

2
	subl %reg0, %eax	
	movq -152(%rbp), %rdi	

2
.Main.main_3:	
	movq 0(%reg0), %r12	

2
	movq %rdi, %reg1	
	movq -24(%rbp), %reg1	

2
	movq %rdi, %rax	
	cmpl %reg2, %esi	

2
	jg .Main.main_11	
	movq $1, %reg0	

2
	movq 96(%rbx), %rbx	
	movq %rax, %rdi	

2
	idivl %r11d	
	subl %eax, %r10d	

2
.Main.main_10:	
	movq 0(%reg0), %rax	

2
	movq %reg0, %rax	
	movq %rax, 40(%rbx)	

2
	movq %reg0, %rdi	
	movq 8(%reg2), %r12	

2
	movq %reg0, %reg1	
	movq %reg1, -80(%rbp)	

2
	movq -128(%rbp), %reg1	
	cmpl %eax, %esi	

2
	movq -88(%rbp), %rax	
	movq %reg2, %rdi	

2
	movq %rbx, %rsi	
	imull %esi	

2
	movq $11, %reg0	
	movq %reg0, 32(%rax)	

2
	addl %reg0, %reg1	
	movq %rsi, 8(%reg3)	

2
	movq -120(%rbp), %reg1	
	movq $0, %r8	

2
.Main.main_17:	
	movq %reg0, %reg1	

2
	negl %edi	
	movq -88(%rbp), %reg2	

2
	movq -48(%rbp), %rax	
	movq -16(%rbp), %rdi	

2
	cmpq $Object_vtable, 0(%reg0)	
	je .Main.func_2	

2
	movq %rsp, %reg1	
	movq %rsi, %rax	

2
	movq %r9, %r10	
	movq $0, %r9	

2
	movq 64(%rax), %rax	
	movq -16(%rbp), %rdi	

2
	movq 16(%rax), %reg1	
	call *%r12	

2
	movq %reg0, %reg1	
	call Object.copy	

2
	movq 24(%reg0), %rdi	
	imull %edi	

2
	jg .Main.main_10	
	movq $4, %rbx	

2
.Main.main_172:	
	cdq	

2
	movq %rax, %reg1	
	movq 8(%rbx), %rax	

2
	movq $2, %rsi	
	movq $1, %rdi	

2
	movq %rax, %r12	
	call Yaz.new	

2
	movq %reg0, %reg1	
	movq 0(%reg1), %r14	

2
	movq %reg0, %r12	
	cmpl $0, 48(%reg2)	

2
	movq $12, %rcx	
	movq -80(%rbp), %rax	

2
	movq -168(%rbp), %reg1	
	addl %eax, %reg3	

2
	call *%reg0	
	movq %reg0, -176(%rbp)	

2
	negl %eax	
	subl %eax, %esi	

2
	call Yaz.new	
	movq %rax, %reg1	

2
Cons.isNil:	
	pushq %reg0	

2
	call out_error	
.Main.new_1:	

2
	movq %rbx, %rax	
	imull %reg2	

2
	movq $0, %reg0	
	movq %reg0, 120(%rax)	

2
	movq %rsp, %rbp	
	subq $16, %rsp	

2
.Main.main_6:	
.Main.main_4:	

2
	movq $0, %r13	
	movq $1, %reg1	

2
	movq -40(%rbp), %reg1	
	subl %edi, %eax	

2
	addl %eax, %r9d	
	movq $12, %reg2	

2
	movq %reg0, %rax	
	movq $0, %rsi	

2
	movq $.string11, %reg0	
	cmpl $0, %ebx	

2
	movq 56(%r13), %r13	
	movq %rax, %reg2	

2
	addl %edi, %reg1	
	movq -8(%rbp), %rdx	

2
	movq $12, %rcx	
	movq -80(%rbp), %reg2	

2
	movq %reg0, %r12	
	movq 8(%r12), %rax	

2
	call out_error	
.List.cons_1:	

2
	movq 80(%r13), %r13	
	movq %reg1, %rdi	

2
	call String.cmp	
	movq %rax, %r14	

2
	movq $8, %reg0	
	movq %reg0, %reg1	

2
	je .Main.main_5	
	movq $6, %rsi	

2
	cmpq $IO_vtable, 0(%rax)	
	je .Main.main_4	

2
	je .Main.main_16	
	movq $3, %rsi	

2
	movq -24(%rbp), %rax	
	movq %reg2, %r9	

2
	movq $48, %reg0	
	call getmem	

2
	movq -128(%rbp), %reg1	
	cmpl %reg2, %eax	

2
	addl %eax, %reg1	
	movq %rbx, %reg3	

2
	movq 16(%reg0), %reg1	
	addl %reg2, %reg3	

2
	movq -136(%rbp), %rsi	
	movq %reg2, %rax	

2
.Main.main_18:	
	cdq	

2
	movq -80(%rbp), %rax	
	movq %rcx, %reg3	

2
	je .Main.main_4	
	cmpq $Bool_vtable, 0(%rax)	

2
	negl %edi	
	movq $1, %reg1	

2
	movq %rdi, 56(%rax)	
	movq $111, %rdi	

2
.Main.main_5:	
	movq 8(%rbx), %reg1	

2
	movq %reg0, %reg1	
	movq %reg1, 16(%reg2)	

2
.Main.main_8:	
	movq 0(%r12), %rax	

2
	movq $name_Int, %rax	
	movq 0(%rbx), %r12	

2
	movq 24(%rbx), %rdi	
	imull %edi	

2
	movq 88(%r13), %r13	
	movq %reg1, %reg2	

2
	movq %r12, %reg1	
	movq %r13, %r12	

2
	movq %reg0, %reg1	
	movq $14, %reg0	

2
	movq %reg0, 128(%reg1)	
	movq $0, %reg0	

2
	movq $0, %r13	
	cmpl %r13d, %r14d	

2
	movq %reg0, 184(%rax)	
	movq $0, %reg0	

2
	subl %eax, %r8d	
	movq %reg2, %reg3	

2
	movq 24(%reg0), %reg1	
	movq %reg2, %rsi	

2
	movq $110, %rdi	
	movq %rdi, 56(%rax)	

2
.Main.main_13:	
	movq 0(%rax), %reg1	

2
	movq -56(%rbp), %reg1	
	addl %esi, %reg3	

2
	movq %reg0, 40(%rbx)	
	movq $0, %reg0	

2
	movq $11, %rax	
	movq 0(%rbx), %reg2	

2
	je .Main.main_4	
	cmpq $Main_vtable, 0(%reg0)	

2
	testq $1, %reg0	
	je .Main.main_185	

2
	movq $0, %reg0	
	movq %reg0, 168(%reg1)	

2
	call *%reg0	
	testq $1, %rax	

2
	call *%r13	
	movq %rax, 8(%rbx)	

2
	movq %rdi, 104(%reg1)	
	movq $0, %rdi	

2
	movq %rax, %r12	
	movq %reg2, %rax	

2
	movq -128(%rbp), %rdi	
	cmpl %edi, %reg3	

2
.List.cons_1:	
	movq 0(%reg0), %reg1	

2
	movq -56(%rbp), %reg1	
	movq %reg2, %rcx	

2
	movq %rdi, %rcx	
	cmpl %reg2, %r8d	

2
	movq %reg0, %rsi	
	movq -96(%rbp), %rax	

2
	movq %reg0, %reg1	
	movq $3, %rax	

2
	movq %reg0, %rax	
	movq -48(%rbp), %r8	

2
	movq 96(%r13), %r13	
	movq %reg1, %rdi	

2
	idivl %reg0d	
	movq %reg1, %r9	

2
	addl %edi, %eax	
	movq -176(%rbp), %rdi	

2
	movq 24(%reg0), %rdi	
	movq %reg2, %reg3	

2
	movq %rsi, %reg1	
	movq -96(%rbp), %rsi	

2
	movq %reg0, %r13	
	movq $2, %reg0	

2
	movq %r13, %rdx	
	movq %r14, %rcx	

2
	movq %reg0, %reg1	
	movq $13, %reg0	

2
	call Yaz.new	
	movq %reg0, %reg1	

2
	movq %reg0, %rdi	
	movq -160(%rbp), %rsi	

2
	movq %reg0, %reg1	
	movq $0, %r11	

2
	movq $.string9, %r12	
	movq 0(%rbx), %reg2	

2
	addl %edi, %eax	
	movq %r13, %rdi	

2
	movq 72(%rax), %rax	
	movq 8(%reg1), %rdi	

2
	movq %reg0, %reg1	
	movq -64(%rbp), %rdi	

2
	addl %reg0, %esi	
	movq %reg2, %rcx	

2
	movq %reg0, %r12	
	movq %r12, %rdi	

2
	movq $Foo_vtable, 0(%reg0)	
	movq %reg0, %rdi	

2
	movq $11, %reg0	
	movq 0(%rbx), %r12	

2
	movq $19, %reg0	
	movq $.string3_l, %reg1	

2
	movq 8(%rax), %rdi	
	sete %reg2l	

2
	subl %reg0, %eax	
	movq -8(%rbp), %reg3	

2
	movq %reg0, %rbx	
	movq $.string7, %reg2	

2
.string6_l:	
	.string "Fail"	

2
	movq -64(%rbp), %rax	
	subl %eax, %reg3	

2
	movq -72(%rbp), %reg1	
	movq -112(%rbp), %reg3	

2
List.cons:	
	pushq %rbp	

2
	movq %r13, %rdx	
	movq %r14, %reg3	

2
	movq $2, %rax	
	movq $2, %rdi	

2
	testq $1, %reg0	
	je .Main.main_172	

2
.string9_l:	
	.string "ERROR: %lld: Exception: case without matching branch\n"	

2
	movq $0, %rsi	
	movq %reg1, %rdi	

2
	movq $0, %rdi	
	movq %rdi, 192(%rax)	

2
	movq %rsi, %rdi	
	movq $2, %rax	

2
	movq %rax, %rdi	
	movq 8(%reg2), %rax	

2
	movq -152(%rbp), %reg1	
	movq %r12, %reg3	

2
	.type Foo.getBar, @function	
Foo.getBar:	

2
	movq $.string7, %r12	
	movq 0(%rax), %rbx	

2
	je .Main.main_13	
	movq $3, %reg0	

2
	movq %reg0, %rbx	
	movq 0(%r13), %reg0	

2
	movq %rax, %rdi	
	movq -48(%rbp), %rax	

2
	movq $0, %reg0	
	movq %reg0, 120(%reg1)	

2
	movq -136(%rbp), %rsi	
	negl %reg2	

2
	cmpl %ecx, %r8d	
	setl %reg2	

2
	movq 8(%reg0), %reg1	
	addl %ecx, %reg3	

2
	subl %reg0, %eax	
	movq -8(%rbp), %rdx	

2
	movq -64(%rbp), %reg1	
	addl %reg2, %edi	

2
	movq $4, %rax	
	movq %rax, %reg1	

2
	movq 40(%reg0), %reg0	
	movq %rbx, %rdi	

2
	movq -88(%rbp), %rdi	
	subl %edi, %eax	

2
	movq $5, %reg0	
	movq %r13, %reg2	

2
	addl %reg0, %ecx	
	movq $12, %reg2	

2
	call Object.copy	
	movq %reg0, %reg1	

2
	movq $5, %r12	
	call Int.new	

2
	.size Main.main, .-Main.main	
	.globl Foo.setBar	

2
	movq 64(%r15), %r15	
	movq -8(%rbp), %rdi	

2
	call *%r13	
	movq %reg1, %rdi	

2
.Main.main_12:	
	movq %reg0, %reg1	

2
	movq %reg0, %rbx	
	movq $11, %reg2	

2
	movq %rdi, %reg1	
	movq $2147483647, %rax	

2
	idivl %ecx	
	movq -16(%rbp), %reg2	

2
	movq -96(%rbp), %reg1	
	movq $0, %reg2	

2
	movq %rdi, -8(%rbp)	
	movq $1, %rax	

2
	movq $12, %reg0	
	movq -96(%rbp), %rax	

2
	movq -24(%rbp), %rdi	
	call *%rax	

2
	movq 64(%r15), %r15	
	movq -8(%rbp), %reg2	

2
	call out_error	
.Main.main_38:	

2
	negl %reg0	
	movq -32(%rbp), %rax	

2
	subl %edi, %reg1	
	movq -80(%rbp), %rdi	

2
	movq $3, %reg0	
	cmpl $0, %r13d	

2
	addl %edi, %reg1	
	movq -120(%rbp), %rdi	

2
	movq %rdi, 160(%rax)	
	movq $0, %rdi	

2
	subl %eax, %reg1	
	movq -120(%rbp), %reg3	

2
	movq $127, %reg0	
	movq $.string2_l, %reg1	

2
	movq -184(%rbp), %rax	
	subl %ecx, %eax	

2
	movq %r12, %rax	
	movq %r13, %reg3	

2
	movq 16(%rax), %reg1	
	call *%reg2	

2
	movq -128(%rbp), %rcx	
	imull %ecx	

2
	movq 8(%rax), %rbx	
	movq 0(%rax), %reg2	

2
.Main.main_13:	
	movq $.string8, %reg0	

2
.Main.main_44:	
	cdq	

2
	movq -8(%rbp), %reg1	
	movq -56(%rbp), %rsi	

2
	movq $1, %rbx	
	call Int.new	

2
	movq %r13, %rax	
	movq %reg2, %r13	

2
	movq %rdi, 16(%reg1)	
	movq $10, %rdi	

2
	movq 32(%rbx), %rdi	
	call Bazz.doh	

2
	cmpl %ecx, %r8d	
	setl %cl	

2
	movq %reg0, 48(%rax)	
	movq $110, %reg0	

2
	negl %reg0	
	movq $1, %rax	

2
.Main.main_73:	
	cdq	

2
	imull %esi	
	movq -160(%rbp), %rsi	

2
	call Baz.new	
	movq %reg0, %r12	

2
	je .Main.main_2	
	cmpq $Main_vtable, 0(%reg0)	

2
	movq 0(%rax), %r12	
	movq 80(%r12), %r12	

2
	movq %rsi, 8(%rax)	
	movq %rdi, %rax	

2
	movq -32(%rbp), %reg1	
	cmpl %eax, %reg3	

2
	call *%rax	
	jmp .Main.main_17	

2
	movq $31, %rsi	
	movq $.string2_l, %rdi	

2
	movq 24(%reg0), %reg1	
	movq 0(%reg0), %reg2	

2
	movq $87, %rsi	
	movq $.string4_l, %reg1	

2
	.quad Cons.init	
String_vtable:	

2
	movq $.string11, %reg0	
	movq %reg1, %reg2	

2
	movq -24(%rbp), %rsi	
	call *%reg2	

2
	je .Main.main_2	
	movq $1, %rax	

2
	movq -184(%rbp), %rsi	
	call *%rax	

2
	pushq %r13	
	movq %rdi, %r13	

2
	je .Main.main_1	
	cmpq $IO_vtable, 0(%rax)	

2
	movq %rsi, %r8	
	movq %rdi, %reg3	

2
	je .Main.main_2	
	cmpq $String_vtable, 0(%reg0)	

2
	movq -88(%rbp), %reg1	
	cmpl %esi, %reg3	

2
	movq 8(%reg0), %rax	
	cmpl $0, %reg2	

2
	movq 88(%rax), %rax	
	movq 48(%reg1), %reg2	

2
	movq -32(%rbp), %rsi	
	imull %esi	

2
	movq 24(%reg0), %rsi	
	addl %reg2, %edi	

2
	.quad 4	
substrerr_string_l:	

2
	subl %edi, %reg1	
	movq -136(%rbp), %reg3	

2
	subl %esi, %reg1	
	movq $12, %rsi	

2
	movq %reg0, %reg1	
	cmpl %ecx, %reg3d	

2
	movq $0, %r12	
	call Int.new	

2
	movq %rdi, %rcx	
	cmpl %reg2, %reg3d	

2
.Main.main_69:	
	cdq	

2
	subl %eax, %ecx	
	movq %r12, %reg3	

2
	movq %reg0, 24(%reg1)	
	leave	

2
	idivl %r11d	
	subl %eax, %r9d	

2
	imull %esi	
	movq -160(%rbp), %reg2	

2
	movq 0(%rax), %rbx	
	movq 96(%rbx), %rbx	

2
	addl %reg0, %eax	
	movq -176(%rbp), %rdi	

2
	movq 0(%rax), %r12	
	movq 32(%r12), %r12	

2
	movq %reg0, 16(%reg1)	
	movq $10, %reg0	

2
	movq %rdi, 128(%rax)	
	movq $0, %rdi	

2
	movq -16(%rbp), %reg1	
	movq -32(%rbp), %rbx	

2
	call out_error	
.Main.main_176:	

2
	movq 8(%rbx), %r12	
	pushq %rax	

2
	movq %reg0, %reg1	
	call List.new	

2
	call A2I.new	
	cmpl $0, %eax	

2
	movq $.string7, %r12	
	movq 0(%reg1), %rbx	

2
	movq $9, %reg0	
	movq 0(%reg1), %reg2	

2
	movq -112(%rbp), %rax	
	addl %reg2, %esi	

2
	movq $12, %rsi	
	movq -136(%rbp), %rax	

2
	testq $1, %rsi	
	je .Main.main_35	

2
	movq %rax, %r12	
	jmp .Main.main_3	

2
	movq %reg0, 120(%reg1)	
	movq $0, %reg0	

2
.Main.main_78:	
	cdq	

2
	movq $12, %reg0	
	movq -88(%rbp), %rax	

2
	imull %reg0	
	movq %reg1, %r13	

2
	movq 48(%reg0), %reg1	
	call *%reg2	

2
	movq 48(%rax), %rax	
	movq -32(%rbp), %reg2	

2
	movq $10, %rsi	
	movq %reg1, %rax	

2
	movq -168(%rbp), %reg1	
	imull %reg2	

2
	addl %ecx, %esi	
	addl %esi, %reg2	

2
	movq %rax, %r12	
	movq $1, %reg2	

2
	negl %reg0	
	addl %reg0, %r9d	

2
	movq 8(%rbx), %r12	
	pushq %reg2	

2
	movq 8(%rbx), %rax	
	popq %reg2	

2
	addl %reg0, %reg1	
	movq %reg2, 16(%reg3)	

2
	movq -88(%rbp), %rcx	
	imull %ecx	

2
	movq -144(%rbp), %reg1	
	imull %reg1d	

2
.Main.main_4:	
	movq $0, %reg0	

2
	movq %reg0, %rbx	
	movq $.string8, %reg2	

2
	movq -32(%rbp), %reg1	
	pushq %reg2	

2
	movq 88(%rax), %rax	
	movq 8(%rbx), %rdi	

2
	movq $5, %rbx	
	movq 0(%rax), %r12	

2
	movq %rsi, %r12	
	movq 8(%rbx), %rax	

2
	addl %eax, %reg1d	
	movq %reg2, %reg3	

2
	movq -16(%rbp), %rdi	
	movq %r13, %rsi	

2
	movq -104(%rbp), %reg1	
	cmpl %esi, %eax	

2
	testq $1, %rax	
	je .Main.main_27	

2
	movq %rdi, %rbx	
	call Object.new	

2
	movq 48(%rax), %rax	
	movq -32(%rbp), %rdi	

2
	subl %r9d, %reg1	
	movq %reg2, %r9	

2
	movq $55, %reg0	
	movq $.string2_l, %reg1	

2
	addl %ecx, %reg1	
	addl %reg1, %reg2	

2
	movq -88(%rbp), %rsi	
	cmpl %esi, %eax	

2
	jmp .Main.main_32	
.Main.main_31:	

2
	movq 0(%reg0), %r12	
	movq 32(%r12), %r12	

2
	movq %reg0, %reg1	
	movq 8(%rbx), %rax	

2
	movq %reg0, %rdi	
	movq %rdi, 16(%reg2)	

2
	movq $12, %rcx	
	movq -72(%rbp), %rax	

2
	movq 48(%reg0), %reg1	
	call *%rax	

2
	movq %r14, %rax	
	testq $1, %rax	

2
	movq $0, %reg0	
	cmpl $0, %edi	

2
	cmpq $String_vtable, 0(%rax)	
	je .Main.main_1	

2
	sete %reg0b	
	jne .Main.main_3	

2
	movq 16(%reg0), %reg1	
	subl %reg2, %reg3	

2
	testq $1, %rsi	
	je .Main.main_25	

2
	movq %reg0, %rbp	
	movq %rsi, %rax	

2
	ret	
	.size Cons.init, .-Cons.init	

2
	movq $19, %rsi	
	movq $.string3_l, %rdi	

2
	imull %reg0	
	movq -16(%rbp), %reg2	

2
	movq -40(%rbp), %reg1	
	movq %reg1, %reg2	

2
	movq %reg0, 104(%rax)	
	movq $0, %reg0	

2
	jge .Main.main_1	
	movq $1, %r12	

2
	movq -184(%rbp), %rsi	
	call *%reg2	

2
	movq 88(%rax), %rax	
	movq %r13, %rdi	

2
Main.printY:	
	pushq %rbp	

2
	movq -32(%rbp), %rax	
	cmpl %eax, %esi	

2
	movq %reg0, %rax	
	movq -144(%rbp), %rax	

2
.Main.main_21:	
	cdq	

2
	movq 0(%r12), %rax	
	movq 104(%rax), %rax	

2
	movq $11, %rax	
	movq 0(%rbx), %r12	

2
	movq 16(%rbx), %rax	
	cmpl %edi, %eax	

2
	call *%r12	
	jmp .Main.main_7	

2
	call out_error	
.Main.main_31:	

2
.Main.main_34:	
	cdq	

2
	movq %r12, 8(%rax)	
	movq 0(%reg2), %r12	

2
	idivl %reg0	
	movq -40(%rbp), %rsi	

2
	movq %reg0, %r13	
	cmpl $0, %reg2d	

2
	movq %rdi, 160(%reg1)	
	movq $0, %rdi	

2
.Main.main_4:	
	movq 0(%reg0), %r12	

2
	testq $1, %reg0	
	je .Main.main_93	

2
	movq $0, %reg0	
	movq %reg1, %rax	

2
	movq %rdi, %rax	
	movq $3, %rbx	

2
	cmpl %reg0, %r8d	
	setl %cl	

2
	addl %eax, %reg1	
	movq %reg2, %rcx	

2
	call Yaz.new	
	movq %rax, %rbx	

2
	subq $16, %reg0	
	pushq %reg1	

2
	testq $1, %reg0	
	je .Main.main_103	

2
	movq %reg0, %rax	
	movq -96(%rbp), %rax	

2
	.type Cons.init, @function	
Cons.init:	

2
	movq %rax, %reg1	
	movq $16, %rax	

2
	movq 80(%r14), %r14	
	movq %reg1, %reg2	

2
	movq %reg0, %rdx	
	movq %r14, %rcx	

2
	movq -120(%rbp), %rax	
	movq $0, %r8	

2
.Main.main_24:	
	movq %reg0, %reg1	

2
	movq 8(%r12), %reg1	
	movq 0(%reg2), %reg3	

2
	movq %reg0, %rdi	
	movq -72(%rbp), %reg0	

2
	movq %reg0, %rsi	
	movq -32(%rbp), %reg0	

2
	call out_error	
.Main.main_188:	

2
	movq 8(%rax), %rsi	
	addl %reg2, %esi	

2
	movq %rax, %rdi	
	movq -136(%rbp), %reg3	

2
	movq -80(%rbp), %reg1	
	imull %esi	

2
	movq $13, %reg0	
	movq %reg0, %reg1	

2
	movq %rdi, %rax	
	movq -72(%rbp), %rdi	

2
	movq $Bar_vtable, 0(%rax)	
	movq %rax, %rdi	

2
	call *%r14	
	movq %rax, 8(%reg2)	

2
	movq -128(%rbp), %reg1	
	cmpl %reg2, %esi	

2
	movq -168(%rbp), %rax	
	addl %eax, %reg3	

2
	movq -104(%rbp), %reg1	
	movq %reg2, %rdi	

2
	movq -8(%rbp), %reg1	
	movq -160(%rbp), %rsi	

2
	movq %reg0, %rdx	
	movq 0(%rdx), %r14	

2
	movq $7, %rax	
	movq 0(%rbx), %r12	

2
	movq 96(%r14), %r14	
	movq %reg1, %rdi	

2
	imull %r10d	
	subl %eax, %reg2d	

2
	movq -48(%rbp), %r8	
	imull %r8d	

2
	imull %reg0	
	movq -80(%rbp), %reg2	

2
	.quad 3	
.string6_l:	

2
	movq %r13, %reg1	
	movq $0, %reg2	

2
	call *%r12	
	movq $.string6, %rax	

2
	movq -144(%rbp), %rdi	
	addl %edi, %reg3	

2
	movq 8(%rbx), %reg1	
	cmpl $0, %eax	

2
	subl %edi, %reg1	
	movq -80(%rbp), %reg3	

2
	movq %rdi, 112(%rax)	
	movq $0, %rdi	

2
	movq $.string8, %rax	
	movq 0(%rbx), %reg2	

2
	movq 8(%reg0), %rax	
	movq %reg2, %rdi	

2
	movq -40(%rbp), %rax	
	movq %reg2, %rdi	

2
	addl %ecx, %reg1	
	movq %rsi, 8(%rax)	

2
	imull %r9d	
	subl %eax, %r8d	

2
	movq -32(%rbp), %rsi	
	imull %reg2	

2
	movq %r14, %rdi	
	imull %edi	

2
	subl %edi, %eax	
	movq -8(%rbp), %rdx	

2
	movq 8(%reg0), %reg1	
	addl %reg2, %reg3	

2
	testq $1, %reg0	
	je .Main.main_38	

2
	movq 0(%reg0), %r12	
	movq 80(%r12), %r12	

2
	call out_error	
.Main.main_81:	

2
Foo.foo:	
	pushq %reg0	

2
	movq $17, %rax	
	movq %rax, %reg1	

2
	setl %cl	
	testq $1, %rcx	

2
	movq %reg0, %rax	
	movq %rbx, %rax	

2
	movq %rdi, 8(%rax)	
	movq $3, %rdi	

2
	.string "ERROR: %lld: Exception: case without matching branch\n"	
.string9:	

2
	movq 64(%rax), %rax	
	movq 8(%reg1), %rdi	

2
	movq -16(%rbp), %reg1	
	cmpl %eax, %reg3	

2
	movq -24(%rbp), %reg1	
	addl %esi, %reg3	

2
	testq $1, %rsi	
	je .Main.main_53	

2
	movq $2147483647, %reg0	
	movq %reg0, %reg1	

2
	movq 48(%reg0), %reg0	
	movq -24(%rbp), %reg2	

2
	movq %rdi, %rax	
	movq %rax, -16(%rbp)	

2
	movq -160(%rbp), %rsi	
	negl %esi	

2
.List.cons_1:	
	movq 0(%rax), %r13	

2
	movq -144(%rbp), %rax	
	movq $0, %reg2	

2
	movq %rsi, %r12	
	movq 8(%rbx), %reg3	

2
	movq 48(%reg0), %reg0	
	movq -32(%rbp), %reg2	

2
	subl %eax, %reg1	
	movq -104(%rbp), %reg3	

2
	movq %r12, %reg1	
	movq %reg2, %r12	

2
	movq $0, %rdi	
	movq %rdi, 144(%rax)	

2
	movq %reg0, %reg1	
	jmp .Main.main_12	

2
	movq 16(%reg0), %reg1	
	movq 24(%reg0), %reg2	

2
	idivl %reg0d	
	subl %eax, %r9d	

2
.Main.main_4:	
	movq $.string6, %reg0	

2
.Main.main_5:	
	movq $1, %rax	

2
	movq -112(%rbp), %reg1	
	addl %reg2, %esi	

2
	movq %r13, %reg1	
	sete %reg2l	

2
	movq 32(%reg0), %rdi	
	call Bazz.doh	

2
	movq %reg0, 128(%rax)	
	movq $0, %reg0	

2
	movq %reg0, %rdi	
	movq -16(%rbp), %reg0	

2
Baz_vtable:	
	.quad .string1	

2
	movq $name_Int, %rax	
	movq 0(%reg1), %reg2	

2
	movq -136(%rbp), %reg1	
	subl %ecx, %eax	

2
	je .Main.main_4	
	cmpq $String_vtable, 0(%rax)	

2
.Main.main_13:	
	movq 0(%rbx), %rax	

2
	.quad String_vtable	
	.quad .string14_l	

2
	movq 8(%rbx), %reg1	
	popq %reg2	

2
	movq %rdi, 24(%rax)	
	movq $11, %rdi	

2
	movq %rdi, %reg1	
	movq %reg1, -16(%rbp)	

2
	je .Main.main_14	
	movq $3, %rsi	

2
	call getmem	
	movq $Yaz_vtable, 0(%reg0)	

2
	movq -112(%rbp), %rsi	
	movq %reg2, %rax	

2
	testq $1, %rax	
	je .Main.main_41	

2
	subl %reg0, %eax	
	movq -88(%rbp), %reg3	

2
	movq $101, %rdi	
	movq %rdi, 48(%rax)	

2
	addl %edi, %reg1	
	movq %r13, %rdi	

2
	movq $12, %rsi	
	movq -120(%rbp), %rax	

2
	testq $1, %reg0	
	je .Main.main_77	

2
	imull %edi	
	cmpl $0, %reg1	

2
	movq $Bar_vtable, 0(%reg0)	
	movq %reg0, %rdi	

2
	movq %reg0, %rdi	
	movq $0, %rsi	

2
	movq -16(%rbp), %rdi	
	addl %eax, %edi	

2
	movq $6, %rax	
	movq 0(%reg1), %reg2	

2
	movq %reg0, 8(%rax)	
	movq $2, %reg0	

2
	movq $0, %reg0	
	movq %r12, %rdi	

2
	movq 88(%rax), %rax	
	movq 48(%rbx), %reg2	

2
	movq -8(%rbp), %reg1	
	movq -56(%rbp), %reg3	

2
	movq %reg0, %rax	
	movq %reg2, %r13	

2
	movq $2147483647, %rax	
	movq %rax, %reg1	

2
	testq $1, %reg0	
	je .Main.main_179	

2
	testq $1, %rdi	
	je .Main.main_14	

2
	movq -80(%rbp), %rax	
	subl %eax, %edi	

2
	movq %rdi, 8(%rax)	
	movq $2, %rdi	

2
	movq -24(%rbp), %reg1	
	movq %reg2, %r9	

2
	movq -184(%rbp), %rax	
	addl %reg2, %edi	

2
	sete %reg0l	
	jne .Main.main_1	

2
	movq $5, %reg0	
	movq 0(%reg1), %rbx	

2
	testq $1, %reg0	
	je .Main.new_1	

2
	movq -152(%rbp), %rdi	
	imull %edi	

2
	movq 128(%rax), %rax	
	movq %rbx, %reg2	

2
	movq %reg0, %reg1	
	cmpl $0, %r12d	

2
	movq -40(%rbp), %rax	
	movq %r8, %reg3	

2
	cmpl $0, %r13d	
	movq %r13, %rdi	

2
	addl %reg0, %reg1	
	movq -128(%rbp), %rax	

2
	movq %reg0, %rbx	
	movq $11, %rax	

2
	movq $2, %rax	
	movq %reg1, %reg2	

2
	movq 88(%reg0), %reg0	
	movq 48(%reg1), %rdi	

2
	.quad List.car	
	.quad List.cdr	

2
	movq %reg0, %reg1	
	movq $11, %rax	

2
	movq %rdi, %rax	
	movq -128(%rbp), %rdi	

2
	movq 0(%r13), %reg1	
	movq 104(%reg1), %reg1	

2
	movq $127, %rsi	
	movq $.string2_l, %rdi	

2
	je .Main.main_1	
	cmpq $Bool_vtable, 0(%reg0)	

2
	movq -144(%rbp), %reg1	
	addl %eax, %ecx	

2
	movq -56(%rbp), %rcx	
	imull %ecx	

2
	movq -104(%rbp), %reg1	
	movq %rcx, %r8	

2
	movq -136(%rbp), %rdi	
	imull %edi	

2
	negl %eax	
	movq 0(%reg1), %r12	

2
	movq $4, %rsi	
	imull %reg1	

2
	movq %rax, %r10	
	movq %reg2, %rax	

2
	movq -96(%rbp), %reg1	
	addl %reg2, %ecx	

2
	movq $1, %reg0	
	call Bool.new	

2
	movq %reg0, %reg1	
	movq 8(%reg2), %r12	

2
	movq $6, %rbx	
	movq 0(%reg1), %reg2	

2
	testq $1, %rax	
	je .Main.main_33	

2
	addl %eax, %ecx	
	movq $12, %r8	

2
	movq %rax, %reg1	
	jmp .Main.main_24	

2
	movq $12, %rax	
	movq %rax, %reg1	

2
	movq %rdi, 128(%reg1)	
	movq $0, %rdi	

2
	negl %edi	
	movq $1, %rax	

2
	testq $1, %rcx	
	je .Main.main_67	

2
	movq 88(%rax), %rax	
	movq 48(%reg1), %rdi	

2
	movq -16(%rbp), %rdi	
	call *%rax	

2
	movq -24(%rbp), %rbx	
	pushq %reg2	

2
	.quad Yaz.new	
	.quad Object.abort	

2
	call Main.new	
	movq %rax, %reg1	

2
	idivl %r8d	
	movq -48(%rbp), %reg2	

2
	movq -88(%rbp), %reg1	
	cmpl %eax, %esi	

2
	movq -112(%rbp), %rax	
	movq %reg2, %rcx	

2
	movq %reg0, %rdi	
	movq -24(%rbp), %rsi	

2
	movq %rax, %reg1	
	movq $19, %rax	

2
	movq %rax, %rbx	
	negl %ebx	

2
	movq $.string7, %r13	
	movq -8(%rbp), %reg2	

2
	call Bazz.doh	
	movq %reg0, %reg1	

2
	movq 104(%reg0), %reg0	
	movq %r13, %reg2	

2
	call String.substr	
	movq 0(%reg0), %r13	

2
	movq %reg0, %rax	
	movq -104(%rbp), %reg0	

2
	call getmem	
	movq $ListNode_vtable, 0(%rax)	

2
	movq %reg0, 72(%reg1)	
	movq %reg1, %reg0	

2
	call out_error	
.Main.main_174:	

2
	movq %reg0, %rax	
	movq -120(%rbp), %rcx	

2
	movq -40(%rbp), %reg1	
	movq %r8, %r9	

2
	movq -184(%rbp), %rax	
	subl %ecx, %reg3	

2
	movq %reg0, 96(%rax)	
	movq $0, %reg0	

2
	.quad 0	
	.quad Baz.new	

2
	movq %reg0, 192(%rax)	
	movq $0, %reg0	

2
	movq %reg0, %rax	
	movq -24(%rbp), %rbx	

2
	addl %eax, %esi	
	movq %reg2, %rcx	

2
.Main.main_46:	
	cdq	

2
	movq $12, %rsi	
	movq -112(%rbp), %rax	

2
	.string "ERROR: %lld: Exception: division by zero\n"	
.string6:	

2
	movq -144(%rbp), %rdi	
	addl %reg2, %reg3	

2
	movq -120(%rbp), %reg1	
	movq $0, %rcx	

2
	je .Main.main_13	
	movq $6, %reg0	

2
	movq %rax, %reg1	
	movq 8(%reg2), %r12	

2
	movq 8(%reg0), %r12	
	pushq %reg2	

2
	movq %rdi, %r12	
	movq 8(%r12), %rax	

2
	movq %rax, %reg1	
	movq $7, %rax	

2
	movq $3, %reg0	
	movq 0(%reg1), %r12	

2
	movq -96(%rbp), %rsi	
	addl %reg2, %eax	

2
	movq 80(%rax), %rax	
	movq %r12, %rdi	

2
	movq %reg0, 8(%reg1)	
	movq 0(%rbx), %reg3	

2
	.quad .string10_l	
	.quad 2	

2
	ret	
	.size List.cons, .-List.cons	

2
	testq $1, %rcx	
	je .Main.main_2	

2
	je .Main.main_4	
	cmpq $Main_vtable, 0(%rax)	

2
.Main.main_178:	
	cdq	

2
	movq 16(%reg0), %rax	
	cmpl %edi, %eax	

2
	movq %rdi, 24(%rax)	
	leave	

2
	call Object.abort	
	popq %reg0	

2
	movq $0, %reg0	
	movq %reg0, 136(%reg1)	

2
	call *%r14	
	movq %reg1, 8(%rbx)	

2
	.string "Cons"	
.string0:	

2
	.quad 3	
.string8_l:	

2
	movq -112(%rbp), %reg1	
	movq -104(%rbp), %reg3	

2
	movq %reg0, 8(%reg1)	
	movq %reg2, %reg1	

2
	movq $2, %reg0	
	movq $2, %rdi	

2
	movq -128(%rbp), %rax	
	cmpl %eax, %esi	

2
	movq -112(%rbp), %reg1	
	addl %edi, %eax	

2
	movq -152(%rbp), %rax	
	movq %r12, %reg3	

2
.Main.main_4:	
	movq 0(%rbx), %r12	

2
	movq -88(%rbp), %rax	
	addl %reg2, %reg3	

2
	testq $1, %reg0	
	je .Main.main_117	

2
.Main.main_185:	
	cdq	

2
	.quad .string11_l	
	.quad 1	

2
	testq $1, %reg0	
	je .Main.main_182	

2
	movq -128(%rbp), %rdi	
	movq %reg2, %reg3	

2
	.quad 40	
.string9_l:	

2
	imull %reg0	
	movq $12, %rdi	

2
	movq %rsp, %rbp	
	subq $32, %rsp	

2
	movq -88(%rbp), %rsi	
	cmpl %esi, %reg3	

2
	movq %r14, 8(%reg1)	
	movq 0(%reg2), %r14	

2
	movq %rax, %r8	
	movq -56(%rbp), %rax	

2
	movq 48(%rbx), %reg1	
	call *%reg2	

2
	movq %reg0, 56(%reg1)	
	movq $111, %reg0	

2
	movq -16(%rbp), %rdi	
	subl %eax, %edi	

2
	movq %r13, %reg1	
	cmpl %esi, %eax	

2
	movq $2, %reg0	
	movq $1, %rax	

2
	idivl %reg0	
	movq -64(%rbp), %rsi	

2
	movq $208, %reg0	
	movq $.string5_l, %reg1	

2
	negl %reg0	
	movq 0(%reg1), %r12	

2
	movq %reg0, %r8	
	movq $12, %reg2	

2
	cmpq $Object_vtable, 0(%reg0)	
	je .Main.main_4	

2
	movq 64(%rax), %rax	
	movq -16(%rbp), %reg2	

2
	negl %eax	
	movq 0(%rbx), %reg2	

2
	je .Main.main_15	
	movq $3, %rsi	

2
.Main.main_27:	
	cdq	

2
	movq -48(%rbp), %reg1	
	movq $0, %r8	

2
.Main.main_1:	
	movq %rax, %rdi	

2
	addl %eax, %reg1	
	movq $12, %r8	

2
	movq 24(%rbx), %reg1	
	movq %reg1, 8(%rbx)	

2
	movq 0(%rbx), %rax	
	movq 128(%rax), %rax	

2
	imull %edi	
	movq -88(%rbp), %rdi	

2
	movq $5, %rdi	
	movq %r13, %rax	

2
Yaz_vtable:	
	.quad .string0	

2
	call out_error	
.Main.main_23:	

2
	idivl %reg0d	
	subl %eax, %ecx	

2
	call out_error	
.Main.main_33:	

2
	movq -176(%rbp), %reg1	
	call *%reg2	

2
	movq 8(%rax), %rdx	
	movq 0(%rdx), %reg2	

2
	subl %reg0, %reg1	
	movq -24(%rbp), %reg3	

2
.Main.main_57:	
	cdq	

2
	movq 24(%rbx), %reg1	
	movq %r12, %reg3	

2
	movq $12, %reg0	
	movq -128(%rbp), %rax	

2
	movq $0, %rdi	
	movq %rdi, 184(%rax)	

2
	movq 24(%rbx), %rax	
	movq 24(%rbx), %reg2	

2
	movq %rsi, %rdi	
	movq %rdi, 16(%reg2)	

2
	movq $5, %rax	
	movq 0(%reg1), %r14	

2
	movq -128(%rbp), %rdi	
	cmpl %edi, %eax	

2
Cons_vtable:	
	.quad .string0	

2
	movq -48(%rbp), %rax	
	addl %eax, %reg3	

2
	movq 136(%rax), %rax	
	movq %reg1, %rdi	

2
	movq %reg0, 184(%reg1)	
	movq $0, %reg0	

2
	movq %rax, %r11	
	negl %r11d	

2
	movq -64(%rbp), %reg1	
	subl %reg2, %edi	

2
	movq %rax, 8(%reg1)	
	movq $1, %rax	

2
	movq $2, %rax	
	addl %eax, %edi	

2
	imull %reg0	
	movq -104(%rbp), %reg2	

2
	movq %rdi, %reg1	
	call Bar.new	

2
	movq $.string10, %reg0	
	movq 0(%reg1), %r12	

2
	imull %reg0	
	movq -88(%rbp), %rcx	

2
	movq %rbx, 8(%rax)	
	movq %rax, %rdi	

2
	movq -40(%rbp), %rax	
	subl %reg2, %reg3	

2
	subl %eax, %reg1	
	movq -104(%rbp), %rax	

2
	movq -56(%rbp), %rax	
	addl %reg2, %reg3	

2
	movq %rdi, %reg1	
	movq %reg1, 40(%rbx)	

2
	movq %rdi, %reg1	
	movq -72(%rbp), %reg1	

2
	movq $203, %reg0	
	movq $.string5_l, %reg1	

2
	subl %reg0, %reg1	
	movq -120(%rbp), %rax	

2
	movq $5, %reg0	
	movq 0(%rax), %rbx	

2
	movq %reg0, %reg1	
	movq $3, %rbx	

2
	negl %eax	
	movq $1, %reg1	

2
	call *%reg0	
	movq -104(%rbp), %reg0	

2
	movq -88(%rbp), %rax	
	cmpl %eax, %reg3	

2
	pushq %rbx	
	movq $0, %rax	

2
	subl %reg0, %reg1	
	movq %rax, -72(%rbp)	

2
	movq %reg0, %reg1	
	negl %ebx	

2
	movq -128(%rbp), %rax	
	movq %reg2, %rcx	

2
	movq $5, %rdi	
	movq %r13, %reg2	

2
	.string "Bar"	
.string0:	

2
	testq $1, %rax	
	je .Main.main_51	

2
	movq %reg0, 88(%reg1)	
	movq $0, %reg0	

2
	.quad 40	
.string8_l:	

2
	movq $11, %rdi	
	movq %rdi, 32(%rax)	

2
	imull %esi	
	movq -16(%rbp), %reg2	

2
	movq -32(%rbp), %reg1	
	subl %eax, %edi	

2
	movq %reg0, %reg1	
	negl %reg1	

2
	cmpq $Bool_vtable, 0(%reg0)	
	je .Main.main_1	

2
	call *%reg0	
.Main.main_32:	

2
	call Main.new	
	movq %reg0, %reg1	

2
	movq $.string9, %rbx	
	movq %reg1, %reg2	

2
	movq $12, %reg0	
	movq -144(%rbp), %rax	

2
	movq -144(%rbp), %rax	
	addl %eax, %ecx	

2
	movq %reg0, %rsi	
	movq -104(%rbp), %reg3	

2
	negl %eax	
	movq -144(%rbp), %rsi	

2
	movq 88(%reg0), %reg0	
	movq 8(%rbx), %reg2	

2
	movq %r14, %rax	
	subl %reg2, %edi	

2
	call *%r12	
	movq $1, %r12	

2
	addl %reg0, %reg1d	
	movq %reg2, %rax	

2
	movq 0(%r13), %rax	
	movq 88(%rax), %rax	

2
	movq -160(%rbp), %rsi	
	movq %reg2, %rax	

2
	movq %rax, %r8	
	movq -160(%rbp), %rax	

2
	movq %rbx, %reg1	
	cmpl %eax, %esi	

2
	addl %edi, %reg1	
	movq -144(%rbp), %reg3	

2
	movq -168(%rbp), %rax	
	movq %reg2, %rcx	

2
	movq %reg0, %reg1	
	movq -88(%rbp), %rax	

2
	cmpl %r13d, %r14d	
	sete %r13b	

2
	movq 136(%rax), %rax	
	movq %reg1, %reg2	

2
	addl %edi, %reg1	
	movq -112(%rbp), %reg3	

2
	movq %reg0, 16(%reg1)	
	movq %reg0, %reg1	

2
	movq %r13, %rdx	
	movq %reg2, %reg3	

2
	movq %r14, %rax	
	subl %eax, %ecx	

2
	subl %eax, %reg1	
	movq -152(%rbp), %rsi	

2
	testq $1, %reg0	
	je .Main.func_2	

2
	movq %reg0, %rbx	
	movq %r12, %reg3	

2
	movq $5, %r12	
	movq 0(%reg1), %rbx	

2
	movq 48(%rbx), %reg1	
	movq 0(%reg1), %rax	

2
	movq -32(%rbp), %reg1	
	imull %edi	

2
	movq 0(%reg0), %reg1	
	movq 144(%reg1), %reg1	

2
	movq $0, %rdi	
	movq %rdi, 128(%reg1)	

2
	movq $.string8, %reg0	
	movq %reg0, %rdi	

2
	je .Main.main_2	
	cmpq $String_vtable, 0(%rdi)	

2
	movq %rax, %r13	
	jmp .Main.main_1	

2
	movq %reg0, %rbx	
	negl %reg2	

2
	movq %rax, %rsi	
	movq -176(%rbp), %rax	

2
	movq %rsi, %reg1	
	movq $2, %rax	

2
	movq -8(%rbp), %rdi	
	movq -184(%rbp), %reg3	

2
	movq 48(%rbx), %rdi	
	call *%reg2	

2
	movq 8(%rdi), %rdi	
	addl %reg1, %reg2	

2
	call *%reg0	
	movq $.string11, %reg1	

2
	cmpq $Main_vtable, 0(%reg0)	
	je .Main.main_2	

2
	movq -80(%rbp), %rax	
	subl %reg2, %edi	

2
	movq -112(%rbp), %reg1	
	movq %reg2, %rdi	

2
	movq -152(%rbp), %rax	
	addl %reg2, %reg3	

2
	movq -184(%rbp), %rcx	
	negl %reg2	

2
	movq 16(%reg0), %rax	
	cmpl %reg2, %eax	

2
	movq -16(%rbp), %reg1	
	movq 0(%reg1), %r12	

2
	movq %rax, %reg1	
	call Object.type_name	

2
	.globl Foo.getBar	
	.type Foo.getBar, @function	

2
	movq %rax, %r14	
	cmpl $0, -16(%rbp)	

2
	movq -160(%rbp), %reg1	
	call *%reg2	

2
	movq $12, %rsi	
	movq -56(%rbp), %reg2	

2
	movq %r13, %reg1	
	movq %r12, %rax	

2
	movq 16(%rbx), %reg1	
	movq %reg2, %rsi	

2
	idivl %r10d	
	movq %reg1, %reg2	

2
	movq %reg0, %reg1	
	movq %reg2, %r10	

2
	movq $2, %rax	
	imull %reg1	

2
	movq $19, %reg0	
	movq $.string3_l, %rdi	

2
	addl %edi, %reg1	
	movq -144(%rbp), %rdi	

2
	movq $156, %reg0	
	movq $.string5_l, %rdi	

2
	movq %reg0, 32(%rax)	
	movq $100, %reg0	

2
	movq %reg0, %reg1	
	call Object.new	

2
	imull %reg0	
	movq -160(%rbp), %rsi	

2
.Main.main_67:	
	cdq	

2
	testq $1, %r8	
	je .Main.main_190	

2
	movq %r13, %rdi	
	movq %r12, %rax	

2
	movq $6, %rax	
	movq 0(%rbx), %r12	

2
	movq -32(%rbp), %reg1	
	cmpl %edi, %eax	

2
	.type List.insert, @function	
List.insert:	

2
	movq 48(%reg0), %reg0	
	movq -32(%rbp), %rdi	

2
	movq %reg0, %rbx	
	negl %ebx	

2
	movq $74, %rsi	
	movq $.string4_l, %reg1	

2
	negl %esi	
	movq -16(%rbp), %reg2	

2
	cmpq $Object_vtable, 0(%rax)	
	je .Main.main_4	

2
	addl %eax, %r9d	
	movq $12, %r10	

2
	negl %eax	
	movq %reg1, %r9	

2
	movq -160(%rbp), %rdi	
	subl %reg2, %reg3	

2
	movq -136(%rbp), %reg1	
	addl %edi, %reg3	

2
	.string "1"	
.string8:	

2
	call out_error	
.Main.main_78:	

2
	movq $12, %reg0	
	movq -176(%rbp), %reg2	

2
	movq -160(%rbp), %reg1	
	imull %esi	

2
	setl %reg0l	
	jge .Main.main_5	

2
	subl %ebx, %reg1	
	movq %rax, %reg3	

2
	movq %r12, %reg1	
	movq %reg2, %r8	

2
.Main.main_52:	
.Main.main_50:	

2
	movq 0(%rax), %reg1	
	movq 112(%reg1), %reg1	

2
	movq $List_vtable, 0(%reg0)	
	leave	

2
	movq -72(%rbp), %reg1	
	movq $0, %reg2	

2
	sete %dil	
	jne .Main.main_3	

2
	movq %rdi, 24(%reg1)	
	leave	

2
	movq 0(%rdx), %reg1	
	movq 136(%reg1), %reg1	

2
	movq %reg0, %reg1	
	movq -168(%rbp), %rax	

2
	movq $Baz_vtable, 0(%rax)	
	leave	

2
	movq %reg0, %rax	
	movq -40(%rbp), %rax	

2
	je .Main.main_3	
	movq $1, %reg0	

2
	movq -88(%rbp), %reg1	
	movq %reg2, %rdi	

2
	subl %eax, %esi	
	movq $12, %rcx	

2
	testq $1, %reg0	
	je .Main.main_78	

2
	movq -88(%rbp), %rax	
	movq %reg2, %rsi	

2
	testq $1, %reg0	
	je .Main.main_190	

2
	movq -152(%rbp), %reg1	
	cmpl %eax, %reg3	

2
	subl %reg0, %reg1	
	movq -128(%rbp), %rdi	

2
	movq $.string10, %rax	
	movq 0(%reg1), %reg2	

2
	movq 24(%rax), %reg1	
	addl %reg2, %edi	

2
.Main.func_1:	
	movq 0(%reg0), %reg1	

2
	.quad Object.type_name	
	.quad Foo.getX	

2
	movq 8(%reg0), %rsi	
	addl %reg2, %esi	

2
	movq %rax, %r12	
	call Foo.new	

2
	movq %r13, %reg1	
	movq 0(%reg2), %reg3	

2
	movq $1, %reg0	
	movq $1, %reg1	

2
	movq %r12, %rax	
	addl %reg2, %edi	

2
	movq %rdi, 32(%rax)	
	movq $100, %rdi	

2
	movq $12, %reg0	
	movq %reg0, %r11	

2
	subl %eax, %reg1	
	movq %reg2, %rcx	

2
	movq %rdi, 8(%reg1)	
	movq $2, %rdi	

2
	movq $19, %reg0	
	movq %reg0, %reg1	

2
	movq %reg0, %r13	
	movq %reg2, %reg0	

2
	movq $.string7, %r12	
	movq 0(%reg1), %rax	

2
	movq $0, %reg0	
	movq %reg0, 200(%reg1)	

2
	movq -168(%rbp), %reg1	
	imull %ecx	

2
	call *%r12	
	movq $2, %reg1	

2
	movq %rax, %reg1	
	movq 8(%rbx), %r12	

2
	movq %r13, %rdi	
	subl %edi, %eax	

2
	movq %r13, %rdi	
	movq %reg2, %rax	

2
	movq $10, %rdi	
	movq %rdi, 24(%reg1)	

2
	addl %reg0, %reg1	
	movq -64(%rbp), %rcx	

2
	movq -184(%rbp), %rax	
	subl %eax, %reg3	

2
	movq %reg0, %reg1	
	movq $2, %rsi	

2
	movq 136(%r12), %r12	
	movq %rax, %reg2	

2
.Main.main_4:	
	movq %reg0, %rax	

2
	movq -32(%rbp), %reg1	
	cmpl %edi, %reg3	

2
	movq -64(%rbp), %rax	
	subl %eax, %edi	

2
	movq %reg0, 8(%rax)	
	movq 0(%reg2), %reg3	

2
	movq %rdi, 8(%reg1)	
	movq $3, %rdi	

2
	movq %rdi, %reg1	
	cmpl %eax, %esi	

2
	movq %reg0, %reg1	
	movq -128(%rbp), %rax	

2
	movq -128(%rbp), %rdi	
	movq %reg2, %rax	

2
	idivl %reg0	
	movq %rax, %r13	

2
	call out_error	
.Main.main_79:	

2
	movq %rsi, %reg1	
	movq %reg1, %rdi	

2
	movq -136(%rbp), %reg1	
	imull %edi	

2
	movq -112(%rbp), %rax	
	movq %reg2, %rsi	

2
	movq -24(%rbp), %reg1	
	movq %reg2, %rcx	

2
	movq -16(%rbp), %rax	
	movq -24(%rbp), %reg3	

2
	movq $9, %rax	
	movq %rax, %reg1	

2
	movq 24(%reg0), %reg1	
	addl %esi, %edi	

2
	movq %reg0, %rax	
	movq -168(%rbp), %rsi	

2
	movq -56(%rbp), %reg1	
	imull %reg2	

2
	call *%rax	
	jmp .Main.main_12	

2
	movq $12, %reg0	
	movq -96(%rbp), %reg2	

2
	addl %reg0, %reg1	
	movq -72(%rbp), %reg3	

2
.Main.main_11:	
	cdq	

2
	sete %reg0	
	xorq $1, %reg1	

2
	movq 16(%rax), %rdi	
	call *%r12	

2
	movq $20, %reg0	
	movq %reg0, %r12	

2
	movq -40(%rbp), %reg1	
	movq %r8, %reg3	

2
	movq -136(%rbp), %rdi	
	subl %reg2, %reg3	

2
	movq -160(%rbp), %reg1	
	negl %esi	

2
	movq %rdi, 16(%rax)	
	movq %rdi, %rax	

2
.Main.main_182:	
	cdq	

2
	movq 0(%rbx), %reg1	
	movq 136(%reg1), %reg1	

2
	movq -48(%rbp), %reg1	
	movq -56(%rbp), %reg3	

2
	movq 24(%rax), %rsi	
	addl %esi, %reg3	

2
	call *%reg0	
	cmpl $0, 8(%reg1)	

2
	movq 16(%reg0), %reg1	
	negl %reg2	

2
	movq 8(%rax), %rdi	
	movq %reg2, %rsi	

2
	idivl %r10d	
	movq %reg1, %r9	

2
Main.getFoo:	
	pushq %reg0	

2
.Main.main_2:	
	testq $1, %rax	

2
	movq -80(%rbp), %reg1	
	movq %rcx, %r8	

2
	movq %reg0, %r12	
	cmpl $0, 48(%rbx)	

2
	imull %r10d	
	subl %eax, %r9d	

2
	movq $0, %rdi	
	movq %rdi, 136(%rax)	

2
	movq -104(%rbp), %reg1	
	negl %esi	

2
	addl %eax, %reg1	
	movq %rbx, %rax	

2
	movq -56(%rbp), %rax	
	movq %reg2, %rdi	

2
	movq $0, %r13	
	call DicNode.new	

2
	movq -8(%rbp), %rdi	
	movq -24(%rbp), %reg3	

2
	movq %rdi, %rcx	
	cmpl %ecx, %reg3d	

2
	movq %rdi, 176(%reg1)	
	movq $0, %rdi	

2
	movq %rax, %reg1	
	movq $15, %rax	

2
	movq %reg0, 104(%reg1)	
	movq $0, %reg0	

2
	subl %esi, %eax	
	movq $12, %rsi	

2
	movq -104(%rbp), %rsi	
	cmpl %esi, %eax	

2
	call *%reg0	
	movq 8(%r12), %reg0	

2
	movq %rdi, %reg1	
	movq $.string7, %reg2	

2
	movq 88(%reg0), %reg0	
	movq %r13, %rdi	

2
	movq %rsi, %reg1	
	movq 0(%rbx), %rax	

2
	testq $1, %reg0	
	je .Main.main_162	

2
	movq %rdi, 48(%rax)	
	movq $110, %rdi	

2
	movq %r11, %reg1	
	addl %reg1d, %eax	

2
	movq %reg0, 8(%reg1)	
	movq $2, %reg0	

2
	movq $0, %rdi	
	movq %rdi, 160(%rax)	

2
	movq -88(%rbp), %reg1	
	cmpl %reg2, %esi	

2
	movq -32(%rbp), %reg1	
	pushq %rax	

2
	imull %r9d	
	addl %eax, %reg2d	

2
	movq 0(%rbx), %reg1	
	movq 40(%reg1), %reg1	

2
	testq $1, %rsi	
	je .Main.main_50	

2
	movq %reg0, %reg1	
	addl %ecx, %esi	

2
	call *%reg0	
	movq -136(%rbp), %reg2	

2
	movq -112(%rbp), %reg1	
	addl %eax, %esi	

2
	idivl %r9d	
	addl %reg1, %r8d	

2
	movq -56(%rbp), %reg1	
	subl %reg2, %reg3	

2
	movq %rdi, %rax	
	movq -24(%rbp), %rax	

2
	addl %reg0, %reg1	
	movq -120(%rbp), %rdi	

2
	movq %reg0, %reg1	
	movq %rbx, %reg1	

2
	movq $Cons_vtable, 0(%rax)	
	movq $0, %reg1	

2
.Main.main_16:	
	movq 0(%rax), %reg1	

2
	movq -104(%rbp), %rax	
	movq %rcx, %reg3	

2
	movq %reg0, %rdi	
	movq 8(%rbx), %r12	

2
	je .Main.main_9	
	movq $3, %rsi	

2
	movq $13, %rsi	
	movq $.string1_l, %rdi	

2
	movq $203, %rsi	
	movq $.string5_l, %reg1	

2
	idivl %ebx	
	addl %reg1, %r10d	

2
.Main.main_28:	
	cdq	

2
	movq %r14, %reg1	
	testq $1, %reg1	

2
	movq %r12, %reg1	
	popq %reg2	

2
	call *%reg0	
	movq %r13, %reg0	

2
	movq 64(%reg0), %reg0	
	movq %r13, %reg2	

2
	movq %rax, %reg1	
	movq $9, %rax	

2
	movq $0, %reg0	
	movq %reg0, 200(%rax)	

2
	imull %edi	
	movq -88(%rbp), %reg2	

2
	call *%r15	
	movq $12, %rdi	

2
	movq %reg0, %rcx	
	cmpl %reg2, %r8d	

2
	movq %r15, %rax	
	movq -56(%rbp), %rdi	

2
	call *%reg0	
	movq %rax, %rdi	

2
	movq %rax, %rcx	
	movq %reg2, %r8	

2
	movq -144(%rbp), %rax	
	addl %reg2, %eax	

2
	movq 8(%rax), %reg1	
	addl %ecx, %reg3	

2
	subq $32, %reg0	
	pushq %reg1	

2
	cmpl $0, -24(%rbp)	
	movq -24(%rbp), %rax	

2
	movq $5, %reg0	
	movq 0(%rbx), %r14	

2
	negl %edi	
	movq $0, %reg1	

2
	addl %edi, %eax	
	movq -144(%rbp), %rdi	

2
	.quad Main.main	
String_vtable:	

2
	movq -120(%rbp), %reg1	
	movq %reg2, %r8	

2
	movq %reg0, %rax	
	movq %reg2, %r10	

2
	subl %edi, %eax	
	movq %reg2, -72(%rbp)	

2
	call *%reg0	
	jmp .Main.main_17	

2
	movq %r15, %rax	
	movq -56(%rbp), %reg3	

2
	movq %reg0, 8(%reg1)	
	movq %rdi, %reg1	

2
	movq $6, %reg0	
	movq 0(%reg1), %rbx	

2
	subl %edi, %eax	
	movq -80(%rbp), %rdi	

2
	movq $List_vtable, 0(%rax)	
	leave	

2
	movq %rax, 8(%reg1)	
	cmpl $0, 8(%reg1)	

2
	movq 16(%rax), %rdx	
	movq 0(%rdx), %r12	

2
	movq $11, %reg0	
	movq 0(%reg1), %r12	

2
	ret	
	.size ListNode.new, .-ListNode.new	

2
	movq -136(%rbp), %reg1	
	negl %esi	

2
	movq -88(%rbp), %rdi	
	subl %edi, %reg3	

2
	movq %reg0, 16(%reg1)	
	movq %reg1, %reg0	

2
	movq %reg0, %rsi	
	movq %rdi, %rax	

2
	.quad Foo.setBar	
	.quad Foo.getBar	

2
	movq $3, %reg0	
	movq $4, %reg1	

2
	movq %reg0, %rcx	
	cmpl %ecx, %reg3d	

2
	idivl %r8d	
	addl %reg1, %ecx	

2
	movq $8, %reg0	
	movq $.string1_l, %reg1	

2
	.quad Main.func	
	.quad Main.main	

2
	movq %reg0, %rsi	
	movq -168(%rbp), %rax	

2
	movq %rdi, %reg1	
	movq -32(%rbp), %reg1	

2
	je .Main.main_10	
	movq $3, %reg0	

2
	movq -24(%rbp), %reg1	
	subl %eax, %reg3	

2
	movq $6, %r12	
	movq 0(%rax), %rbx	

2
	subl %reg0, %reg1	
	movq -152(%rbp), %rdi	

2
	movq $208, %rsi	
	movq $.string5_l, %rdi	

2
	movq %reg0, %rax	
	movq %rax, 40(%reg2)	

2
	addl %reg0, %reg1	
	movq -176(%rbp), %rdi	

2
	call *%r12	
.Main.main_11:	

2
	movq $1, %reg0	
	movq %rbx, %rdi	

2
.string5_l:	
	.string "ERROR: %lld: Exception: dispatch on void\n"	

2
	movq %rax, %r12	
	movq %r12, %reg2	

2
	movq $82, %reg0	
	movq $.string4_l, %rdi	

2
	cmpq $Bool_vtable, 0(%rdi)	
	je .Main.main_2	

2
	movq $76, %rsi	
	movq $.string4_l, %reg1	

2
	movq $.string7, %r12	
	movq 0(%rbx), %rax	

2
	movq %r13, %rdi	
	imull %reg2	

2
	movq %reg0, %r14	
	movq $0, %reg0	

2
	movq $133, %rsi	
	movq $.string2_l, %reg1	

2
	.size Baz.new, .-Baz.new	
	.globl Yaz.new	

2
	movq %rax, %rdi	
	call Object.type_name	

2
	movq -40(%rbp), %reg1	
	movq -96(%rbp), %reg3	

2
.Main.main_79:	
	cdq	

2
	movq $55, %reg0	
	movq $.string2_l, %rdi	

2
.Main.main_16:	
	movq 0(%reg0), %reg1	

2
	movq 24(%reg0), %rdi	
	movq %reg2, %rsi	

2
	movq %rsi, %r12	
	movq 8(%reg2), %rax	

2
	movq 24(%rbx), %reg1	
	movq %reg2, %reg3	

2
	movq -96(%rbp), %reg1	
	addl %esi, %eax	

2
	idivl %reg0d	
	movq -48(%rbp), %rcx	

2
	movq -24(%rbp), %rax	
	sete %al	

2
	movq 104(%rax), %rax	
	movq %r12, %rdi	

2
	movq 24(%reg0), %reg1	
	movq 24(%reg0), %rdi	

2
	movq $5, %rbx	
	movq 0(%rax), %reg2	

2
	imull %reg0d	
	subl %reg1, %r8d	

2
	movq -120(%rbp), %reg1	
	movq %rcx, %r8	

2
List.isNil:	
	pushq %rbp	

2
	movq %reg0, 176(%rax)	
	movq $0, %reg0	

2
	movq $5, %reg0	
	movq 0(%reg1), %rax	

2
	addl %reg0, %eax	
	movq %r14, %reg3	

2
	imull %reg0d	
	subl %reg1, %ecx	

2
.Main.main_16:	
	movq %reg0, %reg1	

2
	movq %rsi, %reg1	
	movq %reg1, 24(%rax)	

2
	movq %rax, %reg1	
	cmpl $0, %ebx	

2
	call *%reg0	
	movq $.string8, %r12	

2
	call *%reg0	
	movq -80(%rbp), %reg0	

2
	imull %reg0	
	movq %rax, %r13	

2
	movq -96(%rbp), %rsi	
	addl %reg2, %reg3	

2
	call out_error	
.Main.main_35:	

2
	setl %dil	
	jge .Main.main_3	

2
.Main.main_5:	
	movq $5, %reg0	

2
	testq $1, %reg0	
	je .Main.main_35	

2
	movq %reg0, 8(%rax)	
	movq 0(%reg2), %r14	

2
	movq $1, %reg0	
	movq 8(%reg1), %reg2	

2
	movq %r13, %r12	
	movq 0(%reg2), %reg3	

2
	movq -112(%rbp), %reg1	
	movq %reg2, %rcx	

2
	call Object.copy	
	movq %rax, %reg1	

2
	movq -112(%rbp), %rdi	
	addl %edi, %reg3	

2
	movq %r11, %r10	
	addl %r10d, %eax	

2
	testq $1, %rax	
	je .Main.main_11	

2
	jge .Main.main_5	
	movq $1, %reg0	

2
	movq %r15, %reg1	
	call Bool.new	

2
	setl %r13b	
	jge .Main.main_9	

2
	movq %reg0, %rax	
	subl %reg2, %r8d	

2
	movq $0, %rdi	
	cmpl $0, %reg1	

2
	.quad String_vtable	
	.quad .string12_l	

2
	movq %rbx, %reg1	
	movq %r13, %rdx	

2
	movq -56(%rbp), %reg1	
	imull %ecx	

2
	testq $1, %reg0	
	je .Main.main_76	

2
	movq -168(%rbp), %rax	
	addl %reg2, %reg3	

2
	movq 24(%reg0), %reg1	
	addl %esi, %reg3	

2
	movq $.string9, %rbx	
	movq -8(%rbp), %rdx	

2
	movq -136(%rbp), %reg1	
	addl %edi, %eax	

2
.Main.main_4:	
	movq %r13, %reg1	

2
	movq -88(%rbp), %rax	
	addl %eax, %reg3	

2
	movq -24(%rbp), %reg1	
	movq 0(%reg1), %rax	

2
	imull %ecx	
	movq -88(%rbp), %rcx	

2
	subl %eax, %esi	
	movq %reg2, %rcx	

2
	.type Cons.new, @function	
Cons.new:	

2
	ret	
	.size Foo.foo, .-Foo.foo	

2
	movq $12, %rsi	
	movq -120(%rbp), %reg2	

2
	movq %rax, %r13	
	cmpl $0, %reg2d	

2
.string9_l:	
	.string "\\n"	

2
	movq $.string17, %reg0	
	movq %reg0, %reg1	

2
	movq $.string6, %reg0	
	movq $.string7, %reg1	

2
	movq %r15, %reg1	
	movq -56(%rbp), %rdi	

2
	.quad 2	
.string4_l:	

2
	movq %reg0, %reg1	
	subq $32, %reg0	

2
	cmpq $String_vtable, 0(%reg0)	
	je .Main.main_1	

2
	imull %reg0d	
	addl %eax, %r8d	

2
.Main.func_1:	
	movq 0(%rbx), %reg1	

2
	addl %reg0, %r8d	
	movq %reg2, %reg3	

2
	movq %r13, %reg1	
	movq %r12, %rdx	

2
	je .Main.main_1	
	cmpq $String_vtable, 0(%rax)	

2
	subl %edi, %eax	
	movq -128(%rbp), %reg3	

2
	movq $0, %reg0	
	movq %reg0, 152(%rax)	

2
	movq %rsi, %reg1	
	movq $0, %reg2	

2
	movq -32(%rbp), %reg1	
	movq %reg1, %reg2	

2
	addl %reg0, %reg1	
	addl %reg1, %reg2	

2
	addl %eax, %reg1d	
	movq %reg2, %rax	

2
	movq %reg0, -184(%rbp)	
	movq -8(%rbp), %reg0	

2
	movq %rax, %reg1	
	movq %reg2, %r13	

2
	movq $.string9, %r12	
	movq 0(%reg1), %rax	

2
	movq -32(%rbp), %rax	
	subl %edi, %eax	

2
	je .Main.main_1	
	cmpq $Bool_vtable, 0(%rax)	

2
	testq $1, %reg0	
	je .Main.main_174	

2
	movq -48(%rbp), %rax	
	subl %reg2, %edi	

2
	movq $0, %reg0	
	movq %rbx, %reg2	

2
	.quad Foo.func	
	.quad Main.main	

2
	movq -88(%rbp), %rax	
	subl %reg2, %eax	

2
	movq %reg0, %rbx	
	movq $2147483647, %rax	

2
	movq 88(%reg0), %reg0	
	movq 8(%reg1), %reg2	

2
	addl %reg0, %eax	
	movq %reg2, %rdx	

2
	movq %reg0, %rbx	
	call Matrix.new	

2
	.globl Main.printY	
	.type Main.printY, @function	

2
	movq %r14, %reg1	
	addl %ecx, %eax	

2
	movq %rdi, %rax	
	movq %rax, 40(%reg2)	

2
	movq 0(%r12), %reg1	
	movq 96(%reg1), %reg1	

2
	je .Main.main_9	
	movq $3, %reg0	

2
	cmpl $0, 8(%rax)	
	movq 8(%rax), %reg1	

2
	movq %reg0, %rax	
	movq %rax, -80(%rbp)	

2
	subl %reg0, %reg1	
	movq -8(%rbp), %rdx	

2
.Main.main_3:	
	movq %rdi, %reg1	

2
	imull %reg0	
	movq -120(%rbp), %rcx	

2
	movq $.string9, %reg0	
	movq %reg0, %reg1	

2
	movq %rbx, %rax	
	movq -88(%rbp), %reg3	

2
	je .Main.main_3	
	movq $13, %reg0	

2
	movq $0, %rdi	
	movq %rdi, 112(%rax)	

2
	movq -16(%rbp), %r8	
	imull %r8d	

2
	movq %reg0, %rbx	
	cmpl $0, %ebx	

2
	movq 8(%reg0), %rax	
	cmpl $0, %eax	

2
	call *%reg0	
	movq %r14, %reg2	

2
	subl %reg0, %reg1	
	movq %reg2, -72(%rbp)	

2
	movq $9, %reg0	
	movq 0(%rbx), %reg2	

2
	movq %reg0, %reg1	
	jmp .Main.main_38	

2
.string0_l:	
	.string "ListNode"	

2
	movq -160(%rbp), %reg1	
	movq %reg2, %rax	

2
	movq %reg0, %reg1	
	movq %reg1, 24(%reg2)	

2
	movq %r12, %reg1	
	call String.substr	

2
	movq -40(%rbp), %reg1	
	movq -48(%rbp), %reg3	

2
	.globl Foo.foo	
	.type Foo.foo, @function	

2
.Main.main_4:	
	cdq	

2
	movq %rsp, %reg1	
	subq $32, %rsp	

2
	movq 48(%reg0), %rax	
	sete %al	

2
	je .Main.main_2	
	cmpq $Main_vtable, 0(%rdi)	

2
	movq -80(%rbp), %rcx	
	imull %reg2	

2
	movq -56(%rbp), %rcx	
	addl %reg2, %eax	

2
	call *%r12	
	jmp .Main.func_7	

2
	call out_error	
.Main.main_178:	

2
	movq %reg0, %rax	
	movq -32(%rbp), %rbx	

2
	movq %reg0, %rax	
	movq -48(%rbp), %reg0	

2
	movq -24(%rbp), %reg1	
	movq $0, %r8	

2
	movq -152(%rbp), %rax	
	imull %reg2	

2
	movq %rax, %r8	
	movq $12, %reg2	

2
.Main.main_14:	
	cdq	

2
	movq %reg0, %reg1	
	movq -128(%rbp), %rcx	

2
	imull %reg0	
	cmpl $0, %ebx	

2
.Main.main_75:	
	cdq	

2
	movq %rdi, %reg1	
	movq -40(%rbp), %reg1	

2
	imull %r9d	
	addl %reg1, %reg2d	

2
	call out_error	
.Main.main_177:	

2
	movq %r13, %rsi	
	cmpl %esi, %eax	

2
	movq -184(%rbp), %reg1	
	call *%rax	

2
	movq $10, %rdi	
	movq %rdi, 24(%rax)	

2
	movq $0, %rdi	
	movq %rdi, 152(%reg1)	

2
	movq -152(%rbp), %rdi	
	addl %edi, %eax	

2
	subl %edi, %esi	
	movq %rsi, %rdi	

2
	movq -32(%rbp), %rax	
	subl %eax, %edi	

2
	movq $0, %reg0	
	movq %reg1, %r13	

2
	movq -80(%rbp), %rcx	
	imull %ecx	

2
	movq -32(%rbp), %rax	
	cmpl %eax, %reg3	

2
	call getmem	
	movq $Cons_vtable, 0(%rax)	

2
	call *%r13	
	movq %reg1, 8(%rbx)	

2
	movq -136(%rbp), %rsi	
	negl %esi	

2
	imull %r8d	
	subl %eax, %reg2	

2
	addl %edi, %reg1	
	movq %r13, %reg3	

2
	movq %reg0, %rbx	
	movq $2147483647, %reg2	

2
	movq %r13, %rsi	
	imull %reg2	

2
	jmp .Main.main_30	
.Main.main_29:	

2
	call *%r12	
	movq $2, %rax	

2
	movq $26, %reg0	
	movq $.string7_l, %reg1	

2
	movq %rax, 32(%reg1)	
	movq %reg1, %rax	

2
	movq %reg0, %rax	
	movq %r9, %reg3	

2
	movq %reg0, %reg1	
	movq $.string8, %reg2	

2
	subl %reg0, %eax	
	movq -128(%rbp), %rdi	

2
	idivl %reg0d	
	movq %rax, %r9	

2
List.insert:	
	pushq %rbp	

2
	movq 48(%rax), %rax	
	movq -24(%rbp), %reg2	

2
	call *%rax	
	movq -176(%rbp), %rax	

2
	subl %reg0, %eax	
	movq $0, %reg2	

2
	movq $6, %rax	
	movq 0(%rbx), %reg2	

2
	movq 16(%reg0), %reg1	
	call *%r12	

2
	setl %reg0b	
	jge .Main.main_11	

2
	movq -88(%rbp), %rax	
	cmpl %reg2, %reg3	

2
	movq 24(%rbx), %reg1	
	movq 0(%rbx), %reg2	

2
	movq 48(%reg0), %rdi	
	call *%reg2	

2
	movq 8(%rax), %reg1	
	addl %reg2, %esi	

2
	movq $12, %rsi	
	movq -64(%rbp), %rax	

2
	addl %reg0, %reg1	
	movq -72(%rbp), %rdi	

2
	movq -32(%rbp), %rdi	
	movq %reg2, %rsi	

2
	addl %eax, %ecx	
	movq $12, %reg2	

2
	movq %reg0, %rdi	
	movq -160(%rbp), %reg3	

2
.Main.main_174:	
	cdq	

2
.string8_l:	
	.string "ERROR: %lld: Exception: stack overflow\n"	

2
ListNode_vtable:	
	.quad .string0	

2
	movq %rcx, %reg1	
	negl %reg2	

2
	movq -24(%rbp), %rax	
	addl %esi, %reg3	

2
Main.getFoo:	
	pushq %rbp	

2
	testq $1, %reg0	
	je .Main.main_187	

2
	movq 104(%rax), %rax	
	movq %r13, %rdi	

2
	movq $0, %reg0	
	movq %reg0, 176(%reg1)	

2
	jge .Main.main_5	
	movq $1, %r12	

2
	movq 24(%reg0), %reg0	
	leave	

2
	movq $1, %reg0	
	movq %reg0, %rdi	

2
	movq %rax, %rbx	
	jmp .Main.main_24	

2
	movq 32(%r12), %r12	
	movq %rax, %rdi	

2
	addl %reg0, %reg1	
	movq -8(%rbp), %rdx	

2
	movq 56(%r13), %r13	
	movq %r12, %reg2	

2
	movq %reg0, %rsi	
	movq -88(%rbp), %reg3	

2
	je .Main.main_12	
	movq $3, %rsi	

2
	movq %r15, %reg1	
	movq %reg2, %rsi	

2
	movq -32(%rbp), %rsi	
	movq %reg2, %reg3	

2
	movq %reg0, %r13	
	movq $2, %reg2	

2
	movq -88(%rbp), %rsi	
	cmpl %reg2, %eax	

2
	movq %reg0, %reg1	
	movq $13, %reg2	

2
	subl %edi, %reg1	
	movq %reg2, %rdx	

2
	subl %reg0, %reg1	
	movq %reg2, %rdx	

2
.Main.main_37:	
	cdq	

2
Cons.isNil:	
	pushq %rbp	

2
	movq 72(%r14), %r14	
	movq %rbx, %rdi	

2
	movq %rax, %rdi	
	movq 8(%rbx), %r12	

2
	je .Main.main_7	
	movq $3, %rsi	

2
	movq $111, %reg0	
	movq %reg0, 64(%reg1)	

2
	movq -24(%rbp), %rdx	
	movq 0(%rdx), %rax	

2
	cmpq $Object_vtable, 0(%rax)	
	je .Main.main_1	

2
	imull %edi	
	movq $12, %rdi	

2
	movq %reg0, %rdi	
	movq %rdi, 24(%reg2)	

2
	ret	
	.size Main.printY, .-Main.printY	

2
	movq %reg0, %reg1	
	movq %rdi, %rcx	

2
	subl %eax, %esi	
	movq $12, %reg2	

2
	movq -32(%rbp), %r8	
	imull %r8d	

2
	movq $.string6, %rax	
	movq %rax, %r12	

2
	movq 0(%reg0), %r13	
	movq 80(%r13), %r13	

2
	call *%reg0	
	movq 16(%reg1), %reg2	

2
	movq 8(%reg0), %reg1	
	popq %reg2	

2
	movq -40(%rbp), %rdi	
	movq %reg2, %rax	

2
	movq $0, %rdi	
	movq %rdi, 104(%reg1)	

2
	je .Main.main_4	
	cmpq $String_vtable, 0(%reg0)	

2
	cmpq $IO_vtable, 0(%rdi)	
	je .Main.main_2	

2
	.globl Yaz.new	
	.type Yaz.new, @function	

2
	movq $2, %r12	
	call Int.new	

2
	testq $1, %r8	
	je .Main.main_71	

2
	testq $1, %reg0	
	je .Main.main_124	

2
	movq $6, %r12	
	movq 0(%rax), %reg2	

2
	jmp .Main.new_4	
.Main.new_4:	

2
	imull %ecx	
	movq -184(%rbp), %rcx	

2
	movq %rdi, %reg1	
	movq %reg1, 40(%reg2)	

2
	movq $.string7, %reg0	
	movq 0(%reg1), %rbx	

2
	call *%r13	
	movq %rax, 8(%reg2)	

2
	cmpq $Bool_vtable, 0(%reg0)	
	je .Main.main_4	

2
	call out_error	
.Main.main_175:	

2
	movq %reg0, %r8	
	movq %rdi, %reg3	

2
	movq -72(%rbp), %reg1	
	movq -48(%rbp), %reg3	

2
	call *%rax	
	movq -32(%rbp), %reg2	

2
	movq -112(%rbp), %rdi	
	addl %edi, %eax	

2
	movq %rax, %r10	
	movq %r9, %rax	

2
	movq -56(%rbp), %reg1	
	movq %rsi, %rcx	

2
	movq %rsi, %reg1	
	movq -184(%rbp), %reg1	

2
.Main.main_36:	
	cdq	

2
	movq 0(%rbx), %r14	
	movq 72(%r14), %r14	

2
	movq 104(%reg0), %reg0	
	movq %r12, %rdi	

2
	movq %rax, %rbx	
	movq $.string8, %reg2	

2
	je .Main.main_2	
.Main.main_2:	

2
	movq %rsi, %reg1	
	movq %reg1, 16(%rax)	

2
	movq %reg0, 40(%reg1)	
	movq $101, %reg0	

2
	subl %edi, %eax	
	movq %rax, -72(%rbp)	

2
	movq $1, %rdi	
	movq %rdi, 16(%reg1)	

2
	movq $.string6, %reg0	
	movq 0(%reg1), %rbx	

2
	cmpq $Bool_vtable, 0(%reg0)	
	je .Main.main_6	

2
	movq 24(%rax), %rsi	
	addl %esi, %edi	

2
	movq -56(%rbp), %reg1	
	call *%rax	

2
	movq 16(%reg0), %reg1	
	movq 24(%reg0), %rsi	

2
	movq %reg0, 8(%rax)	
	movq %rdi, %rax	

2
	movq -72(%rbp), %reg1	
	movq -112(%rbp), %rdi	

2
	movq -136(%rbp), %reg1	
	movq -64(%rbp), %reg3	

2
	movq -8(%rbp), %reg1	
	movq -64(%rbp), %rsi	

2
	movq $0, %rdi	
	movq %rdi, 192(%reg1)	

2
	movq 88(%reg0), %reg0	
	movq 8(%rbx), %rdi	

2
.Main.main_8:	
	movq 0(%rax), %reg1	

2
	movq %rsi, %rax	
	movq -184(%rbp), %rax	

2
	movq %rdi, -8(%rbp)	
	movq %rsi, %rbx	

2
	movq -104(%rbp), %rsi	
	cmpl %esi, %reg3	

2
	call *%rax	
	movq %r13, %rax	

2
	movq -112(%rbp), %rdi	
	addl %reg2, %reg3	

2
	movq %reg0, %rbx	
	call Object.new	

2
.Main.main_1:	
	cmpq $Int_vtable, 0(%rdi)	

2
	.quad 2	
	.quad ListNode.new	

2
	movq 8(%reg0), %reg1	
	addl %ecx, %esi	

2
	movq $0, %reg0	
	movq %reg0, 144(%reg1)	

2
	movq 16(%rbx), %reg1	
	movq %r12, %rsi	

2
	movq -136(%rbp), %rax	
	subl %eax, %reg3	

2
	addl %reg0, %r9d	
	movq $12, %r10	

2
	je .Main.main_2	
	cmpq $Object_vtable, 0(%rax)	

2
	addl %reg0, %reg1d	
	movq $12, %r10	

2
	movq -24(%rbp), %rdi	
	call *%reg2	

2
	movq $6, %reg0	
	movq 0(%rbx), %reg2	

2
	movq 72(%rax), %rax	
	movq 8(%rbx), %reg2	

2
	movq 136(%reg0), %reg0	
	movq %rax, %reg2	

2
	movq -160(%rbp), %reg1	
	subl %edi, %reg3	

2
	.size Main.new, .-Main.new	
	.globl Baz.new	

2
	addl %reg0, %eax	
	movq -8(%rbp), %reg3	

2
	movq -152(%rbp), %rdi	
	imull %reg2	

2
	movq %reg0, 48(%reg1)	
	movq $110, %reg0	

2
	movq %rbx, %reg1	
	movq $0, %rbx	

2
.Main.main_8:	
	movq 0(%reg0), %r12	

2
	subl %reg0, %eax	
	movq -80(%rbp), %reg3	

2
	movq -160(%rbp), %rdi	
	subl %edi, %eax	

2
	je .Main.main_15	
	movq $3, %reg0	

2
	call *%reg0	
	movq $2, %reg1	

2
	movq %reg0, %rbx	
	call Main.new	

2
	movq -64(%rbp), %rsi	
	call *%reg2	

2
	call *%reg0	
	movq -32(%rbp), %reg2	

2
	subl %edi, %eax	
	movq -152(%rbp), %reg3	

2
	.quad 8	
percentd_string_l:	

2
	idivl %reg0d	
	subl %reg1, %ecx	

2
	movq %reg0, %rdi	
	movq $4, %reg0	

2
	movq -112(%rbp), %reg1	
	movq %reg2, %rsi	

2
	movq %reg0, %r13	
	cmpl $0, %r12d	

2
	movq -96(%rbp), %rax	
	addl %eax, %ecx	

2
	movq $203, %reg0	
	movq $.string5_l, %rdi	

2
	movq -80(%rbp), %rax	
	cmpl %reg2, %reg3	

2
	addl %edi, %eax	
	movq -160(%rbp), %reg3	

2
Bar_vtable:	
	.quad .string0	

2
	movq %reg0, %rax	
	movq $3, %reg2	

2
	movq %rax, %rdi	
	movq -16(%rbp), %rax	

2
	movq -96(%rbp), %reg1	
	movq -16(%rbp), %reg3	

2
	movq 24(%reg0), %reg1	
	addl %reg2, %edi	

2
	movq %reg0, %reg1	
	movq %reg0, %rax	

2
	jmp .Main.main_3	
.Main.main_3:	

2
	movq 0(%rdx), %r12	
	movq 64(%r12), %r12	

2
	movq $12, %r8	
	movq %r14, %rax	

2
	call Int.new	
	movq %r13, 8(%rax)	

2
	movq 8(%rax), %reg1	
	addl %reg2, %reg3	

2
	testq $1, %reg0	
	je .Main.main_49	

2
	movq 64(%rax), %rax	
	movq 8(%reg1), %reg2	

2
	.string "3"	
.string10:	

2
	movq 40(%rax), %rax	
	movq %rbx, %reg2	

2
	movq -16(%rbp), %rsi	
	call *%reg2	

2
	movq 48(%rax), %rax	
	movq -24(%rbp), %rdi	

2
	negl %eax	
	subl %eax, %edi	

2
.Main.main_29:	
	cdq	

2
	movq -176(%rbp), %reg1	
	call *%rax	

2
	movq 8(%reg0), %reg1	
	cmpl %edi, %eax	

2
	testq $1, %reg0	
	je .Main.main_136	

2
	movq -128(%rbp), %rax	
	addl %reg2, %reg3	

2
	movq %r14, %reg1	
	movq -152(%rbp), %rsi	

2
	movq %reg0, %rsi	
	movq -88(%rbp), %rax	

2
	movq %reg0, %rax	
	movq $2, %reg2	

2
	movq %reg0, %rax	
	movq -104(%rbp), %rsi	

2
	movq $0, %reg0	
	movq %reg0, 88(%reg1)	

2
	movq %reg0, %reg1	
	movq 8(%rbx), %r12	

2
	movq $55, %rsi	
	movq $.string2_l, %reg1	

2
	movq -96(%rbp), %rax	
	movq $0, %reg2	

2
	movq $5, %reg0	
	movq 0(%rbx), %rax	

2
	call Baz.new	
	movq %reg0, %reg1	

2
	movq 8(%reg0), %reg1	
	negl %reg2	

2
	movq %rdi, %rbx	
	movq $2147483647, %reg2	

2
	cmpq $Int_vtable, 0(%rax)	
	je .Main.main_2	

2
	.quad Cons.new	
	.quad Object.abort	

2
	movq %rsi, %rdi	
	movq %rdi, 16(%rax)	

2
	movq $0, %rsi	
	movq %rax, %rdi	

2
	movq -64(%rbp), %rax	
	subl %reg2, %reg3	

2
.Main.main_74:	
	cdq	

2
	movq $.string7, %reg0	
	movq 0(%reg1), %rax	

2
	movq %rdi, -8(%rbp)	
	movq $1, %reg2	

2
	movq $11, %rax	
	movq 0(%reg1), %reg2	

2
	negl %eax	
	movq -88(%rbp), %reg2	

2
	movq -56(%rbp), %reg1	
	movq %reg2, %rdi	

2
.Main.main_3:	
	movq 0(%rax), %r12	

2
	movq -8(%rbp), %reg1	
	movq -64(%rbp), %reg3	

2
	movq %reg0, %reg1	
	movq -152(%rbp), %reg1	

2
	movq %rdi, %rbx	
	movq $.string10, %r12	

2
	movq -168(%rbp), %reg1	
	addl %eax, %esi	

2
	movq %reg0, %rax	
	movq $3, %rbx	

2
	movq %reg0, %reg1	
	movq 8(%reg2), %r13	

2
	movq -96(%rbp), %reg1	
	movq %reg2, %r8	

2
	movq %reg0, %rcx	
	movq -112(%rbp), %reg0	

2
	movq $2, %reg0	
	addl %eax, %reg2	

2
	movq %rax, 48(%reg1)	
	movq $0, %rax	

2
	testq $1, %rdi	
	je .List.cons_1	

2
	negl %reg0	
	movq -64(%rbp), %reg2	

2
	movq %r12, %rdx	
	call String.substr	

2
	movq 8(%reg0), %reg1	
	addl %reg2, %esi	

2
	negl %esi	
	addl %esi, %reg1	

2
	movq 88(%r13), %r13	
	movq %rbx, %reg2	

2
	movq %reg0, %reg1	
	call Main.new	

2
	movq -8(%rbp), %rdi	
	movq -176(%rbp), %reg3	

2
	movq %rdi, %reg1	
	movq $.string6, %rdi	

2
	movq %r13, %rsi	
	movq %r12, %rdx	

2
	movq $6, %r12	
	movq 0(%reg1), %rbx	

2
	movq -32(%rbp), %rdi	
	cmpl %edi, %reg3	

2
	testq $1, %reg0	
	je .Main.main_144	

2
	movq %rsi, %reg1	
	movq -144(%rbp), %reg1	

2
	setle %reg0l	
	jg .Main.main_4	

2
	movq 8(%reg0), %rbx	
	movq 0(%reg0), %r12	

2
	subl %r9d, %eax	
	movq %reg2, %r9	

2
	movq -48(%rbp), %reg1	
	imull %reg1d	

2
	call *%rax	
.Main.main_7:	

2
	movq %rbx, %rax	
	movq %reg2, %rbx	

2
	call out_error	
.Main.main_172:	

2
	setle %reg0l	
	jg .Main.main_13	

2
	movq 16(%rbx), %rdi	
	movq %r12, %reg3	

2
	negl %ebx	
	movq %r11, %reg2	

2
	je .Main.main_6	
	movq $2, %reg0	

2
	movq %rdi, %rax	
	movq -32(%rbp), %rax	

2
	movq 24(%reg0), %rdx	
	movq 0(%rdx), %reg2	

2
	movq -112(%rbp), %rax	
	subl %reg2, %reg3	

2
	movq %rbx, %rax	
	cmpl %eax, %esi	

2
	movq 24(%rax), %rsi	
	addl %reg2, %reg3	

2
.Main.main_60:	
	cdq	

2
	subl %ebx, %reg1	
	movq %reg2, %rbx	

2
	movq %reg0, %rax	
	movq -88(%rbp), %rax	

2
.Main.main_1:	
	movq $5, %reg0	

2
	movq 0(%reg0), %r14	
	movq 96(%r14), %r14	

2
Foo.foo:	
	pushq %rbp	

2
	subl %reg0, %r10d	
	movq %r10, %rax	

2
	movq %reg0, %rdx	
	movq %r14, %reg3	

2
	movq 8(%rbx), %reg1	
	cmpl %reg2, %eax	

2
	testq $1, %reg0	
	je .Main.main_95	

2
	movq %r14, %reg1	
	subl %reg2, %edi	

2
	negl %reg0	
	movq -88(%rbp), %rax	

2
	movq %rbx, 8(%reg1)	
	movq %reg1, %reg2	

2
	subl %edi, %reg1	
	movq -128(%rbp), %rdi	

2
	movq -160(%rbp), %rsi	
	negl %reg2	

2
	negl %reg0	
	movq -144(%rbp), %rsi	

2
	movq %rsi, %reg1	
	movq %reg1, 24(%reg2)	

2
	movq %reg0, %rbp	
	subq $16, %reg0	

2
	movq %rax, 40(%reg1)	
	movq $0, %rax	

2
	movq %rax, %rdi	
	movq -136(%rbp), %rsi	

2
	call *%rax	
	cmpl $0, 8(%rbx)	

2
	movq %reg0, %rdi	
	movq %rdi, %rax	

2
	movq %reg0, %rdi	
	movq -88(%rbp), %rsi	

2
	testq $1, %r9	
	je .Main.main_62	

2
	movq 8(%reg0), %reg1	
	cmpl %reg2, %reg3	

2
	movq %reg0, %reg1	
	movq $15, %reg0	

2
	call *%reg0	
	jmp .Main.main_16	

2
	addl %eax, %reg1	
	movq -128(%rbp), %rax	

2
	negl %reg0	
	movq %r11, %reg2	

2
	movq -152(%rbp), %reg1	
	movq %r12, %rdi	

2
	movq 0(%r13), %rax	
	movq 64(%rax), %rax	

2
	imull %ecx	
	movq -104(%rbp), %rcx	

2
	movq 8(%reg0), %r12	
	pushq %rax	

2
	movq 0(%rax), %r14	
	movq 80(%r14), %r14	

2
	movq $12, %rcx	
	movq -24(%rbp), %reg2	

2
	movq %r12, 8(%reg1)	
	movq 0(%reg2), %r12	

2
	movq -64(%rbp), %rax	
	addl %reg2, %edi	

2
.string1_l:	
	.string "Baz"	

2
	addl %ecx, %eax	
	negl %eax	

2
	.quad Main.printY	
Int_vtable:	

2
	movq $0, %reg0	
	movq %reg0, 96(%rax)	

2
	movq -48(%rbp), %reg1	
	cmpl %eax, %edi	

2
	movq %reg0, %r12	
	movq 8(%rbx), %reg3	

2
	movq $1, %rsi	
	movq 16(%rax), %rdi	

2
Cons.new:	
	pushq %reg0	

2
	movq -56(%rbp), %reg1	
	movq %rsi, %reg3	

2
	call *%r14	
	cmpl $0, %r13d	

2
	movq %rax, %rdi	
	movq 8(%reg2), %r12	

2
	idivl %reg0	
	addl %eax, %r10d	

2
	movq $12, %rcx	
	movq -136(%rbp), %rax	

2
	movq -128(%rbp), %reg1	
	subl %edi, %eax	

2
	movq -104(%rbp), %reg1	
	movq %reg2, %rax	

2
	movq 8(%rbx), %rax	
	movq %reg2, %reg3	

2
	movq -16(%rbp), %rcx	
	negl %ecx	

2
	movq 48(%reg0), %reg1	
	sete %reg2	

2
	call *%reg0	
	movq -32(%rbp), %rdx	

2
	movq -128(%rbp), %rsi	
	movq %reg2, %rax	

2
	subl %edi, %eax	
	movq $0, %reg2	

2
	movq 0(%rax), %reg1	
	movq 32(%reg1), %reg1	

2
	movq %rsi, %rdi	
	movq %rdi, %rax	

2
	movq %r14, %reg1	
	popq %r15	

2
	testq $1, %reg0	
	jne .Main.main_2	

2
	movq %reg0, %rax	
	movq $2, %rsi	

2
	imull %reg0	
	cmpl $0, %reg1	

2
	subl %ebx, %eax	
	movq %rax, %rbx	

2
	movq %reg0, %rcx	
	cmpl %reg2, %reg3d	

2
	.quad .string0_l	
	.quad 8	

2
	movq $12, %reg0	
	movq -144(%rbp), %reg2	

2
	movq %rdi, 48(%reg1)	
	movq $110, %rdi	

2
.Main.main_8:	
	movq 0(%r12), %reg1	

2
	testq $1, %rax	
	je .Main.main_25	

2
	movq %reg0, %rax	
	movq %r13, %r8	

2
	movq -168(%rbp), %rsi	
	cmpl %reg2, %reg3	

2
	movq 80(%r12), %r12	
	movq %rax, %reg2	

2
	call *%r12	
	movq %rbx, %rax	

2
	idivl %reg0	
	movq -120(%rbp), %rsi	

2
	call *%reg0	
	cmpl $0, 8(%rbx)	

2
	call Bool.new	
	movq %r15, 8(%rax)	

2
	movq %rdi, %reg1	
	movq -128(%rbp), %rdi	

2
	call *%rax	
	movq $.string8, %r12	

2
	movq %reg0, %reg1	
	movq 8(%reg2), %reg0	

2
	movq $5, %reg0	
	movq %r13, %rax	

2
	addl %ecx, %esi	
	movq %rsi, 8(%rax)	

2
	movq $4, %reg0	
	movq $.string4_l, %reg1	

2
	movq %reg0, %rax	
	movq -128(%rbp), %rcx	

2
	movq -8(%rbp), %rdi	
	movq -176(%rbp), %rsi	

2
	movq -24(%rbp), %rax	
	movq %reg2, %rdi	

2
	movq %reg0, %rax	
	movq -120(%rbp), %reg0	

2
.Main.main_32:	
	cdq	

2
.Main.main_20:	
	cdq	

2
.Main.main_45:	
	movq %reg0, %reg1	

2
	imull %ecx	
	movq -160(%rbp), %rcx	

2
.Main.func_1:	
	movq 0(%rbx), %rax	

2
	movq -16(%rbp), %rax	
	movq -32(%rbp), %rbx	

2
	movq -88(%rbp), %reg1	
	subl %edi, %eax	

2
	movq %rax, %reg1	
	movq $20, %rax	

2
.Main.main_68:	
	movq %reg0, %reg1	

2
	cmpq $String_vtable, 0(%reg0)	
	je .Main.main_4	

2
	movq $2, %rsi	
	movq $1, %reg1	

2
	movq $6, %rax	
	movq %rax, %reg1	

2
	call *%reg0	
	movq $3, %reg1	

2
	.quad 2	
abort_string_l:	

2
	movq 80(%r12), %r12	
	movq %reg1, %rdi	

2
	movq %r14, %reg1	
	subl %reg2, %eax	

2
.Main.func_2:	
	movq 0(%reg0), %reg1	

2
	movq $12, %reg0	
	movq %r13, %rax	

2
	testq $1, %rax	
	je .Main.main_43	

2
	movq 0(%reg0), %rbx	
	movq 96(%rbx), %rbx	

2
	movq $7, %rax	
	movq %rax, %reg1	

2
	negl %eax	
	movq -32(%rbp), %reg2	

2
	movq %rbx, %reg1	
	cmpl %reg2, %esi	

2
	movq $0, %rdi	
	movq %rdi, 152(%rax)	

2
	movq %rax, %reg1	
	movq -184(%rbp), %reg3	

2
	movq -16(%rbp), %rdi	
	addl %reg2, %edi	

2
	movq %reg0, %rcx	
	movq -40(%rbp), %reg0	

2
	testq $1, %rdi	
	je .Main.main_16	

2
	addl %reg0, %r9d	
	movq $12, %reg2	

2
	cmpq $IO_vtable, 0(%reg0)	
	je .Main.main_2	

2
	movq -40(%rbp), %reg1	
	subl %reg2, %eax	

2
	movq -56(%rbp), %reg1	
	movq -56(%rbp), %reg2	

2
	movq %r14, %reg1	
	subl %eax, %ecx	

2
	negl %eax	
	addl %eax, %ecx	

2
	movq $.string9, %rbx	
	movq %reg1, %rdx	

2
	.string "ListNode"	
.string0:	

2
	movq %rsi, %rdi	
	movq $2, %reg2	

2
	movq $name_Int, %rax	
	movq 0(%reg1), %r12	

2
	movq %rax, %rcx	
	movq -96(%rbp), %rax	

2
	movq -96(%rbp), %reg1	
	addl %esi, %reg3	

2
	movq 16(%rbx), %rdi	
	movq %reg2, %reg3	

2
	.size Main.func, .-Main.func	
	.globl Main.func2	

2
	call out_error	
.Main.main_64:	

2
	call String.cmp	
	movq %reg0, %r14	

2
	movq -32(%rbp), %reg1	
	movq %reg2, %rax	

2
	addl %edi, %eax	
	movq -8(%rbp), %rdx	

2
.Main.main_187:	
	cdq	

2
	pushq %reg0	
	movq $48, %rdi	

2
	movq -72(%rbp), %rsi	
	movq %reg2, %rax	

2
	movq -32(%rbp), %rdi	
	cmpl %reg2, %eax	

2
	movq %rdi, 144(%rax)	
	movq $0, %rdi	

2
	movq %r13, %rdi	
	sete %dil	

2
	movq -80(%rbp), %rax	
	movq %rcx, %r8	

2
	je .Main.main_3	
	movq $10, %reg0	

2
	subl %reg0, %reg1	
	movq -8(%rbp), %reg3	

2
	movq $4, %rsi	
	movq $.string4_l, %reg1	

2
	movq $7, %rax	
	movq 0(%reg1), %r12	

2
	imull %reg0	
	movq -160(%rbp), %rcx	

2
	subl %edi, %reg1	
	movq %rsi, %reg3	

2
	movq %rdi, %reg1	
	movq -104(%rbp), %rdi	

2
	movq 16(%reg0), %rdi	
	cmpl %reg2, %edi	

2
	movq %reg0, %rdi	
	movq -24(%rbp), %rax	

2
	movq %reg0, %r13	
	movq 0(%r13), %reg0	

2
	movq %reg0, %r10	
	movq $0, %reg0	

2
	movq %rdi, %rax	
	movq -160(%rbp), %rdi	

2
	movq 64(%reg0), %reg0	
	movq -16(%rbp), %reg2	

2
	movq %r15, %rsi	
	movq %reg2, %reg3	

2
	subl %edi, %reg1	
	movq -152(%rbp), %reg3	

2
	movq $0, %rsi	
	movq $.string5_l, %reg1	

2
	movq 0(%r12), %reg1	
	movq 80(%reg1), %reg1	

2
	movq -64(%rbp), %reg1	
	call *%reg2	

2
	je .Main.main_10	
	movq $4, %reg0	

2
	movq 48(%rbx), %rdx	
	movq 0(%rdx), %reg2	

2
	movq -160(%rbp), %reg1	
	imull %ecx	

2
	movq $100, %rdi	
	movq %rdi, 40(%rax)	

2
	subl %ebx, %eax	
	movq %rax, %reg3	

2
	movq -88(%rbp), %reg1	
	movq $0, %reg2	

2
	testq $1, %reg0	
	je .Main.main_65	

2
	call *%rax	
	movq $3, %reg1	

2
	movq 136(%reg0), %reg0	
	movq %rbx, %reg2	

2
	movq %reg0, %reg1	
	movq 8(%reg2), %rdi	

2
	movq %rax, 8(%rbx)	
	cmpl $0, 8(%rbx)	

2
	movq %r14, %rax	
	movq -152(%rbp), %rsi	

2
	movq %reg0, %reg1	
	movq %reg1, -144(%rbp)	

2
	movq 64(%reg0), %reg0	
	movq %r13, %rdi	

2
.Main.main_7:	
	movq $3, %reg0	

2
	movq 8(%rbx), %reg1	
	cmpl %edi, %eax	

2
	movq -112(%rbp), %rdi	
	addl %reg2, %eax	

2
	imull %reg0	
	movq $2, %rdi	

2
	movq %rdi, %reg1	
	cmpl %ecx, %r8d	

2
	movq $name_Bool, %reg0	
	movq 0(%rbx), %reg2	

2
	testq $1, %reg0	
	je .Main.main_156	

2
	movq -40(%rbp), %rsi	
	movq %reg2, %rax	

2
	movq $name_Bool, %rax	
	movq 0(%reg1), %r12	

2
	idivl %reg0	
	addl %reg1, %reg2d	

2
	movq %reg0, -72(%rbp)	
	movq %reg2, %reg0	

2
.Main.main_7:	
	movq 0(%r12), %reg1	

2
	sete %reg0l	
	jne .Main.main_7	

2
	movq %rdi, 104(%rax)	
	movq $0, %rdi	

2
	movq -184(%rbp), %reg1	
	subl %ecx, %eax	

2
	movq $208, %reg0	
	movq $.string5_l, %rdi	

2
	call *%reg0	
	jmp .Main.main_20	

2
	call Object.type_name	
	movq 0(%reg0), %reg1	

2
	addl %reg0, %eax	
	movq -120(%rbp), %rdi	

2
.Main.main_188:	
	cdq	

2
	movq $6, %r12	
	movq 0(%reg1), %reg2	

2
	movq $0, %rdi	
	movq %rdi, 136(%reg1)	

2
	movq %r14, %reg1	
	movq %r13, %rdi	

2
	subq $32, %reg0	
	pushq %rbx	

2
	movq -184(%rbp), %reg1	
	addl %reg2, %edi	

2
	movq -120(%rbp), %rdi	
	addl %edi, %reg3	

2
	movq $12, %reg0	
	movq -88(%rbp), %reg2	

2
	movq -32(%rbp), %reg1	
	cmpl %eax, %esi	

2
	movq %rbx, 8(%reg1)	
	movq %reg1, %rdi	

2
	movq $1, %rsi	
	movq 16(%reg1), %reg2	

2
	movq %reg0, %reg1	
	movq -144(%rbp), %reg1	

2
	movq %rax, 40(%rbx)	
	movq $0, %rax	

2
.Main.main_5:	
	movq %reg0, %reg1	

2
	movq $74, %rsi	
	movq $.string4_l, %rdi	

2
	call *%reg0	
	movq $.string9, %reg1	

2
	idivl %ebx	
	addl %eax, %reg2d	

2
	testq $1, %rsi	
	je .Main.main_5	

2
	movq %r14, %reg1	
	movq $0, %reg2	

2
	movq -128(%rbp), %rax	
	movq -32(%rbp), %reg3	

2
	jne .Main.main_2	
	movq %reg0, %reg1	

2
	subl %reg0, %eax	
	movq %rbx, %reg3	

2
	movq -144(%rbp), %reg1	
	addl %reg2, %ecx	

2
	movq $12, %rsi	
	movq -168(%rbp), %reg2	

2
	testq $1, %reg0	
	je .Main.main_115	

2
	movq %reg0, 56(%rax)	
	movq $111, %reg0	

2
	sete %reg0l	
	jne .Main.main_17	

2
	movq %rsi, %r12	
	movq %r12, %rax	

2
	movq $74, %reg0	
	movq $.string4_l, %rdi	

2
	movq $6, %reg0	
	movq %reg0, %reg1	

2
	movq -88(%rbp), %reg1	
	imull %ecx	

2
	.quad Main.printY	
	.text 	

2
.Main.main_1:	
	movq %rax, %reg1	

2
	call ListNode.new	
	cmpl $0, %eax	

2
	testq $1, %reg0	
	je .Main.main_184	

2
	movq -64(%rbp), %reg1	
	negl %ecx	

2
	call out_error	
.Main.main_179:	

2
	movq %rax, %rcx	
	movq -184(%rbp), %rax	

2
	movq $0, %reg0	
	movq %reg0, 184(%reg1)	

2
	imull %reg0	
	movq %r12, %rcx	

2
	movq $0, %reg0	
	movq %reg0, 112(%rax)	

2
	movq 64(%rax), %rax	
	movq 8(%rbx), %reg2	

2
	movq %r13, %rax	
	subl %reg2, %eax	

2
.Main.main_10:	
	cdq	

2
	addl %reg0, %reg1	
	movq %reg2, %rdx	

2
	movq $.string6, %r12	
	movq 0(%rbx), %reg2	

2
	movq %reg0, %rax	
	movq -24(%rbp), %reg0	

2
	movq 56(%reg0), %reg0	
	movq 8(%reg1), %reg2	

2
	movq -176(%rbp), %r9	
	addl %r9d, %eax	

2
	movq %reg0, %reg1	
	cmpl %reg2, %r8d	

2
	call *%reg0	
	movq -120(%rbp), %reg2	

2
	addl %reg0, %reg1	
	movq %rbx, %rax	

2
	movq $8, %reg0	
	movq $.string3_l, %reg1	

2
	movq $10, %reg0	
	movq %reg0, 24(%reg1)	

2
	pushq %reg0	
	movq $0, %reg1	

2
	call *%reg0	
	testq $1, %reg1	

2
	movq %reg0, %rax	
	movq $3, %reg0	

2
	movq -128(%rbp), %reg1	
	cmpl %eax, %reg3	

2
	movq %reg0, %rbx	
	movq $10, %reg2	

2
	movq $0, %reg0	
	movq %reg0, 176(%rax)	

2
	movq $.string6, %rdi	
	movq %rdi, %reg1	

2
	movq -56(%rbp), %rsi	
	call *%reg2	

2
	movq $name_Int, %rax	
	movq 0(%rbx), %reg2	

2
	movq $9, %reg0	
	movq 0(%rbx), %r12	

2
	subl %reg0, %reg1	
	movq -136(%rbp), %rdi	

2
	movq $14, %rax	
	movq %rax, %reg1	

2
	movq $0, %rdi	
	movq %rdi, 168(%reg1)	

2
	movq 0(%rax), %r13	
	movq 96(%r13), %r13	

2
	movq %rbx, %rax	
	movq %r12, %reg3	

2
	movq -128(%rbp), %rdi	
	subl %reg2, %reg3	

2
	movq %reg0, 8(%rax)	
	movq %rax, %reg0	

2
	movq $1, %rdi	
	movq %rdi, 16(%rax)	

2
	movq 24(%reg0), %rax	
	movq %rax, 8(%reg0)	

2
	testq $1, %reg0	
	je .Main.main_173	

2
	addl %reg0, %esi	
	movq %reg2, 8(%reg3)	

2
	movq %reg0, -128(%rbp)	
	movq -8(%rbp), %reg0	

2
	movq %reg0, %rbx	
	movq %r12, %r13	

2
	movq -136(%rbp), %reg1	
	movq -104(%rbp), %reg3	

2
	movq $3, %reg0	
	movq %reg0, 8(%rax)	

2
	call Foo.new	
	movq %rax, %rbx	

2
	movq %rdi, %reg1	
	movq $.string10, %r12	

2
.Main.new_1:	
	cmpq $IO_vtable, 0(%reg0)	

2
	testq $1, %reg0	
	je .Main.main_129	

2
	movq 0(%rax), %r13	
	movq 56(%r13), %r13	

2
	movq -104(%rbp), %reg1	
	movq %rcx, %reg3	

2
	call out_error	
.Main.main_189:	

2
	movq %reg0, %reg1	
	cmpl %reg2, %reg3d	

2
	imull %r8d	
	subl %reg1, %ecx	

2
	movq 80(%r14), %r14	
	movq %rax, %reg2	

2
	movq %rax, %r13	
	movq $2, %rax	

2
	movq -80(%rbp), %reg1	
	subl %reg2, %edi	

2
	addl %reg0, %reg1	
	movq -8(%rbp), %reg3	

2
	addl %edi, %eax	
	movq %reg2, %rbx	

2
	movq -40(%rbp), %rsi	
	movq %reg2, %reg3	

2
	movq %reg0, %reg1	
	subl %eax, %r8d	

2
	imull %r9d	
	subl %eax, %reg2d	

2
	call *%rax	
	movq 8(%reg1), %rax	

2
	movq 104(%reg0), %reg0	
	movq %r13, %rdi	

2
.string11_l:	
	.string "4"	

2
	addl %edi, %reg1	
	movq -176(%rbp), %rdi	

2
	movq $7, %reg0	
	movq 0(%rbx), %reg2	

2
	movq %rdi, %rax	
	movq $2, %rsi	

2
	movq -168(%rbp), %rsi	
	cmpl %reg2, %eax	

2
	addl %reg0, %reg1	
	movq -144(%rbp), %reg3	

2
	movq -40(%rbp), %reg1	
	movq %reg2, %r9	

2
	movq %rdi, %r12	
	movq 8(%r12), %reg2	

2
.Main.main_52:	
	cdq	

2
	movq -32(%rbp), %reg1	
	cmpl %reg2, %esi	

2
	call *%rax	
	movq -104(%rbp), %rax	

2
	movq %reg0, %reg1	
	movq $12, %r9	

2
	movq 56(%r12), %r12	
	movq -16(%rbp), %rdi	

2
	movq %rdi, %r13	
	call Baz.new	

2
	movq 80(%reg0), %reg0	
	movq %r12, %rdi	

2
	cmpl $0, 48(%reg0)	
	movq 48(%reg0), %reg1	

2
	movq %r14, %rax	
	movq $0, %reg2	

2
	call *%rax	
	jmp .Main.main_22	

2
	movq %reg0, %rax	
	movq -64(%rbp), %reg0	

2
	movq %r12, %rax	
	movq %r13, %rdi	

2
	negl %ecx	
	movq -96(%rbp), %reg2	

2
	pushq %reg0	
	movq $32, %reg1	

2
	movq %reg0, %r10	
	movq %r9, %reg0	

2
	movq -56(%rbp), %reg1	
	addl %ecx, %eax	

2
	movq %rax, %r13	
	movq %r13, %r12	

2
	movq %rdi, %rax	
	movq %rax, 40(%rbx)	

2
	movq %rdi, %rax	
	movq 0(%rbx), %reg3	

2
	movq -32(%rbp), %reg1	
	call *%rax	

2
	movq $12, %rsi	
	movq $.string3_l, %reg1	

2
	movq %reg0, %reg1	
	movq -32(%rbp), %reg1	

2
	movq -96(%rbp), %rax	
	addl %reg2, %ecx	

2
	.quad 38	
.string8_l:	

2
	imull %r8d	
	subl %reg1, %reg2	

2
	movq -144(%rbp), %reg1	
	movq $0, %r9	

2
	negl %eax	
	movq %rbx, %reg2	

2
	movq %rsi, %reg1	
	movq 0(%rbx), %reg3	

2
	movq %reg0, 8(%reg1)	
	movq 0(%rbx), %r14	

2
	movq %reg0, %reg1	
	movq -96(%rbp), %rcx	

2
	movq %reg0, %rbx	
	movq 0(%reg2), %reg0	

2
	negl %reg0	
	movq %reg1, 16(%reg2)	

2
	addl %reg0, %reg1	
	movq %r13, %reg3	

2
	call *%rax	
	movq %rax, 8(%reg1)	

2
	movq 72(%rax), %rax	
	movq 8(%rbx), %rdi	

2
	call *%r14	
	movq %reg1, 8(%reg2)	

2
	subl %edi, %reg1	
	movq -8(%rbp), %reg3	

2
	movq $0, %reg0	
	movq %reg0, 144(%rax)	

2
	subl %reg0, %ecx	
	movq %r12, %reg3	

2
	movq %rsi, %reg1	
	call Int.new	

2
	call *%rax	
	movq -80(%rbp), %rax	

2
	movq %reg0, -8(%rbp)	
	movq $1, %rax	

2
	movq 96(%rbx), %rbx	
	movq %rax, %reg2	

2
	subl %reg0, %r8d	
	movq %reg2, %rax	

2
	movq %r12, %reg1	
	movq %r13, %rdi	

2
	movq %rax, %rbx	
	movq 0(%r13), %rax	

2
	movq $12, %rcx	
	movq -112(%rbp), %reg2	

2
	movq -48(%rbp), %rax	
	cmpl %eax, %edi	

2
	movq %rsi, %reg1	
	movq %rdi, %rcx	

2
	call *%reg0	
	movq %r13, %rdi	

2
	movq $0, %rdi	
	movq %rdi, 88(%rax)	

2
	movq -80(%rbp), %rsi	
	imull %reg2	

2
	movq %rax, %reg1	
	cmpl $0, %r12d	

2
	testq $1, %rcx	
	je .Main.main_24	

2
	movq %rax, %reg1	
	movq $12, %r9	

2
	movq 88(%reg0), %reg0	
	movq 8(%reg1), %rdi	

2
	call Baz.new	
	movq %rax, %reg1	

2
	movq %reg0, %rdi	
	movq %rdi, %reg2	

2
	movq %rdi, 112(%reg1)	
	movq $0, %rdi	

2
	movq -136(%rbp), %rdi	
	addl %reg2, %reg3	

2
	movq $.string8, %r12	
	movq -8(%rbp), %rdx	

2
	movq -56(%rbp), %reg1	
	addl %esi, %eax	

2
.Main.main_53:	
	cdq	

2
	movq 48(%r14), %r14	
	movq %r12, %reg2	

2
	call *%reg0	
	call Bar.new	

2
	movq %reg0, %rax	
	movq -128(%rbp), %rsi	

2
	idivl %reg0	
	addl %reg1, %r10d	

2
	movq -8(%rbp), %rdi	
	movq -160(%rbp), %reg3	

2
	movq $1, %reg0	
	movq %reg0, %rbx	

2
	subl %edi, %eax	
	movq -8(%rbp), %reg3	

2
	movq -88(%rbp), %reg1	
	addl %eax, %reg3	

2
	movq %r12, %rax	
	movq %reg2, %r8	

2
	movq -48(%rbp), %rsi	
	cmpl %reg2, %reg3	

2
.Main.main_2:	
	testq $1, %reg0	

2
	movq %reg0, %reg1	
	movq -96(%rbp), %reg1	

2
	movq $12, %rsi	
	movq -64(%rbp), %reg2	

2
	addl %reg0, %reg1	
	movq %r13, %rdi	

2
	movq -56(%rbp), %rcx	
	addl %reg2, %reg3	

2
	negl %reg0d	
	addl %reg0d, %eax	

2
	movq %reg0, %rax	
	movq 0(%reg2), %r12	

2
.Main.main_2:	
	movq 8(%rbx), %rdx	

2
	movq $76, %reg0	
	movq $.string4_l, %rdi	

2
	addl %reg0, %eax	
	movq -144(%rbp), %rdi	

2
	cmpq $Int_vtable, 0(%rax)	
	je .Main.main_7	

2
	movq 96(%rax), %rax	
	movq %r12, %reg2	

2
	movq %rdi, %rax	
	movq $2, %reg2	

2
	movq 8(%rax), %rdi	
	sete %dil	

2
	call *%reg0	
	call IO.new	

2
	movq %reg0, 176(%reg1)	
	movq $0, %reg0	

2
	addl %edi, %eax	
	movq %r13, %reg3	

2
.Main.main_40:	
	cdq	

2
	subl %edi, %eax	
	movq -128(%rbp), %rdi	

2
	jg .Main.main_13	
	movq $6, %rbx	

2
	movq 0(%r13), %reg1	
	movq 64(%reg1), %reg1	

2
	negl %reg0	
	movq %r11, %rax	

2
	movq %reg0, %rax	
	movq 0(%rbx), %r12	

2
.Main.main_4:	
	movq $2, %reg0	

2
	movq -64(%rbp), %rax	
	negl %eax	

2
	movq %rsp, %reg1	
	subq $16, %rsp	

2
.Main.main_3:	
	movq 8(%rbx), %reg1	

2
	movq %reg0, %rdi	
	call *%r15	

2
	movq 24(%reg0), %reg1	
	movq %r12, %reg3	

2
	movq 32(%reg0), %reg0	
	movq %rax, %rdi	

2
	addl %edi, %reg1	
	movq -160(%rbp), %reg3	

2
	call out_error	
.Main.func_1:	

2
	movq -160(%rbp), %reg1	
	subl %edi, %eax	

2
	movq $.string11, %reg0	
	cmpl $0, %reg1	

2
	movq $101, %reg0	
	movq %reg0, 48(%reg1)	

2
	movq -136(%rbp), %reg1	
	subl %ecx, %reg3	

2
	movq %rsi, %r12	
	movq 0(%rbx), %rax	

2
	movq $15, %rax	
	movq %rax, %reg1	

2
	addl %edi, %eax	
	movq -72(%rbp), %reg3	

2
.Main.main_8:	
	cdq	

2
	movq $12, %rdi	
	movq -24(%rbp), %rax	

2
	.quad Bar.getX	
String_vtable:	

2
	idivl %reg0	
	movq 0(%reg1), %r12	

2
	.quad .string7_l	
	.quad 38	

2
	movq -152(%rbp), %rax	
	cmpl %eax, %esi	

2
	movq %rdi, %reg1	
	movq -128(%rbp), %reg1	

2
	movq $0, %rdi	
	movq %rdi, 200(%reg1)	

2
	movq $name_Bool, %rax	
	movq 0(%rbx), %reg2	

2
	movq -128(%rbp), %rdx	
	movq %rdx, %reg2	

2
	je .Main.main_1	
	cmpq $Main_vtable, 0(%rax)	

2
	movq -64(%rbp), %reg1	
	subl %eax, %reg3	

2
	addl %reg0, %eax	
	movq -72(%rbp), %rdi	

2
	.size Main.main, .-Main.main	
	.globl Foo.foo	

2
	movq %rax, %r13	
	cmpl $0, %r12d	

2
	movq %reg0, 24(%rax)	
	movq $11, %reg0	

2
	movq %r13, %rdx	
	movq %reg2, %rcx	

2
	movq %rax, %reg1	
	movq $17, %rax	

2
	movq %reg0, %rcx	
	movq -88(%rbp), %reg0	

2
	movq 0(%r12), %reg1	
	movq 104(%reg1), %reg1	

2
	.quad .string6_l	
	.quad 6	

2
	movq -48(%rbp), %reg1	
	cmpl %reg2, %edi	

2
	movq -176(%rbp), %reg1	
	addl %reg1d, %reg2	

2
	idivl %reg0d	
	addl %reg1, %r8d	

2
	idivl %r9d	
	addl %reg1, %reg2d	

2
	je .Main.main_16	
	movq $3, %reg0	

2
	movq 56(%reg0), %reg0	
	movq -16(%rbp), %rdi	

2
	movq $15, %reg0	
	movq %reg0, %reg1	

2
	movq 56(%r12), %r12	
	movq -16(%rbp), %reg2	

2
	negl %eax	
	movq -120(%rbp), %reg2	

2
	movq $.string7, %r12	
	movq 0(%rax), %reg2	

2
	movq $16, %rax	
	movq %rax, %reg1	

2
	movq -72(%rbp), %rax	
	movq -112(%rbp), %rdi	

2
	movq -96(%rbp), %rax	
	movq -48(%rbp), %reg3	

2
	movq -144(%rbp), %rax	
	movq %reg2, %rsi	

2
	movq %reg0, 8(%rax)	
	movq 0(%rbx), %r14	

2
	movq %r13, %r8	
	imull %r8d	

2
	negl %reg0d	
	movq %reg0, %reg1	

2
	movq %r13, %reg1	
	movq 0(%rbx), %rax	

2
	movq %r15, %r14	
	call Bool.new	

2
	movq %reg0, %rsi	
	movq %rbx, %rax	

2
	testq $1, %reg0	
	je .Main.main_92	

2
	movq %reg0, %reg1	
	movq 0(%r13), %reg0	

2
.Main.func_2:	
	movq $.string6, %reg0	

2
	movq 48(%rbx), %rax	
	sete %al	

2
	.string "Fail"	
.string6:	

2
	movq 24(%reg0), %reg1	
	movq 24(%reg0), %reg2	

2
	movq %reg0, %rax	
	movq -136(%rbp), %rsi	

2
	testq $1, %reg0	
	je .Main.main_102	

2
	negl %reg0	
	movq -120(%rbp), %rsi	

2
	movq %r14, 8(%rax)	
	movq 0(%rbx), %r14	

2
	movq $4, %rsi	
	imull %esi	

2
	setle %dil	
	jg .Main.main_13	

2
	idivl %r11d	
	subl %reg1, %r10d	

2
	call *%rax	
	jmp .Main.main_1	

2
	movq -32(%rbp), %rax	
	subl %edi, %reg3	

2
	jmp .Main.main_52	
.Main.main_51:	

2
	movq %rdi, 184(%rax)	
	movq $0, %rdi	

2
	movq %rax, %rcx	
	movq %r12, %rax	

2
	subl %eax, %ecx	
	movq %r12, %rax	

2
	testq $1, %reg0	
	jne .Main.main_17	

2
	movq -176(%rbp), %reg1	
	subl %reg2, %reg3	

2
	movq 88(%r13), %r13	
	movq %reg1, %rdi	

2
	movq $8, %rsi	
	movq $.string3_l, %rdi	

2
	movq -8(%rbp), %rdi	
	movq -64(%rbp), %rsi	

2
	movq %rsi, %reg1	
	movq %reg1, 16(%reg2)	

2
	movq 24(%reg0), %rsi	
	addl %reg2, %reg3	

2
	call Main.func	
	jmp .Main.main_4	

2
	movq %r13, %r12	
	movq 0(%rbx), %rax	

2
	subl %edi, %reg1	
	movq -128(%rbp), %reg3	

2
	movq %rax, %reg1	
	movq %r14, %rdx	

2
	movq 8(%reg0), %reg1	
	cmpl $0, %eax	

2
	testq $1, %r8	
	je .Main.main_189	

2
	movq 16(%rax), %rdi	
	call *%reg2	

2
	movq %reg0, %rbx	
	call Bar.new	

2
	movq %reg0, %reg1	
	cmpl $0, 48(%reg2)	

2
	cmpl $0, 8(%rax)	
	movq 8(%rax), %rdi	

2
	.quad 1	
.string2_l:	

2
	subq $32, %rsp	
	pushq %rbx	

2
.Main.main_4:	
.Main.main_2:	

2
	testq $1, %rcx	
	je .Main.main_185	

2
	movq -48(%rbp), %rsi	
	cmpl %esi, %eax	

2
	call *%r12	
.Main.main_5:	

2
	.quad 1	
.string9_l:	

2
	movq -112(%rbp), %rax	
	movq $0, %r8	

2
	call String.concat	
	movq 0(%reg0), %r12	

2
	movq %rax, %rbx	
	movq 0(%reg2), %rax	

2
	movq -88(%rbp), %rax	
	movq $0, %reg2	

2
	movq -120(%rbp), %rdi	
	addl %reg2, %reg3	

2
	call Main.new	
	movq %reg0, %r12	

2
	movq %reg0, %reg1	
	movq -128(%rbp), %reg1	

2
	movq %r12, 8(%reg1)	
	movq 8(%reg1), %reg1	

2
	addl %reg0, %reg1	
	movq $12, %r8	

2
	movq %reg0, %reg1	
	movq $5, %rax	

2
	movq 24(%reg0), %reg1	
	movq %reg1, 8(%reg0)	

2
	movq %reg0, %reg1	
	movq %reg1, -16(%rbp)	

2
	movq %reg0, %rbx	
	movq $5, %rax	

2
	movq %rax, %reg1	
	movq $11, %rax	

2
	.type ListNode.new, @function	
ListNode.new:	

2
	movq $2, %rdi	
	movq $1, %rax	

2
	movq %rdi, %rax	
	movq 0(%rbx), %r12	

2
	imull %reg0	
	movq -24(%rbp), %reg2	

2
	movq %rax, %reg1	
	negl %ebx	

2
	movq %reg0, %rdi	
	movq %rdi, 16(%rax)	

2
	movq %r14, 8(%rax)	
	movq 0(%reg2), %r14	

2
	call *%rax	
	cmpl $0, 8(%reg1)	

2
	movq %rax, %reg1	
	movq $6, %rax	

2
	movq %reg0, %rdi	
	movq -136(%rbp), %reg0	

2
	movq %r11, %r10	
	addl %r10d, %reg2	

2
	addl %reg0, %esi	
	movq %rsi, 8(%reg3)	

2
	movq -184(%rbp), %reg1	
	addl %eax, %edi	

2
	je .Main.main_1	
	cmpq $String_vtable, 0(%reg0)	

2
	je .Main.main_4	
	movq $1, %reg0	

2
	movq $12, %reg0	
	movq $.string3_l, %rdi	

2
	movq 80(%rax), %rax	
	movq %r12, %reg2	

2
	pushq %reg0	
	movq $40, %rdi	

2
	movq $111, %rdi	
	movq %rdi, 64(%rax)	

2
	movq 8(%reg0), %rsi	
	addl %ecx, %esi	

2
	call Int.new	
	movq 8(%reg0), %reg0	

2
	movq %reg0, %rsi	
	movq $1, %reg0	

2
	movq %r13, %reg1	
	movq 0(%rbx), %reg3	

2
	testq $1, %reg0	
	je .List.cons_1	

2
	ret	
	.size Yaz.new, .-Yaz.new	

2
	movq 8(%rax), %rsi	
	addl %ecx, %reg3	

2
	movq %rax, %reg1	
	movq %r9, %rax	

2
	ret	
	.size Main.getFoo, .-Main.getFoo	

2
	movq %reg0, 8(%rax)	
	movq 0(%rbx), %reg3	

2
	idivl %reg0d	
	movq -48(%rbp), %reg2	

2
	movq -136(%rbp), %rax	
	movq -64(%rbp), %reg3	

2
	movq 16(%rax), %reg1	
	movq 0(%reg1), %r12	

2
	movq -16(%rbp), %reg1	
	negl %ecx	

2
	movq %rdi, 24(%reg1)	
	movq $11, %rdi	

2
.Main.main_173:	
	cdq	

2
	movq %reg0, 8(%rbx)	
	cmpl $0, 8(%rbx)	

2
	movq $0, %reg0	
	movq %reg1, %rsi	

2
	movq %reg0, %reg1	
	movq -48(%rbp), %r8	

2
	movq %reg0, %rax	
	movq 0(%reg2), %reg3	

2
	movq -56(%rbp), %reg1	
	movq %reg2, %rax	

2
	.type List.cons, @function	
List.cons:	

2
	movq $1, %reg0	
	movq %rbx, %reg2	

2
	imull %esi	
	movq -16(%rbp), %rsi	

2
	.size Foo.setBar, .-Foo.setBar	
	.globl Foo.getBar	

2
	testq $1, %rdi	
	je .Main.main_15	

2
	movq %rdi, %reg1	
	movq $10, %reg2	

2
	movq 104(%reg0), %reg0	
	movq %r12, %reg2	

2
	imull %edi	
	leave	

2
	movq %reg0, 112(%reg1)	
	movq $0, %reg0	

2
.Main.main_3:	
	movq 8(%reg0), %rdx	

2
	movq %rax, %r13	
	movq %r13, %reg2	

2
	call String.concat	
	movq 0(%rbx), %r12	

2
	movq $2147483647, %reg0	
	movq %reg0, %rdi	

2
	negl %reg0	
	movq -152(%rbp), %reg2	

2
.string13:	
	.quad String_vtable	

2
	movq %reg0, %reg1	
	movq %reg1, 40(%rbx)	

2
	movq -48(%rbp), %rax	
	addl %reg2, %reg3	

2
	movq $0, %rdi	
	movq %rdi, 144(%reg1)	

2
	movq $3, %rax	
	movq $4, %reg1	

2
	movq -32(%rbp), %rbx	
	pushq %reg2	

2
	call out_error	
.Main.main_49:	

2
	subl %eax, %edi	
	movq -152(%rbp), %rsi	

2
	.size _main, .-_main	
	.globl Main.func	

2
	movq %rax, 48(%reg1)	
	cmpl $0, 32(%reg1)	

2
	movq -32(%rbp), %rdi	
	cmpl %edi, %eax	

2
	imull %reg0	
	leave	

2
	movq %r13, %rdi	
	subl %edi, %reg3	

2
	call *%reg0	
	movq -176(%rbp), %reg0	

2
	call *%reg0	
.Main.main_28:	

2
	movq 32(%rbx), %reg1	
	call Bazz.doh	

2
	.quad String_vtable	
	.quad .string13_l	

2
	call *%reg0	
	movq -168(%rbp), %rax	

2
	movq -16(%rbp), %rdi	
	call *%reg2	

2
	movq %reg0, %rcx	
	movq -96(%rbp), %reg0	

2
	movq %rdi, %reg1	
	movq $5, %rax	

2
	call *%reg0	
	movq $.string11, %rax	

2
	.size Main.main, .-Main.main	
	.globl Foo.func	

2
	subl %reg0, %esi	
	movq %reg2, %rcx	

2
	movq %reg0, %r12	
	jmp .Main.main_3	

2
	testq $1, %reg0	
	je .Main.main_68	

2
	testq $1, %rcx	
	je .Main.main_66	

2
	ret	
	.size List.insert, .-List.insert	

2
	movq -96(%rbp), %rax	
	imull %ecx	

2
	call *%r12	
	movq %reg1, %rdx	

2
	.type Foo.foo, @function	
Foo.foo:	

2
	movq $12, %rcx	
	movq -136(%rbp), %reg2	

2
	imull %edi	
	movq $2, %rdi	

2
	movq -24(%rbp), %rax	
	addl %eax, %edi	

2
	addl %reg0, %reg1	
	movq -112(%rbp), %rdi	

2
	movq $3, %rdi	
	movq %rdi, 8(%reg1)	

2
	movq -168(%rbp), %reg1	
	cmpl %reg2, %esi	

2
	movq -64(%rbp), %rax	
	negl %reg2	

2
	negl %eax	
	movq $1, %rdi	

2
.Main.main_3:	
	movq 8(%reg0), %reg1	

2
	movq $0, %reg0	
	movq $.string5_l, %reg1	

2
	movq %reg0, %rax	
	movq -80(%rbp), %rdi	

2
	movq %reg0, %reg1	
.Main.main_5:	

2
	je .Main.main_5	
	movq $6, %reg0	

2
	movq -24(%rbp), %rbx	
	pushq %rax	

2
	je .Main.main_1	
	movq $12, %reg0	

2
	movq 56(%reg0), %reg0	
	movq -16(%rbp), %reg2	

2
	movq $12, %rsi	
	movq -24(%rbp), %rax	

2
	.size Main.func, .-Main.func	
	.globl Main.main	

2
	jg .Main.main_11	
	movq $1, %rax	

2
	movq -56(%rbp), %rcx	
	imull %reg2	

2
	movq %rsi, %r12	
	call Int.new	

2
	addl %reg0, %r8d	
	movq %reg2, %rax	

2
.Main.main_71:	
	cdq	

2
	movq %rax, %reg1	
	cmpl $0, 48(%rbx)	

2
	movq -112(%rbp), %rax	
	imull %esi	

2
	setl %dil	
	jge .Main.main_5	

2
	movq %rax, %reg1	
	call Cons.new	

2
	movq -136(%rbp), %rax	
	imull %reg2	

2
	imull %r10d	
	subl %reg1, %r9d	

2
	movq 80(%reg0), %reg0	
	movq %r12, %reg2	

2
	movq -24(%rbp), %rax	
	movq %reg2, %rcx	

2
	call *%r15	
	movq $1, %reg1	

2
	cmpq $Bool_vtable, 0(%rax)	
	je .Main.main_6	

2
	movq %reg0, 24(%reg1)	
	movq $11, %reg0	

2
	movq $0, %reg0	
	movq %reg0, 88(%rax)	

2
	testq $1, %reg0	
	je .Main.main_80	

2
	movq %r13, %rsi	
	cmpl %esi, %reg3	

2
	movq %rdi, 192(%reg1)	
	movq $0, %rdi	

2
	movq %r14, %reg1	
	movq -152(%rbp), %reg3	

2
	.quad 2	
	.quad Cons.new	

2
	testq $1, %reg0	
	je .Main.main_181	

2
	movq $1, %rsi	
	movq 16(%reg1), %rdi	

2
	idivl %ebx	
	addl %eax, %r10d	

2
	movq -104(%rbp), %rax	
	movq %rcx, %r8	

2
	movq $7, %rax	
	movq 0(%reg1), %reg2	

2
	movq 104(%rax), %rax	
	movq %r13, %reg2	

2
	movq -136(%rbp), %rdi	
	addl %reg2, %eax	

2
	movq -176(%rbp), %reg1	
	addl %reg1d, %eax	

2
	movq $.string7, %reg0	
	movq %r12, %rdi	

2
	movq -8(%rbp), %rdi	
	movq -160(%rbp), %rsi	

2
	je .Main.main_6	
	movq $3, %rsi	

2
	movq 8(%rbx), %reg1	
	cmpl $0, %reg2	

2
	movq -144(%rbp), %rax	
	movq %reg2, %rcx	

2
	movq $.string6, %r12	
	movq 0(%rax), %rbx	

2
	movq $0, %reg0	
	movq %reg0, 184(%rax)	

2
	ret	
	.size Foo.setBar, .-Foo.setBar	

2
	movq %rax, %reg1	
	call Yaz.new	

2
	movq %rdx, -184(%rbp)	
	movq -8(%rbp), %rdx	

2
	addl %eax, %reg1d	
	movq $12, %r10	

2
	addl %edi, %eax	
	movq -144(%rbp), %reg3	

2
	movq %rax, %rsi	
	movq -72(%rbp), %rax	

2
	movq %reg0, %rdi	
	movq 8(%reg2), %reg0	

2
	movq %rax, %reg1	
	movq 8(%reg2), %rax	

2
	subl %reg0, %reg1	
	subl %reg1, %reg2	

2
	movq $0, %reg0	
	call Int.new	

2
	jmp .Main.main_65	
.Main.main_64:	

2
	movq %r14, %rdi	
	imull %reg2	

2
	je .Main.main_5	
	movq $3, %rsi	

2
.Main.main_7:	
	movq 8(%reg0), %reg1	

2
	movq 8(%rdi), %reg1	
	movq 8(%rdi), %rdi	

2
	call out_error	
.Main.main_53:	

2
	movq %rsi, %reg1	
	movq 0(%reg2), %rax	

2
	movq %reg0, %rdi	
	movq -144(%rbp), %reg0	

2
	movq %rdi, 168(%reg1)	
	movq $0, %rdi	

2
	addl %reg0, %eax	
	movq -112(%rbp), %rdi	

2
	movq $.string7, %reg0	
	movq 0(%rax), %rbx	

2
	movq %reg0, %rdi	
	movq 8(%rbx), %reg0	

2
	cmpq $String_vtable, 0(%rdi)	
	je .Main.main_2	

2
	.type Main.func2, @function	
Main.func2:	

2
	movq %r14, %reg1	
	popq %reg2	

2
	testq $1, %reg0	
	je .Main.main_176	

2
	imull %reg0	
	movq -16(%rbp), %rsi	

2
.Main.main_8:	
	movq 0(%reg0), %rax	

2
.Main.main_16:	
	cdq	

2
	.type Cons.isNil, @function	
Cons.isNil:	

2
	addl %edi, %eax	
	movq -72(%rbp), %rdi	

2
	je .Main.main_8	
	movq $3, %reg0	

2
Main.printY:	
	pushq %reg0	

2
	movq $2, %reg0	
	negl %edi	

2
	subl %esi, %reg1	
	movq $12, %reg2	

2
	testq $1, %rdi	
	je .Main.main_47	

2
	movq -40(%rbp), %rdi	
	movq %reg2, %reg3	

2
	movq $.string7, %reg0	
	movq %r12, %reg2	

2
	movq -144(%rbp), %reg1	
	movq %reg2, %rsi	

2
	movq 8(%rbx), %rax	
	cmpl $0, %eax	

2
	call List.new	
	movq %rax, %reg1	

2
	movq -64(%rbp), %rax	
	addl %eax, %edi	

2
	movq $8, %reg0	
	movq $.string3_l, %rdi	

2
	movq -48(%rbp), %reg1	
	movq -16(%rbp), %rdi	

2
	movq %rdi, 88(%rax)	
	movq $0, %rdi	

2
	movq 8(%reg0), %reg1	
	cmpl %reg2, %eax	

2
	movq %rdi, %reg1	
	movq $2, %rsi	

2
	subl %reg0, %edi	
	movq -152(%rbp), %rsi	

2
.Main.main_176:	
	cdq	

2
	call *%reg0	
	movq $2, %rax	

2
	movq $13, %reg0	
	movq $.string1_l, %reg1	

2
	movq %reg0, %r12	
	cmpl $0, %reg2	

2
	movq 120(%reg0), %reg0	
	movq %rax, %rdi	

2
.Main.main_1:	
	cmpq $Int_vtable, 0(%reg0)	

2
	movq %rsi, %reg1	
	cmpl $0, %reg1d	

2
	movq -40(%rbp), %reg1	
	subl %reg2, %edi	

2
List.isNil:	
	pushq %reg0	

2
	ret	
	.size Main.func2, .-Main.func2	

2
	movq -56(%rbp), %rax	
	movq %rsi, %rcx	

2
	movq $.string9, %r12	
	movq 0(%reg1), %reg2	

2
	movq %reg0, 120(%rax)	
	movq $0, %reg0	

2
	movq -64(%rbp), %rsi	
	call *%rax	

2
	addl %reg0, %eax	
	movq -112(%rbp), %reg3	

2
	movq -88(%rbp), %reg1	
	movq %reg2, %rsi	

2
.string6_l:	
	.string "ERROR: %lld: Exception: division by zero\n"	

2
	movq $17, %reg0	
	movq %reg0, %reg1	

2
	call *%r12	
	jmp .Main.main_15	

2
.Main.main_5:	
	movq $1, %reg0	

2
	negl %reg0	
	movq %r12, %rax	

2
	movq %rax, %rsi	
	movq -168(%rbp), %reg3	

2
	movq %rdi, %rax	
	movq -104(%rbp), %rdi	

2
	movq -152(%rbp), %rax	
	movq %r12, %rdi	

2
	subl %reg0, %reg1	
	movq -104(%rbp), %rax	

2
	cmpq $Object_vtable, 0(%rdi)	
	je .Main.main_2	

2
	subq $16, %rsp	
	pushq %reg1	

2
	movq $10, %reg0	
	movq %reg0, 24(%rax)	

2
	call *%rax	
.Main.main_14:	

2
	movq $0, %reg0	
	movq %reg0, 48(%rbx)	

2
	negl %reg0	
	subl %reg0, %edi	

2
	movq -120(%rbp), %rax	
	movq %reg2, %r8	

2
	.quad 1	
.string1_l:	

2
	movq -160(%rbp), %rsi	
	imull %reg2	

2
	movq $17, %reg0	
	movq $.string3_l, %rdi	

2
	testq $1, %reg0	
	je .Main.main_151	

2
	movq -136(%rbp), %reg1	
	movq $0, %reg2	

2
	movq $19, %rax	
	movq %rax, %reg1	

2
	movq %rdi, %rax	
	movq 0(%reg2), %r12	

2
	movq %r14, %reg1	
	call String.cmp	

2
	call out_error	
.Main.main_40:	

2
	movq 112(%reg0), %reg0	
	movq %rax, %rdi	

2
.string0_l:	
	.string "Cons"	

2
	movq $11, %reg0	
	movq %reg0, 32(%reg1)	

2
	movq %rdi, %rax	
	movq 0(%reg2), %reg3	

2
	movq %r15, %rsi	
	movq %reg2, %rax	

2
	movq -176(%rbp), %rax	
	movq %reg2, %reg3	

2
	movq %rdi, 120(%rax)	
	movq $0, %rdi	

2
	movq %r13, %reg1	
	subl %reg2, %edi	

2
	movq -24(%rbp), %reg1	
	addl %esi, %eax	

2
	jmp .Main.main_38	
.Main.main_37:	

2
	call *%reg0	
	movq -128(%rbp), %rdx	

2
	testq $1, %rax	
	jne .Main.main_2	

2
	movq -104(%rbp), %rsi	
	movq %reg2, %rax	

2
	movq %reg0, %reg1	
	movq -72(%rbp), %reg1	

2
	movq 32(%r12), %r12	
	movq %reg1, %rdi	

2
	.quad 2	
name_Bool_l:	

2
	movq -32(%rbp), %reg1	
	call *%reg2	

2
	addl %edi, %reg1	
	movq %reg2, %rdx	

2
	cmpl %ecx, %reg1d	
	setl %cl	

2
	movq %rbx, %reg1	
	testq $1, %reg1	

2
	movq %reg0, 32(%rbx)	
	movq %rbx, %reg0	

2
	subl %eax, %r10d	
	movq %r10, %rax	

2
	movq $87, %rsi	
	movq $.string4_l, %rdi	

2
	testq $1, %reg0	
	je .Main.main_88	

2
	movq %reg0, %reg1	
	movq 8(%rbx), %reg0	

2
	.quad 1	
name_IO_l:	

2
	movq $name_Bool, %rax	
	movq 0(%rbx), %r12	

2
	movq 48(%r14), %r14	
	movq %r12, %rdi	

2
	movq 8(%rax), %reg1	
	movq 0(%rax), %r12	

2
	call *%r13	
	movq %reg1, 8(%reg2)	

2
.Main.main_42:	
	cdq	

2
	jmp .Main.main_28	
.Main.main_27:	

2
	movq $111, %reg0	
	movq %reg0, 64(%rax)	

2
	addl %edi, %reg1	
	movq %rax, %rbx	

2
	movq -112(%rbp), %rsi	
	movq %reg2, %reg3	

2
	idivl %reg0	
	movq -128(%rbp), %reg2	

2
	movq $9, %reg0	
	movq 0(%reg1), %r12	

2
	movq $.string10, %reg0	
	movq %reg0, %reg1	

2
	movq %rax, %rdi	
	call *%r15	

2
	movq $2, %rax	
	imull %edi	

2
	movq -160(%rbp), %rsi	
	imull %esi	

2
	movq %reg0, %rdx	
	movq %rdx, -184(%rbp)	

2
	movq 8(%rbx), %rax	
	cmpl $0, %reg2	

2
	movq %reg0, %rax	
	movq -96(%rbp), %rcx	

2
	movq -56(%rbp), %rcx	
	addl %ecx, %eax	

2
	movq $26, %rsi	
	movq $.string7_l, %rdi	

2
	testq $1, %reg0	
	je .Main.main_189	

2
	movq %reg0, %r14	
	cmpl $0, %reg2	

2
	setl %reg0l	
	jge .Main.main_3	

2
	call out_error	
.Main.main_190:	

2
	movq 32(%reg0), %reg1	
	call Bazz.doh	

2
	movq $12, %r10	
	movq %r10, %r11	

2
	movq -64(%rbp), %rcx	
	negl %ecx	

2
	movq %rax, %reg1	
	movq -168(%rbp), %rcx	

2
	movq $82, %rsi	
	movq $.string4_l, %reg1	

2
	movq -128(%rbp), %rax	
	cmpl %reg2, %esi	

2
	movq -32(%rbp), %rax	
	cmpl %reg2, %reg3	

2
	cmpq $Int_vtable, 0(%reg0)	
	je .Main.main_7	

2
	movq -8(%rbp), %rdi	
	movq -184(%rbp), %rsi	

2
	movq $100, %reg0	
	movq %reg0, 40(%reg1)	

2
	addl %edi, %reg1	
	movq -160(%rbp), %rdi	

2
	movq -184(%rbp), %reg1	
	call *%reg2	

2
	movq -24(%rbp), %reg1	
	sete %al	

2
	movq -152(%rbp), %reg1	
	imull %edi	

2
	movq -16(%rbp), %reg1	
	movq %r13, %rsi	

2
	movq %reg0, %rax	
	movq $0, %r11	

2
	ret	
	.size Foo.getBar, .-Foo.getBar	

2
	movq -16(%rbp), %reg1	
	movq -24(%rbp), %rbx	

2
	call out_error	
.Main.main_173:	

2
	movq -8(%rbp), %reg1	
	movq -160(%rbp), %reg3	

2
.Main.main_25:	
	cdq	

2
.Main.main_19:	
	cdq	

2
	movq %r14, %rcx	
	call *%reg2	

2
	movq -64(%rbp), %rax	
	subl %reg2, %edi	

2
	movq %reg0, %r13	
	movq %r12, %reg0	

2
	movq -32(%rbp), %rax	
	subl %reg2, %edi	

2
	movq $14, %reg0	
	movq %reg0, %reg1	

2
	movq %reg0, 32(%reg1)	
	movq %reg1, %reg0	

2
ListNode.new:	
	pushq %reg0	

2
	movq -72(%rbp), %reg1	
	movq %reg2, %rax	

2
	movq -8(%rbp), %rdi	
	movq -56(%rbp), %rsi	

2
.Main.main_15:	
	cdq	

2
.Main.main_3:	
	movq 0(%r13), %rax	

2
	movq -176(%rbp), %r9	
	addl %r9d, %reg2	

2
	movq $13, %rax	
	movq %rax, %reg1	

2
	movq %rax, %r13	
	movq 0(%r13), %rax	

2
	movq -32(%rbp), %rdi	
	movq %reg2, %reg3	

2
	testq $1, %rsi	
	je .Main.main_15	

2
	movq $0, %reg0	
	movq %reg0, 136(%rax)	

2
	movq -24(%rbp), %reg1	
	movq -16(%rbp), %reg3	

2
	pushq %r12	
	movq $48, %rdi	

2
	movq %rdi, 152(%reg1)	
	movq $0, %rdi	

2
	subl %reg0d, %reg1	
	movq -64(%rbp), %reg0	

2
.Main.main_5:	
	movq 0(%rax), %reg1	

2
	call *%reg0	
	movq %reg1, %rbx	

2
	testq $1, %reg0	
	je .Main.main_22	

2
	testq $1, %reg0	
	je .Main.main_191	

2
	movq $6, %rax	
	movq 0(%reg1), %r12	

2
	.quad IO.out_string	
	.quad Foo.func	

2
	movq %rax, %rdi	
	movq $3, %rax	

2
	movq -24(%rbp), %rax	
	sete %reg2	

2
	addl %eax, %r9d	
	movq %r9, %rax	

2
	call *%reg0	
	movq $.string7, %reg0	

2
	.globl Cons.isNil	
	.type Cons.isNil, @function	

2
List.insert:	
	pushq %reg0	

2
	movq %r13, %rsi	
	movq %r14, %rdx	

2
.string14:	
	.quad String_vtable	

2
	je .Main.main_4	
	cmpq $Bool_vtable, 0(%reg0)	

2
	movq %reg0, %rax	
	movq -64(%rbp), %rax	

2
	movq 0(%reg0), %r12	
	movq 120(%r12), %r12	

2
	movq %reg0, %rdi	
	movq -56(%rbp), %rsi	

2
	idivl %esi	
	movq -16(%rbp), %rdi	

2
	movq $0, %r13	
	movq $1, %rax	

2
	testq $1, %reg0	
	je .Main.main_100	

2
	je .Main.main_2	
	cmpq $Bool_vtable, 0(%reg0)	

2
	.quad .string6_l	
	.quad 3	

2
	movq 88(%reg0), %reg0	
	movq 48(%rbx), %reg2	

2
	movq -184(%rbp), %reg1	
	subl %eax, %reg3	

2
	pushq %reg0	
	movq $32, %rdi	

2
	call out_error	
.Main.main_75:	

2
	idivl %r9d	
	addl %eax, %reg2d	

2
	call Object.new	
	movq %rax, %r12	

2
	movq %r13, %reg1	
	movq %r14, %rdx	

2
	movq 8(%reg0), %reg1	
	movq %rbx, %reg3	

2
	.quad 42	
ListNode_vtable:	

2
	movq %rbx, %rax	
	movq %r12, %rbx	

2
	.size _main, .-_main	
	.globl Main.getFoo	

2
	movq -48(%rbp), %rax	
	cmpl %reg2, %edi	

2
	je .Main.main_1	
	movq $1, %reg0	

2
	movq 88(%rax), %rax	
	movq 8(%reg1), %rdi	

2
	movq $12, %reg0	
	movq $.string3_l, %reg1	

2
	movq -168(%rbp), %rax	
	cmpl %eax, %esi	

2
	movq -104(%rbp), %rsi	
	negl %reg2	

2
	movq 0(%r12), %rax	
	movq 96(%rax), %rax	

2
	movq %reg0, 160(%rax)	
	movq $0, %reg0	

2
	movq %rdi, %rbx	
	movq 8(%rbx), %rax	

2
	movq 24(%rax), %reg1	
	addl %esi, %reg3	

2
	movq %rax, %rsi	
	call String.cmp	

2
	movq %reg0, %reg1	
	movq -136(%rbp), %reg1	

2
	movq $8, %rsi	
	movq $.string1_l, %rdi	

2
	movq %rax, %rcx	
	movq -88(%rbp), %rax	

2
	movq %rdi, 16(%reg1)	
	movq %rdi, %reg1	

2
	subl %reg0, %reg1	
	movq -152(%rbp), %rax	

2
	pushq %rbx	
	movq $0, %reg1	

2
	movq -32(%rbp), %rax	
	addl %reg2, %eax	

2
	addl %reg0, %reg1	
	movq -160(%rbp), %rdi	

2
	movq %reg0, %rdx	
	movq %rdx, -128(%rbp)	

2
	addl %eax, %r8d	
	movq %reg2, %reg3	

2
	movq $12, %rsi	
	movq $.string3_l, %rdi	

2
	movq -176(%rbp), %rsi	
	call *%rax	

2
	movq %reg0, %reg1	
	cmpl %ecx, %r8d	

2
	movq -136(%rbp), %reg1	
	subl %eax, %reg3	

2
	movq $5, %rbx	
	movq 0(%reg1), %reg2	

2
	subl %esi, %eax	
	movq $12, %reg2	

2
	imull %reg0d	
	subl %reg1, %r9d	

2
	call *%reg0	
	jmp .Main.main_18	

2
	negl %reg0	
	movq 0(%rbx), %r12	

2
	negl %eax	
	addl %eax, %esi	

2
	negl %ecx	
	movq -96(%rbp), %rax	

2
	movq -96(%rbp), %rdi	
	negl %edi	

2
	movq %rdi, %rbx	
	movq $2147483647, %rax	

2
	movq $87, %reg0	
	movq $.string4_l, %rdi	

2
	movq %reg0, %reg1	
	movq $4, %reg2	

2
	.globl List.isNil	
	.type List.isNil, @function	

2
.Main.main_10:	
	movq %r12, %reg1	

2
	movq -32(%rbp), %rbx	
	pushq %rax	

2
	movq 24(%reg0), %reg1	
	movq 0(%reg1), %reg2	

2
	call Int.new	
	movq 8(%rax), %rax	

2
	addl %edi, %eax	
	movq -176(%rbp), %reg3	

2
	movq %reg0, %r12	
	call Foo.new	

2
	negl %eax	
	movq -32(%rbp), %rsi	

2
	negl %ebx	
	movq %reg1, %rax	

2
	movq $74, %reg0	
	movq $.string4_l, %reg1	

2
	call out_error	
.Main.main_62:	

2
	movq $.string7, %r12	
	movq 0(%rbx), %reg2	

2
	je .Main.main_11	
	movq $3, %reg0	

2
	movq $2, %rax	
	movq %rax, 8(%rbx)	

2
	movq %rax, %reg1	
	movq $8, %rax	

2
	movq %reg0, -184(%rbp)	
	movq %reg2, %reg0	

2
	movq -152(%rbp), %rax	
	cmpl %reg2, %reg3	

2
	movq 48(%rbx), %reg1	
	sete %al	

2
	idivl %r10d	
	movq %rax, %reg2	

2
.Main.main_5:	
	movq 8(%reg0), %rdx	

2
	call *%reg0	
	movq 16(%rbx), %reg2	

2
	movq -168(%rbp), %reg1	
	cmpl %esi, %reg3	

2
	addl %reg0, %reg1	
	movq -144(%rbp), %rdi	

2
	movq %r14, %rax	
	subl %eax, %edi	

2
	movq 72(%rax), %rax	
	movq 8(%reg1), %reg2	

2
	movq -16(%rbp), %rdx	
	movq 0(%rdx), %r12	

2
	movq %reg0, %reg1	
	movq -120(%rbp), %rcx	

2
	movq -128(%rbp), %rdi	
	subl %reg2, %eax	

2
	movq %rsi, 8(%reg1)	
	movq %reg2, %reg1	

2
	movq %reg0, %rdi	
	movq %rdi, 24(%rax)	

2
	movq %reg0, 24(%rax)	
	leave	

2
	movq %reg0, %r8	
	movq $12, %r9	

2
Cons.new:	
	pushq %rbp	

2
	movq -168(%rbp), %rax	
	cmpl %reg2, %esi	

2
	movq %reg0, 8(%reg1)	
	jmp .Main.main_4	

2
	call *%r12	
	testq $1, %reg1	

2
	ret	
	.size Cons.new, .-Cons.new	

2
	movq -184(%rbp), %rax	
	subl %reg2, %eax	

2
	movq %reg0, %rsi	
	movq -32(%rbp), %reg3	

2
	movq %r12, %rax	
	imull %esi	

2
	je .Main.main_4	
	cmpq $IO_vtable, 0(%reg0)	

2
	movq %reg0, %rax	
	movq -64(%rbp), %rdi	

2
	movq -120(%rbp), %reg1	
	imull %esi	

2
	movq 112(%reg0), %reg0	
	movq %rax, %reg2	

2
	movq $40, %reg0	
	call getmem	

2
	movq $133, %rsi	
	movq $.string2_l, %rdi	

2
	movq %reg0, %r9	
	subl %r9d, %reg2	

2
	movq -160(%rbp), %rcx	
	imull %reg2	

2
	negl %eax	
	movq 0(%rbx), %r12	

2
	idivl %r8d	
	subl %reg1, %ecx	

2
	je .Main.main_8	
	movq $3, %rsi	

2
	movq -88(%rbp), %rax	
	cmpl %eax, %esi	

2
	movq 48(%reg0), %reg1	
	sete %al	

2
	movq $17, %rsi	
	movq $.string3_l, %reg1	

2
	addl %ecx, %reg1	
	movq %reg2, 8(%reg3)	

2
	negl %reg0	
	addl %reg0, %ecx	

2
	movq %rsi, %rdi	
	movq %rdi, 24(%reg2)	

2
	movq %rax, %reg1	
	movq $.string8, %reg2	

2
	movq %r12, %reg1	
	testq $1, %reg1	

2
	negl %ebx	
	movq %r11, %rax	

2
	movq %reg0, %reg1	
	movq $20, %reg0	

2
	movq %reg0, %rax	
	movq -128(%rbp), %reg0	

2
	movq %rdi, 88(%reg1)	
	movq $0, %rdi	

2
	movq %reg0, 48(%reg1)	
	cmpl $0, 32(%reg1)	

2
	call out_error	
.Main.main_42:	

2
	movq -152(%rbp), %reg1	
	addl %esi, %eax	

2
	call String.substr	
	movq 0(%rbx), %r13	

2
	movq %r13, %rsi	
	movq %r14, %reg3	

2
	movq %reg0, %reg1	
	movq %reg1, -96(%rbp)	

2
	movq %reg0, %rbx	
	movq $.string10, %r12	

2
	movq 8(%rax), %rbx	
	movq 0(%rax), %r12	

2
	negl %reg0	
	movq -16(%rbp), %reg2	

2
	movq $0, %rdi	
	movq %rdi, 88(%reg1)	

2
	movq -144(%rbp), %reg1	
	movq %reg2, %rcx	

2
	movq %reg0, %r12	
	call Bool.new	

2
	movq 0(%reg0), %r14	
	movq 80(%r14), %r14	

2
.Main.main_64:	
	cdq	

2
	jmp .Main.main_26	
.Main.main_25:	

2
.Main.main_1:	
	movq 0(%reg0), %r15	

2
	movq %rdi, 184(%reg1)	
	movq $0, %rdi	

2
	movq %rdi, %rax	
	movq 24(%rax), %rax	

2
	movq %reg0, %reg1	
	movq -32(%rbp), %rsi	

2
	movq %rdi, %reg1	
	movq $1, %rdi	

2
	jmp .Main.main_44	
.Main.main_43:	

2
	call out_error	
.Main.main_181:	

2
	cmpq $IO_vtable, 0(%reg0)	
	je .Main.main_4	

2
	testq $1, %rsi	
	je .Main.main_21	

2
	movq %reg0, %rax	
	movq %rax, -16(%rbp)	

2
.Main.main_55:	
	movq %reg0, %reg1	

2
	movq 96(%rbx), %rbx	
	movq %reg1, %reg2	

2
	movq -16(%rbp), %rdi	
	subl %edi, %reg3	

2
	movq %rbx, %reg1	
	cmpl %reg2, %edi	

2
	addl %edi, %eax	
	movq %rax, %rbx	

2
	movq 24(%reg0), %rax	
	movq 24(%reg0), %rdi	

2
	movq $0, %reg0	
	movq %rdi, %reg2	

2
	call Bazz.doh	
	movq %rax, %r12	

2
	setle %reg0l	
	jg .Main.main_11	

2
	movq %reg0, %rax	
	movq -32(%rbp), %rax	

2
.Main.main_61:	
	cdq	

2
	movq %reg0, %reg1	
	movq %r13, %r8	

2
	movq 96(%r13), %r13	
	movq %rax, %reg2	

2
	movq %reg0, %r14	
	cmpl $0, -16(%rbp)	

2
	movq $1, %reg0	
	movq $1, %r13	

2
.Main.main_3:	
	movq $1, %r12	

2
	cmpl $0, %r14d	
	movq %r14, %reg1	

2
	movq -56(%rbp), %rax	
	movq %rsi, %reg3	

2
	movq -160(%rbp), %rsi	
	call *%reg2	

2
	idivl %reg0d	
	subl %reg1, %r9d	

2
	call String.new	
	movq 0(%reg0), %reg1	

2
	movq $0, %reg0	
	movq %rax, %rdi	

2
.Main.main_22:	
	cdq	

2
	movq %r14, %rax	
	movq -152(%rbp), %reg3	

2
	movq %rdi, %rax	
	movq -64(%rbp), %rdi	

2
	movq $3, %reg0	
	movq $4, %rsi	

2
	cmpl %ecx, %reg1d	
	setl %reg2	

2
	movq %reg0, %reg1	
	movq $6, %reg0	

2
	movq %reg0, %r12	
	movq $1, %reg0	

2
	je .Main.main_13	
	movq $3, %rsi	

2
	idivl %reg0	
	addl %eax, %reg2d	

2
	testq $1, %rax	
	je .Main.main_37	

2
	movq -16(%rbp), %reg1	
	imull %reg1d	

2
	movq %r13, %reg1	
	imull %edi	

2
	movq 8(%reg0), %reg1	
	movq %reg2, %rdi	

2
	movq -160(%rbp), %rsi	
	call *%rax	

2
	testq $1, %reg0	
	je .Main.main_107	

2
	movq -112(%rbp), %rax	
	movq %reg2, %rdi	

2
	movq %reg0, %reg1	
	movq %rbx, %rax	

2
	movq 8(%rdi), %rax	
	movq 8(%rdi), %rdi	

2
	movq 8(%rax), %reg1	
	sete %reg2l	

2
.Main.main_45:	
	cdq	

2
	movq %rax, %r12	
	cmpl $0, %reg2	

2
	movq -144(%rbp), %rax	
	addl %reg2, %ecx	

2
	negl %reg0	
	addl %reg0, %edi	

2
	idivl %reg0	
	movq %reg1, %r13	

2
	movq 8(%reg0), %rax	
	movq 8(%reg0), %reg0	

2
	movq -168(%rbp), %reg1	
	addl %reg2, %esi	

2
	movq %r13, %rsi	
	call *%r14	

2
	imull %r10d	
	subl %reg1, %reg2d	

2
	movq %rdi, 56(%reg1)	
	movq $111, %rdi	

2
.Main.main_3:	
	movq $5, %rdi	

2
	movq %rbx, %rax	
	cmpl %reg2, %edi	

2
	jmp .Main.main_8	
.Main.main_8:	

2
	movq $76, %rsi	
	movq $.string4_l, %rdi	

2
	movq 136(%reg0), %reg0	
	movq %rax, %rdi	

2
	movq %rdi, %rsi	
	movq $1, %rdi	

2
	movq %rdi, %reg1	
	movq 0(%rbx), %r12	

2
	movq %reg0, %rax	
	movq -16(%rbp), %rsi	

2
	movq $12, %reg0	
	movq -160(%rbp), %rax	

2
	testq $1, %r8	
	je .Main.main_186	

2
	negl %reg0	
	movq -40(%rbp), %reg2	

2
	movq $16, %reg0	
	movq %reg0, %reg1	

2
	testq $1, %rcx	
	je .Main.main_6	

2
	movq $.string7, %reg0	
	movq %reg0, %reg1	

2
	movq %rdi, %reg1	
	movq -72(%rbp), %rdi	

2
	movq -184(%rbp), %reg1	
	imull %reg2	

2
	subl %reg0, %r8d	
	movq %reg2, %reg3	

2
	movq %rax, %rbx	
	negl %reg2	

2
	idivl %r8d	
	addl %eax, %ecx	

2
.Main.main_175:	
	cdq	

2
	movq %rax, %r12	
	cmpl $0, 48(%reg2)	

2
	.string "2"	
.string9:	

2
	movq 16(%rbx), %rax	
	cmpl %edi, %reg3	

2
	movq 88(%r13), %r13	
	movq %rbx, %rdi	

2
	movq $name_Bool, %reg0	
	movq 0(%reg1), %reg2	

2
	movq %reg0, %rsi	
	movq -168(%rbp), %rcx	

2
	addl %reg0, %reg1	
	movq %r14, %reg3	

2
	movq -80(%rbp), %reg1	
	movq %reg2, %r8	

2
.Main.main_12:	
	movq 0(%rax), %reg1	

2
	movq -152(%rbp), %rax	
	cmpl %eax, %reg3	

2
	testq $1, %rax	
	je .Main.main_12	

2
	movq $.string7, %reg0	
	movq 0(%rbx), %rax	

2
	movq %reg0, %reg1	
	movq %reg1, 16(%rax)	

2
	subl %eax, %reg1	
	movq $12, %rcx	

2
	negl %eax	
	movq -152(%rbp), %reg2	

2
	subl %reg0, %eax	
	movq -136(%rbp), %rdi	

2
	movq %rdi, %rax	
	movq -72(%rbp), %rax	

2
	movq -176(%rbp), %rsi	
	imull %esi	

2
	movq $13, %rsi	
	movq $.string1_l, %reg1	

2
	movq -136(%rbp), %rsi	
	movq %reg2, %reg3	

2
	movq -40(%rbp), %rax	
	movq -48(%rbp), %reg3	

2
	movq $0, %rax	
	movq %rax, 56(%reg1)	

2
	movq $8, %rax	
	movq %rax, %reg1	

2
	movq -48(%rbp), %reg1	
	addl %eax, %reg3	

2
	movq $13, %reg0	
	movq $.string1_l, %rdi	

2
	movq $10, %rsi	
	movq $.string3_l, %reg1	

2
	.quad 1	
name_Object_l:	

2
	movq %r15, %reg1	
	movq -56(%rbp), %reg3	

2
	movq $.string8, %rax	
	movq %rax, %rdi	

2
	movq %reg0, %reg1	
	movq %r9, %r10	

2
	movq %reg0, %rdi	
	movq $2, %rax	

2
	movq %rax, %rdi	
	movq 8(%rbx), %rax	

2
	pushq %r13	
	movq %reg1, %r13	

2
	call out_error	
.Main.main_67:	

2
	addl %reg0, %esi	
	addl %esi, %reg2	

2
	call out_error	
.Main.main_77:	

2
	movq $12, %reg0	
	movq -32(%rbp), %rax	

2
	movq $0, %reg0	
	call String.new	

2
	movq %rax, %rcx	
	movq -112(%rbp), %rax	

2
	movq %rdi, 96(%rax)	
	movq $0, %rdi	

2
	movq %rax, %rdi	
	movq -144(%rbp), %rax	

2
	movq $9, %rax	
	movq 0(%rbx), %r12	

2
	movq %reg0, %reg1	
	movq %reg1, -184(%rbp)	

2
	movq -96(%rbp), %rax	
	movq %reg2, %r8	

2
	movq %rax, %reg1	
	movq $13, %rax	

2
	movq $name_Bool, %rax	
	movq 0(%reg1), %reg2	

2
	movq %rsi, 8(%rax)	
	movq %reg2, %rax	

2
	.quad 0	
	.quad List.new	

2
	movq -64(%rbp), %reg1	
	call *%rax	

2
	movq %rax, %reg1	
	call String.cmp	

2
	movq %rax, %reg1	
	movq 0(%r13), %rax	

2
	imull %reg0	
	movq -104(%rbp), %rcx	

2
	idivl %reg0d	
	subl %eax, %r10d	

2
	call *%reg0	
	movq $.string8, %rax	

2
	movq -56(%rbp), %reg1	
	subl %reg2, %eax	

2
	ret	
	.size List.isNil, .-List.isNil	

2
	subl %reg0, %reg1	
	movq %reg2, %r13	

2
	idivl %edi	
	movq %rax, %rdi	

2
	movq %r12, %rax	
	movq %reg2, %r12	

2
	movq %rdi, 40(%rax)	
	movq $101, %rdi	

2
	testq $1, %reg0	
	je .Main.main_175	

2
	call String.new	
	movq 0(%rbx), %r12	

2
	movq 48(%reg0), %rdi	
	call *%rax	

2
.Main.main_9:	
	movq %reg0, %reg1	

2
.string8_l:	
	.string "1"	

2
	movq $1, %rax	
	movq %rbx, %reg2	

2
	imull %r9d	
	addl %eax, %r8d	

2
	movq 80(%r14), %r14	
	movq %reg1, %rdi	

2
.List.cons_1:	
	movq 0(%rax), %reg1	

2
.Main.main_68:	
	cdq	

2
	movq %rdi, %reg1	
	movq $11, %reg2	

2
	movq $0, %rdi	
	movq %reg1, %reg2	

2
	.quad String_vtable	
	.quad .string15_l	

2
	movq %reg0, %reg1	
	movq %r14, %rcx	

2
.Main.main_2:	
	movq $1, %rax	

2
	movq $0, %reg0	
	movq %reg0, 128(%reg1)	

2
	movq %rsi, %reg1	
	movq $2, %reg2	

2
	movq 96(%r13), %r13	
	movq %rax, %rdi	

2
	movq $2, %rax	
	movq %reg1, %rdi	

2
	subl %reg0, %eax	
	movq -136(%rbp), %reg3	

2
	movq $5, %reg0	
	movq 0(%reg1), %r14	

2
	movq $4, %rsi	
	movq $.string4_l, %rdi	

2
	movq -184(%rbp), %rax	
	addl %eax, %edi	

2
	movq -120(%rbp), %rdi	
	addl %reg2, %eax	

2
	addl %edi, %reg1	
	movq -176(%rbp), %reg3	

2
	movq %rax, %rcx	
	movq %reg2, %reg3	

2
	movq -56(%rbp), %reg1	
	call *%reg2	

2
.Main.main_38:	
	cdq	

2
	movq %reg0, %r9	
	subl %r9d, %eax	

2
	addl %ecx, %reg1	
	movq %rsi, 8(%reg3)	

2
	movq %reg0, 136(%rax)	
	movq $0, %reg0	

2
	movq -128(%rbp), %rdi	
	subl %edi, %eax	

2
	movq -40(%rbp), %reg1	
	movq %reg2, %rdi	

2
	idivl %reg0	
	movq 0(%reg1), %reg2	

2
	.globl Cons.init	
	.type Cons.init, @function	

2
	movq -40(%rbp), %rdx	
	movq %rdx, %reg2	

2
	movq $110, %rdi	
	movq %rdi, 56(%reg1)	

2
	movq $0, %reg0	
	movq %reg0, 56(%rbx)	

2
	negl %ecx	
	movq $12, %reg1	

2
	movq 8(%rbx), %reg1	
	cmpl %reg2, %reg3	

2
	movq %reg0, %r14	
	call Bool.new	

2
	movq $5, %rax	
	movq 0(%rbx), %r14	

2
	movq %rax, %rsi	
	movq %r14, %rdx	

2
	movq %reg0, %reg1	
	movq -168(%rbp), %rcx	

2
.Main.main_10:	
	movq $5, %rbx	

2
	movq %rdi, 144(%reg1)	
	movq $0, %rdi	

2
	movq %rax, %r12	
	cmpl $0, 48(%rbx)	

2
	movq -104(%rbp), %reg1	
	subl %reg2, %reg3	

2
	movq -64(%rbp), %rdi	
	movq %reg2, %rax	

2
	.size _main, .-_main	
	.globl List.isNil	

2
	pushq %r12	
	movq $48, %reg1	

2
	subl %reg0, %eax	
	movq $12, %rsi	

2
	imull %ecx	
	movq -88(%rbp), %reg2	

2
	call *%rax	
	movq $12, %rdi	

2
	.quad .string0	
	.quad 4	

2
	movq 64(%reg0), %reg0	
	movq -16(%rbp), %rdi	

2
	movq %rdi, %rbx	
	movq $5, %rax	

2
	movq $20, %rax	
	movq %rax, %r12	

2
	.size Main.main, .-Main.main	
	.globl Main.printY	

2
	movq %rax, %rdi	
	movq $4, %rax	

2
	.globl ListNode.new	
	.type ListNode.new, @function	

2
	movq %r14, %reg1	
	subl %eax, %edi	

2
	movq %r12, %rdi	
	subl %reg2, %reg3	

2
.Main.main_33:	
	cdq	

2
	addl %ecx, %esi	
	movq %reg2, 8(%reg3)	

2
	imull %r9d	
	addl %reg1, %r8d	

2
	movq %rax, %reg1	
	movq -136(%rbp), %rsi	

2
	movq %reg0, %reg1	
	movq $2147483647, %rax	

2
	call *%rax	
	movq -40(%rbp), %reg2	

2
	call *%reg0	
	jmp .Main.main_22	

2
	movq %r13, %reg1	
	sete %dil	

2
	call Bazz.doh	
	movq %rax, %reg1	

2
	movq %reg0, %r12	
	movq %reg2, %reg0	

2
	movq $0, %rdi	
	movq %rdi, 176(%reg1)	

2
	.globl Foo.setBar	
	.type Foo.setBar, @function	

2
.Main.main_3:	
	popq %reg0	

2
	movq -40(%rbp), %rax	
	movq %r8, %r9	

2
.Main.main_10:	
	movq 0(%rbx), %rax	

2
	movq %reg0, -8(%rbp)	
	call Foo.new	

2
.Main.main_9:	
	cdq	

2
	.type Foo.setBar, @function	
Foo.setBar:	

2
	movq %reg0, %reg1	
	movq -64(%rbp), %reg1	

2
	movq %r12, 8(%reg1)	
	movq 0(%rbx), %r12	

2
	subl %reg0, %reg1	
	movq $0, %reg2	

2
	cmpq $Bool_vtable, 0(%rax)	
	je .Main.main_1	

2
	movq 48(%rbx), %rdx	
	movq 0(%rdx), %rax	

2
	addl %reg0, %reg1	
	movq %reg2, 8(%reg3)	

2
	.quad 4	
	.quad Main.new	

2
	movq $.string6, %r12	
	movq 0(%reg1), %rax	

2
	movq $.string7, %r13	
	movq -8(%rbp), %rdx	

2
	.type List.isNil, @function	
List.isNil:	

2
	negl %eax	
	movq 0(%reg1), %reg2	

2
	movq 16(%reg0), %rax	
	cmpl %edi, %reg3	

2
	negl %esi	
	addl %esi, %eax	

2
	addl %reg0, %eax	
	movq -120(%rbp), %reg3	

2
	.string "Yaz"	
.string0:	

2
	je .Main.main_3	
	cmpq $Object_vtable, 0(%rdi)	

2
	testq $1, %reg0	
	je .Main.main_42	

2
	movq %reg0, %rsi	
	movq -176(%rbp), %reg0	

2
	movq 96(%rbx), %rbx	
	movq %reg1, %rdi	

2
	movq $1, %rdi	
	cmpl %reg1, %esi	

2
	movq -160(%rbp), %reg1	
	movq %reg2, %r9	

2
	movq -152(%rbp), %rax	
	cmpl %reg2, %esi	

2
	testq $1, %reg0	
	je .Main.main_186	

2
	cmpl $0, 48(%rbx)	
	movq 48(%rbx), %rax	

2
	subl %reg0, %eax	
	movq -128(%rbp), %reg3	

2
	movq %r13, %reg1	
	movq %reg2, %rcx	

2
	je .Main.main_12	
	movq $3, %reg0	

2
.Main.main_1:	
	movq $4, %reg0	

2
	subl %edi, %esi	
	movq %reg2, %reg3	

2
	movq 64(%rax), %rax	
	movq %r13, %rdi	

2
	imull %edi	
	movq %reg1, %r13	

2
	movq $9, %rax	
	movq 0(%reg1), %reg2	

2
	movq -48(%rbp), %reg1	
	subl %eax, %edi	

2
.Main.main_10:	
	movq 0(%rbx), %reg1	

2
	idivl %reg0	
	movq 0(%rbx), %reg2	

2
	movq $0, %reg0	
	movq %reg0, 128(%rax)	

2
	setl %reg0	
	testq $1, %rcx	

2
	movq -160(%rbp), %rdi	
	subl %reg2, %eax	

2
	movq %rax, %reg1	
	negl %reg1	

2
	call Int.new	
	movq %r13, 8(%reg1)	

2
	movq $1, %reg0	
	movq %reg0, 16(%rax)	

2
	movq -152(%rbp), %rdi	
	addl %reg2, %eax	

2
	movq $0, %rax	
	movq $1, %reg1	

2
	movq -168(%rbp), %reg1	
	cmpl %eax, %esi	

2
	movq %rdi, %r12	
	pushq %reg2	

2
	movq %reg0, 152(%rax)	
	movq $0, %reg0	

2
	movq %reg0, %rax	
	movq 0(%rbx), %reg3	

2
	movq -152(%rbp), %reg1	
	addl %edi, %reg3	

2
	movq %reg0, %reg1	
	movq %reg1, 40(%reg2)	

2
	movq 48(%reg0), %reg0	
	movq -24(%rbp), %rdi	

2
	movq %reg0, %reg1	
	movq $11, %reg2	

2
	movq %rax, 32(%rbx)	
	movq %rbx, %rax	

2
	movq %reg0, %rax	
	subl %eax, %r8d	

2
	testq $1, %rdi	
	je .Main.main_18	

2
	movq $40, %rdi	
	call getmem	

2
	movq 48(%reg0), %reg1	
	movq 0(%reg1), %reg2	

2
.Main.main_179:	
	cdq	

2
.Main.main_7:	
	movq 0(%r12), %rax	

2
	movq -136(%rbp), %reg1	
	imull %esi	

2
	movq %reg0, %reg1	
	movq -160(%rbp), %reg1	

2
	movq %rsi, %rdi	
	movq %rdi, %reg2	

2
	.globl Main.func2	
	.type Main.func2, @function	

2
	movq %r13, %r14	
	movq $0, %r13	

2
	movq $2, %rdi	
	negl %reg1	

2
	addl %ecx, %reg1	
	movq %reg2, 8(%rax)	

2
	movq 8(%rax), %reg1	
	movq %reg2, %rsi	

2
	subl %edi, %eax	
	movq %reg2, %rdx	

2
	subl %reg0, %esi	
	movq $12, %rcx	

2
	movq 16(%reg0), %rdi	
	call *%r12	

2
	movq -152(%rbp), %reg1	
	imull %ecx	

2
	movq %reg0, %rdi	
	movq $2, %reg2	

2
	movq -64(%rbp), %reg1	
	movq %reg2, %rax	

2
.Main.main_189:	
	cdq	

2
Main.func2:	
	pushq %reg0	

2
	movq -48(%rbp), %rax	
	movq -16(%rbp), %reg3	

2
	idivl %r11d	
	subl %reg1, %r9d	

2
.Main.main_65:	
	cdq	

2
	imull %edi	
	movq %rax, %r13	

2
	movq %reg0, %rax	
	movq -136(%rbp), %rax	

2
	movq %r14, %reg1	
	addl %ecx, %reg3	

2
	movq %reg0, %reg1	
	movq -32(%rbp), %rbx	

2
	movq 8(%rbx), %reg1	
	cmpl %edi, %reg3	

2
	movq 0(%rax), %r13	
	movq 80(%r13), %r13	

2
	movq $156, %rsi	
	movq $.string5_l, %rdi	

2
	setl %cl	
	testq $1, %reg1	

2
	movq %rdi, %rbx	
	movq $11, %reg2	

2
	call out_error	
.Main.main_57:	

2
.Main.main_2:	
	movq 0(%reg0), %r14	

2
	subl %edi, %reg1	
	movq -136(%rbp), %rdi	

2
	call *%reg0	
.Main.main_18:	

2
	movq %reg0, %rsi	
	movq -96(%rbp), %reg3	

2
	call *%reg0	
.Main.main_22:	

2
	movq -40(%rbp), %reg1	
	subl %eax, %reg3	

2
	movq -128(%rbp), %rax	
	cmpl %reg2, %reg3	

2
	idivl %reg0	
	movq 0(%rbx), %r12	

2
	subl %edi, %eax	
	movq -152(%rbp), %rdi	

2
	movq -168(%rbp), %rsi	
	cmpl %esi, %eax	

2
	movq -184(%rbp), %rcx	
	negl %ecx	

2
.Main.main_54:	
	cdq	

2
	movq %reg0, %reg1	
	movq -40(%rbp), %reg1	

2
	movq -32(%rbp), %rdx	
	movq %rdx, %reg2	

2
	movq $.string8, %r12	
	movq %reg1, %rdx	

2
	movq %rax, %r13	
	movq %reg2, %rax	

2
	movq -24(%rbp), %rsi	
	call *%rax	

2
	movq $0, %rsi	
	movq $.string5_l, %rdi	

2
	movq 8(%reg0), %rsi	
	addl %reg2, %reg3	

2
	movq %r13, %rsi	
	movq %r12, %reg3	

2
	movq %reg0, %reg1	
	movq %rdx, %reg3	

2
	movq %rax, %rdi	
	movq -72(%rbp), %rax	

2
	addl %eax, %r9d	
	movq %r9, %reg2	

2
	movq %reg0, %reg1	
	movq -24(%rbp), %rcx	

2
	movq 0(%r12), %rax	
	movq 80(%rax), %rax	

2
	idivl %r9d	
	addl %eax, %r8d	

2
.Main.main_1:	
	movq %reg0, %rax	

2
	movq -104(%rbp), %rsi	
	cmpl %reg2, %eax	

2
	movq -24(%rbp), %rax	
	addl %reg2, %edi	

2
	movq 24(%rbx), %rax	
	movq 24(%rbx), %rdi	

2
	call *%rax	
	jmp .Main.funccase_5	

2
	call *%reg0	
	jmp .Main.new_4	

2
	movq %rdi, %reg1	
	movq %rsi, %rax	

2
	movq 48(%reg0), %reg0	
	movq 8(%reg1), %reg2	

2
	movq 24(%rbx), %reg1	
	movq 24(%rbx), %rdi	

2
	movq $.string6, %reg0	
	movq 0(%rax), %rbx	

2
	movq -72(%rbp), %rax	
	movq $0, %reg2	

2
	movq $0, %reg0	
	movq %reg0, 96(%reg1)	

2
	movq %reg0, %rsi	
	movq -72(%rbp), %reg0	

2
	movq %rdi, %reg1	
	cmpl %reg2, %r8d	

2
	movq %reg0, 112(%rax)	
	movq $0, %reg0	

2
	movq -128(%rbp), %reg1	
	subl %reg2, %eax	

2
	movq -128(%rbp), %rdi	
	cmpl %reg2, %eax	

2
	addl %reg0, %esi	
	movq %reg2, 8(%rax)	

2
	jmp .Main.func_2	
.Main.func_1:	

2
	imull %reg0d	
	subl %eax, %ecx	

2
	movq 32(%reg0), %reg0	
	movq %rax, %reg2	

2
	movq %rsi, %reg1	
	movq $1, %reg2	

2
	movq %reg0, 16(%rax)	
	movq %reg0, %rax	

2
	movq %rdi, %reg1	
	movq $2147483647, %reg2	

2
	movq %reg0, %reg1	
	movq -24(%rbp), %rbx	

2
	subl %reg0, %reg1	
	movq -112(%rbp), %reg3	

2
	movq 80(%r12), %r12	
	movq %rax, %rdi	

2
.Main.main_81:	
	cdq	

2
	movq -48(%rbp), %rax	
	movq %reg2, %r8	

2
	movq 16(%reg0), %reg1	
	cmpl %reg2, %edi	

2
	jg .Main.main_4	
	movq $1, %reg0	

2
	movq %reg0, %r8	
	movq %rdi, %rcx	

2
	movq 88(%rax), %rax	
	movq 8(%rbx), %reg2	

2
	movq -48(%rbp), %rax	
	negl %reg2	

2
	movq %rsi, %rdi	
	movq %rdi, 24(%rax)	

2
	negl %reg0d	
	addl %reg0d, %reg1	

2
	call out_error	
.Main.main_187:	

2
	movq %reg0, %reg1	
	subq $16, %reg0	

2
	movq $0, %r12	
	call DicNode.new	

2
	cmpq $Int_vtable, 0(%reg0)	
	je .Main.main_2	

2
	movq $10, %reg0	
	movq $.string3_l, %reg1	

2
	addl %edi, %reg1	
	movq -120(%rbp), %reg3	

2
	movq -48(%rbp), %reg1	
	subl %reg2, %edi	

2
	movq %rax, %rdi	
	movq $5, %rax	

2
	je .Main.main_17	
	movq $3, %rsi	

2
	movq %rsi, %reg1	
	testq $1, %reg1	

2
	movq 88(%rax), %rax	
	movq %r13, %reg2	

2
	movq -104(%rbp), %rsi	
	cmpl %reg2, %reg3	

2
	subl %eax, %reg1	
	movq -112(%rbp), %reg3	

2
	je .Main.main_11	
	movq $3, %rsi	

2
	.globl List.insert	
	.type List.insert, @function	

2
	movq %rbx, %rsi	
	movq %r13, %reg3	

2
	movq -48(%rbp), %rsi	
	cmpl %reg2, %eax	

2
	movq -8(%rbp), %rdi	
	movq -16(%rbp), %rsi	

2
	movq %reg0, -24(%rbp)	
	negl -24(%rbp)	

2
	.string "\\n"	
.string9:	

2
	movq %reg0, %rdi	
	call Object.copy	

2
	imull %ecx	
	movq -120(%rbp), %rcx	

2
	movq %reg0, %rcx	
	movq -184(%rbp), %reg0	

2
	idivl %ebx	
	addl %reg1, %reg2d	

2
	subl %reg0, %ecx	
	movq %r12, %rax	

2
	movq $2, %rax	
	addl %reg1, %reg2	

2
	movq $1, %reg0	
	movq 16(%rax), %reg2	

2
	movq $Cons_vtable, 0(%reg0)	
	movq $0, %rdi	

2
	movq $87, %reg0	
	movq $.string4_l, %reg1	

2
	movq %rsi, %rdi	
	testq $1, %rdi	

2
	movq %reg0, -8(%rbp)	
	movq %reg2, %rbx	

2
	movq $127, %reg0	
	movq $.string2_l, %rdi	

2
	movq 64(%rax), %rax	
	movq 8(%rbx), %rdi	

2
	movq 88(%reg0), %reg0	
	movq %r13, %reg2	

2
	subl %reg0, %esi	
	movq %rsi, %rdi	

2
	movq -24(%rbp), %rax	
	addl %esi, %eax	

2
	movq $9, %reg0	
	movq %reg0, %reg1	

2
	.quad .string8_l	
	.quad 40	

2
	cmpl $0, 48(%reg0)	
	movq 48(%reg0), %rax	

2
	movq 24(%rbx), %rax	
	movq %rax, 8(%rbx)	

2
	addl %reg0, %r9d	
	movq %r9, %reg2	

2
	movq $11, %rax	
	movq %rax, %reg1	

2
	movq 80(%r12), %r12	
	movq %reg1, %reg2	

2
	movq %rax, -24(%rbp)	
	negl -24(%rbp)	

2
	movq 48(%reg0), %rdx	
	movq 0(%rdx), %rax	

2
	movq -64(%rbp), %r8	
	imull %r8d	

2
	movq $0, %rdi	
	movq %rdi, 160(%reg1)	

2
	movq 56(%reg0), %reg0	
	movq 8(%reg1), %rdi	

2
	movq 16(%reg0), %reg1	
	movq 0(%reg1), %r12	

2
	movq $12, %rcx	
	movq -112(%rbp), %rax	

2
	call *%r12	
	testq $1, %rax	

2
	movq %r13, %reg1	
	movq 0(%reg2), %rax	

2
.Main.main_80:	
	cdq	

2
.Main.main_51:	
	cdq	

2
	movq $.string7, %r13	
	movq %reg1, %rdx	

2
	movq $0, %reg0	
	movq %reg0, 152(%reg1)	

2
	movq %rax, %reg1	
	movq %reg1, %r12	

2
	movq $0, %reg0	
	movq %r12, %r13	

2
.string15:	
	.quad String_vtable	

2
	cmpq $Main_vtable, 0(%rdi)	
	je .Main.main_2	

2
	movq %reg0, %reg1	
	movq -16(%rbp), %rax	

2
	movq -24(%rbp), %rax	
	addl %reg2, %eax	

2
	movq -120(%rbp), %rax	
	movq %rcx, %reg3	

2
	addl %reg0, %eax	
	movq %r13, %rdi	

2
	movq %r14, 8(%reg1)	
	movq 0(%rbx), %r14	

2
.Main.main_184:	
	cdq	

2
	movq %reg0, 8(%reg1)	
	movq 0(%reg2), %r14	

2
	movq $0, %reg0	
	call Bool.new	

2
	movq %rcx, %rax	
	movq %r14, %rcx	

2
	movq %rcx, %rax	
	negl %reg2	

2
	movq %reg0, %r10	
	addl %r10d, %reg2	

2
	movq %rax, 8(%rbx)	
	movq $1, %rax	

2
	movq $1, %reg0	
	cmpl %edi, %esi	

2
	movq -64(%rbp), %rdi	
	movq %reg2, %reg3	

2
	movq 48(%reg0), %rdx	
	movq 0(%rdx), %reg2	

2
	movq -32(%rbp), %rsi	
	movq %reg2, %rax	

2
	movq -136(%rbp), %reg1	
	subl %edi, %reg3	

2
	idivl %reg0d	
	addl %eax, %r8d	

2
	.type Yaz.new, @function	
Yaz.new:	

2
.Main.main_186:	
	cdq	

2
	movq %rbx, %rax	
	subl %reg2, %edi	

2
	movq $0, %reg0	
	movq %reg0, 160(%reg1)	

2
	je .Main.main_7	
	movq $3, %reg0	

2
	movq -16(%rbp), %rdi	
	subl %eax, %reg3	

2
	imull %reg0d	
	subl %eax, %r9d	

2
.Main.main_2:	
	movq 8(%rbx), %reg1	

2
	movq -88(%rbp), %reg1	
	subl %edi, %reg3	

2
	movq $5, %rbx	
	movq 0(%reg1), %r12	

2
	movq -48(%rbp), %reg1	
	movq %reg2, %r8	

2
	subl %edi, %eax	
	movq -80(%rbp), %reg3	

2
	call *%reg0	
	movq 0(%reg1), %r13	

2
	movq %rsi, %reg1	
	movq %reg2, %rcx	

2
	movq -56(%rbp), %reg1	
	addl %ecx, %reg3	

2
	call *%reg0	
	jmp .Main.main_15	

2
	imull %ecx	
	movq %r12, %reg2	

2
	movq -104(%rbp), %rsi	
	negl %esi	

2
	movq %reg0, %r12	
	movq 8(%rbx), %rax	

2
	movq %r13, %reg1	
	cmpl %esi, %reg3	

2
	movq -32(%rbp), %reg1	
	imull %reg1d	

2
	setle %dil	
	jg .Main.main_11	

2
	movq $name_Bool, %reg0	
	movq 0(%reg1), %r12	

2
	movq -112(%rbp), %rax	
	addl %reg2, %eax	

2
	.quad String.substr	
Yaz_vtable:	

2
	subl %edi, %reg1	
	movq -8(%rbp), %rdx	

2
	movq %r14, %rax	
	subl %reg2, %ecx	

2
	movq %reg0, 144(%rax)	
	movq $0, %reg0	

2
	negl %reg0	
	movq -32(%rbp), %rsi	

2
	movq -32(%rbp), %rax	
	cmpl %reg2, %esi	

2
	imull %r9d	
	subl %reg1, %reg2d	

2
	.quad Main.func	
	.quad Main.func2	

2
	movq -128(%rbp), %reg1	
	movq %reg1, %reg2	

2
	call out_error	
.Main.main_65:	

2
	movq 72(%r12), %r12	
	movq 8(%rbx), %reg2	

2
	call out_error	
.Main.main_71:	

2
	movq -64(%rbp), %rcx	
	negl %reg2	

2
	movq 0(%rax), %reg1	
	movq 136(%reg1), %reg1	

2
	subl %edi, %eax	
	movq -136(%rbp), %reg3	

2
	.globl Cons.new	
	.type Cons.new, @function	

2
	movq 8(%reg0), %reg1	
	movq 0(%reg0), %rbx	

2
	call *%rbx	
	cmpl $0, %reg1	

2
	movq %reg0, %reg1	
	movq -88(%rbp), %reg1	

2
	addl %ecx, %reg1	
	negl %reg1	

2
	movq %reg0, 40(%rax)	
	movq $101, %reg0	

2
	movq %reg0, %rsi	
	movq -128(%rbp), %reg3	

2
	call Bool.new	
	movq %r15, 8(%reg1)	

2
	testq $1, %reg0	
	je .Main.main_39	

2
	movq %reg0, %reg1	
	movq -80(%rbp), %rdi	

2
	call *%reg0	
	cmpl $0, %r13d	

2
	movq 16(%reg0), %rdx	
	movq 0(%rdx), %r12	

2
	movq %r12, 8(%rax)	
	movq 0(%rbx), %r12	

2
	call *%reg0	
	movq %reg0, 8(%reg1)	

2
	movq %rsi, %r12	
	cmpl $0, %r12d	

2
	movq %reg0, %reg1	
	call Matrix.new	

2
	negl %reg0	
	movq -176(%rbp), %rsi	

2
	call List.new	
	movq %reg0, %reg1	

2
	addl %reg0, %reg1	
	movq %reg2, 8(%rax)	

2
	movq 8(%rax), %rdi	
	movq %reg2, %reg3	

2
	movq $12, %rsi	
	movq -136(%rbp), %reg2	

2
	movq %reg0, %reg1	
	movq %reg1, 24(%rax)	

2
	movq $48, %rdi	
	call getmem	

2
	movq -96(%rbp), %rdi	
	negl %reg2	

2
	movq $82, %rsi	
	movq $.string4_l, %rdi	

2
	movq $203, %rsi	
	movq $.string5_l, %rdi	

2
	movq %rdi, -8(%rbp)	
	call Foo.new	

2
	subl %reg0, %eax	
	movq %reg2, %rdx	

2
	movq %rdi, 96(%reg1)	
	movq $0, %rdi	

2
.Main.main_58:	
	cdq	

2
	movq -80(%rbp), %reg1	
	movq %rcx, %reg3	

2
	movq -16(%rbp), %reg1	
	subl %reg2, %edi	

2
	movq 8(%reg0), %reg0	
	addl %reg1, %reg2	

2
	call getmem	
	movq $ListNode_vtable, 0(%reg0)	

2
	movq 8(%rax), %reg1	
	sete %dil	

2
	.string "4"	
.string11:	

2
	movq $.string10, %reg0	
	movq 0(%rbx), %reg2	

2
	idivl %ecx	
	movq -40(%rbp), %reg2	

2
	movq $.string10, %rax	
	movq %rax, %reg1	

2
	movq $.string6, %r12	
	movq 0(%rbx), %rax	

2
	.string "ERROR: %lld: Exception: stack overflow\n"	
.string8:	

2
	movq $0, %rdi	
	movq %rdi, 120(%reg1)	

2
	movq $5, %r12	
	movq 0(%rax), %rbx	

2
	.quad IO.out_string	
	.quad Main.func	

2
	movq %rbx, %rsi	
	imull %reg2	

2
.Main.main_2:	
	movq 0(%r13), %rax	

2
	movq $2, %rax	
	movq %rax, 8(%reg1)	

2
	movq -168(%rbp), %rax	
	imull %reg2	

2
	imull %reg0	
	movq -88(%rbp), %rdi	

2
	movq $17, %reg0	
	movq $.string3_l, %reg1	

2
	movq $0, %rax	
	movq %r12, %reg2	

2
	call *%reg0	
.Main.main_16:	

2
	testq $1, %reg0	
	je .Main.main_74	

2
	call *%reg0	
.Main.main_20:	

2
	cmpq $Main_vtable, 0(%rax)	
	je .Main.main_4	

2
	movq -24(%rbp), %reg1	
	sete %reg2	

2
	je .Main.main_17	
	movq $3, %reg0	

2
	movq -120(%rbp), %rax	
	movq $0, %rcx	

2
	movq 0(%rbx), %rax	
	movq 40(%rax), %rax	

2
	movq 72(%r14), %r14	
	movq %rbx, %reg2	

2
	movq %reg0, 160(%reg1)	
	movq $0, %reg0	

2
	movq -160(%rbp), %rdi	
	subl %edi, %reg3	

2
	negl %ebx	
	movq %reg1, %reg2	

2
	testq $1, %rdi	
	je .Main.main_17	

2
	movq -168(%rbp), %reg1	
	movq -160(%rbp), %reg3	

2
	cmpq $IO_vtable, 0(%reg0)	
	je .Main.main_1	

2
	movq %reg0, %rax	
	movq -72(%rbp), %rax	

2
	movq %reg0, %rax	
	movq -152(%rbp), %rax	

2
	call out_error	
.Main.main_182:	

2
	movq -120(%rbp), %reg1	
	movq %reg2, %rcx	

2
	movq %rdi, 40(%reg1)	
	movq $101, %rdi	

2
	movq -176(%rbp), %rsi	
	imull %reg2	

2
	.quad IO.out_string	
	.quad Baz.main	

2
	movq 0(%rbx), %r13	
	movq 88(%r13), %r13	

2
	movq -176(%rbp), %reg1	
	addl %reg2, %edi	

2
	movq 72(%r12), %r12	
	movq 8(%rbx), %rdi	

2
	movq %rsi, %reg1	
	cmpl $0, %reg2	

2
	movq %rbx, %rax	
	subl %eax, %edi	

2
.Main.main_8:	
	movq 0(%rax), %r12	

2
	movq -112(%rbp), %rax	
	addl %eax, %esi	

2
	movq -40(%rbp), %reg1	
	subl %eax, %edi	

2
	movq -32(%rbp), %rdi	
	cmpl %reg2, %reg3	

2
	movq -48(%rbp), %reg1	
	cmpl %esi, %eax	

2
	movq 72(%r12), %r12	
	movq 8(%reg1), %rdi	

2
	call String.new	
	movq 0(%reg0), %r12	

2
	movq %rdi, %reg1	
	call Object.new	

2
	movq -48(%rbp), %reg1	
	negl %eax	

2
	movq 48(%reg0), %reg0	
	movq 8(%reg1), %rdi	

2
	call out_error	
.Main.main_28:	

2
Foo.getBar:	
	pushq %reg0	

2
	subl %edi, %esi	
	movq %rsi, %reg3	

2
	movq -8(%rbp), %rdi	
	movq -64(%rbp), %reg3	

2
	movq -104(%rbp), %reg1	
	cmpl %esi, %reg3	

2
.Main.main_48:	
	cdq	

2
	movq -136(%rbp), %rax	
	movq %reg2, %r8	

2
	movq $0, %reg0	
	movq %reg0, 192(%rax)	

2
	movq -8(%rbp), %rdi	
	movq -56(%rbp), %reg3	

2
	movq %r13, %rsi	
	cmpl %reg2, %eax	

2
	movq $1, %reg0	
	movq $.string7, %reg1	

2
	movq %rax, %rsi	
	movq -32(%rbp), %rax	

2
	call out_error	
.Main.main_185:	

2
	movq %rdi, %reg1	
	movq $11, %rax	

2
	movq -24(%rbp), %reg1	
	movq %reg2, %rdi	

2
	negl %eax	
	movq -64(%rbp), %reg2	

2
	addl %reg0, %reg1	
	movq -120(%rbp), %reg3	

2
	movq -160(%rbp), %reg1	
	imull %reg2d	

2
	movq %reg0, 168(%rax)	
	movq $0, %reg0	

2
	movq %reg0, %r12	
	movq 8(%rax), %reg3	

2
	je .Main.main_4	
	movq $3, %reg0	

2
	subl %reg0d, %eax	
	movq -64(%rbp), %reg0	

2
	movq %reg0, %rbx	
	movq 8(%rbx), %rax	

2
	movq $19, %rsi	
	movq $.string3_l, %reg1	

2
	movq 88(%rax), %rax	
	movq 8(%reg1), %reg2	

2
	movq %reg0, -8(%rbp)	
	movq $1, %reg2	

2
	movq %rdi, %reg1	
	cmpl %reg2, %reg3d	

2
	movq $Cons_vtable, 0(%rax)	
	movq $0, %rdi	

2
	addl %reg0, %reg1	
	movq -168(%rbp), %reg3	

2
	movq -16(%rbp), %reg1	
	subl %edi, %eax	

2
	idivl %r8d	
	subl %eax, %ecx	

2
.string8_l:	
	.string "e"	

2
	movq -144(%rbp), %reg1	
	movq $0, %reg2	

2
	negl %reg0	
	subl %reg0, %esi	

2
.Main.main_1:	
	movq %reg0, %r14	

2
	movq 96(%reg0), %reg0	
	movq %r12, %reg2	

2
	movq %reg0, %reg1	
	movq -24(%rbp), %reg1	

2
.Main.main_6:	
	popq %r12	

2
	movq -80(%rbp), %rax	
	movq %reg2, %r8	

2
	movq $6, %rbx	
	movq 0(%rax), %reg2	

2
	call *%rbx	
	cmpl $0, %eax	

2
	movq %rsi, %r8	
	movq %rdi, %rcx	

2
	testq $1, %reg0	
	je .Main.main_86	

2
Main.func2:	
	pushq %rbp	

2
	movq %reg0, %r10	
	addl %r10d, %eax	

2
	movq -16(%rbp), %rdi	
	subl %reg2, %edi	

2
	movq $208, %rsi	
	movq $.string5_l, %reg1	

2
.string9_l:	
	.string "2"	

2
	call *%r12	
	movq $.string6, %reg1	

2
.Main.main_7:	
	cdq	

2
	call out_error	
.Main.main_43:	

2
	movq %rdi, 120(%reg1)	
	movq $0, %rdi	

2
	movq -96(%rbp), %reg1	
	addl %eax, %ecx	

2
	movq -56(%rbp), %rax	
	movq %reg2, %rcx	

2
	movq -80(%rbp), %reg1	
	subl %eax, %edi	

2
	movq %r12, %rax	
	addl %eax, %edi	

2
	.quad 40	
.string7_l:	

2
	movq %rax, %reg1	
.Main.main_3:	

2
	movq %reg0, %rdi	
	movq $3, %reg0	

2
	.type Main.printY, @function	
Main.printY:	

2
	sete %al	
	xorq $1, %reg1	

2
	movq -184(%rbp), %reg1	
	subl %reg2, %eax	

2
	movq %reg0, 88(%rax)	
	movq $0, %reg0	

2
	movq -88(%rbp), %rdi	
	subl %reg2, %eax	

2
	addl %edi, %eax	
	movq -8(%rbp), %reg3	

2
	movq -160(%rbp), %reg1	
	call *%rax	

2
	movq $0, %reg0	
	movq $.string5_l, %rdi	

2
	.string "ERROR: %lld: Exception: dispatch on void\n"	
.string5:	

2
	movq -120(%rbp), %rax	
	movq %rcx, %r8	

2
	movq -72(%rbp), %reg1	
	addl %ecx, %reg3	

2
	call out_error	
.Main.main_74:	

2
	addl %edi, %eax	
	movq -112(%rbp), %reg3	

2
	movq $6, %rbx	
	movq 0(%rax), %r12	

2
	movq %reg0, %reg1	
	movq -104(%rbp), %rax	

2
	movq -96(%rbp), %rax	
	movq -16(%rbp), %reg3	

2
	call *%reg0	
	movq -24(%rbp), %reg2	

2
	movq %rsi, %r12	
	movq 0(%rbx), %reg3	

2
	movq -160(%rbp), %rax	
	imull %reg2d	

2
	.size List.new, .-List.new	
	.globl Cons.new	

2
	movq $1, %reg0	
	movq 16(%rax), %rdi	

2
	movq %r15, %reg1	
	movq %reg2, %rax	

2
.Main.main_2:	
	movq 0(%r13), %reg1	

2
	movq %reg0, %rax	
	movq %rbx, %rsi	

2
	movq -48(%rbp), %rax	
	movq $0, %r8	

2
	subl %reg0, %esi	
	movq %reg2, %rdi	

2
	movq %rbx, 8(%rax)	
	movq %rax, %reg2	

2
.Main.main_15:	
	movq 0(%rax), %reg1	

2
	movq %rdi, %r12	
	pushq %rax	

2
	addl %ecx, %esi	
	addl %esi, %eax	

2
	movq %rdi, 152(%rax)	
	movq $0, %rdi	

2
	movq -128(%rbp), %reg1	
	cmpl %edi, %eax	

2
	.quad 2	
.string6_l:	

2
	subl %edi, %reg1	
	movq %rsi, %rdi	

2
	movq %r13, %r12	
	movq 0(%rbx), %reg3	

2
	movq $82, %reg0	
	movq $.string4_l, %reg1	

2
	movq $1, %rdi	
	cmpl %edi, %esi	

2
	movq -152(%rbp), %reg1	
	addl %edi, %eax	

2
	movq %rsp, %rbp	
	movq %rsi, %rax	

2
	ret	
	.size Cons.isNil, .-Cons.isNil	

2
	movq -16(%rbp), %reg1	
	movq %r12, %reg3	

2
	movq %rdi, %reg1	
	movq $3, %rbx	

2
	movq %rbx, %rsi	
	movq %reg2, %rax	

2
	movq 24(%rax), %reg1	
	addl %reg2, %reg3	

2
.Main.main_177:	
	cdq	

2
	imull %edi	
	movq $2, %reg1	

2
	movq 120(%reg0), %reg0	
	movq %rax, %reg2	

2
	movq $9, %rax	
	movq 0(%rbx), %reg2	

2
	movq %reg0, 8(%rax)	
	movq 8(%rax), %rax	

2
	addl %reg0, %reg1	
	movq %rsi, 8(%rax)	

2
.Main.main_30:	
	cdq	

2
	call *%rax	
	movq 0(%rbx), %r13	

2
	movq $12, %reg0	
	movq -160(%rbp), %reg2	

2
	movq $7, %reg0	
	movq %reg0, %reg1	

2
	movq %rdi, %rbx	
	movq %rsi, %rax	

2
	movq %reg0, %r12	
	movq 8(%reg2), %rax	

2
	movq %rsi, %rbx	
	movq %rbx, %reg2	

2
	negl %reg0	
	movq %reg1, 8(%reg2)	

2
.List.cons_1:	
	movq 0(%reg0), %r13	

2
	movq $.string7, %rax	
	movq 0(%rbx), %r12	

2
	subl %ebx, %reg1	
	movq %rax, %rbx	

2
	movq -144(%rbp), %rax	
	movq $0, %r9	

2
	testq $1, %reg0	
	je .Main.main_62	

2
	cmpq $Bool_vtable, 0(%reg0)	
	je .Main.main_2	

2
	movq %r14, %reg1	
	movq $0, %r9	

2
	movq $5, %r12	
	movq 0(%rax), %reg2	

2
	movq -144(%rbp), %rsi	
	movq %reg2, %rax	

2
	movq $31, %rsi	
	movq $.string2_l, %reg1	

2
	movq -128(%rbp), %rax	
	subl %reg2, %reg3	

2
	movq -128(%rbp), %r9	
	imull %r9d	

2
	movq $Cons_vtable, 0(%reg0)	
	movq $0, %reg1	

2
	movq %reg0, %rdi	
	movq -48(%rbp), %reg0	

2
	addl %edi, %reg1	
	movq -72(%rbp), %rdi	

2
.Main.main_6:	
	popq %reg0	

2
	movq %rsi, %r12	
	movq 0(%reg2), %rax	

2
	movq -120(%rbp), %rax	
	movq %reg2, %rcx	

2
	movq %r14, %rsi	
	call String.cmp	

2
.Main.main_17:	
	cdq	

2
	movq -88(%rbp), %rax	
	cmpl %reg2, %esi	

2
.Main.main_3:	
	popq %r12	

2
	movq $.string9, %rbx	
	movq -8(%rbp), %reg2	

2
	call Object.new	
	movq %reg0, %r12	

2
	call Yaz.new	
	movq %reg0, %rbx	

2
	movq 0(%rax), %r12	
	movq 136(%r12), %r12	

2
	testq $1, %reg0	
	je .Main.main_109	

2
	movq $Baz_vtable, 0(%reg0)	
	leave	

2
	addl %ecx, %esi	
	movq %rsi, 8(%reg3)	

2
	negl %reg0	
	movq -104(%rbp), %reg2	

2
	movq 80(%r14), %r14	
	movq %rax, %rdi	

2
	movq -24(%rbp), %rax	
	movq $0, %r8	

2
	.quad IO.out_string	
	.quad Foo.foo	

2
	movq %rdi, %reg1	
	movq $3, %rdi	

2
.Main.main_5:	
	movq $5, %rdi	

2
	movq %reg0, %r8	
	movq -56(%rbp), %reg0	

2
	call *%r14	
	movq %rax, 8(%rbx)	

2
	movq 0(%reg0), %r12	
	movq 112(%r12), %r12	

2
	call *%r14	
	movq %rax, %reg2	

2
	movq 88(%reg0), %reg0	
	movq 48(%rbx), %rdi	

2
	movq %rdx, -184(%rbp)	
	movq %reg2, %rdx	

2
	imull %ecx	
	movq -184(%rbp), %reg2	

2
	movq $12, %rdi	
	movq -24(%rbp), %reg2	

2
	je .Main.main_14	
	movq $3, %reg0	

2
	movq %rdi, 32(%reg1)	
	movq $100, %rdi	

2
	movq -128(%rbp), %rax	
	cmpl %eax, %reg3	

2
	testq $1, %rcx	
	je .Main.main_177	

2
	call *%reg0	
	movq 0(%rbx), %r13	

2
	movq %rdi, %rbx	
	movq $10, %reg2	

2
	movq 24(%rax), %rax	
	leave	

2
	cmpq $Main_vtable, 0(%reg0)	
	je .Main.main_1	

2
	movq %rax, %r12	
	movq $1, %rax	

2
	movq -168(%rbp), %reg1	
	movq -88(%rbp), %reg3	

2
	subl %reg0, %edi	
	movq -120(%rbp), %reg3	

2
	subl %reg0, %reg1	
	movq %rsi, %rdi	

2
	.quad .string6_l	
	.quad 42	

2
	subl %eax, %r10d	
	movq %r10, %reg2	

2
	movq 8(%rax), %rsi	
	addl %reg2, %reg3	

2
	movq %reg0, %rbx	
	movq %rsi, %rax	

2
	movq -152(%rbp), %reg1	
	cmpl %eax, %esi	

2
	movq $76, %reg0	
	movq $.string4_l, %reg1	

2
	movq %reg0, %reg1	
	movq 0(%rbx), %r12	

2
	addl %edi, %eax	
	movq -120(%rbp), %rdi	

2
	movq $6, %reg0	
	movq 0(%rax), %rbx	

2
	movq $12, %rsi	
	movq -24(%rbp), %reg2	

2
	movq -152(%rbp), %reg1	
	addl %esi, %reg3	

2
	movq %rbx, %reg1	
	movq %reg2, %rbx	

2
	movq 0(%reg0), %r13	
	movq 96(%r13), %r13	

2
	.quad ListNode.new	
	.quad Object.abort	

2
	movq %rax, 16(%reg1)	
	movq %reg1, %rax	

2
	movq %reg0, %rax	
	movq -176(%rbp), %reg0	

2
	.quad Foo.getBar	
Bar_vtable:	

2
	subl %eax, %edi	
	movq -120(%rbp), %reg3	

2
	movq $11, %reg0	
	movq 0(%reg1), %reg2	

2
	movq %rsi, %reg1	
	movq 8(%rbx), %reg3	

2
	imull %ecx	
	movq -104(%rbp), %reg2	

2
	idivl %reg0d	
	subl %reg1, %r10d	

2
.string12:	
	.quad String_vtable	

2
	movq 24(%rbx), %rdi	
	imull %reg2	

2
.Main.main_2:	
	movq 8(%reg0), %rdx	

2
	je .Main.main_3	
	movq $13, %rsi	

2
	movq -32(%rbp), %reg1	
	subl %esi, %reg3	

2
	movq %r13, %reg1	
	imull %reg1d	

2
	movq %rdi, %rax	
	movq $3, %rdi	

2
	call *%rax	
	movq $12, %reg1	

2
	movq $2, %rax	
	addl %eax, %reg2	

2
	movq $0, %rdi	
	movq %rdi, 104(%rax)	

2
	movq $1, %rax	
	movq %rbx, %rdi	

2
	movq -16(%rbp), %rax	
	cmpl %reg2, %reg3	

2
	movq %reg0, %reg1	
	movq $1, %rdi	

2
	call out_error	
.Main.main_61:	

2
	movq $12, %reg0	
	movq -176(%rbp), %rax	

2
	movq %r12, 8(%rax)	
	movq 8(%rax), %rax	

2
	movq $31, %reg0	
	movq $.string2_l, %reg1	

2
	.quad .string3	
	.quad 1	

2
	movq -16(%rbp), %rax	
	movq -24(%rbp), %rbx	

2
	movq %reg0, 192(%reg1)	
	movq $0, %reg0	

2
	movq -136(%rbp), %rdi	
	imull %reg2	

2
	movq -88(%rbp), %reg1	
	cmpl %esi, %eax	

2
	movq $55, %rsi	
	movq $.string2_l, %rdi	

2
	imull %ecx	
	movq -160(%rbp), %reg2	

2
	movq 40(%rax), %rax	
	movq %rbx, %rdi	

2
.string0_l:	
	.string "Yaz"	

2
	testq $1, %reg0	
	je .Main.main_79	

2
.Main.main_82:	
	cdq	

2
	movq -8(%rbp), %reg1	
	movq -24(%rbp), %rsi	

2
	movq $8, %reg0	
	movq $.string1_l, %rdi	

2
	testq $1, %reg0	
	je .Main.main_178	

2
	call String.cmp	
	cmpl $0, %reg0	

2
	movq %rcx, %reg1	
	movq $1, %reg2	

2
	movq $12, %r8	
	movq -144(%rbp), %rax	

2
	call String.concat	
	movq 0(%rbx), %reg1	

2
	movq %reg0, %rax	
	movq -128(%rbp), %rax	

2
	movq -120(%rbp), %rsi	
	imull %reg2	

2
	movq -56(%rbp), %rcx	
	addl %ecx, %reg3	

2
	negl %reg0	
	movq 0(%rbx), %reg2	

2
	je .Main.main_10	
	movq $3, %rsi	

2
	movq %reg0, 144(%reg1)	
	movq $0, %reg0	

2
	movq %reg0, %reg1	
	movq -16(%rbp), %reg1	

2
Foo.getBar:	
	pushq %rbp	

2
.Main.main_3:	
	movq 8(%rbx), %rdx	

2
	subl %eax, %reg1	
	movq -152(%rbp), %rax	

2
	movq -144(%rbp), %rdi	
	addl %reg2, %eax	

2
	cmpl %reg0, %r8d	
	setl %reg2	

2
	call Object.type_name	
	movq 0(%rbx), %reg1	

2
	.quad .string6_l	
	.quad 1	

2
	sete %al	
	xorq $1, %rax	

2
.Main.main_76:	
	cdq	

2
	subl %esi, %reg1	
	subl %reg1, %reg2	

2
	movq -144(%rbp), %rsi	
	movq %reg2, %reg3	

2
	movq 16(%rbx), %rdi	
	cmpl %reg2, %reg3	

2
	addl %reg0, %eax	
	movq -64(%rbp), %rcx	

2
	subl %ebx, %reg1	
	movq %reg2, %reg3	

2
	call out_error	
.Main.main_50:	

2
	movq 96(%rax), %rax	
	movq %r12, %rdi	

2
	movq %r13, %rdi	
	subl %reg2, %eax	

2
	movq -128(%rbp), %rcx	
	imull %reg2	

2
	sete %reg0l	
	jne .Main.main_23	

2
	addl %reg0, %eax	
	movq -72(%rbp), %reg3	

2
	cmpq $Int_vtable, 0(%rdi)	
	je .Main.main_3	

2
	cmpl %reg0, %reg1d	
	setl %cl	

2
	je .Main.main_2	
	cmpq $IO_vtable, 0(%rdi)	

2
.Main.main_3:	
	movq 0(%rbx), %reg1	

2
	movq -152(%rbp), %reg1	
	cmpl %reg2, %esi	

2
	movq $12, %reg0	
	movq -32(%rbp), %reg2	

2
	movq -8(%rbp), %reg1	
	movq -184(%rbp), %rsi	

2
	.quad 2	
.string5_l:	

2
	movq %reg0, %reg1	
	call Yaz.new	

2
	call Bazz.doh	
	movq %reg0, %r12	

2
	movq 104(%rax), %rax	
	movq %r12, %reg2	

2
	movq %reg0, %rax	
	movq -160(%rbp), %rax	

2
	movq $3, %reg0	
	movq %reg0, 8(%reg1)	

2
	movq -16(%rbp), %rax	
	movq -32(%rbp), %reg3	

2
	call A2I.new	
	cmpl $0, %reg0	

2
	movq 88(%rax), %rax	
	movq 48(%rbx), %rdi	

2
	movq %rsi, %r8	
	movq %reg2, %reg3	

2
	movq %rsi, %reg1	
	movq 8(%reg2), %rax	

2
	movq $12, %rcx	
	movq -72(%rbp), %reg2	

2
	call Object.abort	
	popq %r12	

2
	movq %rsi, %reg1	
	movq 8(%rbx), %rax	

2
	movq %rdi, %rbx	
	call Main.new	

2
	movq -136(%rbp), %rax	
	movq $0, %reg2	

2
	je .Main.main_2	
	cmpq $Bool_vtable, 0(%rdi)	

2
	movq %rax, %r14	
	cmpl $0, %reg2	

2
	addl %ecx, %esi	
	movq %reg2, 8(%rax)	

2
	movq -40(%rbp), %reg1	
	subl %edi, %reg3	

2
	call *%rbx	
	movq %reg1, %rax	

2
	movq 8(%reg0), %reg1	
	movq 0(%rbx), %reg3	

2
	je .Main.main_2	
	movq $1, %reg0	

2
	movq $7, %rax	
	movq 0(%rbx), %reg2	

2
	movq -96(%rbp), %rsi	
	addl %esi, %reg3	

2
	addl %reg0, %reg1d	
	movq %reg2, %reg3	

2
	movq %reg0, %rax	
	movq 24(%rax), %rax	

2
	addl %edi, %reg1	
	movq %reg2, %rbx	

2
	movq -16(%rbp), %rdi	
	addl %eax, %reg3	

2
	pushq %r12	
	movq $16, %rdi	

2
	movq -64(%rbp), %reg1	
	subl %eax, %edi	

2
	movq 24(%reg0), %rsi	
	addl %esi, %reg3	

2
	movq 32(%r12), %r12	
	movq %reg1, %reg2	

2
	negl %eax	
	movq -104(%rbp), %reg2	

2
	movq %r14, %rax	
	movq %r13, %rdi	

2
	call out_error	
.Main.main_39:	

2
	movq -112(%rbp), %reg1	
	movq %reg2, %r8	

2
	addl %eax, %r8d	
	movq %reg2, %rax	

2
	call *%reg0	
	jmp .Main.func_3	

2
	testq $1, %r8	
	je .Main.main_188	

2
	addl %reg0, %reg1	
	movq -152(%rbp), %reg3	

2
	movq $name_Bool, %reg0	
	movq 0(%rbx), %r12	

2
	movq $26, %rsi	
	movq $.string7_l, %reg1	

2
	je .Main.main_1	
	cmpq $Main_vtable, 0(%reg0)	

2
Foo.setBar:	
	pushq %reg0	

2
	subl %edi, %esi	
	movq %reg2, %rdi	

2
	idivl %reg0	
	movq -96(%rbp), %reg2	

2
	movq -168(%rbp), %rax	
	imull %ecx	

2
	movq -144(%rbp), %rdi	
	addl %edi, %eax	

2
	addl %reg0, %ecx	
	movq $12, %r8	

2
	imull %r11d	
	movq %reg1, %r11	

2
	movq -40(%rbp), %rdi	
	subl %reg2, %reg3	

2
	movq 0(%r12), %r13	
	movq 56(%r13), %r13	

2
	movq %reg0, 8(%reg1)	
	cmpl $0, 8(%reg1)	

2
	movq %r14, %rax	
	movq %r13, %reg3	

2
	movq %reg0, %rbx	
	movq %reg2, %r13	

2
	movq $1, %reg0	
	cmpl %reg1, %esi	

2
	movq $2147483647, %rax	
	movq %rax, %rdi	

2
	call *%reg0	
	movq -40(%rbp), %rdx	

2
	call out_error	
.Main.main_180:	

2
.string7_l:	
	.string "ERROR: %lld: Exception: case on void\n"	

2
	movq $110, %reg0	
	movq %reg0, 56(%rax)	

2
	.size Yaz.new, .-Yaz.new	
	.globl _main	

2
	movq -32(%rbp), %rax	
	movq -144(%rbp), %reg3	

2
	call Baz.new	
	movq %rax, %r12	

2
.Main.main_13:	
	movq 0(%rbx), %reg1	

2
.Main.main_23:	
	cdq	

2
	negl %reg0	
	movq $1, %rdi	

2
	testq $1, %reg0	
	je .Main.main_119	

2
	movq %rsi, %rax	
	movq -144(%rbp), %rax	

2
	movq %rax, %rcx	
	movq -40(%rbp), %rax	

2
	call String.cmp	
	cmpl $0, %eax	

2
	movq %reg0, %rbx	
	movq %rbx, %reg2	

2
	movq $3, %reg0	
	cmpl $0, %reg1d	

2
	subl %edi, %reg1	
	movq -152(%rbp), %rdi	

2
	movq -64(%rbp), %reg1	
	addl %eax, %edi	

2
	movq %reg0, %reg1	
	movq 24(%reg1), %reg1	

2
	movq %reg0, 96(%reg1)	
	movq $0, %reg0	

2
	movq %rax, %r8	
	movq $12, %r9	

2
	movq %rsi, %r12	
	movq $1, %reg2	

2
.Main.main_1:	
	movq %r12, %r14	

2
.Main.main_10:	
	movq %reg0, %rax	

2
.string10_l:	
	.string "3"	

2
	subl %eax, %edi	
	movq -120(%rbp), %rax	

2
	addl %reg0, %eax	
	movq -176(%rbp), %reg3	

2
	movq $Bar_vtable, 0(%rax)	
	movq %rax, %rbx	

2
	movq %r14, %rax	
	movq $0, %r9	

2
	movq %reg0, %reg1	
	jmp .Main.main_10	

2
	movq -48(%rbp), %rsi	
	cmpl %esi, %reg3	

2
	addl %edi, %eax	
	movq -160(%rbp), %rdi	

2
	movq -64(%rbp), %rax	
	movq %reg2, %rdi	

2
.Main.main_6:	
	movq %reg0, %rax	

2
	.quad 42	
.string9_l:	

2
	movq %reg0, %rsi	
	movq -144(%rbp), %reg3	

2
	.type Main.getFoo, @function	
Main.getFoo:	

2
.Main.main_2:	
	movq 0(%r12), %rax	

2
	movq %rax, %reg1	
	movq %reg2, %r8	

2
.Main.main_3:	
	movq $5, %reg0	

2
	movq 8(%rax), %reg1	
	addl %ecx, %esi	

2
	setle %dil	
	jg .Main.main_4	

2
	negl %reg0	
	movq %reg1, %r9	

2
	movq %rdi, %rax	
	movq %rax, -80(%rbp)	

2
	.globl Main.getFoo	
	.type Main.getFoo, @function	

2
	movq $.string8, %r12	
	movq -8(%rbp), %reg2	

2
	negl %eax	
	addl %eax, %edi	

2
	cmpq $Main_vtable, 0(%rax)	
	je .Main.main_1	

2
	movq 96(%r14), %r14	
	movq %reg1, %reg2	

2
	testq $1, %reg0	
	je .Main.main_71	

2
	call *%rbx	
	movq -168(%rbp), %reg2	

2
	movq 64(%rax), %rax	
	movq %r13, %reg2	

2
	movq $0, %rdi	
	movq %rdi, 168(%rax)	

2
	movq $0, %rax	
	movq %rax, 56(%rbx)	

2
	movq $4, %reg0	
	movq $.string4_l, %rdi	

2
	movq -104(%rbp), %rsi	
	movq %reg2, %reg3	

2
	movq -56(%rbp), %rsi	
	call *%rax	

2
	subl %reg0, %reg1	
	negl %reg1	

2
	pushq %r12	
	movq $16, %reg1	

2
	movq 0(%r13), %rax	
	movq 104(%rax), %rax	

2
	movq %rax, 48(%rbx)	
	movq $0, %rax	

2
	testq $1, %reg0	
	je .Main.main_140	

2
.Main.main_49:	
	cdq	

2
	movq -136(%rbp), %rdi	
	addl %edi, %reg3	

2
	movq 96(%r13), %r13	
	movq %reg1, %reg2	

2
	movq $101, %rdi	
	movq %rdi, 48(%reg1)	

2
	testq $1, %rsi	
	je .Main.main_23	

2
	call *%rbx	
	movq %reg1, %rdi	

2
	movq %rdi, %reg1	
	movq %reg1, -80(%rbp)	

2
	movq $0, %rdi	
	cmpl $0, %edi	

2
	subq $16, %reg0	
	pushq %rbx	

2
	movq %r12, %rax	
	addl %eax, %reg3	

2
	movq %rdi, %rax	
	movq -128(%rbp), %rax	

2
	movq $0, %rdi	
	movq %rdi, 176(%rax)	

2
	movq -24(%rbp), %reg1	
	pushq %rax	

2
	call *%reg0	
	movq $empty_string, %reg1	

2
	subl %reg0, %reg1	
	movq -120(%rbp), %reg3	

2
	movq -16(%rbp), %reg1	
	subl %eax, %edi	

2
	movq $3, %rdi	
	movq %rdi, 8(%rax)	

2
	jmp .Main.main_15	
.Main.main_14:	

2
	movq %reg0, %reg1	
	movq -184(%rbp), %rcx	

2
	pushq %reg0	
	movq $40, %reg1	

2
	movq %reg0, %rax	
	movq -136(%rbp), %reg0	

2
	movq -136(%rbp), %rdi	
	addl %edi, %eax	

2
	movq %rcx, %reg1	
	movq -96(%rbp), %reg1	

2
	movq $0, %rdi	
	movq %rdi, 120(%rax)	

2
	movq -184(%rbp), %reg1	
	subl %ecx, %reg3	

2
	movq $9, %rax	
	movq 0(%reg1), %r12	

2
	movq %rcx, %reg1	
	movq %r14, %rcx	

2
	movq -112(%rbp), %reg1	
	movq %reg2, %rax	

2
	movq %reg0, 8(%reg1)	
	movq 8(%reg1), %reg1	

2
	subl %reg0, %eax	
	movq -80(%rbp), %rdi	

2
.Main.main_190:	
	cdq	

2
	movq %rax, 48(%rbx)	
	cmpl $0, 32(%rbx)	

2
	.string "ERROR: %lld: Exception: case on void\n"	
.string7:	

2
	je .Main.main_4	
	cmpq $IO_vtable, 0(%rax)	

2
	movq 8(%reg0), %rbx	
	movq 0(%reg0), %reg2	

2
	.quad .string7_l	
	.quad 4	

2
	movq %reg0, %reg1	
	cmpl $0, 48(%rbx)	

2
	cmpl %reg0, %reg1d	
	setl %reg2	

2
	call *%rbx	
.Main.main_11:	

2
	movq $3, %rax	
	movq %rax, %r12	

2
	movq -24(%rbp), %reg1	
	pushq %reg2	

2
	call Foo.new	
	movq %reg0, %rbx	

2
	subl %reg0, %eax	
	movq %rax, -72(%rbp)	

2
	movq %rdi, %rax	
	cmpl %eax, %reg3	

2
	movq -112(%rbp), %rax	
	movq %reg2, %r8	

2
	movq %r13, %rdi	
	sete %reg2l	

2
	movq %rdi, %reg1	
	movq -64(%rbp), %rdi	

2
.Main.main_13:	
	cdq	

2
	subl %reg0, %eax	
	negl %eax	

2
	movq 16(%rbx), %rax	
	cmpl %reg2, %eax	

2
	movq 8(%rax), %rsi	
	addl %ecx, %esi	

2
	movq %reg0, %reg1	
	movq 16(%reg2), %rax	

2
	movq 8(%reg0), %reg1	
	cmpl %edi, %reg3	

2
	.quad 42	
Cons_vtable:	

2
	movq $7, %reg0	
	movq 0(%rbx), %r12	

2
	movq %reg0, %rax	
	movq -24(%rbp), %rax	

2
	movq $0, %rdi	
	movq %rdi, 96(%reg1)	

2
	cmpq $IO_vtable, 0(%rax)	
	je .Main.main_1	

2
	movq $0, %reg0	
	movq %reg0, 168(%rax)	

2
	movq $12, %reg0	
	movq -128(%rbp), %reg2	

2
	movq 24(%reg0), %rsi	
	addl %esi, %edi	

2
	movq $1, %reg0	
	movq %reg0, 16(%reg1)	

2
	call *%reg0	
	jmp .Main.main_24	

2
	call out_error	
.Main.main_76:	

2
	movq $.string7, %reg0	
	movq 0(%rbx), %r12	

2
	movq -96(%rbp), %rsi	
	addl %esi, %eax	

2
	movq -120(%rbp), %reg1	
	movq %rcx, %reg3	

2
	movq -8(%rbp), %reg1	
	movq -24(%rbp), %reg3	

2
	movq %rdi, %reg1	
	call Main.new	

2
	movq $0, %rdi	
	movq %rdi, 200(%rax)	

2
	.quad .string9_l	
	.quad 54	

2
	subl %eax, %reg1d	
	movq $12, %reg2	

2
	movq $101, %reg0	
	movq %reg0, 48(%rax)	

2
	movq -8(%rbp), %reg1	
	movq -16(%rbp), %reg3	

2
.Main.main_14:	
	movq 0(%reg0), %rax	

2
	movq %reg0, %r11	
	negl %r11d	

2
	movq %reg0, -128(%rbp)	
	movq %reg2, %reg0	

2
.Main.main_3:	
	movq 0(%rbx), %rax	

2
	imull %r11d	
	movq %rax, %r11	

2
	movq $156, %reg0	
	movq $.string5_l, %reg1	

2
	movq %reg0, %reg1	
	movq $8, %reg0	

2
	movq $110, %reg0	
	movq %reg0, 56(%reg1)	

2
	je .Main.main_2	
	cmpq $Object_vtable, 0(%reg0)	

2
	movq -112(%rbp), %reg1	
	addl %edi, %reg3	

2
	movq %rdi, 136(%reg1)	
	movq $0, %rdi	

2
	je .Main.main_4	
	movq $3, %rsi	

2
	testq $1, %reg0	
	je .Main.main_81	

2
	movq 56(%r13), %r13	
	movq %rax, %rdi	

2
	movq %rbx, %reg1	
	subl %reg2, %edi	

2
	movq %reg0, %rsi	
	movq -104(%rbp), %rax	

2
	call *%rax	
	movq %reg1, %rbx	

2
	movq -168(%rbp), %rax	
	addl %eax, %esi	

2
.Main.main_18:	
	movq %reg0, %reg1	

2
	movq $.string9, %r12	
	movq 0(%rbx), %rax	

2
	movq %reg0, %reg1	
	movq -96(%rbp), %rax	

2
	testq $1, %reg0	
	je .Main.main_180	

2
	movq $127, %rsi	
	movq $.string2_l, %reg1	

2
	movq 24(%reg0), %rdi	
	imull %reg2	

2
.Main.main_72:	
	cdq	

2
	movq -48(%rbp), %rax	
	subl %eax, %edi	

2
	movq 8(%rax), %reg1	
	movq 0(%reg1), %reg2	

2
	movq $Foo_vtable, 0(%rax)	
	movq %rax, %rdi	

2
	movq -128(%rbp), %reg1	
	movq -32(%rbp), %reg3	

2
	cmpl $0, %r12d	
	sete %r12b	

2
	movq $10, %reg0	
	movq $.string3_l, %rdi	

2
	movq %r12, %rax	
	testq $1, %rax	

2
	movq -16(%rbp), %rsi	
	call *%rax	

2
	movq %reg0, %reg1	
	movq $9, %reg0	

2
	movq %reg0, 8(%reg1)	
	movq $2, %reg2	

2
.Main.main_38:	
.Main.main_36:	

2
	movq -136(%rbp), %reg1	
	movq %reg2, %r8	

2
	call *%reg0	
	jmp .Main.funccase_5	

2
	.quad Foo.getX	
	.quad Foo.func	

2
	movq -128(%rbp), %reg1	
	subl %eax, %reg3	

2
.Main.main_31:	
	cdq	

2
	imull %r9d	
	subl %reg1, %r8d	

2
	cmpq $Object_vtable, 0(%reg0)	
	je .Main.main_2	

2
	movq -128(%rbp), %reg1	
	movq -56(%rbp), %reg3	

2
	call String.new	
	movq 0(%rbx), %reg1	

2
	movq $4, %reg0	
	imull %esi	

2
.Main.main_59:	
	cdq	

2
	movq $1, %rsi	
	movq 16(%rax), %reg2	

2
.Main.main_7:	
	movq $3, %r12	

2
	movq 24(%reg0), %reg1	
	cmpl $0, %reg2	

2
	movq $6, %rbx	
	movq 0(%reg1), %r12	

2
	call out_error	
.Main.main_68:	

2
.Main.main_70:	
	cdq	

2
	sete %reg0	
	xorq $1, %rax	

2
	movq %rdi, 16(%rax)	
	movq $10, %rdi	

2
	je .Main.main_3	
	movq $10, %rsi	

2
	call *%rax	
	movq %rax, -176(%rbp)	

2
	movq %rdi, 192(%rax)	
	movq $0, %rdi	

2
	movq 8(%rax), %reg1	
	movq %reg2, %reg3	

2
	call out_error	
.Main.main_80:	

2
	movq $6, %reg0	
	movq 0(%rbx), %r12	

2
	movq $100, %reg0	
	movq %reg0, 40(%rax)	

2
	testq $1, %reg0	
	je .Main.main_177	

2
.Main.main_9:	
	movq 0(%rbx), %rax	

2
	testq $1, %rdi	
	je .Main.main_12	

2
.Main.main_18:	
	movq -16(%rbp), %reg1	

2
	subl %ebx, %eax	
	movq %reg2, %reg3	

2
	movq -104(%rbp), %rax	
	movq %reg2, %r8	

2
	movq 24(%reg0), %rax	
	movq 24(%reg0), %reg2	

2
	je .Main.main_3	
	movq $1, %r12	

2
	call *%rax	
	movq %rax, 8(%rbx)	

2
	.quad List.cons	
	.quad List.car	

2
	idivl %reg0	
	movq -16(%rbp), %rsi	

2
	movq $0, %rsi	
	movq %rax, %reg2	

2
	movq 48(%reg0), %reg1	
	movq 0(%reg1), %rax	

2
	movq -8(%rbp), %reg1	
	movq -176(%rbp), %rsi	

2
	movq -128(%rbp), %reg1	
	cmpl %edi, %reg3	

2
	movq %rdi, %rbx	
	movq %reg2, %rax	

2
	movq %rdi, 176(%rax)	
	movq $0, %rdi	

2
	movq $0, %reg0	
	movq %reg0, 192(%reg1)	

2
	movq %r12, %rax	
	imull %edi	

2
	movq %rdi, %rbx	
	movq $11, %rax	

2
	movq 48(%rbx), %rdi	
	call *%rax	

2
	addl %reg0, %esi	
	addl %esi, %eax	

2
	movq %rsi, 8(%reg1)	
	movq %rdi, %reg1	

2
	movq 80(%r13), %r13	
	movq %reg1, %reg2	

2
	movq %rax, %reg1	
	cmpl $0, 48(%reg2)	

2
	addl %reg0, %esi	
	movq %rsi, 8(%rax)	

2
	movq %reg0, %rbx	
	movq $.string10, %reg2	

2
	addl %reg0, %reg1d	
	movq $12, %reg2	

2
	imull %edi	
	cmpl $0, %ebx	

2
	movq $0, %reg0	
	movq %reg0, 104(%reg1)	

2
	movq 48(%rbx), %reg1	
	sete %reg2	

2
	.quad 3	
.string9_l:	

2
	movq %rdi, -8(%rbp)	
	movq %reg2, %rbx	

2
.Main.main_39:	
	cdq	

2
	call *%rax	
	movq -32(%rbp), %rdx	

2
	movq $1, %rax	
	movq %rax, %rdi	

2
	testq $1, %rax	
	je .Main.main_53	

2
	call *%reg0	
.Main.main_24:	

2
	movq %reg0, %reg1	
	movq $19, %reg0	

2
	testq $1, %reg0	
	je .Main.main_61	

2
	movq 88(%reg0), %reg0	
	movq 48(%reg1), %reg2	

2
	movq %rax, %reg1	
	movq -168(%rbp), %reg3	

2
	movq -88(%rbp), %rcx	
	imull %reg2	

2
	movq $Bar_vtable, 0(%reg0)	
	movq %reg0, %rbx	

2
	call out_error	
.Main.main_186:	

2
	movq $12, %rsi	
	movq -168(%rbp), %rax	

2
	movq 8(%reg0), %rax	
	popq %reg2	

2
	subl %edi, %eax	
	movq -136(%rbp), %rdi	

2
	call ListNode.new	
	cmpl $0, %reg0	

2
Yaz.new:	
	pushq %reg0	

2
	call *%reg0	
	movq %reg0, 8(%rbx)	

2
	movq %r13, %reg1	
	subl %eax, %edi	

2
	subl %ebx, %eax	
	movq %reg2, %rbx	

2
	movq -160(%rbp), %reg1	
	movq -24(%rbp), %reg3	

2
	.quad .string10_l	
	.quad 4	

2
	movq -8(%rbp), %reg1	
	movq -16(%rbp), %rsi	

2
	movq $8, %rsi	
	movq $.string3_l, %reg1	

2
	movq $0, %rdi	
	movq %rdi, 112(%reg1)	

2
	idivl %reg0	
	movq -120(%rbp), %reg2	

2
.Main.main_180:	
	cdq	

2
	addl %reg0, %r9d	
	movq %r9, %rax	

2
Cons.init:	
	pushq %reg0	

2
	movq 16(%rbx), %rax	
	cmpl %reg2, %reg3	

2
	movq -8(%rbp), %reg1	
	movq -184(%rbp), %reg3	

2
	movq $0, %rax	
	movq %rax, 48(%rbx)	

2
	movq %rax, %rsi	
	movq %r14, %reg3	

2
ListNode.new:	
	pushq %rbp	

2
	movq $133, %reg0	
	movq $.string2_l, %reg1	

2
	movq %rdi, %rbx	
.Main.main_1:	

2
	movq -168(%rbp), %rsi	
	cmpl %esi, %reg3	

2
	movq %reg0, 8(%reg1)	
	movq 0(%reg2), %reg3	

2
	movq $0, %reg0	
	movq %reg0, %rbx	

2
	movq -104(%rbp), %rax	
	movq %reg2, %rdi	

2
.Main.main_50:	
	cdq	

2
	movq 136(%r12), %r12	
	movq %rax, %rdi	

2
	movq $26, %reg0	
	movq $.string7_l, %rdi	

2
	movq -48(%rbp), %rax	
	negl %eax	

2
	movq %r12, %rax	
	popq %reg2	

2
	movq $name_Int, %reg0	
	movq 0(%rbx), %r12	

2
	movq %rax, %rsi	
	movq -168(%rbp), %rcx	

2
	movq -80(%rbp), %rsi	
	imull %esi	

2
	movq $2, %reg0	
	addl %eax, %edi	

2
	imull %ecx	
	movq -120(%rbp), %reg2	

2
	movq %r14, %reg1	
	subl %reg2, %ecx	

2
	.quad Main.func2	
	.text 	

2
	movq $.string10, %reg0	
	movq %reg1, %reg2	

2
	je .Main.main_1	
.Main.main_1:	

2
	movq $11, %reg0	
	movq 0(%rbx), %reg2	

2
	negl %ecx	
	negl %ecx	

2
	movq %r13, %rsi	
	cmpl %reg2, %reg3	

2
	negl %ecx	
	movq $12, %r8	

2
	movq 80(%r13), %r13	
	movq %rax, %reg2	

2
	testq $1, %reg0	
	je .Main.main_40	

2
	addl %reg0, %reg1	
	addl %reg1, %eax	

2
	testq $1, %reg0	
	je .Main.main_188	

2
	movq %reg0, %r12	
	movq %r12, %rax	

2
	movq 0(%rdx), %r15	
	movq 64(%r15), %r15	

2
	movq $133, %reg0	
	movq $.string2_l, %rdi	

2
	movq -144(%rbp), %r10	
	imull %r10d	

2
	addl %edi, %eax	
	movq -120(%rbp), %reg3	

2
	idivl %reg0	
	movq -64(%rbp), %reg2	

2
.Main.main_1:	
	movq $0, %r12	

2
	movq -184(%rbp), %reg1	
	negl %ecx	

2
	movq $3, %reg0	
	movq %reg0, %r12	

2
	movq 24(%rax), %rsi	
	addl %reg2, %edi	

2
	idivl %r10d	
	movq %rax, %r9	

2
	movq 96(%reg0), %reg0	
	movq %r12, %rdi	

2
	movq $12, %rsi	
	movq -112(%rbp), %reg2	

2
	movq $.string6, %r12	
	movq 0(%rax), %reg2	

2
	movq -128(%rbp), %reg1	
	subl %edi, %reg3	

2
	movq %rdi, %rcx	
	cmpl %ecx, %r8d	

2
	movq %reg0, %reg1	
	movq $2147483647, %reg2	

2
	movq -72(%rbp), %rcx	
	addl %ecx, %reg3	

2
	movq 16(%rbx), %rdi	
	movq %reg2, %rsi	

2
	call *%rax	
	movq 0(%reg1), %r13	

2
	movq 0(%r12), %r14	
	movq 48(%r14), %r14	

2
	subl %reg0, %reg1d	
	movq $12, %reg2	

2
	movq %rax, %reg1	
	call Foo.new	

2
	movq $0, %reg0	
	movq %reg0, 104(%rax)	

2
	movq -72(%rbp), %reg1	
	imull %reg1d	

2
	movq %rdi, %rax	
	movq $3, %reg2	

2
	movq %rsi, %r8	
	movq %reg2, %rcx	

2
	testq $1, %rsi	
	je .Main.main_49	

2
	movq -72(%rbp), %r8	
	imull %r8d	

2
	movq $0, %rax	
	movq %rax, 48(%reg1)	

2
	movq -160(%rbp), %rcx	
	imull %ecx	

2
.Main.main_55:	
	cdq	

2
	movq 56(%r13), %r13	
	movq %r12, %rdi	

2
	movq %reg0, %reg1	
	movq $11, %reg0	

2
	.quad 1	
.string10_l:	

2
	movq %reg0, %rax	
	movq %r9, %r10	

2
	movq $2, %reg0	
	movq %reg0, 8(%rbx)	

2
	subl %eax, %r8d	
	movq %reg2, %rax	

2
	movq -24(%rbp), %rax	
	subl %eax, %reg3	

2
	movq 8(%reg0), %rsi	
	addl %ecx, %reg3	

2
	testq $1, %rsi	
	je .Main.main_14	

2
	imull %reg0	
	movq -184(%rbp), %rcx	

2
	movq -80(%rbp), %reg1	
	imull %ecx	

2
	movq -128(%rbp), %rax	
	subl %eax, %reg3	

2
	movq %r13, %reg1	
	movq $0, %r13	

1
	movq -72(%rbp), %reg1	
	subl %reg2, %eax	

1
	movq 0(%rax), %rbx	
	movq 112(%rbx), %rbx	

1
	addl %reg0d, %eax	
	movq -168(%rbp), %reg0	

1
	negl %ecx	
	movq -40(%rbp), %rax	

1
	movq $30773, %reg0	
	cmpl %edi, %eax	

1
	movq $Yaz_vtable, 0(%rax)	
	movq $0, %rdi	

1
	addl %edi, %reg1	
	movq $8340, %rdi	

1
	call *%reg0	
.Main.print_list_3:	

1
	je .Cons.sort_2	
	movq $76, %reg0	

1
	idivl %esi	
	movq $47308, %rsi	

1
	movq -104(%rbp), %reg1	
	movq %rsi, %rcx	

1
	movq %reg0, 24(%reg1)	
	jmp .DicNode.insert_5	

1
.Complex.equal_6:	
	popq %reg0	

1
	.size Main.funccaseb, .-Main.funccaseb	
	.globl Main.funcifi	

1
	movq $33, %reg0	
	movq $2, %rsi	

1
	movq %rax, %r8	
	movq -184(%rbp), %rax	

1
	subl %reg0, %eax	
	movq %rbx, %rdi	

1
	movq $7429, %rax	
	negl %reg1	

1
	call *%rax	
	jmp .Main.func_3	

1
	testq $1, %reg0	
	je .Main.main_192	

1
.Foo.new_5:	
	movq %rbx, %rax	

1
	call *%rax	
	movq 264(%reg1), %reg2	

1
	.globl Bazz.doh	
	.type Bazz.doh, @function	

1
	addl %edi, %reg1	
	movq %reg2, 24(%rbx)	

1
	xorq $1, %rax	
	jmp .Main.main_125	

1
	movq -184(%rbp), %rax	
	movq %reg2, %rdi	

1
	je .Main.main_75	
	movq %reg0, %reg1	

1
	movq $34533, %rax	
	movq $48880, %rdi	

1
	movq $103, %rsi	
	movq $.string5_l, %rdi	

1
	movq $10174, %rax	
	movq $22520, %rsi	

1
.Main.main_68:	
	movq -16(%rbp), %reg1	

1
	.type Foo.doh, @function	
Foo.doh:	

1
	call String.substr	
	movq %rax, %r15	

1
	setl %sil	
	jge .A2I.i2a_3	

1
	movq %rdi, 560(%rax)	
	movq $3000, %rdi	

1
	movq $1, %rbx	
	movq 8(%rax), %rdi	

1
	movq %rsi, %r12	
.Main.funcwhileb_1:	

1
	movq %r14, %rcx	
	call *%r15	

1
	movq -152(%rbp), %reg1	
	movq -80(%rbp), %rsi	

1
	je .Main.main_33	
	movq -88(%rbp), %rax	

1
	movq -64(%rbp), %reg1	
	negl %edi	

1
	call List.new	
	movq %reg0, -24(%rbp)	

1
	movq $0, %rdi	
	movq %rdi, 672(%reg1)	

1
	jmp .Main.main_4	
.Main.main_6:	

1
	movq %reg0, 8(%reg1)	
	movq %reg1, 8(%rbx)	

1
	addl %reg0, %ecx	
	movq -168(%rbp), %rax	

1
.Main.main_55:	
	movq %reg0, %rax	

1
	je .Main.main_157	
	movq $127, %rsi	

1
	jmp .Matrix.set_55	
.Matrix.set_54:	

1
	movq 8(%rax), %reg1	
	movq %r12, %rsi	

1
	movq -136(%rbp), %rsi	
	imull %esi	

1
	movq $38511, %reg0	
	subl %reg1, %reg2	

1
	movq %r13, 8(%rax)	
	movq 0(%rbx), %rax	

1
	movq $1073741824, %reg0	
	movq $4, %reg1	

1
	call *%reg0	
	movq 272(%rbx), %r12	

1
	je .Main.main_92	
	movq -56(%rbp), %reg1	

1
	idivl %esi	
	movq $27231, %rsi	

1
	movq %rax, %r8	
	movq $18429, %r9	

1
	.string "         X         "	
.string10:	

1
	addl %eax, %ecx	
	movq -112(%rbp), %rax	

1
	movq -80(%rbp), %rax	
	movq -144(%rbp), %reg3	

1
	jne .Main.main_142	
	movq %reg0, %rdi	

1
	subl %eax, %reg1	
	movq $50998, %reg2	

1
	movq $0, %rax	
.Main.main_1:	

1
	movq $324, %r13	
	movq $12, %reg1	

1
	movq %r14, %rax	
	movq -160(%rbp), %reg3	

1
	movq $8, %rax	
	movq %rax, -104(%rbp)	

1
	call *%rax	
	movq 664(%rbx), %rax	

1
	movq %r12, %rbx	
	addl %ebx, %reg3	

1
	movq $.string7, %rax	
	movq %rax, 24(%reg1)	

1
	movq %rdi, %reg1	
	movq -56(%rbp), %reg1	

1
	call *%reg0	
	jmp .Main.funccaseb_3	

1
.A2I.c2i_18:	
.A2I.c2i_16:	

1
	jne .Complex.print_1	
	movq 8(%reg0), %rbx	

1
	movq $0, %reg0	
	movq %reg0, 448(%rax)	

1
	movq 216(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	addl %reg0, %reg1	
	movq %rax, 40(%rbx)	

1
	movq $.string7, %rdi	
	movq %rbx, %r12	

1
	movq $201, %rsi	
	movq $.string5_l, %reg1	

1
	movq %reg0, %r13	
	movq $.string10, %r14	

1
	movq %reg0, %reg1	
	jmp .Main.main_114	

1
.Main.main_69:	
	movq %reg0, %rdx	

1
	testq $1, %reg0	
	je .Main.func2_1	

1
	movq %reg0, 504(%rax)	
	movq $0, %reg0	

1
	movq $52306, %reg0	
	negl %reg1	

1
.Matrix.get_49:	
	movq $1, %reg0	

1
	movq -128(%rbp), %rdi	
	negl %edi	

1
	jne .Main.main_21	
	movq $1, %r12	

1
	imull %esi	
	movq $13, %rsi	

1
	cmpq $Razz_vtable, 0(%reg0)	
	je .Bar.new_15	

1
	movq %reg0, 136(%rax)	
	movq $3000, %reg0	

1
	movq $38801, %reg0	
	cmpl %eax, %reg2	

1
	call Bool.new	
	movq 0(%rbx), %reg1	

1
	call out_error	
.Razz.new_19:	

1
	idivl %reg0d	
	movq -104(%rbp), %reg2	

1
	jge .Main.main_29	
	movq %reg0, %reg1	

1
	je .Main.main_21	
	movq $30, %reg0	

1
	je .Main.main_8	
	movq $163, %rsi	

1
	negl %eax	
	movq %rbx, %rsi	

1
	movq %rax, 32(%reg1)	
.Main.new_1:	

1
	movq %rbx, %reg1	
	movq %reg2, %rcx	

1
	sete %reg0b	
	jne .A2I.c2i_9	

1
.Main.print_list_1:	
	movq 0(%reg0), %reg1	

1
.Main.main_78:	
	movq %reg0, %reg1	

1
	setle %reg0	
	jmp .Main.main_155	

1
	movq $43604, %reg0	
	addl %eax, %ecx	

1
	addl %reg0, %esi	
	movq -24(%rbp), %rax	

1
	movq %rdi, 232(%reg1)	
	movq $0, %rdi	

1
	testq $1, %rcx	
	je .Main.main_117	

1
	movq $15079, %rax	
	negl %eax	

1
	movq -24(%rbp), %reg1	
	addl %reg1d, %eax	

1
.Main.func_3:	
	movq 0(%reg0), %reg1	

1
	setl %r12b	
	jge .Main.main_1	

1
	movq %rdi, %rbx	
	jmp .Main.func_2	

1
.A2I.a2i_5:	
	movq 0(%rbx), %reg1	

1
	movq $2562, %reg0	
	imull %reg0d	

1
	addl %ecx, %reg1	
	movq -64(%rbp), %reg3	

1
	movq %reg0, %reg1	
	movq $33, %reg0	

1
	movq 0(%rax), %r12	
	movq 152(%r12), %r12	

1
	addl %edi, %reg1	
	movq %rax, 56(%reg3)	

1
	call *%reg0	
	jmp .A2I.i2a_4	

1
	movq %rax, %reg1	
	movq $30605, %rax	

1
	movq -112(%rbp), %reg1	
	movq -128(%rbp), %reg3	

1
	movq $3000, %reg0	
	movq %reg0, 584(%reg1)	

1
	movq %r13, %reg1	
	addl %esi, %eax	

1
	subl %reg0, %reg1	
	movq -96(%rbp), %rdi	

1
	movq %reg0, 8(%rax)	
	movq %rax, 32(%reg2)	

1
	movq %rax, %reg1	
	movq %r15, %rax	

1
	movq $0, %reg0	
	cmpl %reg1, %r12d	

1
	je .Main.main_177	
	movq $308, %rsi	

1
	movq %rdi, %rbx	
	movq $5, %r12	

1
	movq -120(%rbp), %rsi	
	movq -48(%rbp), %rax	

1
	imull %esi	
	movq -96(%rbp), %reg2	

1
	movq %reg0, %reg1	
	jmp .Main.main_44	

1
	movq -16(%rbp), %reg1	
	subl %reg2d, %eax	

1
	je .Main.main_111	
	movq $67, %reg0	

1
	movq $.string7, %rbx	
	movq 0(%reg1), %reg2	

1
	movq $48557, %rax	
	negl %eax	

1
.Main.main_96:	
	movq %reg0, %reg1	

1
	movq $0, %reg0	
	movq $44, %reg1	

1
	jne .Matrix.set_54	
	movq %rdi, 168(%reg1)	

1
	movq $208, %rdi	
	call getmem	

1
	movq $name_Object, %rax	
	movq 0(%rbx), %r12	

1
	movq %reg0, %rbx	
	movq $name_Int, %r12	

1
	setle %reg0l	
	jg .Main.main_131	

1
.Matrix.set_43:	
	movq $3, %r8	

1
	call *%reg0	
	movq 72(%reg1), %reg2	

1
	movq %reg0, 224(%reg1)	
	movq $0, %reg0	

1
	ret	
	.size Complex.y_value, .-Complex.y_value	

1
	movq %rdi, 608(%reg1)	
	movq $0, %rdi	

1
	movq %rdi, 248(%reg1)	
	movq $3000, %rdi	

1
	movq %rsp, %rbp	
	movq $32, %rdi	

1
	movq %reg0, %reg1	
	jmp .Main.main_99	

1
.Main.main_115:	
	movq %rbx, %reg1	

1
	movq 152(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq $2985, %r11	
	negl %r11d	

1
	sete %r8b	
	jne .Matrix.set_45	

1
	movq $45807, %reg0	
	subl %reg1, %reg2	

1
	movq 104(%r12), %r12	
	movq %reg1, %rdi	

1
.Main.main_78:	
	movq -16(%rbp), %rax	

1
	subl %ebx, %reg1	
	movq $61208, %reg2	

1
	movq $8, %reg0	
	movq %reg1, %reg2	

1
	movq $6934, %rsi	
	movq $0, %rcx	

1
.Matrix.set_15:	
	movq $2, %reg0	

1
	movq $10152, %reg0	
	movq $18046, %rdi	

1
	movq 32(%reg0), %rdi	
	movq %rdi, 40(%reg0)	

1
	movq %reg0, %reg1	
	movq %rcx, %r13	

1
	movq -152(%rbp), %reg1	
	movq -112(%rbp), %reg3	

1
.Main.main_183:	
.Main.main_60:	

1
	movq 568(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq %reg0, %rax	
	jmp .Bar.new_17	

1
	movq $52033, %rax	
	subl %reg1, %esi	

1
.Main.funccase_7:	
	movq $0, %r12	

1
	pushq %r12	
	movq %rsi, %reg2	

1
	je .Main.main_75	
	movq $52, %reg0	

1
	movq %rax, %rbx	
.Main.main_1:	

1
	movq $.string10, %rdi	
	movq %rbx, %reg2	

1
	je .Matrix.get_25	
	movq $49, %rsi	

1
	movq %reg0, %reg1	
	movq 24(%rbx), %reg0	

1
	movq $empty_string, %rax	
	movq %rax, %rdi	

1
	idivl %r9d	
	subl %reg1, %r8d	

1
	movq 408(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	movq $39, %reg0	
	movq %reg0, 8(%rax)	

1
	subl %eax, %reg1	
	movq -112(%rbp), %rax	

1
	setl %dil	
	jge .Main.main_7	

1
	subl %reg0, %edi	
	movq $25241, %rax	

1
	movq $List_vtable, 0(%reg0)	
	movq $0, %reg1	

1
	movq 24(%rax), %rdi	
	movq %rbx, %rsi	

1
	je .Main.new_6	
	movq $55, %rsi	

1
.Main.out_whatever_3:	
	movq %reg0, %reg1	

1
	movq 16(%rax), %rdi	
	addl %reg2, %reg3	

1
	movq $3000, %reg0	
	movq %reg0, 640(%reg1)	

1
	call *%rax	
	movq 376(%reg1), %rax	

1
	movq %rax, %r8	
	movq -16(%rbp), %rax	

1
	testq $1, %rcx	
	je .Main.main_191	

1
	call Object.copy	
	movq %rax, %rdi	

1
	jne .Main.main_113	
	movq -48(%rbp), %rax	

1
	movq %rsi, %reg1	
	movq -48(%rbp), %reg1	

1
	je .Main.main_109	
	movq $67, %reg0	

1
	movq $50998, %reg0	
	addl %reg1, %edi	

1
	movq %reg0, 648(%reg1)	
	movq $3000, %reg0	

1
	movq -136(%rbp), %reg1	
	movq $0, %rcx	

1
	movq $16693, %reg0	
	movq $2211, %reg1	

1
	testq $1, %rax	
	je .Foo.new_13	

1
	jge .Main.main_138	
	movq %r12, %rax	

1
	movq 136(%reg0), %reg0	
	movq %r12, %rdi	

1
	movq %reg0, 248(%rax)	
	movq $3000, %reg0	

1
	movq -48(%rbp), %rsi	
	movq %reg2, %rax	

1
	movq -32(%rbp), %rax	
	addl %eax, %reg3	

1
	jne .Matrix.get_2	
	movq 8(%rax), %rax	

1
	je .Main.func_3	
	cmpq $IO_vtable, 0(%rsi)	

1
	movq $10174, %reg0	
	movq $22520, %reg1	

1
	movq %rdi, %rax	
	movq -144(%rbp), %rdi	

1
.Main.main_10:	
	movq 0(%reg0), %r13	

1
	jmp .Complex.equal_6	
.Complex.equal_2:	

1
	movq $0, %reg0	
	movq %reg0, 496(%rax)	

1
	movq 8(%reg0), %reg1	
	movq $2, %reg2	

1
	movq 24(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq %rax, %r12	
	movq 0(%rbx), %r13	

1
.Main.main_5:	
	movq 0(%reg0), %r15	

1
	movq $53181, %reg0	
	addl %reg0d, %eax	

1
	movq -48(%rbp), %rsi	
	negl %esi	

1
	call *%rax	
.Main.main_24:	

1
	movq 120(%rax), %rax	
	jmp .Matrix.get_37	

1
	movq -80(%rbp), %rsi	
	subl %esi, %reg3	

1
	movq 8(%rax), %reg1	
	call String.length	

1
	movq $0, %reg0	
	movq %reg0, 376(%rax)	

1
	.size Nil.rcons, .-Nil.rcons	
	.globl Nil.print_list	

1
	cmpq $Int_vtable, 0(%rdi)	
	je .Main.main_16	

1
	movq $3000, %rdi	
	movq %rdi, 88(%rax)	

1
	testq $1, %rax	
	je .Razz.new_13	

1
	movq $107, %reg0	
	movq $.string4_l, %rdi	

1
	call *%rax	
.Main.main_52:	

1
	movq %reg0, 536(%reg1)	
	movq $0, %reg0	

1
.Bar.new_15:	
	call Bar.new	

1
	movq %reg0, %rcx	
	movq -16(%rbp), %reg0	

1
.Main.main_124:	
	cdq	

1
	negl %eax	
	movq $35, %rsi	

1
	testq $1, %rax	
	je .Main.print_list_4	

1
	movq %rsi, %rcx	
	movq %reg2, %reg3	

1
	je .Main.main_52	
	movq $34, %rsi	

1
	addl %reg0, %ebx	
	movq $47041, %reg2	

1
	je .Main.main_179	
	movq $308, %rsi	

1
	setle %sil	
	jg .Main.main_73	

1
	subl %ecx, %eax	
	movq %rbx, %rcx	

1
	movq 552(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	je .Main.main_7	
.Main.main_6:	

1
	movq $empty_string, %rdi	
	movq %rdi, %r12	

1
.Main.out_whatever_4:	
	movq %reg0, %r12	

1
	movq -144(%rbp), %rax	
	movq -168(%rbp), %rdi	

1
	movq $107, %rsi	
	movq $.string3_l, %rdi	

1
	movq %rax, %reg1	
	movq $1, %r13	

1
	movq 8(%rbx), %r12	
	movq 24(%rbx), %rax	

1
	jmp .Matrix.get_55	
.Matrix.get_54:	

1
	ret	
	.size Foo.set, .-Foo.set	

1
	movq $.string15, %rax	
	jmp .A2I.i2c_18	

1
.Main.main_111:	
	cdq	

1
	movq %rax, %r13	
	movq $2, %rdi	

1
	movq %rax, 56(%rbx)	
	movq $1, %rax	

1
	testq $1, %r10	
	je .Main.main_72	

1
	movq $.string8, %r12	
	cmpl $0, %reg1	

1
	movq -48(%rbp), %reg1	
	movq -88(%rbp), %reg3	

1
	movq $6, %reg0	
	movq %reg0, -64(%rbp)	

1
	negl %eax	
	movq $15469, %rdi	

1
	movq %rax, %reg1	
	movq $20995, %rax	

1
	movq -96(%rbp), %reg1	
	cmpl %reg2, %esi	

1
	je .Main.main_5	
	movq $147, %reg0	

1
	je .Main.main_88	
	movq $64, %rsi	

1
	movq $55318, %rdi	
	subl %reg1, %eax	

1
	jne .Matrix.set_49	
	movq %rdi, 160(%rax)	

1
	movq $3000, %rdi	
	movq %rdi, 728(%reg1)	

1
	movq $135, %rsi	
	movq $.string3_l, %reg1	

1
	je .Main.main_8	
	movq $11, %rsi	

1
	movq 48(%reg0), %reg1	
	movq %reg1, 64(%reg0)	

1
	movq 432(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq %reg0, %r9	
	negl %r9d	

1
	call *%r12	
	movq 200(%reg1), %reg2	

1
	movq $empty_string, %reg0	
	movq %rax, %r12	

1
	movq -144(%rbp), %rdi	
	movq -48(%rbp), %reg3	

1
.Main.main_25:	
	movq -80(%rbp), %rax	

1
	call *%reg0	
	movq 440(%reg1), %reg2	

1
	setle %reg0l	
	jg .Main.main_105	

1
.Main.main_57:	
	movq -96(%rbp), %rsi	

1
	.quad .string2	
	.quad 2	

1
	movq 152(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	addl %esi, %eax	
	movq -80(%rbp), %rsi	

1
	addl %reg0, %edi	
	movq $25947, %reg2	

1
	movq $3306, %reg0	
	movq $61695, %reg1	

1
	call *%rax	
	movq 288(%rbx), %reg2	

1
	setl %dil	
	jge .Main.new_4	

1
.Main.funcifi_2:	
	popq %reg0	

1
	movq -104(%rbp), %rdi	
	negl %reg2	

1
	call *%reg0	
	movq 488(%rbx), %rax	

1
.Main.main_129:	
	movq %reg0, %reg1	

1
	movq $9556, %rdi	
	cmpl %reg1, %eax	

1
	movq %rcx, %reg1	
	movq -136(%rbp), %rcx	

1
	call out_error	
.Main.main_151:	

1
	imull %reg0d	
	movq $38208, %reg0	

1
	movq $28968, %reg0	
	movq $32079, %rdi	

1
	movq -136(%rbp), %reg1	
	movq %reg2, %rdx	

1
	movq 696(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	jmp .A2I.i2c_20	
.A2I.i2c_19:	

1
	movq $26083, %reg0	
	movq $56556, %reg1	

1
	subl %reg0, %eax	
	movq -96(%rbp), %rdi	

1
Complex.y_value:	
	pushq %rbp	

1
	sete %cl	
	jne .Matrix.get_45	

1
	.globl Main.funccaseb	
	.type Main.funccaseb, @function	

1
	jmp .Main.funccase_5	
.Main.funccase_3:	

1
	movq $0, %rdi	
	movq %rdi, 672(%rax)	

1
.Bar.new_5:	
	movq %reg0, %rax	

1
	movq $61139, %reg0	
	movq 0(%rbx), %r12	

1
.Matrix.get_54:	
	movq $2, %rcx	

1
	subl %edi, %eax	
	movq -96(%rbp), %rdi	

1
	movq %reg0, -104(%rbp)	
	movq $16, %reg0	

1
	movq $3000, %rdi	
	movq %rdi, 648(%reg1)	

1
	movq $16420, %reg0	
	negl %reg1	

1
	movq $57936, %rsi	
	movq $0, %reg1	

1
	subl %esi, %eax	
	subl %eax, %edi	

1
	je .Main.main_85	
	movq $61, %reg0	

1
	movq -16(%rbp), %reg1	
	movq -128(%rbp), %rsi	

1
	movq %rdi, %rax	
	jmp .Main.main_50	

1
	je .Main.main_11	
	movq $17, %rsi	

1
	je .Main.main_64	
	movq $17, %rsi	

1
	movq %rbx, %rax	
	imull %ecx	

1
	movq $5, %reg0	
	addl %reg1, %reg2	

1
	movq -176(%rbp), %reg1	
	movq -136(%rbp), %reg3	

1
	movq $0, %reg0	
	movq %reg0, 608(%reg1)	

1
	movq 184(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq -72(%rbp), %rax	
	movq $0, %r10	

1
	movq -64(%rbp), %reg1	
	imull %esi	

1
	jne .Matrix.set_8	
	movq %rdi, 32(%reg1)	

1
	movq $0, %rdi	
	movq %rdi, 216(%rax)	

1
	je .Bar.new_10	
	cmpq $Razz_vtable, 0(%reg0)	

1
	movq $7258, %reg0	
	negl %esi	

1
	addl %eax, %reg1	
	movq $30018, %rax	

1
	subl %ecx, %reg1d	
	movq %reg1, %rcx	

1
	movq -16(%rbp), %reg1	
	movq %r12, %rdi	

1
	subl %r8d, %eax	
	movq -112(%rbp), %r8	

1
.Main.main_167:	
	jmp .Main.main_168	

1
.Main.main_3:	
	movq $.string7, %r12	

1
	movq 632(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	movq $30996, %rsi	
	movq $0, %rcx	

1
	movq %rdi, 48(%rbx)	
	cmpl %reg2, %reg3	

1
	movq -32(%rbp), %rax	
	movq %rcx, %reg3	

1
	movq %reg0, %rdx	
	movq %rdx, -96(%rbp)	

1
	movq %reg0, 8(%reg1)	
.Main.main_39:	

1
	movq %reg0, %reg1	
	cmpl %reg1d, %ecx	

1
	movq %reg0, %r8	
	movq -184(%rbp), %reg0	

1
	.quad Foo.doh	
Bar_vtable:	

1
	movq %r12, %rsi	
	cmpl %reg2, %eax	

1
	jmp .Main.main_4	
.Main.main_1:	

1
	je .Main.main_21	
	movq $30, %rsi	

1
	movq %reg0, 648(%rax)	
	movq $0, %reg0	

1
.Main.main_113:	
	movq -144(%rbp), %reg1	

1
	movq -8(%rbp), %reg1	
	movq -88(%rbp), %rsi	

1
	movq 8(%reg0), %rdx	
	call *%r14	

1
	movq %r12, 8(%reg1)	
	movq %reg1, 72(%reg2)	

1
	idivl %reg0	
.Matrix.get_63:	

1
	movq %reg0, %rax	
	movq $50929, %reg0	

1
	je .Main.main_15	
	movq $157, %rsi	

1
	movq $36519, %reg0	
	imull %reg0d	

1
.A2I.i2c_5:	
	movq $3, %reg0	

1
	call *%rax	
	movq $0, %reg1	

1
	movq $3, %rbx	
	movq 0(%reg1), %reg1	

1
	movq 248(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq %reg0, 392(%rax)	
	movq $0, %reg0	

1
	movq %rbx, %reg1	
	movq -48(%rbp), %reg3	

1
	call *%rax	
	movq 520(%rbx), %r12	

1
	setle %reg0l	
	cmpl %edi, %eax	

1
	imull %r11d	
	movq $36519, %r11	

1
	movq %reg0, %reg1	
	movq $1, %r13	

1
	jne .Matrix.set_41	
	movq %reg0, 128(%reg1)	

1
	call *%reg0	
	movq 624(%rbx), %reg0	

1
	addl %reg0, %eax	
	movq $4, %reg2	

1
	movq 248(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq %reg0, 200(%rax)	
	leave	

1
	jg .Main.main_46	
	movq $55166, %rax	

1
	je .Main.main_25	
	movq %reg0, %reg1	

1
	movq $1, %rcx	
	movq 8(%reg1), %reg2	

1
	testq $1, %rax	
	jne .Main.main_71	

1
	imull %esi	
	movq $28379, %rsi	

1
	movq %reg0, %rax	
	jmp .Main.main_101	

1
	movq %reg0, %reg1	
	movq $5, %rdi	

1
	addl %reg0, %eax	
	movq %rax, 40(%reg3)	

1
	jg .Main.main_105	
	movq %reg0, %reg1	

1
	movq $52033, %reg0	
	subl %eax, %esi	

1
	call *%rax	
	movq 640(%reg1), %r12	

1
	movq %reg0, %rax	
	movq -64(%rbp), %r8	

1
	.size DicNode.next, .-DicNode.next	
	.globl DicNode.setNext	

1
	subl %reg0, %eax	
	movq -16(%rbp), %reg3	

1
	negl %eax	
	movq -88(%rbp), %rdi	

1
	call *%rax	
	movq $19322, %rax	

1
	movq -72(%rbp), %rdi	
	negl %reg2	

1
	movq %reg0, %rax	
	movq %rax, 56(%rbx)	

1
	movq $34422, %rax	
	subl %eax, %reg2	

1
.Main.main_6:	
	movq -24(%rbp), %reg1	

1
	movq $1, %rbx	
	movq 8(%rax), %reg2	

1
	movq $3306, -32(%rbp)	
	movq $61695, %reg1	

1
	call *%rax	
	movq 296(%rbx), %reg2	

1
	movq 16(%reg0), %reg1	
	movq 32(%reg0), %r12	

1
	je .Main.main_5	
	movq $8, %reg0	

1
	movq -8(%rbp), %rdi	
	movq -168(%rbp), %rsi	

1
	movq 8(%reg0), %r13	
	movq 0(%rbx), %rax	

1
.Main.main_94:	
	movq %r15, %rax	

1
	call *%reg0	
	movq 48(%rbx), %reg2	

1
	imull %reg0	
	movq $840, %rsi	

1
.Main.main_55:	
	movq %r15, %reg1	

1
	movq 56(%r12), %r12	
	movq 24(%rax), %reg2	

1
	jne .Matrix.set_36	
	movq %rdi, 120(%rax)	

1
	testq $1, %reg0	
	je .Cons.sort_2	

1
	.globl A2I.i2a_aux	
	.type A2I.i2a_aux, @function	

1
	.quad Foo.getX	
	.quad Foo.setX	

1
	movq %reg0, %reg1	
	movq $.string7, %rbx	

1
	movq %rdi, %rax	
	jmp .Main.main_26	

1
.Main.main_43:	
	cmpl $0, %reg0	

1
	movq %reg0, 336(%rax)	
	movq $0, %reg0	

1
	testq $1, %rax	
	je .Main.out_whatever_1	

1
	movq %rdi, 168(%rax)	
	movq $3000, %rdi	

1
	subl %eax, %r9d	
	movq %r8, %reg3	

1
	movq $.string12, %reg0	
	jmp .A2I.i2c_12	

1
	.string "\\\\"	
.string9:	

1
	movq $12660, %reg0	
	negl %reg1	

1
	movq %reg0, 24(%rax)	
	movq %reg0, %rax	

1
	je .Main.main_115	
	movq -72(%rbp), %reg1	

1
	movq 16(%reg0), %reg1	
	movq %r12, %rdi	

1
	movq $A2I_vtable, 0(%reg0)	
	leave	

1
	idivl %esi	
	movq -64(%rbp), %rsi	

1
.CellularAutomaton.cell_right_neighbor_1:	
	movq $1, %rdi	

1
	movq $51233, %rax	
	movq $33158, %rsi	

1
	movq %reg0, %rbp	
	movq $744, %rdi	

1
	negl %reg0	
	movq -64(%rbp), %rcx	

1
	movq -128(%rbp), %rax	
	movq -168(%rbp), %reg3	

1
.Main.main_46:	
	movq 0(%rax), %r13	

1
	jge .Main.main_146	
	movq -152(%rbp), %rax	

1
	movq %rdi, %reg1	
.Main.main_157:	

1
.Matrix.set_20:	
.Matrix.set_18:	

1
	movq $33, %rax	
	movq $2, %rsi	

1
.Main.main_5:	
	movq $.string8, %reg0	

1
	cmpq $Main_vtable, 0(%rdi)	
	je .Main.out_whatever_2	

1
.Main.main_135:	
	cdq	

1
	movq %rdi, %reg1	
	jmp .Main.main_106	

1
	subl %eax, %ecx	
	movq %rsi, %rax	

1
	idivl %reg0	
	movq $14901, %rsi	

1
	je .Main.main_61	
	movq $49, %reg0	

1
	movq %reg0, %rbp	
	subq $128, %reg0	

1
	je .Main.main_123	
	movq $70, %reg0	

1
	movq %reg0, 64(%reg1)	
	movq %reg0, %reg1	

1
	movq -88(%rbp), %reg1	
	imull %esi	

1
	movq -168(%rbp), %r8	
	movq %reg2, %reg3	

1
	movq -136(%rbp), %rax	
	addl %eax, %edi	

1
	movq 8(%reg0), %reg0	
	addl %reg1, %eax	

1
	movq %rax, %reg1	
	movq $8423, %rax	

1
	movq $11, %r14	
	cmpl $0, %reg1d	

1
	movq $162, %reg0	
	movq $.string2_l, %reg1	

1
	movq $29790, %reg0	
	subl %esi, %edi	

1
.string6_l:	
	.string "ERROR: %lld: Exception: case on void\n"	

1
.Bar.new_13:	
	movq 16(%rbx), %rdx	

1
	movq 16(%reg0), %reg1	
	negl %eax	

1
	movq %reg0, %reg1	
.CellularAutomaton.cell_at_next_evolution_2:	

1
	movq 176(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	jge .Main.main_22	
	movq $48027, %r12	

1
	idivl %reg0d	
	movq -144(%rbp), %r10	

1
	movq 680(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq $14546, %rax	
	subl %eax, %reg2	

1
	negl %reg0	
	movq $58688, %rbx	

1
.Main.main_2:	
	movq %rsi, %rbx	

1
	movq 432(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	jmp .Main.main_17	
.Main.main_16:	

1
	movq 16(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq %rax, %reg1	
	movq $.string9, %r13	

1
	idivl %reg0	
	movq $39267, %reg1	

1
	movq -88(%rbp), %reg1	
	movq -96(%rbp), %reg3	

1
	movq -88(%rbp), %reg1	
	movq %rbx, %rdi	

1
	movq 16(%reg0), %reg1	
	subl %edi, %reg3	

1
.string7_l:	
	.string "!"	

1
	call *%rax	
	movq 616(%rbx), %rax	

1
.DicNode.insert_3:	
	cmpl $0, 24(%reg0)	

1
	movq $.string8, %reg0	
	movq %rbx, %reg2	

1
	cmpq $Bar_vtable, 0(%reg0)	
	je .Razz.new_16	

1
	movq $0, %rdi	
	movq %rbx, %reg2	

1
	movq -112(%rbp), %rax	
	addl %ecx, %reg3	

1
	movq -64(%rbp), %reg1	
	subl %reg2, %eax	

1
	call Razz.new	
	jmp .Foo.new_6	

1
	movq %rdi, %reg1	
	cmpl $0, %edi	

1
.Main.main_2:	
	movq 8(%rax), %rax	

1
	movq %rdi, %reg1	
	movq 48(%reg2), %reg3	

1
	jne .A2I.i2c_17	
	movq $.string15, %reg0	

1
	movq %reg0, %rax	
	jmp .Main.main_65	

1
.Main.main_5:	
	popq %r13	

1
	jmp .Matrix.set_16	
.Matrix.set_15:	

1
Bazz_vtable:	
	.quad .string3	

1
	movq $30, %rsi	
	movq $.string5_l, %rdi	

1
	testq $1, %rax	
	je .Main.main_67	

1
	ret	
	.size Main.funccasei, .-Main.funccasei	

1
	addl %reg0, %reg1	
	movq %rax, 56(%reg3)	

1
	movq %r12, %reg1	
	movq 8(%rbx), %r14	

1
	movq -176(%rbp), %reg1	
	movq %reg2, %rax	

1
	movq $34, %rsi	
	movq $.string1_l, %rdi	

1
	addl %reg0, %reg1	
	movq %reg2, 56(%reg3)	

1
	je .Foo.new_9	
	cmpq $Foo_vtable, 0(%rbx)	

1
	movq %reg0, -8(%rbp)	
	movq $100, %reg2	

1
	sete %r9b	
	jne .Matrix.set_27	

1
	movq %r12, 8(%reg1)	
	movq %reg1, 16(%reg2)	

1
	movq %reg0, %reg1	
	movq $13, %rbx	

1
	movq %rdi, %rax	
	jmp .Matrix.set_61	

1
	je .Main.main_124	
	movq -32(%rbp), %rax	

1
	call *%r14	
	movq %rax, %r13	

1
	movq $.string14, %r12	
	movq 0(%reg1), %reg2	

1
	movq $15505, %reg0	
	addl %eax, %reg2	

1
.Main.main_112:	
.Main.main_110:	

1
	je .Main.main_4	
	movq $6, %reg0	

1
	call *%rbx	
	call Int.new	

1
.Main.main_18:	
	movq $21613, %r12	

1
.Main.funccase_1:	
	cmpq $Int_vtable, 0(%reg0)	

1
	jge .Main.main_138	
	movq %reg0, %reg1	

1
	movq 8(%rbx), %rsi	
	call IO.out_string	

1
	movq -24(%rbp), %reg1	
	negl %eax	

1
	movq %reg0, %rax	
	movq $.string6, %reg2	

1
	jmp .Main.main_160	
.Main.main_131:	

1
	je .Main.main_144	
	movq -152(%rbp), %rax	

1
	movq $118, %rsi	
	movq $.string2_l, %rdi	

1
	idivl %reg0	
	movq -112(%rbp), %rsi	

1
.Main.main_46:	
.Main.main_44:	

1
	sete %reg0b	
	jne .Matrix.set_45	

1
	movq $38511, %rax	
	subl %eax, %reg2	

1
	movq %reg0, %rdi	
	movq $30605, %reg0	

1
	movq -120(%rbp), %rax	
	addl %edi, %eax	

1
	movq $3000, %rdi	
	movq %rdi, 40(%rax)	

1
	testq $1, %reg0	
	je .Bar.new_1	

1
	movq %rdi, 424(%rax)	
	movq $0, %rdi	

1
	movq %reg0, %r14	
	movq %rbx, %rdi	

1
	movq -32(%rbp), %rax	
	movq -64(%rbp), %reg3	

1
	movq 8(%reg0), %reg1	
	negl %eax	

1
	movq -152(%rbp), %reg1	
	addl %eax, %esi	

1
	jge .Main.main_29	
	movq $.string7, %reg0	

1
	movq $1, %rdi	
	negl %reg1	

1
Foo.get:	
	pushq %reg0	

1
	addl %eax, %reg1	
	movq -88(%rbp), %reg3	

1
	movq $10, %rsi	
	movq %rdi, %rax	

1
	call out_error	
.Foo.new_13:	

1
	movq %reg0, %rdi	
	movq $50538, %reg0	

1
	movq $22802, %reg0	
	addl %reg1, %reg2d	

1
	je .Main.main_152	
	movq $115, %reg0	

1
.Main.main_9:	
	movq $0, %rax	

1
	movq -24(%rbp), %rcx	
	negl %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 544(%reg1)	

1
.Main.main_29:	
	movq 0(%r13), %rax	

1
	movq %rax, %rsi	
	movq $50347, %rax	

1
	movq %rdi, 328(%reg1)	
	movq $0, %rdi	

1
	je .Main.main_140	
	movq -152(%rbp), %reg1	

1
	jg .Main.main_131	
	movq -48(%rbp), %reg1	

1
	movq %r12, 8(%reg1)	
	movq 8(%rbx), %r12	

1
	movq $0, %rax	
	movq -16(%rbp), %reg2	

1
	movq 88(%rbx), %rax	
	movq 0(%rbx), %r12	

1
.Main.main_22:	
	movq $.string9, %reg0	

1
	movq $48027, %reg0	
	movq 0(%rbx), %rax	

1
	call out_error	
.Main.main_120:	

1
	movq 176(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
.Main.main_25:	
	movq $17107, %rax	

1
.Main.main_191:	
	movq $0, %rax	

1
	movq $3000, %rdi	
	movq %rdi, 288(%rax)	

1
	movq -64(%rbp), %rdi	
	imull %edi	

1
	movq $0, %reg0	
	movq $0, %rax	

1
	movq -168(%rbp), %rax	
	movq -104(%rbp), %reg3	

1
	pushq %reg0	
	movq $24, %rdi	

1
	movq %rdi, 352(%rax)	
	movq $3000, %rdi	

1
	call *%reg0	
	movq 488(%reg1), %rax	

1
	je .Main.main_3	
	movq $8, %rsi	

1
	movq $16420, %rsi	
	negl %esi	

1
	movq %r15, %rsi	
	cmpl %esi, %reg3	

1
	je .Main.main_39	
	movq $34, %reg0	

1
	je .Main.main_41	
	movq $70, %reg0	

1
	movq $8640, %reg0	
	imull %reg1	

1
	movq $15755, %rsi	
	imull %reg1	

1
	call *%reg0	
	movq %rbx, %rdi	

1
	jge .Main.main_30	
	movq $46404, %r12	

1
	call out_error	
.Main.main_114:	

1
	movq $45807, %rax	
	subl %eax, %reg2	

1
	movq %r12, %reg1	
	cmpl %esi, %eax	

1
	idivl %ecx	
	movq $46154, %rsi	

1
	testq $1, %reg0	
	je .Main.main_139	

1
	movq $7, %rax	
	jmp .A2I.c2i_16	

1
.Main.main_4:	
	movq $2, %rdi	

1
	movq $14546, %reg0	
	subl %reg1, %reg2	

1
	addl %reg0, %reg1d	
	movq $7429, %reg2	

1
	.quad Matrix.mul	
	.text 	

1
	call *%r12	
	call Bar.new	

1
	movq -24(%rbp), %reg1	
	movq -120(%rbp), %reg3	

1
.string16:	
	.quad String_vtable	

1
	movq $0, %rdi	
	movq %rax, %reg2	

1
	movq %reg0, %rbx	
	jmp .Main.func_2	

1
	movq $97, %rsi	
	movq $.string2_l, %reg1	

1
	movq 416(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq %reg0, %rdi	
	movq $33, %reg0	

1
A2I.i2c:	
	pushq %rbp	

1
	movq -80(%rbp), %rax	
	movq -112(%rbp), %rdi	

1
	movq $18841, %rax	
	movq $54759, %reg1	

1
.Main.new_5:	
	testq $1, %rax	

1
	movq -48(%rbp), %rax	
	subl %eax, %r8d	

1
	movq $60606, %rax	
	cmpl %reg1, %edi	

1
	movq $8640, %rdi	
	imull %reg1	

1
	movq -152(%rbp), %rsi	
	negl %reg2	

1
	je .Main.new_2	
	movq $1, %rdi	

1
	jmp .Main.main_29	
.Main.main_20:	

1
	movq %rbx, %rax	
	cmpl %edi, %reg3	

1
	subl %reg0, %edi	
	movq $48672, %rax	

1
	subl %eax, %edi	
	movq %rdi, -16(%rbp)	

1
	movq %rax, %r8	
	movq -24(%rbp), %rax	

1
	movq -72(%rbp), %reg1	
	addl %ecx, %esi	

1
	movq %reg0, %rax	
	movq $5, %rdi	

1
	movq 648(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	testq $1, %rbx	
	je .Main.main_40	

1
	subq $40, %reg0	
	pushq %reg1	

1
	movq %rdi, %rax	
	jmp .Main.main_71	

1
	jne .Matrix.get_40	
	movq $1, %rcx	

1
	je .Main.main_116	
	movq $67, %rsi	

1
	setl %r13b	
	jge .Main.main_3	

1
	cmpq $Object_vtable, 0(%reg0)	
	je .Main.main_23	

1
	je .Main.main_66	
	movq $218, %reg0	

1
.string7_l:	
	.string "\\t"	

1
	movq %reg0, 8(%reg1)	
.Main.new_11:	

1
	idivl %reg0	
	movq $2739, %rsi	

1
.Main.new_11:	
	movq 32(%rbx), %reg1	

1
	subl %eax, %reg1	
	movq %reg2, -16(%rbp)	

1
	movq $3000, %reg0	
	movq %reg0, 472(%rax)	

1
	movq $4, %reg0	
	movq %r12, %reg2	

1
.Main.main_58:	
.Main.main_56:	

1
	je .Main.main_12	
	movq $5, %rsi	

1
	movq %reg0, %rax	
	subl %reg2, %r9d	

1
	.size CellularAutomaton.init, .-CellularAutomaton.init	
	.globl CellularAutomaton.print	

1
	movq $.string15, %reg0	
	movq %rbx, %r12	

1
	testq $1, %rax	
	je .Main.main_100	

1
	movq %reg0, %rax	
	cmpl $0, 8(%rbx)	

1
	je .Main.main_184	
	movq $316, %rsi	

1
.Main.main_85:	
	cdq	

1
	setle %reg0l	
	jg .Main.main_37	

1
	call *%rbx	
	jmp .Main.funcifi_2	

1
.Main.main_149:	
	cdq	

1
	movq $0, %rdi	
	movq %rdi, 496(%reg1)	

1
	movq %reg0, %rax	
	jmp .Main.main_8	

1
	movq 96(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq $12, %reg0	
	movq $10, %reg1	

1
	movq $3000, %rdi	
	movq %rdi, 48(%reg1)	

1
	call *%reg0	
	movq 656(%rbx), %reg2	

1
	cmpq $Int_vtable, 0(%rax)	
	je .Main.main_3	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_5	

1
	movq %r13, %rax	
	cmpl %reg2, %edi	

1
.Main.new_1:	
	cmpq $IO_vtable, 0(%rbx)	

1
	movq %reg0, %rax	
	movq -32(%rbp), %rsi	

1
	movq $0, %rdi	
	movq %rdi, 544(%rax)	

1
	movq %rdi, 520(%rax)	
	movq $0, %rdi	

1
	movq 16(%rbx), %reg1	
	cmpl $0, %eax	

1
	movq 280(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
.Main.main_6:	
	movq 16(%rbx), %rax	

1
	movq %rax, %rcx	
	movq -184(%rbp), %reg3	

1
	subl %edi, %eax	
	movq %r13, %rdi	

1
	movq $58, %reg0	
	movq $.string3_l, %reg1	

1
	movq %rax, %rsi	
	cmpl %esi, %reg3	

1
	call String.cmp	
	movq %reg0, %r12	

1
	movq 16(%rbx), %reg1	
	addl %edi, %eax	

1
	subl %eax, %reg1	
	movq $47353, %rax	

1
	movq %rbx, %rax	
	movq %reg2, %rcx	

1
	movq -80(%rbp), %rax	
	movq %rbx, %rdi	

1
	movq $3000, %reg0	
	movq %reg0, 344(%rax)	

1
.Main.main_16:	
	movq %reg0, %rbx	

1
	movq -160(%rbp), %reg1	
	cmpl %esi, %reg3	

1
	movq %rdi, 40(%rax)	
	movq $3000, %rdi	

1
	movq %rax, %reg1	
	movq $57869, %reg2	

1
	subl %reg0, %reg1	
	movq $61208, %reg2	

1
	movq $1, %r14	
	call Object.new	

1
	movq $2147483647, %rax	
	movq $2, %reg1	

1
	movq $2, %reg0	
	movq 0(%rbx), %rax	

1
	movq -168(%rbp), %reg1	
	movq -88(%rbp), %rax	

1
	idivl %esi	
	movq 0(%reg1), %reg2	

1
	je .Main.main_41	
	movq $34, %rsi	

1
	subl %eax, %esi	
	movq $48457, %reg2	

1
	.size Foo.func, .-Foo.func	
	.globl Bar.func2	

1
	movq %r9, %rax	
	movq -160(%rbp), %rax	

1
	je .Main.main_8	
	movq $163, %reg0	

1
	je .Main.main_13	
	movq $34, %reg0	

1
	jmp .Razz.new_11	
.Razz.new_9:	

1
	addl %reg0, %reg1	
	movq $14546, %rax	

1
	movq -160(%rbp), %rax	
	movq -40(%rbp), %reg3	

1
	movq 8(%rax), %rdi	
	movq %r12, %reg3	

1
	jmp .Main.main_137	
.Main.main_136:	

1
	movq 32(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	movq $34, %reg0	
	movq 0(%reg1), %r12	

1
	movq $3000, %rdi	
	movq %rdi, 368(%reg1)	

1
	movq -120(%rbp), %rax	
	imull %reg2	

1
	movq %r15, %rsi	
	call *%r13	

1
	movq %reg0, 304(%rax)	
	movq $3000, %reg0	

1
	.type List.getHead, @function	
List.getHead:	

1
	movq %rdi, 680(%reg1)	
	movq $0, %rdi	

1
	movq $.string7, %rax	
	movq 8(%reg1), %reg2	

1
	jge .Main.main_3	
	movq %r12, %reg1	

1
	movq $24092, %rax	
	movq 0(%reg1), %r12	

1
.Main.main_7:	
	movq $0, %reg0	

1
	movq $27696, %rbx	
	imull %ebx	

1
	movq -40(%rbp), %rax	
	addl %eax, %reg3	

1
	movq $1, %rcx	
	movq 8(%reg1), %rsi	

1
	movq -72(%rbp), %reg1	
	movq %rdi, %reg3	

1
	jne .A2I.i2c_3	
	movq $.string8, %reg0	

1
	imull %reg0	
	movq $27399, %rdi	

1
	movq %r12, 8(%reg1)	
	movq $2, %r13	

1
	movq 8(%rbx), %reg1	
	call Int.new	

1
	je .Bar.new_8	
	cmpq $Foo_vtable, 0(%rbx)	

1
	jg .Main.main_131	
	movq %reg0, %reg1	

1
	movq %reg0, 176(%rax)	
	movq $3000, %reg0	

1
	movq %r12, %rax	
	movq %r8, %reg3	

1
	imull %r11d	
	movq $59495, %r11	

1
	movq 24(%rax), %rdi	
	cmpl $0, %edi	

1
	movq 96(%r14), %r14	
	movq %rbx, %reg2	

1
	movq 288(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	movq %r12, %reg1	
	imull %ecx	

1
	jge .A2I.i2a_3	
	movq 0(%rbx), %reg1	

1
.Main.main_6:	
	movq $4, %r12	

1
	movq %reg0, %rax	
	movq $29252, %reg0	

1
	jne .Matrix.get_8	
	movq 32(%rax), %rax	

1
	movq $3000, %reg0	
	movq %reg0, 296(%rax)	

1
	movq $208, %reg0	
	call getmem	

1
	movq 56(%reg0), %reg0	
	movq -32(%rbp), %reg2	

1
	jmp .Main.main_164	
.Main.main_123:	

1
	subl %reg0, %esi	
	movq -16(%rbp), %reg3	

1
	movq -160(%rbp), %rsi	
	subl %reg2, %eax	

1
	movq $46404, %reg0	
	movq 0(%rbx), %rax	

1
	call *%reg0	
	movq 648(%reg1), %r12	

1
	movq %reg0, %reg1	
	jmp .Main.main_28	

1
	jmp .Main.main_69	
.Main.main_68:	

1
	idivl %r11d	
	addl %eax, %reg2d	

1
	je .DicNode.get_6	
	movq $47, %reg0	

1
.Main.main_46:	
	movq $26355, %reg0	

1
	negl %r12d	
	movq 0(%reg1), %reg2	

1
	movq $63899, %rax	
	movq $18189, %r11	

1
	movq %reg0, %reg1	
	movq $2, %r12	

1
	movq %rdi, 192(%rax)	
	movq $3000, %rdi	

1
	movq 640(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq %rdi, 712(%reg1)	
	movq $0, %rdi	

1
	movq -168(%rbp), %rax	
	movq -88(%rbp), %rdi	

1
	addl %edi, %eax	
	movq %rax, 24(%rbx)	

1
	subl %eax, %reg1	
	movq $18841, %rax	

1
	jmp .Main.funcwhileb_1	
.Main.funcwhileb_2:	

1
	jne .Matrix.set_49	
	movq %reg0, 160(%rax)	

1
	call *%r12	
	movq 56(%rbx), %r12	

1
	je .Bar.new_5	
	cmpq $Razz_vtable, 0(%reg0)	

1
	addl %r12d, %eax	
	addl %eax, %ebx	

1
	movq %rdi, %r12	
	movq $.string10, %rax	

1
	.quad Bar.setX	
String_vtable:	

1
	addl %esi, %eax	
	subl %eax, %reg2	

1
	movq %reg0, 40(%reg1)	
	movq $.string6, %reg0	

1
	addl %eax, %reg1	
	movq -56(%rbp), %rax	

1
	movq 224(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq -96(%rbp), %reg1	
	movq %reg2, %r9	

1
	call *%rax	
	movq 632(%reg1), %reg2	

1
	movq %reg0, 264(%rax)	
	movq $3000, %reg0	

1
	movq -152(%rbp), %rax	
	addl %eax, %reg3	

1
	movq $59495, %reg0	
	movq %reg0, %rbx	

1
	movq %reg0, %reg1	
	jmp .CellularAutomaton.cell_at_next_evolution_4	

1
	movq -104(%rbp), %rax	
	cmpl %eax, %reg3	

1
.Matrix.get_10:	
	movq $1, %rax	

1
	setle %dil	
	jg .Matrix.mul_2	

1
	movq $.string8, %r13	
	movq %rax, %rdi	

1
	movq %rdi, %reg1	
	movq $100, %rax	

1
	sete %cl	
	jne .Matrix.get_8	

1
	movq %reg0, %rax	
	jmp .Main.main_28	

1
	movq $14546, %reg0	
	subl %eax, %esi	

1
	movq %rdx, -32(%rbp)	
	movq %reg2, %reg3	

1
	je .Main.main_31	
	movq $13, %rsi	

1
.string14_l:	
	.string "7"	

1
	setle %dil	
	jg .Main.main_7	

1
.A2I.i2c_17:	
	movq $9, %reg0	

1
	movq %rbx, %reg1	
	jmp .Foo.new_6	

1
	addl %eax, %reg1	
	movq $18119, %rax	

1
	.type Nil.new, @function	
Nil.new:	

1
	sete %r8b	
	jne .Matrix.set_56	

1
	movq %rax, -96(%rbp)	
	movq $17, %rax	

1
.Main.main_22:	
	movq -16(%rbp), %reg1	

1
	subl %reg0, %eax	
	movq %rax, -40(%rbp)	

1
	.quad Bar.getI	
String_vtable:	

1
	.size Foo.set, .-Foo.set	
	.globl Foo.get	

1
.string12_l:	
	.string "\\t"	

1
	movq $15487, %rdi	
	subl %reg1, %eax	

1
	jmp .Main.main_48	
.Main.main_47:	

1
	je .Main.main_27	
	movq $.string7, %rax	

1
	movq -104(%rbp), %reg1	
	movq -96(%rbp), %reg3	

1
	je .Razz.new_19	
	movq $31, %rsi	

1
	movq $1170, %rdi	
	movq $33472, %reg1	

1
	je .Cons.rcons_2	
	movq $87, %rsi	

1
.Matrix.get_27:	
	movq $4, %r8	

1
	movq $5, %rsi	
	movq $.string4_l, %rdi	

1
	movq $32079, %rdi	
	movq $0, %rsi	

1
	.globl Foo.doh	
	.type Foo.doh, @function	

1
	movq %reg0, 8(%rax)	
	movq %rax, 16(%reg2)	

1
	call *%r13	
	jmp .Cons.insert_3	

1
	testq $1, %rcx	
	je .Main.main_41	

1
	negl %reg0	
	movq %reg1, 8(%rax)	

1
	movq %reg0, 32(%reg1)	
	movq $3000, %reg0	

1
	movq %rdi, 88(%reg1)	
	movq $3000, %rdi	

1
	idivl %reg0d	
	movq -184(%rbp), %reg0	

1
	subl %reg0, %edi	
	movq -184(%rbp), %rax	

1
	je .Main.main_43	
	movq -88(%rbp), %reg1	

1
	movq -112(%rbp), %rax	
	movq %reg2, %r10	

1
.Main.func_2:	
	movq 0(%rbx), %rax	

1
	movq $60238, %r11	
	movq $0, %reg1	

1
	movq %reg0, %rdi	
	movq $16693, %reg0	

1
	setl %sil	
	jge .Main.main_29	

1
	sete %reg0	
	jne .Matrix.set_36	

1
	movq $.string9, %reg0	
	movq %reg0, %rbx	

1
	testq $1, %rdi	
	je .Cons.sort_1	

1
	sete %cl	
	jne .A2I.i2c_17	

1
	je .Main.main_119	
	movq $70, %rsi	

1
	movq %rsi, %rax	
	movq -72(%rbp), %rsi	

1
	subl %reg0, %reg1	
	movq %rax, -96(%rbp)	

1
	movq $13131, %reg0	
	addl %reg1, %edi	

1
	je .Main.main_76	
	movq $52, %reg0	

1
	movq 16(%reg0), %rdi	
	cmpl %edi, %reg3	

1
	.quad Object.type_name	
	.quad List.isNil	

1
	movq %rdi, %rax	
	movq -96(%rbp), %rdi	

1
	movq $30773, %rdi	
	cmpl %reg1, %reg2	

1
	call *%reg0	
	movq 304(%reg1), %reg0	

1
	movq $61139, %rax	
	movq 0(%rbx), %reg2	

1
	jge .Main.main_14	
	movq $32151, %reg0	

1
	movq %reg0, %reg1	
	movq -152(%rbp), %rcx	

1
	movq $50, %reg0	
	movq $.string3_l, %rdi	

1
	je .Main.funccase_7	
	movq $1, %reg0	

1
	testq $1, %rdi	
	je .Matrix.get_12	

1
List.head:	
	pushq %reg0	

1
	movq $20908, %reg0	
	imull %reg1	

1
	testq $1, %rax	
	je .Main.main_124	

1
	jg .Main.main_77	
	movq %reg0, %reg1	

1
	call *%rax	
	jmp .Main.main_68	

1
	movq $.string11, %rdi	
	movq %reg1, %reg2	

1
.Main.main_15:	
	movq 0(%rbx), %reg1	

1
	imull %r8d	
	movq $2469, %r8	

1
	movq $.string21, %r12	
	movq 0(%rbx), %reg2	

1
	movq $15, %rsi	
	movq $.string5_l, %rdi	

1
	movq -160(%rbp), %reg1	
	movq -24(%rbp), %rax	

1
	subl %reg0, %reg1d	
	movq $10464, %reg2	

1
.A2I.c2i_6:	
.A2I.c2i_4:	

1
	movq %rdx, %reg1	
	movq -16(%rbp), %reg3	

1
	movq $47308, %rsi	
	negl %esi	

1
	movq -160(%rbp), %reg1	
	movq -80(%rbp), %reg3	

1
.Main.main_53:	
.Main.main_57:	

1
	movq 16(%reg0), %reg1	
	movq 8(%reg0), %rax	

1
	imull %reg0	
	movq %rbx, %rcx	

1
	movq -96(%rbp), %reg1	
	addl %eax, %esi	

1
	setl %dil	
	jge .Main.main_22	

1
	call *%r12	
	movq 72(%rbx), %reg2	

1
.Main.main_139:	
	cdq	

1
	movq %reg0, 240(%reg1)	
	movq $0, %reg0	

1
.Main.main_157:	
	cdq	

1
	je .Main.main_131	
	movq $76, %rsi	

1
	movq $12, %rcx	
	movq -96(%rbp), %rax	

1
	call *%rax	
	movq -24(%rbp), %reg2	

1
	call *%r12	
	movq 16(%rbx), %reg2	

1
	.string "qwerty"	
.string6:	

1
	addl %ebx, %reg1	
	movq %reg2, %rbx	

1
.Matrix.set_26:	
.Matrix.set_13:	

1
	movq $.string7, %reg0	
	movq %reg0, 8(%reg1)	

1
	.type List.tail, @function	
List.tail:	

1
	sete %reg0l	
	jne .Main.main_62	

1
	je .Main.main_52	
	movq $15, %rsi	

1
	movq $5, %reg0	
	movq 0(%rbx), %r12	

1
	movq -120(%rbp), %rsi	
	negl %esi	

1
	sete %r13b	
	jne .A2I.c2i_3	

1
	.globl DicNode.new	
	.type DicNode.new, @function	

1
	je .Main.main_187	
	movq $151, %reg0	

1
	movq $3000, %reg0	
	movq %reg0, 568(%rax)	

1
	movq $34313, %reg0	
	movq 0(%rbx), %reg2	

1
	setle %sil	
	jg .Main.funcifi_1	

1
	movq $14379, %reg0	
	movq $61731, %rsi	

1
	movq %reg0, %reg1	
	movq $10, %rsi	

1
	.quad Cons.insert	
	.quad Cons.rcons	

1
	movq %rax, %r12	
	movq $4, %r13	

1
	movq $56918, %rax	
	movq $55662, %r14	

1
	movq -168(%rbp), %rax	
	movq %reg2, %rsi	

1
	movq 8(%reg0), %reg0	
	imull %edi	

1
.Main.main_50:	
	movq $1, %rax	

1
.Matrix.get_56:	
	movq $3, %rcx	

1
	movq -16(%rbp), %rbx	
	movq -24(%rbp), %reg3	

1
	movq $26972, %rax	
	movq %rax, %rsi	

1
	movq 40(%r15), %r15	
	movq %reg1, %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 248(%rax)	

1
	addl %eax, %reg1	
	movq -152(%rbp), %reg3	

1
	movq 48(%r14), %r14	
	movq -16(%rbp), %rdi	

1
	movq $5, %r14	
	movq 0(%reg1), %reg2	

1
	movq $23071, %rsi	
	movq %rsi, %reg1	

1
	addl %reg0, %edi	
	movq $53587, %rax	

1
	movq 112(%reg0), %r12	
	movq 0(%reg0), %rax	

1
.Main.main_140:	
	movq %reg0, %rsi	

1
	movq 144(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq %r15, %reg1	
	call *%r13	

1
	idivl %esi	
.Matrix.get_50:	

1
	call out_error	
.Main.main_170:	

1
	movq %reg0, %reg1	
	movq $29011, %reg0	

1
.Main.main_82:	
	movq %reg0, %rax	

1
	movq %r14, %rax	
	subl %eax, %esi	

1
	testq $1, %reg0	
	je .Main.main_145	

1
	movq -16(%rbp), %reg1	
	movq -24(%rbp), %rax	

1
	movq $15714, %reg0	
	movq $0, %r10	

1
	sete %reg0	
	jne .Matrix.get_6	

1
	negl %reg0	
	movq $15714, %r9	

1
	movq %rdi, 88(%rax)	
	movq %rdi, %rax	

1
.Main.main_58:	
	movq 0(%reg0), %rax	

1
	movq %reg0, 8(%reg1)	
	movq %reg1, 8(%reg2)	

1
	call *%r14	
	movq -112(%rbp), %rax	

1
	sete %reg0b	
	jne .A2I.c2i_1	

1
	movq 24(%reg0), %reg1	
	movq 0(%reg1), %r12	

1
	idivl %reg0	
.Matrix.set_65:	

1
	movq -48(%rbp), %rax	
	movq -88(%rbp), %rdi	

1
	movq $0, %rdi	
	movq %rdi, 408(%rax)	

1
	jne .Main.main_17	
	movq 0(%rbx), %rax	

1
	jmp .Main.main_81	
.Main.main_80:	

1
	je .Main.main_58	
	movq $17, %rsi	

1
	movq $52, %reg0	
	movq 0(%rbx), %r12	

1
	movq -16(%rbp), %rax	
	subl %edi, %reg3	

1
	movq -56(%rbp), %reg1	
	subl %edi, %eax	

1
	jmp .Main.main_61	
.Main.main_62:	

1
	call *%r14	
	jmp .Main.main_57	

1
	movq %rdi, %rax	
	cmpl $0, 8(%rax)	

1
	movq $1, %rdi	
	negl %edi	

1
	movq $3000, %rdi	
	movq %rdi, 336(%rax)	

1
	idivl %esi	
	movq -96(%rbp), %rsi	

1
	movq %rdi, %rax	
	jmp .Main.main_69	

1
	movq %rdi, 416(%rax)	
	movq $3000, %rdi	

1
	call *%reg0	
	movq 24(%reg1), %rax	

1
	movq -112(%rbp), %rsi	
	cmpl %esi, %reg3	

1
	movq $10, %reg0	
	movq $.string1_l, %rdi	

1
	movq $5, %rax	
	jmp .A2I.c2i_12	

1
	movq -16(%rbp), %rax	
	movq %r8, %r9	

1
	movq $.string9, %reg0	
	movq %reg0, %rdi	

1
	je .Main.main_43	
	movq %reg0, %reg1	

1
	movq $126, %rsi	
	movq $.string4_l, %rdi	

1
	movq %r9, %rax	
	movq %r10, %r9	

1
	movq $47, %reg0	
	movq $.string5_l, %reg1	

1
	movq %reg0, %reg1	
	movq $.string10, %rax	

1
	testq $1, %rsi	
	je .Main.main_68	

1
.Main.main_37:	
	movq %rbx, %rax	

1
	movq %reg0, 192(%reg1)	
	movq %reg0, %reg1	

1
	jne .Main.main_7	
	movq $47279, %reg0	

1
	movq %reg0, %rax	
	addl %reg2, %r9d	

1
DicNode.incr:	
	pushq %reg0	

1
	jmp .Bazz.new_6	
.Bazz.new_5:	

1
	call *%rax	
	movq 392(%rbx), %r12	

1
	movq %reg0, %reg1	
	movq %r14, %reg1	

1
	call *%reg0	
	jmp .DicNode.get_5	

1
	movq 24(%reg0), %reg1	
	cmpl $0, %edi	

1
	movq $49119, %reg0	
	movq $40570, %r8	

1
	movq $name_IO, %r12	
	movq 0(%reg1), %reg2	

1
	movq -32(%rbp), %rax	
	subl %esi, %eax	

1
.Main.main_42:	
	movq %reg0, %rdx	

1
	movq 392(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq %rbx, %reg1	
	jmp .Razz.new_11	

1
	movq %reg0, %reg1	
.Main.main_170:	

1
	movq $.string14, %reg0	
	movq 0(%rbx), %rax	

1
	jg .Main.main_77	
	movq %reg0, %rax	

1
	call *%reg0	
	movq 536(%rbx), %rax	

1
	movq 632(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	call *%rax	
	movq 152(%rbx), %r12	

1
	movq $11, %reg0	
	movq %reg0, -80(%rbp)	

1
	jmp .Main.func_7	
.Main.func_4:	

1
.Main.main_1:	
	movq %reg0, %rdx	

1
	.globl Bar.func2	
	.type Bar.func2, @function	

1
	movq $38737, %rax	
	subl %reg1, %edi	

1
	movq $20968, %rsi	
	movq %rsi, %reg1	

1
	movq $1, %reg0	
	movq 16(%reg1), %rax	

1
	movq $7201, %rsi	
	movq %rsi, %reg1	

1
	subl %esi, %reg1	
	movq -104(%rbp), %reg3	

1
	negl %reg0	
	movq -8(%rbp), %reg2	

1
	movq $174, %rsi	
	movq $.string5_l, %rdi	

1
.Matrix.get_40:	
	movq $5, %rcx	

1
	movq %rdi, %rax	
	movq -112(%rbp), %rax	

1
	jge .Main.main_39	
	movq -128(%rbp), %reg1	

1
	movq %reg0, %reg1	
	movq $604, -24(%rbp)	

1
	je .Main.main_143	
	movq $112, %reg0	

1
	movq %reg0, %rax	
	subl %reg2d, %reg3	

1
	movq -144(%rbp), %reg1	
	movq %reg1, -128(%rbp)	

1
	movq -128(%rbp), %rsi	
	movq %reg2, %rcx	

1
	movq -96(%rbp), %rax	
	movq $0, %rcx	

1
	je .Main.main_76	
	movq $19, %rsi	

1
	movq $60858, %rsi	
	negl %reg1	

1
	movq -88(%rbp), %reg1	
	subl %eax, %reg3	

1
	negl %eax	
	movq -152(%rbp), %rcx	

1
	idivl %ecx	
	movq $20908, %reg1	

1
	movq $60159, %rax	
	movq %rax, %reg1	

1
	jne .Matrix.get_27	
	movq $1, %reg0	

1
	movq -160(%rbp), %reg1	
	addl %reg2, %edi	

1
.Main.main_2:	
	movq -32(%rbp), %reg1	

1
	movq %rdi, 120(%rax)	
	movq %rdi, %rax	

1
.Main.main_9:	
	cmpl %reg0, %esi	

1
	call *%reg0	
	movq 248(%reg1), %rax	

1
	subl %reg0, %reg1	
	movq %reg2, -40(%rbp)	

1
	movq $38661, %reg0	
	imull %reg1	

1
	movq $9556, %reg0	
	cmpl %edi, %eax	

1
	movq %rax, %r12	
	movq $0, %reg2	

1
.Main.print_list_2:	
	cmpl $0, %reg0d	

1
	movq $3, %r12	
	call Int.new	

1
	testq $1, %r13	
	je .Main.main_56	

1
.Main.main_121:	
	movq %reg0, %rsi	

1
.Matrix.set_27:	
	movq $4, %r9	

1
	je .Main.main_178	
	movq $145, %rsi	

1
	movq %rax, %r14	
	movq $13, %r15	

1
.Main.main_95:	
	movq %reg0, %reg1	

1
	movq -120(%rbp), %reg1	
	movq -56(%rbp), %reg3	

1
	idivl %esi	
	movq %rax, -120(%rbp)	

1
	movq %reg0, %rbx	
.Main.func_2:	

1
.Razz.new_5:	
	movq %rbx, %reg1	

1
	call Bar.new	
	movq %rax, 8(%rbx)	

1
	movq %reg0, %rcx	
	movq $29011, %reg0	

1
	movq -128(%rbp), %reg1	
	movq -32(%rbp), %rsi	

1
	je .Main.main_21	
	movq $10, %reg0	

1
	movq $11, %reg0	
	movq $.string3_l, %rdi	

1
	.type Dictionary.get, @function	
Dictionary.get:	

1
	movq %rax, 64(%reg1)	
	movq 0(%reg1), %rax	

1
	movq %reg0, %rbx	
	movq $3, %rax	

1
	je .Main.main_72	
	movq $52, %reg0	

1
Matrix.get:	
	pushq %rbp	

1
	je .Main.main_115	
	movq %reg0, %reg1	

1
.Main.main_5:	
	movq 8(%rax), %reg1	

1
	movq -136(%rbp), %reg1	
	movq -160(%rbp), %rdi	

1
	movq 520(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	addl %reg0, %edi	
	movq -152(%rbp), %reg3	

1
	movq %reg0, -40(%rbp)	
	movq $5, %reg0	

1
	subl %reg0, %eax	
	movq %rax, -120(%rbp)	

1
	movq $12, %reg0	
	movq %reg0, -72(%rbp)	

1
	movq 464(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq %rbx, %rax	
	jmp .Razz.new_6	

1
	movq $0, %rdi	
	movq %rdi, 736(%reg1)	

1
.Main.main_192:	
	popq %r15	

1
	movq %rdi, %reg1	
	jmp .Main.main_114	

1
.string17_l:	
	.string "-"	

1
	movq -24(%rbp), %rcx	
	imull %reg2	

1
	movq 16(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 728(%reg1)	

1
	je .Main.main_51	
	movq -56(%rbp), %rax	

1
	jne .Main.main_22	
	movq %r14, %rax	

1
	movq -144(%rbp), %rdi	
	negl %reg2	

1
	movq $Baz_vtable, 0(%rax)	
	movq $0, %reg1	

1
	movq -168(%rbp), %rax	
	movq %rcx, %r8	

1
	subl %esi, %reg1	
	movq %rdi, 16(%reg3)	

1
.Main.main_11:	
	popq %reg0	

1
	movq 400(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	testq $1, %reg0	
	je .Complex.equal_3	

1
	movq $11435, %reg0	
	movq 0(%reg1), %reg2	

1
	movq %rdi, %reg1	
	jmp .Main.main_83	

1
	je .Main.main_58	
	movq $17, %reg0	

1
	movq -168(%rbp), %reg1	
	addl %r8d, %reg3	

1
	movq %reg0, %reg1	
	jmp .Main.main_32	

1
.A2I.c2i_12:	
.A2I.c2i_10:	

1
	movq %reg0, 24(%rax)	
	movq 16(%rax), %reg0	

1
	movq $.string8, %rdi	
	movq %rdi, %r13	

1
	call *%reg0	
	movq 520(%reg1), %reg2	

1
	movq %rdi, %reg1	
	jmp .Main.func_2	

1
	movq $3000, %reg0	
	movq %reg0, 488(%reg1)	

1
.Main.out_whatever_2:	
	movq %rdi, %rax	

1
	testq $1, %reg0	
	je .Bar.new_18	

1
	subl %reg0, %eax	
	movq %reg2, -112(%rbp)	

1
	movq -176(%rbp), %reg1	
	addl %eax, %edi	

1
	movq 8(%reg0), %reg1	
	negl %edi	

1
	call *%reg0	
	movq 24(%rbx), %rax	

1
	jne .Matrix.set_2	
	movq %rdi, 8(%reg1)	

1
.Main.main_25:	
	movq $.string8, %reg0	

1
	sete %sil	
	jne .Main.main_23	

1
	movq %reg0, %r8	
	movq -24(%rbp), %reg0	

1
	movq $3000, %rdi	
	movq %rdi, 184(%reg1)	

1
	.quad .string2_l	
	.quad 7	

1
	movq %reg0, %r13	
	jmp .CellularAutomaton.evolve_1	

1
	addl %edi, %eax	
	movq $36010, %reg2	

1
	sete %r8b	
	jne .Matrix.set_15	

1
	.size List.car, .-List.car	
	.globl List.cdr	

1
	movq $100, %reg0	
	movq $.string2_l, %rdi	

1
	movq $23915, %reg0	
	movq $63399, %rsi	

1
	movq 16(%reg0), %rax	
	cmpl $0, %eax	

1
	subl %reg0, %eax	
	movq -88(%rbp), %rdi	

1
	addl %reg0, %reg1d	
	movq $15079, %reg2	

1
	movq -8(%rbp), %rdi	
	movq -168(%rbp), %reg3	

1
	movq %reg0, %rax	
	jmp .Main.main_36	

1
	addl %reg0, %eax	
	movq %reg2, 56(%rbx)	

1
	je .Main.main_19	
	movq $24, %reg0	

1
	movq 24(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	sete %cl	
	jne .Matrix.set_10	

1
	call Bool.new	
	movq 8(%reg0), %reg0	

1
.Dictionary.insert_1:	
	cmpl $0, 8(%reg0)	

1
	idivl %r12d	
	movq %reg1, %r12	

1
	movq -88(%rbp), %rsi	
	call *%reg2	

1
	movq 200(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	call *%rbx	
	movq -120(%rbp), %reg2	

1
	movq 368(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	je .Main.main_48	
	movq $15, %reg0	

1
	idivl %r11d	
	movq %reg1, %reg2	

1
	movq $45379, %reg0	
	subl %eax, %reg2	

1
	movq $.string6, %rax	
	movq $.string7, %reg1	

1
	movq $0, %rax	
	popq %rbx	

1
	subl %esi, %reg1	
	movq -24(%rbp), %reg3	

1
	movq $7201, %reg0	
	movq %reg0, %reg1	

1
	movq $21018, %reg0	
	movq -8(%rbp), %reg2	

1
	movq -136(%rbp), %rsi	
	movq -104(%rbp), %rax	

1
	jne .Matrix.set_6	
	movq %rdi, 24(%rax)	

1
	.quad .string7_l	
	.quad 3	

1
.Main.main_142:	
	movq -168(%rbp), %rax	

1
	movq -152(%rbp), %rsi	
	addl %reg2, %reg3	

1
	movq $ListNode_vtable, 0(%rax)	
	movq $0, %reg1	

1
.Razz.new_17:	
	movq %rax, 48(%reg1)	

1
	je .Main.main_191	
	movq $1, %rbx	

1
	je .Main.main_7	
	movq $5, %reg0	

1
	movq $46032, %rdi	
	movq %rdi, %reg1	

1
	call out_error	
.Matrix.get_12:	

1
.Main.main_138:	
	cdq	

1
	movq %reg0, 480(%rax)	
	movq $3000, %reg0	

1
	movq 72(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	testq $1, %rcx	
	je .Main.main_59	

1
	je .Main.main_27	
	movq $10, %rsi	

1
	je .Main.main_7	
	cmpq $Int_vtable, 0(%rax)	

1
	pushq %rbx	
	movq $32, %reg1	

1
	addl %eax, %reg1	
	movq $47041, %reg2	

1
	movq 8(%r12), %reg1	
	movq 0(%rbx), %rax	

1
	movq $138, %reg0	
	movq $.string3_l, %rdi	

1
	movq %rdi, 376(%rax)	
	movq $0, %rdi	

1
.Main.main_100:	
	cdq	

1
	movq 120(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	movq %rax, %rsi	
	movq -24(%rbp), %reg3	

1
	call *%reg0	
	movq 120(%reg1), %reg2	

1
	movq $0, %reg0	
	cmpl %ebx, %r12d	

1
	movq -16(%rbp), %rax	
	movq -128(%rbp), %rsi	

1
	addl %reg0, %reg1	
	movq -160(%rbp), %rsi	

1
	movq %rsp, %rbp	
	subq $176, %rsp	

1
.Main.main_52:	
	movq 0(%reg0), %reg1	

1
	sete %r13b	
	jne .Main.main_2	

1
	movq $.string10, %r12	
	movq 0(%reg1), %reg2	

1
.string19_l:	
	.string "678987"	

1
	ret	
	.size Main.funccase, .-Main.funccase	

1
	addl %eax, %esi	
	movq -128(%rbp), %reg3	

1
	movq $30797, %r8	
	movq $3233, %reg1	

1
	movq $14, %rax	
	negl %reg1	

1
	cmpq $Bar_vtable, 0(%reg0)	
	je .Main.main_22	

1
	movq $12757, %reg0	
	imull %reg1	

1
	call *%reg0	
	movq -128(%rbp), %rdi	

1
	movq -56(%rbp), %reg1	
	negl %ecx	

1
	imull %reg0	
	movq $43617, %reg1	

1
.Main.main_3:	
	movq %reg0, %r12	

1
.Bar.new_20:	
	movq 48(%reg0), %reg1	

1
	movq 8(%rdi), %rbx	
	movq 0(%reg2), %r12	

1
.Matrix.get_60:	
	movq $5, %rsi	

1
	.quad 0	
.string11_l:	

1
	movq $9856, %reg0	
	movq $8640, %rdi	

1
	movq %rsi, %reg1	
	movq 0(%rax), %rbx	

1
	movq $34320, %rcx	
	movq $25316, %reg1	

1
	movq $0, %rdi	
	movq %rdi, 272(%reg1)	

1
	subl %reg0, %r9d	
	movq $12, %r10	

1
	movq $38801, %reg0	
	cmpl %reg1, %reg2	

1
	movq $16693, %rax	
	movq $2211, %rsi	

1
	movq $36212, %reg0	
	negl %esi	

1
	movq $17815, %rsi	
	movq %rsi, %rcx	

1
.Main.main_1:	
	movq $34, %rax	

1
	movq $6934, %reg0	
	movq $0, %reg1	

1
	negl %eax	
	movq %r12, %reg2	

1
	testq $1, %rcx	
	je .Matrix.set_53	

1
	movq $empty_string, %reg0	
	movq %rax, %reg2	

1
	movq $.string9, %r15	
	movq %r15, %rdi	

1
	movq %reg0, %r14	
	movq $.string11, %reg2	

1
	call *%r15	
	movq %r12, %rax	

1
.Dictionary.insert_4:	
	movq 8(%rbx), %rdx	

1
	negl %r9d	
	addl %r9d, %eax	

1
	.string "string"	
.string6:	

1
	movq %rdi, %r12	
	movq $.string10, %reg2	

1
	call out_error	
.Main.main_141:	

1
	.quad 23	
name_String_l:	

1
	.size A2I.i2c, .-A2I.i2c	
	.globl A2I.a2i	

1
	sete %r8b	
	jne .Matrix.set_6	

1
	movq 16(%rbx), %rax	
	subl %edi, %reg3	

1
	addl %reg0, %edi	
	movq -128(%rbp), %rax	

1
	negl %eax	
	movq %rax, -40(%rbp)	

1
	movq $49119, %rax	
	movq $40570, %reg1	

1
	movq -160(%rbp), %reg1	
	subl %eax, %edi	

1
	sete %sil	
	jne .CellularAutomaton.cell_left_neighbor_1	

1
.Main.funccaseb_2:	
	movq $0, %rax	

1
	movq %reg0, %reg1	
	movq $52486, %reg0	

1
	jmp .Main.main_67	
.Main.main_66:	

1
	je .Main.main_176	
	movq $145, %rsi	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_3	

1
	jmp .Main.main_35	
.Main.main_34:	

1
	movq %rdi, 136(%reg1)	
	movq $3000, %rdi	

1
.Matrix.get_4:	
	movq $3, %rcx	

1
	movq 8(%rax), %rdi	
	movq %rbx, %reg3	

1
	call *%r12	
	movq 320(%rbx), %rax	

1
	movq 80(%reg0), %reg0	
	movq %r14, %rdi	

1
	movq $62343, %r12	
	movq 0(%rbx), %rax	

1
	movq -88(%rbp), %rax	
	addl %reg2, %edi	

1
	movq 632(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq %rdi, %reg1	
	movq -96(%rbp), %rdi	

1
	jg .Matrix.mul_2	
	movq $1, %rax	

1
	je .DicNode.insert_3	
	movq $0, %r13	

1
	movq $.string8, %reg0	
	movq %rax, %reg2	

1
.Main.main_12:	
	movq %r12, %reg1	

1
	movq %reg0, %reg1	
	jmp .Main.main_106	

1
	movq %rax, %r12	
	movq $0, %rbx	

1
	movq %rax, -136(%rbp)	
	movq $14, %rax	

1
	idivl %ecx	
	movq -104(%rbp), %rcx	

1
	movq %rdi, 192(%reg1)	
	movq $3000, %rdi	

1
	testq $1, %rsi	
	je .Main.main_174	

1
	movq 464(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	sete %reg0l	
	jne .A2I.i2a_aux_1	

1
	movq $103, %rsi	
	movq $.string5_l, %reg1	

1
	movq %reg0, 88(%reg1)	
	movq %reg0, %reg1	

1
	movq %reg0, 440(%reg1)	
	movq $0, %reg0	

1
	negl %edi	
	movq %rdi, 8(%rax)	

1
	.type ListNode.insert, @function	
ListNode.insert:	

1
	movq %rdi, 520(%reg1)	
	movq $0, %rdi	

1
	sete %reg0b	
	jne .Matrix.set_41	

1
	jne .Matrix.set_14	
	movq $1, %reg0	

1
	movq 16(%reg0), %rdi	
	addl %reg2, %reg3	

1
	movq %reg0, %reg1	
	movq $4, %r12	

1
	movq $7, %reg0	
	call Int.new	

1
	movq $3, %reg0	
	call Int.new	

1
	movq %reg0, %reg1	
.Main.main_163:	

1
	jne .Matrix.set_62	
	movq %rdi, 200(%rax)	

1
	movq %reg0, %reg1	
	movq -176(%rbp), %rax	

1
	movq %reg0, %rax	
	jmp .Main.main_163	

1
	call *%reg0	
.Main.main_192:	

1
	movq $38737, %reg0	
	subl %eax, %edi	

1
	je .Main.main_10	
	movq $.string7, %reg0	

1
	subl %reg0, %reg1	
	movq $34422, %reg2	

1
	jmp .Matrix.get_37	
.Matrix.get_36:	

1
	movq %reg0, %rax	
.Main.main_183:	

1
	movq %r12, %reg1	
	cmpl %esi, %reg3	

1
	movq $43604, %rax	
	addl %eax, %reg2	

1
	setle %sil	
	jg .Main.main_84	

1
	movq $34320, %rcx	
	movq $25316, %rax	

1
	jge .Main.main_11	
	movq $.string8, %r12	

1
	movq $3000, %rdi	
	movq %rdi, 672(%rax)	

1
	call String.length	
	leave	

1
	movq %rsi, %rbx	
	movq $0, %rax	

1
	movq -160(%rbp), %reg1	
	movq %r13, %reg3	

1
	movq 8(%r12), %r13	
	movq 0(%reg2), %reg3	

1
	subl %r9d, %eax	
	movq -176(%rbp), %r9	

1
	movq $.string8, %rax	
	movq 0(%reg1), %r12	

1
	movq $53595, %rsi	
	imull %esi	

1
	cmpq $Main_vtable, 0(%reg0)	
	je .Main.funccase_2	

1
	movq 264(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	movq %rdi, %r14	
	pushq %rax	

1
	movq %rdi, %rax	
	jmp .Main.main_116	

1
	subl %reg0, %esi	
	movq $34320, %rcx	

1
	call String.substr	
	movq %reg0, %r13	

1
.Main.main_45:	
	movq -16(%rbp), %reg1	

1
	je .Main.main_48	
	movq $201, %reg0	

1
.Main.func_1:	
	movq %rax, %rdi	

1
	movq 464(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq -24(%rbp), %reg1	
	movq 0(%reg1), %r12	

1
	movq 24(%rbx), %rdi	
	movq %r12, %reg3	

1
	movq -128(%rbp), %rdx	
	movq %rdx, -72(%rbp)	

1
	movq %rsi, %rax	
	subl %eax, %edi	

1
	movq $52, %reg0	
	movq 0(%rbx), %reg2	

1
	movq %rsi, %reg1	
	subl %reg2, %edi	

1
	movq $.string13, %rax	
	jmp .A2I.i2c_14	

1
	movq $62649, %r12	
	movq 0(%rbx), %rax	

1
	movq $.string6, %reg0	
	movq %rbx, %rdi	

1
	movq %reg0, %reg1	
	jmp .Main.main_65	

1
	movq -184(%rbp), %reg1	
	movq %reg2, %rax	

1
	movq 160(%rax), %rax	
	jmp .Matrix.get_50	

1
	movq %rdi, %reg1	
	movq -176(%rbp), %rdi	

1
Complex.print:	
	pushq %reg0	

1
	.type Bazz.new, @function	
Bazz.new:	

1
	je .Main.main_38	
	movq $34, %reg0	

1
	addl %reg0, %reg1	
	subl %reg1, %edi	

1
	.quad .string1	
	.quad 9	

1
	.globl Bar.setI	
	.type Bar.setI, @function	

1
	sete %sil	
	jne .Main.main_7	

1
	addl %reg0, %eax	
	movq %rbx, %rsi	

1
	movq 16(%rbx), %rax	
	movq 32(%rbx), %r12	

1
	movq %reg0, %rax	
	jmp .Main.main_16	

1
	jmp .Matrix.get_13	
.Matrix.get_1:	

1
	movq %rsi, %reg1	
	imull %reg2	

1
	movq -176(%rbp), %reg1	
	movq $0, %rcx	

1
	subl %reg0, %reg1	
	movq %rdi, %r13	

1
	movq $19990, %rdi	
	imull %edi	

1
	.size A2I.new, .-A2I.new	
	.globl Main.new	

1
	movq $21018, %reg0	
	movq %reg1, %reg2	

1
	movq %r15, %rdi	
	movq %rax, %rsi	

1
.Main.main_12:	
	movq 0(%rbx), %rax	

1
	movq %reg0, 272(%reg1)	
	movq $3000, %reg0	

1
	je .Main.main_177	
	movq $308, %reg0	

1
	.type Matrix.set, @function	
Matrix.set:	

1
	call *%r12	
	movq 384(%reg1), %r12	

1
	movq -8(%rbp), %rdx	
	movq 0(%rdx), %r14	

1
.Main.main_5:	
	cmpl $0, %reg0d	

1
	subl %edi, %eax	
	movq %reg2, -152(%rbp)	

1
	movq -96(%rbp), %reg1	
	movq -168(%rbp), %reg3	

1
	movq $.string20, %reg0	
	movq 0(%rbx), %reg2	

1
	.string "True"	
.string7:	

1
	movq $0, %reg0	
	movq -8(%rbp), %reg2	

1
	movq 8(%rdi), %rbx	
	movq 0(%rax), %reg3	

1
	movq %r14, %reg1	
	subl %reg2, %esi	

1
	movq 496(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq %rbx, %rdi	
	subl %edi, %reg3	

1
	jge .Main.main_10	
	movq %reg0, %rdi	

1
	je .Main.main_23	
	movq $10, %rsi	

1
	je .Main.main_23	
	movq $.string7, %reg0	

1
.Cons.insert_5:	
	movq 0(%rax), %r12	

1
.Dictionary.insert_4:	
	movq 8(%rbx), %reg1	

1
	movq -40(%rbp), %rax	
	subl %eax, %r8d	

1
	je .Main.main_34	
	movq $31, %rsi	

1
	cmpq $IO_vtable, 0(%rdi)	
	je .Main.out_whatever_2	

1
	movq %reg0, 720(%rax)	
	movq $3000, %reg0	

1
	movq $3000, %reg0	
	movq %reg0, 288(%reg1)	

1
	je .Main.main_2	
	cmpq $Int_vtable, 0(%rsi)	

1
.Matrix.elMul_3:	
	movq %reg0, %rdx	

1
.Matrix.set_14:	
	movq $3, %reg0	

1
	movq $.string9, %reg0	
	movq 16(%rax), %reg2	

1
	jne .Main.main_111	
	movq %r13, %reg1	

1
	.type Baz.main, @function	
Baz.main:	

1
	je .Main.main_179	
	movq $145, %rsi	

1
	testq $1, %r11	
	je .Main.main_41	

1
	movq %rdx, %rbx	
	movq %reg2, %reg3	

1
	jmp .CellularAutomaton.cell_at_next_evolution_4	
.CellularAutomaton.cell_at_next_evolution_3:	

1
	movq $.string21, %reg0	
	movq 0(%rbx), %rax	

1
	movq $3000, %rdi	
	movq %rdi, 112(%rax)	

1
	call *%r15	
	movq %r14, %rax	

1
	movq $12618, %reg0	
	negl %reg1	

1
	movq $6550, %reg0	
	movq $0, %r8	

1
	jmp .Main.main_40	
.Main.main_22:	

1
	movq %rax, %reg1	
	movq -24(%rbp), %rcx	

1
	je .Main.main_115	
	movq $67, %rsi	

1
	movq $47041, %reg0	
	negl %reg1	

1
	movq $25, %rax	
	movq 0(%rbx), %reg2	

1
	movq %rcx, %rax	
	movq $29252, %rcx	

1
	sete %r13b	
	jne .A2I.c2i_11	

1
.Main.new_3:	
	movq %reg0, %rax	

1
	jne .Matrix.set_4	
	movq %rdi, 16(%rax)	

1
	call *%reg0	
.Main.main_35:	

1
.Main.main_4:	
	movq 0(%rbx), %rax	

1
	movq $25185, %rax	
	addl %eax, %ebx	

1
	subl %edi, %eax	
	movq %rax, -144(%rbp)	

1
	movq %rdi, 48(%rax)	
	movq %rdi, %rax	

1
	movq %reg0, %r12	
	movq %r12, %r13	

1
.Complex.print_1:	
	movq $.string9, %rbx	

1
	movq $38661, %reg0	
	imull %edi	

1
	addl %ebx, %reg1	
	movq %rax, %rbx	

1
	movq 48(%rax), %rax	
	movq 8(%reg1), %reg2	

1
	setl %dil	
	jge .Main.main_1	

1
	movq %reg0, 736(%rax)	
	leave	

1
	call *%r14	
	movq %reg1, %rdi	

1
	je .Main.main_46	
	movq $34, %reg0	

1
	subl %reg0, %reg1	
	movq $48118, %reg2	

1
	movq -24(%rbp), %rax	
	movq -64(%rbp), %reg3	

1
.Main.main_55:	
	movq %r15, %rax	

1
.ListNode.insert_1:	
	cmpl $0, 16(%rbx)	

1
	movq $2739, %reg0	
	movq $0, %reg1	

1
	movq $22, %rsi	
	movq $.string3_l, %rdi	

1
	movq $56918, %rax	
	movq $55662, %reg1	

1
	negl %eax	
	movq $15714, %reg1	

1
	movq $48985, %reg0	
	movq 0(%reg1), %r12	

1
	movq 216(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	movq %reg0, 384(%reg1)	
	movq $3000, %reg0	

1
	movq -64(%rbp), %rdi	
	imull %reg2	

1
	.quad Foo.getY	
Bar_vtable:	

1
	movq -136(%rbp), %rsi	
	movq -24(%rbp), %rax	

1
	movq -56(%rbp), %rax	
	negl %reg2	

1
	testq $1, %rax	
	je .Main.main_95	

1
	movq 616(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq $53748, %reg0	
	movq 0(%rbx), %r12	

1
	je .Main.main_53	
	movq %reg0, %rax	

1
	movq %reg0, 136(%reg1)	
	movq %reg0, %reg1	

1
	movq -24(%rbp), %rax	
	subl %eax, %edi	

1
	movq 448(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq -128(%rbp), %rsi	
	movq -72(%rbp), %reg3	

1
	testq $1, %r8	
	je .Main.main_39	

1
	subl %reg0, %edi	
	movq $18841, %reg2	

1
	movq $179, %reg0	
	movq $.string5_l, %reg1	

1
	movq %rbx, %reg1	
	movq 8(%rbx), %rsi	

1
	movq 280(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	movq %rax, -56(%rbp)	
	movq $15, %rax	

1
	addl %eax, %r12d	
	movq $15079, %reg2	

1
	movq %reg0, %rax	
	movq -72(%rbp), %r8	

1
	movq %r9, %reg1	
	movq -160(%rbp), %r9	

1
	movq %rdi, %reg1	
	jmp .Main.main_42	

1
	jne .Matrix.set_54	
	movq %reg0, 168(%rax)	

1
	movq $23915, %rax	
	movq $63399, %reg1	

1
	movq %rax, %reg1	
	movq %rdi, %reg3	

1
	testq $1, %reg0	
	je .Main.main_164	

1
	idivl %esi	
	movq $12855, %reg1	

1
	movq $58419, %rcx	
	imull %reg1	

1
	setl %reg0l	
	jge .Main.main_98	

1
	movq 16(%reg0), %r12	
	movq $.string10, %r13	

1
	movq 16(%rax), %rdi	
	subl %esi, %reg3	

1
	call out_error	
.Matrix.set_25:	

1
	movq $25241, %reg0	
	movq $13257, %rsi	

1
	negl %reg0	
	movq -136(%rbp), %rax	

1
	movq $13, %rbx	
	movq 0(%r12), %reg2	

1
	movq %rdi, 728(%rax)	
	movq $3000, %rdi	

1
	movq %r12, 8(%rax)	
	movq %rax, 8(%reg2)	

1
	negl %edi	
	movq -176(%rbp), %rsi	

1
	movq %rdi, 320(%rax)	
	movq $3000, %rdi	

1
	movq %reg0, 48(%reg1)	
	cmpl %reg2, %reg3	

1
	subl %eax, %reg1	
	movq $23915, %rax	

1
	negl %reg0	
	movq %rdi, 16(%rax)	

1
	je .Main.main_3	
	movq $.string6, %r12	

1
	.globl Main.myInt	
	.type Main.myInt, @function	

1
	movq %reg0, 8(%rax)	
	movq %rax, 8(%rbx)	

1
	movq %reg0, -144(%rbp)	
	movq -8(%rbp), %reg0	

1
.Main.main_90:	
	movq -152(%rbp), %rsi	

1
	movq %rdi, 536(%rax)	
	movq $3000, %rdi	

1
	movq 120(%reg0), %r12	
	movq 0(%reg0), %rax	

1
.Foo.new_9:	
	call Bar.new	

1
	movq -16(%rbp), %reg1	
	subl %r8d, %reg3	

1
	movq %r15, %reg1	
	cmpl %esi, %eax	

1
	movq $.string20, %reg0	
	movq 0(%rbx), %r12	

1
	movq $7741, %reg0	
	movq %reg0, %reg1	

1
	sete %reg0b	
	jne .CellularAutomaton.cell_at_next_evolution_3	

1
	jmp .Main.main_139	
.Main.main_138:	

1
	movq -104(%rbp), %reg1	
	subl %eax, %reg3	

1
	movq %reg0, %rdi	
	movq -88(%rbp), %reg0	

1
	movq $12, %rsi	
	movq -104(%rbp), %reg2	

1
.Main.func_1:	
	movq %reg0, %rdi	

1
	addl %esi, %edi	
	movq %rdi, 16(%rax)	

1
	je .Main.main_115	
	movq $67, %reg0	

1
	movq 232(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	movq %r14, %rax	
	movq %r12, %reg3	

1
	movq $32704, %reg0	
	imull %reg1	

1
	movq $.string6, %r14	
	movq 0(%reg1), %reg2	

1
	movq %reg0, %reg1	
	movq $34533, %rax	

1
	movq %rdi, 696(%reg1)	
	movq $0, %rdi	

1
Foo.getY:	
	pushq %rbp	

1
	testq $1, %rcx	
	je .Main.main_12	

1
	movq $45332, %rax	
	cmpl %reg1, %reg2	

1
	movq %rsi, %reg1	
.Main.func_1:	

1
.Main.main_24:	
	movq %reg0, %rdx	

1
Main.funcwhileb:	
	pushq %rbp	

1
	call *%reg0	
	movq 168(%reg1), %reg0	

1
	movq -16(%rbp), %rax	
	addl %eax, %reg3	

1
	movq $63252, %rax	
	subl %eax, %r12d	

1
	movq %reg0, %r13	
	movq $11, %reg0	

1
	movq %rdi, %rbx	
	movq 0(%reg2), %reg3	

1
	movq $.string6, %reg0	
	movq $empty_string, %r12	

1
	movq $5, %rax	
	addl %eax, %edi	

1
	movq %reg0, 328(%rax)	
	movq $0, %reg0	

1
	movq -168(%rbp), %r8	
	movq %reg2, %rcx	

1
	movq -160(%rbp), %reg1	
	subl %eax, %reg3	

1
	movq %reg0, 552(%reg1)	
	movq $3000, %reg0	

1
	addl %esi, %eax	
	movq -104(%rbp), %reg3	

1
.Main.main_124:	
	movq %rbx, %reg1	

1
	movq %reg0, %rax	
	jmp .Matrix.set_35	

1
	movq $49119, %reg0	
	movq $40570, %reg1	

1
	movq $60238, %r11	
	movq $0, %rbx	

1
	movq $15234, %r12	
	movq 0(%rbx), %reg2	

1
	movq $19020, %reg0	
	movq $0, %reg1	

1
	movq -144(%rbp), %rax	
	movq -40(%rbp), %rsi	

1
	subl %reg0d, %eax	
	movq -176(%rbp), %reg0	

1
	.quad 7	
substrerr_string_l:	

1
	subl %eax, %edi	
	movq $18841, %reg2	

1
	movq $38801, %reg0	
	negl %reg1	

1
	movq 120(%r13), %r13	
	movq %reg1, %reg2	

1
	movq %rcx, %rsi	
	movq $0, %rcx	

1
	movq %reg0, %r14	
	jmp .Matrix.mul_3	

1
	movq %rax, %r13	
	movq $.string6, %rax	

1
	movq 8(%rbx), %rax	
	popq %r12	

1
.Main.main_96:	
	movq -32(%rbp), %reg1	

1
	.globl ListNode.push	
	.type ListNode.push, @function	

1
.Main.main_126:	
	movq %r13, %reg1	

1
	movq %rcx, %r12	
	movq $1, %rax	

1
	call *%reg0	
	movq 344(%reg1), %reg0	

1
	movq -56(%rbp), %rax	
	movq $0, %reg2	

1
	movq $0, %rdi	
	movq %rdi, 704(%reg1)	

1
	movq %reg0, 616(%rax)	
	movq $3000, %reg0	

1
	movq -136(%rbp), %rax	
	subl %eax, %edi	

1
	.size Matrix.elMul, .-Matrix.elMul	
	.globl Matrix.mul	

1
	movq $30102, %reg0	
	movq $25895, %rax	

1
	.type CellularAutomaton.evolve, @function	
CellularAutomaton.evolve:	

1
	movq %rax, 24(%rbx)	
	movq $1, %rax	

1
	movq $.string9, %r14	
	movq 0(%rbx), %rax	

1
	testq $1, %rax	
	je .Main.main_162	

1
	movq -176(%rbp), %rdi	
	subl %reg2, %reg3	

1
	movq -96(%rbp), %rax	
	subl %eax, %reg3d	

1
	movq -40(%rbp), %reg1	
	movq %r13, %r8	

1
	movq $28260, %reg0	
	subl %reg1, %reg2	

1
	call out_error	
.Matrix.set_38:	

1
	movq $38737, %rax	
	subl %eax, %reg2	

1
.Matrix.set_21:	
	movq $5, %reg0	

1
	idivl %edi	
.Matrix.get_24:	

1
.Main.main_1:	
	movq %r12, %rdi	

1
	jne .Main.main_50	
	cmpl $0, %reg0d	

1
	call *%reg0	
	movq $22, %reg0	

1
	movq -160(%rbp), %reg1	
	movq -168(%rbp), %r9	

1
.Bar.new_17:	
	movq %rax, 48(%reg1)	

1
	movq 128(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq %rax, %rdi	
	movq $52486, %rax	

1
	cmpq $Int_vtable, 0(%reg0)	
	je .Main.main_11	

1
	movq 8(%rax), %rdi	
	negl %reg2	

1
	movq %reg0, 48(%rbx)	
	cmpl %edi, %reg3	

1
	movq $10280, %reg0	
	movq 0(%reg1), %reg2	

1
.Foo.new_10:	
	movq %reg0, %rax	

1
	movq %reg0, %r14	
.Main.main_12:	

1
.Matrix.set_7:	
.Matrix.set_5:	

1
	movq %reg0, 8(%reg1)	
	movq 0(%reg1), %r12	

1
	movq %rdi, 568(%rax)	
	movq $0, %rdi	

1
	jne .Matrix.set_6	
	movq %reg0, 24(%reg1)	

1
	movq $3000, %reg0	
	movq %reg0, 160(%rax)	

1
	cmpq $Razz_vtable, 0(%rbx)	
	je .Razz.new_8	

1
	movq $0, %reg0	
.Main.main_1:	

1
	movq $0, %rdi	
	movq %rdi, 464(%reg1)	

1
ListNode.setVal:	
	pushq %reg0	

1
	jne .Matrix.get_60	
	movq 192(%rax), %rax	

1
	subl %eax, %edi	
	movq $54460, %reg2	

1
	movq $0, %reg0	
	movq %reg0, 320(%rax)	

1
	negl %reg0	
	movq $7493, %rdi	

1
	movq -136(%rbp), %reg1	
	movq %rbx, %rsi	

1
	movq 0(%rdx), %r14	
	movq 48(%r14), %r14	

1
	movq $12, %rdi	
	movq %r13, %reg2	

1
	movq 584(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	addl %reg0, %reg1	
	movq %reg2, 56(%rbx)	

1
	subl %reg0, %reg1	
	movq $48672, %rax	

1
	movq %rdi, 576(%reg1)	
	movq $0, %rdi	

1
	movq %reg0, %rax	
	jmp .Main.main_128	

1
	movq 64(%r14), %r14	
	movq %rax, %rdi	

1
	movq $76, %rsi	
	movq $.string3_l, %rdi	

1
	jne .Main.main_7	
	movq $47279, %rdi	

1
	movq $5, %r14	
	call Int.new	

1
	je .Main.main_7	
	movq $11, %reg0	

1
	movq $12, %rdi	
	movq -176(%rbp), %reg2	

1
	jmp .Bar.new_6	
.Bar.new_6:	

1
	jge .Main.main_35	
	cmpl $0, %r13d	

1
	movq $.string8, %rax	
	movq 0(%rbx), %r12	

1
	.type Razz.new, @function	
Razz.new:	

1
	.globl List.rev	
	.type List.rev, @function	

1
	.quad Object.type_name	
	.quad Bar.setX	

1
	movq %rax, %rbx	
	movq $25185, %rax	

1
	movq %reg0, 368(%rax)	
	movq $0, %reg0	

1
	cmpq $Int_vtable, 0(%rbx)	
	je .Main.new_3	

1
.DicNode.get_6:	
	movq 24(%rax), %reg1	

1
	movq %reg0, %rdi	
	movq -168(%rbp), %reg3	

1
	.size Foo.doh, .-Foo.doh	
	.globl Bazz.printh	

1
	movq $27409, %r9	
	movq $0, %r10	

1
	movq 120(%rbx), %rbx	
	movq %rax, %reg2	

1
	movq %rdi, %rax	
	jmp .Main.main_18	

1
	movq %rax, 16(%reg1)	
	movq $2, %rax	

1
	movq 80(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
.Main.main_5:	
	movq -24(%rbp), %rdx	

1
	idivl %edi	
	movq %rax, %r13	

1
	je .Main.main_28	
	movq $10, %rsi	

1
	movq $58921, %rdi	
	cmpl %edi, %eax	

1
	movq 24(%rax), %rdx	
	movq 0(%rdx), %r12	

1
	imull %ecx	
	movq -40(%rbp), %reg2	

1
	jge .Main.main_121	
	movq -16(%rbp), %reg1	

1
	movq %rdi, 496(%reg1)	
	movq $3000, %rdi	

1
	movq 16(%reg0), %reg0	
	jmp .Matrix.get_5	

1
	movq -112(%rbp), %reg1	
	movq -136(%rbp), %reg3	

1
	movq $0, %rdi	
	movq %rdi, 456(%rax)	

1
	movq %rax, %reg1	
	movq $6821, %reg2	

1
	movq %rdi, 472(%rax)	
	movq $3000, %rdi	

1
.Main.main_106:	
.Main.main_104:	

1
	movq %reg0, %reg1	
	movq $50929, %reg0	

1
	movq $0, %reg0	
	movq %reg0, 328(%reg1)	

1
	movq $empty_string, %rdi	
	movq %rdi, %reg1	

1
.Main.main_127:	
	movq -16(%rbp), %rsi	

1
.Main.main_93:	
	movq %reg0, %rax	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_55	

1
	jne .Main.main_64	
	movq $0, %r15	

1
	movq -88(%rbp), %rsi	
	imull %esi	

1
.Main.main_50:	
.Main.main_48:	

1
	movq $110, %rsi	
	movq $.string3_l, %reg1	

1
	idivl %reg0	
	movq %rax, -160(%rbp)	

1
	movq %rdi, %reg1	
	movq -152(%rbp), %reg1	

1
	movq $53748, %rax	
	movq 0(%reg1), %reg2	

1
	movq $5, %rax	
	subl %eax, %edi	

1
	movq $.string8, %r13	
	movq 0(%reg1), %rax	

1
	sete %reg0	
	jne .Matrix.get_30	

1
	movq %rsp, %rbp	
	movq $88, %rdi	

1
	movq %reg0, %rbx	
	movq -24(%rbp), %reg3	

1
	movq $.string10, %r13	
	movq 8(%reg1), %reg2	

1
	je .Main.main_28	
	cmpl $0, %reg0d	

1
.string6_l:	
	.string "	\\they\\n\\t  \\n\\tlisten!\\r\\b\\0\\\\\\\""	

1
	jmp .Main.funccase_8	
.Main.funccase_7:	

1
	movq $3000, %rdi	
	movq %rdi, 352(%rax)	

1
	movq %rdi, %reg1	
	jmp .Main.main_99	

1
.A2I.c2i_2:	
	popq %reg0	

1
	movq $3000, %reg0	
	movq %reg0, 480(%rax)	

1
	movq $8022, %rax	
	negl %eax	

1
	movq $.string10, %rbx	
	movq 0(%rax), %r12	

1
	movq $0, %reg0	
	movq %reg0, 288(%reg1)	

1
.Main.main_103:	
	movq %r14, %reg1	

1
	movq $135, %rsi	
	movq $.string3_l, %rdi	

1
	movq -24(%rbp), %rax	
	movq -120(%rbp), %r9	

1
.Main.main_70:	
	cmpl $0, %reg0	

1
	je .Main.main_119	
	movq $70, %reg0	

1
	call *%rax	
	movq -16(%rbp), %rbx	

1
	movq %r12, %rsi	
	subl %esi, %eax	

1
	movq %rdi, %rax	
	movq -56(%rbp), %rax	

1
	movq $3000, %reg0	
	movq %reg0, 592(%reg1)	

1
	movq 728(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
.string11_l:	
	.string "do nothing"	

1
	movq -104(%rbp), %rsi	
	movq -160(%rbp), %reg3	

1
	movq -16(%rbp), %reg1	
	movq -96(%rbp), %reg3	

1
	movq %reg0, 312(%reg1)	
	movq $3000, %reg0	

1
	movq %rax, %r14	
	jmp .Main.main_5	

1
	movq $8997, %rax	
	movq $30996, %rsi	

1
	je .Razz.new_14	
	movq $26, %reg0	

1
	.globl Foo.set	
	.type Foo.set, @function	

1
	movq $.string11, %r15	
	cmpl $0, %ebx	

1
	.quad List.tail	
	.quad List.cons	

1
	subl %reg0, %reg1	
	movq -80(%rbp), %rax	

1
	idivl %r8d	
	movq -184(%rbp), %r8	

1
.A2I.i2c_1:	
	movq $1, %rcx	

1
	movq 144(%rax), %rax	
	movq 16(%rbx), %rdi	

1
	movq %rax, %r13	
.A2I.a2i_aux_1:	

1
.Main.main_166:	
	cdq	

1
	movq %rdi, 656(%rax)	
	movq $3000, %rdi	

1
	jmp .Dictionary.insert_3	
.Dictionary.insert_1:	

1
	movq %reg0, %rax	
	jmp .Main.main_46	

1
	je .Main.main_58	
	movq $208, %rsi	

1
.Main.main_12:	
	popq %r14	

1
	jg .Main.main_13	
	movq $6, %r12	

1
	call String.substr	
	movq 0(%rbx), %r14	

1
	call *%r13	
	movq -24(%rbp), %rax	

1
	addl %reg0, %esi	
	movq -56(%rbp), %rax	

1
	movq 400(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	call *%r15	
	movq $11, %reg1	

1
	movq -176(%rbp), %rdi	
	movq -48(%rbp), %reg3	

1
	movq %rax, %rdi	
	movq %r15, %rax	

1
	movq -144(%rbp), %rax	
	subl %reg2, %esi	

1
.Main.main_1:	
	movq 8(%rbx), %rdx	

1
.Razz.new_8:	
	call Bar.new	

1
	movq $33158, %reg0	
	movq $0, %rcx	

1
	movq $48985, %rax	
	movq 0(%rbx), %r12	

1
	movq 0(%rax), %rbx	
	movq 144(%rbx), %rbx	

1
	movq %rax, %rcx	
	movq -160(%rbp), %rax	

1
	movq $0, %reg0	
	movq %reg0, 432(%reg1)	

1
	movq %rdi, 16(%rax)	
	movq $1, %rdi	

1
.Main.main_33:	
	movq %reg0, %reg1	

1
	setl %sil	
	jge .Main.main_21	

1
	je .Main.main_45	
	movq $200, %reg0	

1
	movq $5660, %reg0	
	subl %reg0d, %reg1	

1
	movq %rax, %reg1	
	movq $64947, %rax	

1
	movq %rdi, %rax	
	jmp .Main.main_48	

1
	idivl %reg0	
	movq $52306, %reg1	

1
	je .Main.main_9	
	movq $11, %reg0	

1
	idivl %edi	
	movq $52306, %rdi	

1
	movq $4, %reg0	
	cmpl %reg1, %edi	

1
	.string "a"	
.string7:	

1
	addl %edi, %eax	
	movq $36010, %rdi	

1
	movq $14901, %rsi	
	movq %rsi, %reg1	

1
	je .Matrix.set_53	
	movq $1, %r8	

1
	movq $2, %reg0	
	movq %r12, %reg2	

1
	movq %rdi, 216(%rax)	
	movq $3000, %rdi	

1
	jne .Main.main_1	
	movq %r12, %r14	

1
	movq -24(%rbp), %rsi	
	movq %reg2, %reg3	

1
	movq $12843, %reg0	
	movq $0, %reg1	

1
.Main.main_10:	
	movq $1, %rdi	

1
	movq %reg0, 544(%reg1)	
	movq $3000, %reg0	

1
	ret	
	.size Dictionary.getHead, .-Dictionary.getHead	

1
	movq $39037, %rdi	
	negl %reg1	

1
	movq %rax, %r13	
	movq $1, %rax	

1
	movq $48985, %reg0	
	movq 0(%rbx), %reg2	

1
.Cons.insert_4:	
	movq 16(%rbx), %rdx	

1
	movq $empty_string, %rax	
	jmp .A2I.i2a_aux_2	

1
	movq $13, %rsi	
	negl %esi	

1
	.type List.car, @function	
List.car:	

1
	movq $46874, %rax	
	addl %eax, %ecx	

1
	movq -120(%rbp), %rsi	
	negl %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 568(%reg1)	

1
	movq $34320, %reg0	
	movq $25316, %rax	

1
	movq $.string9, %reg0	
	cmpl $0, %reg1	

1
	movq %reg0, 440(%reg1)	
	movq $3000, %reg0	

1
	movq %rbx, %reg1	
	movq -168(%rbp), %rsi	

1
	movq %r12, %rsi	
	addl %esi, %eax	

1
	call *%reg0	
	movq 632(%rbx), %reg2	

1
	jne .Main.main_1	
	movq $11435, %r12	

1
	movq %reg0, 280(%rax)	
	movq $3000, %reg0	

1
	movq 592(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	jne .Matrix.get_47	
	movq 152(%reg0), %reg0	

1
	movq $38915, %reg0	
	movq $0, %reg1	

1
	testq $1, %r8	
	je .Main.main_5	

1
	movq -152(%rbp), %rax	
	movq -24(%rbp), %reg3	

1
	movq -136(%rbp), %reg1	
	negl %edi	

1
.Main.main_11:	
	movq 0(%r14), %rax	

1
.Main.main_20:	
	movq $0, %reg0	

1
	movq %reg0, %reg1	
	movq -40(%rbp), %rax	

1
	movq 16(%rbx), %r12	
	movq 8(%rbx), %rax	

1
.Main.main_136:	
	movq %r14, %rax	

1
	movq $4, %rax	
	movq %rax, -40(%rbp)	

1
	movq %reg0, %rax	
	jmp .Main.main_87	

1
	jge .Main.main_13	
	movq -56(%rbp), %reg1	

1
	movq $228, %rsi	
	movq $.string5_l, %reg1	

1
	ret	
	.size List.print_list, .-List.print_list	

1
	movq %rdi, %rax	
	jmp .Main.main_40	

1
	movq $12, %rdi	
	movq -176(%rbp), %rax	

1
	call *%reg0	
.Main.funcifi_2:	

1
	movq $.string10, %rbx	
	movq %reg1, %rdx	

1
	testq $1, %rcx	
	je .Main.main_86	

1
	negl %reg0	
	movq $35, %reg1	

1
	call *%rax	
	movq 240(%rbx), %rax	

1
	imull %reg0	
	movq -72(%rbp), %reg2	

1
	movq $51925, %rax	
	movq 0(%reg1), %r12	

1
	.type Cons.head, @function	
Cons.head:	

1
	.size Matrix.set, .-Matrix.set	
	.globl Matrix.elMul	

1
	movq %reg0, 304(%rax)	
	movq $0, %reg0	

1
	movq 296(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	call *%r12	
.Main.main_35:	

1
	movq $8022, %reg0	
	negl %reg1	

1
	movq $0, %rdi	
	movq %rdi, 440(%reg1)	

1
	je .Main.main_47	
	movq $15, %reg0	

1
	je .Razz.new_3	
	cmpq $Foo_vtable, 0(%reg0)	

1
	movq %r14, %rdi	
	movq -56(%rbp), %rax	

1
	jne .Main.main_9	
	movq $53748, %reg0	

1
	movq %r13, %rsi	
	movq 8(%reg2), %reg3	

1
.Main.main_1:	
	cmpq $String_vtable, 0(%reg0)	

1
	movq $218, %rsi	
	movq $.string5_l, %rdi	

1
	call *%reg0	
	movq $20, %reg0	

1
	jne .Main.main_27	
	movq %reg0, %rax	

1
	imull %reg0	
	movq $56453, %rsi	

1
	movq $30773, %reg0	
	cmpl %reg1, %eax	

1
	movq -32(%rbp), %rdx	
	movq %rdx, -152(%rbp)	

1
	cmpq $Object_vtable, 0(%rax)	
	je .Main.new_2	

1
Foo.setS:	
	pushq %rbp	

1
.Foo.new_6:	
	movq %reg0, 16(%reg1)	

1
	movq $32, %reg0	
	movq $.string4_l, %rdi	

1
	movq %rdi, %rbx	
	movq 24(%rbx), %reg2	

1
	je .Main.main_59	
	movq $17, %reg0	

1
	je .Main.new_6	
	movq $55, %reg0	

1
	cmpq $Object_vtable, 0(%reg0)	
	je .Main.new_3	

1
	addl %eax, %reg1	
	movq $38737, %rax	

1
	je .Main.main_44	
	movq $197, %reg0	

1
	movq $27231, %rsi	
	movq %rsi, %reg1	

1
	movq $25895, %reg0	
	cmpl %reg1, %edi	

1
	movq $.string12, %reg0	
	movq %rbx, %r12	

1
	call Bazz.new	
	movq %reg0, 8(%rbx)	

1
	movq 464(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq $22, %rax	
	popq %r12	

1
	negl %r8d	
	movq %rcx, %rax	

1
	movq $45807, %rax	
	subl %eax, %edi	

1
	movq %r13, %rcx	
	imull %reg2	

1
	negl %reg0	
	movq -120(%rbp), %rax	

1
	movq %rdi, %rax	
	jmp .Main.main_108	

1
	movq $.string6, %reg0	
	movq $.string7, %r13	

1
	movq $2, %rax	
	movq %rax, -16(%rbp)	

1
	movq $5, %rcx	
	cmpl %ecx, %reg2d	

1
	je .Bazz.new_5	
	cmpq $Razz_vtable, 0(%rbx)	

1
.Matrix.set_46:	
.Matrix.set_44:	

1
	movq $13765, %rax	
	movq $5137, %rdi	

1
	addl %edi, %eax	
	movq %rax, 40(%reg3)	

1
	movq %rax, %r12	
	movq 0(%reg2), %r13	

1
	idivl %esi	
	movq -112(%rbp), %reg2	

1
	.type Complex.y_value, @function	
Complex.y_value:	

1
	.quad 50	
.string20_l:	

1
.Main.main_21:	
	movq -96(%rbp), %reg1	

1
	addl %reg0, %reg1	
	movq $28260, %reg2	

1
	movq %reg0, %rax	
	movq 8(%rbx), %r13	

1
	negl %eax	
	movq -64(%rbp), %rdi	

1
	subl %esi, %edi	
	movq %reg2, 16(%reg3)	

1
	movq $107, %rsi	
	movq $.string4_l, %reg1	

1
	idivl %reg0	
	movq $43856, %rdi	

1
	je .Main.main_24	
	movq $35, %reg0	

1
.Main.main_47:	
	movq -120(%rbp), %rax	

1
	addl %eax, %reg1	
	movq $46874, %rax	

1
	movq $12, %r8	
	movq -160(%rbp), %rax	

1
	call Foo.new	
	movq %reg0, 16(%reg1)	

1
	movq %reg0, 8(%reg1)	
	movq $39, %reg0	

1
.Main.main_79:	
	jmp .Main.main_170	

1
	movq $2, %rdi	
	addl %edi, %reg2	

1
	movq $130, %rdi	
	movq %reg1, %reg2	

1
	subl %edi, %reg1	
	movq %rax, -176(%rbp)	

1
	jmp .Main.main_97	
.Main.main_96:	

1
.CellularAutomaton.cell_right_neighbor_2:	
	popq %reg0	

1
.Main.out_whatever_3:	
	movq %rdi, %reg1	

1
.Main.main_3:	
	movq 0(%rax), %r15	

1
	call *%rbx	
	jmp .Main.main_11	

1
	imull %esi	
	movq $63080, %rsi	

1
.string18_l:	
	.string "+"	

1
	idivl %ecx	
	movq -96(%rbp), %reg2	

1
	movq -16(%rbp), %rax	
	subl %r8d, %eax	

1
	movq 176(%reg0), %reg0	
	jmp .Matrix.get_57	

1
	je .Main.main_1	
	cmpl $0, %eax	

1
	movq %rdi, %reg1	
	movq %reg1, -112(%rbp)	

1
	movq 56(%r15), %r15	
	movq %r13, %reg2	

1
	movq $60750, %reg0	
	movq 0(%rbx), %rax	

1
	movq %reg0, 8(%reg1)	
	call Bar.new	

1
	movq $35037, %r13	
	movq $56918, %reg1	

1
	negl %eax	
	movq -160(%rbp), %reg2	

1
	movq $2, %reg0	
	movq $.string3_l, %rdi	

1
	movq $1, %r12	
	call Bool.new	

1
	sete %reg0b	
	jne .Matrix.set_4	

1
	imull %r12d	
	subl %eax, %ebx	

1
	movq $48118, %reg0	
	negl %eax	

1
	movq $50347, %reg0	
	movq %reg0, %reg1	

1
	testq $1, %reg0	
	je .Cons.rcons_1	

1
	movq %rdi, %reg1	
	cmpl $0, 8(%rbx)	

1
	movq 120(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	movq $181, %rsi	
	movq $.string5_l, %reg1	

1
	movq %rax, %rbx	
	jmp .Main.main_7	

1
	je .Main.main_39	
	movq $34, %rsi	

1
	movq %rdi, 704(%rax)	
	movq $3000, %rdi	

1
	movq $30215, %reg0	
	subl %eax, %edi	

1
	je .Main.main_73	
	movq $19, %rsi	

1
	call *%r12	
	movq 256(%reg1), %r12	

1
	movq $168, %rsi	
	movq $.string2_l, %reg1	

1
	movq $.string10, %rbx	
	movq -8(%rbp), %reg2	

1
	movq $6, %r13	
	movq $.string6, %rax	

1
.Cons.rcons_1:	
	movq 16(%reg0), %rdx	

1
.Dictionary.get_4:	
	movq 8(%rax), %reg1	

1
	movq $8, %rcx	
	movq %reg1, %rsi	

1
	idivl %reg0	
	movq %reg1, -16(%rbp)	

1
	call out_error	
.Main.main_192:	

1
	movq $35037, %r13	
	movq $56918, %rax	

1
	call out_error	
.Main.print_list_5:	

1
	je .Razz.new_10	
	cmpq $Razz_vtable, 0(%reg0)	

1
.Main.main_15:	
	movq 0(%reg0), %r12	

1
	movq $47127, %rsi	
	imull %reg1	

1
	movq 8(%rax), %rdi	
	movq $1, %rcx	

1
	movq $0, %rdi	
	movq %rdi, 256(%reg1)	

1
	movq %rdx, %rbx	
	movq %reg2, %r12	

1
	.type Complex.new, @function	
Complex.new:	

1
	movq %r13, %rax	
	movq $0, %reg2	

1
	imull %reg0	
	movq -24(%rbp), %rdi	

1
	movq $56453, %rsi	
	imull %reg1	

1
	movq %reg0, %rax	
	movq $empty_string, %reg0	

1
	movq %reg0, %reg1	
	jmp .Main.main_87	

1
	movq 208(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	je .Main.main_89	
	movq $64, %reg0	

1
	negl %edi	
	movq $2, %reg1	

1
	movq 632(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	negl %reg0	
	movq %rdi, 8(%reg2)	

1
	movq %r8, %reg1	
	negl %reg2	

1
	jg .Matrix.mul_2	
	movq $1, %reg0	

1
.Bar.new_14:	
	cmpq $Bar_vtable, 0(%rbx)	

1
	idivl %esi	
	movq %reg1, -160(%rbp)	

1
	movq %reg0, 8(%reg1)	
	movq $5, %r12	

1
	movq %rdi, %reg1	
	jmp .Main.main_141	

1
	call Int.new	
	movq 0(%rbx), %r12	

1
	subl %reg0, %reg1	
	movq %reg2, -176(%rbp)	

1
	.quad Dictionary.get	
	.quad Dictionary.insert	

1
	movq %reg0, %rax	
	jmp .Main.main_112	

1
	movq $144, %reg0	
	movq $.string2_l, %reg1	

1
	movq $0, %rdi	
	movq %rdi, 424(%rax)	

1
	call Nil.new	
	movq %reg0, 8(%reg1)	

1
	movq %r12, %rsi	
	addl %reg2, %eax	

1
	je .Main.main_26	
	movq $13, %rsi	

1
	movq 592(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	je .Main.main_3	
	movq $.string8, %reg0	

1
	movq $43856, %reg0	
	movq $0, %rsi	

1
	movq -48(%rbp), %reg1	
	subl %reg2, %reg3d	

1
.Main.main_15:	
	movq -24(%rbp), %reg1	

1
	movq -136(%rbp), %rbx	
	movq -8(%rbp), %rdx	

1
	setle %sil	
	jg .Main.main_105	

1
	movq 24(%rbx), %reg1	
	movq $0, %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 392(%rax)	

1
.Main.main_33:	
	movq -128(%rbp), %rax	

1
.Foo.new_7:	
	cmpq $Bar_vtable, 0(%rbx)	

1
.A2I.i2a_1:	
	movq $0, %rdi	

1
.Main.main_58:	
	movq 0(%r13), %rax	

1
	movq $0, %rdi	
	movq %rdi, 680(%rax)	

1
.Main.main_162:	
	movq %reg0, %reg1	

1
	movq -72(%rbp), %reg1	
	movq %reg2, %rcx	

1
	movq $48118, %rax	
	negl %reg1	

1
	movq $47353, %reg0	
	negl %eax	

1
	movq -136(%rbp), %rax	
	movq %rbx, %rsi	

1
	addl %esi, %reg1	
	subl %reg1, %edi	

1
	movq -96(%rbp), %reg1	
	subl %esi, %reg3	

1
	movq $0, %reg0	
	movq %reg0, 720(%rax)	

1
	movq -40(%rbp), %reg1	
	movq -48(%rbp), %rsi	

1
	movq %rbx, %reg1	
	subl %edi, %eax	

1
	movq $10174, %reg0	
	movq $22520, %rsi	

1
	idivl %ecx	
	movq $53595, %reg1	

1
	movq $29789, %rsi	
	movq %rsi, %reg1	

1
.CellularAutomaton.cell_at_next_evolution_4:	
	movq %reg0, %reg1	

1
	.globl Matrix.new	
	.type Matrix.new, @function	

1
.Main.main_21:	
	movq $0, %rax	

1
	cmpq $Int_vtable, 0(%rax)	
	je .Main.new_2	

1
	imull %reg0	
	movq %r14, %reg2	

1
	movq %rax, %rdi	
	movq 8(%rbx), %rsi	

1
	testq $1, %r8	
	je .Main.main_152	

1
	movq -80(%rbp), %reg1	
	addl %esi, %eax	

1
.ListNode.insert_4:	
	movq 16(%reg0), %reg1	

1
.Main.main_63:	
	movq 0(%r13), %rax	

1
	.string "VOID"	
.string6:	

1
.Main.main_75:	
	movq -16(%rbp), %reg1	

1
	movq $678987, %r13	
	call A2I.new	

1
Main.funccaseb:	
	pushq %reg0	

1
	call out_error	
.Main.main_91:	

1
	movq %r14, %rsi	
	subl %esi, %reg3	

1
	cmpq $Foo_vtable, 0(%rbx)	
	je .Bazz.new_4	

1
	movq -120(%rbp), %rsi	
	cmpl %esi, %eax	

1
	movq 592(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	je .Main.iota_3	
	movq $126, %reg0	

1
	addl %edi, %eax	
	cmpl $0, %reg2d	

1
	jne .Matrix.set_30	
	movq %rdi, 96(%reg1)	

1
	subl %esi, %eax	
	movq -152(%rbp), %rsi	

1
	movq -112(%rbp), %rax	
	subl %eax, %reg3	

1
	movq $0, %rdi	
	movq %rdi, 392(%reg1)	

1
	negl %reg0	
	movq %rax, -40(%rbp)	

1
	jge .Main.main_68	
	movq -168(%rbp), %reg1	

1
	je .Main.main_36	
	movq $180, %rsi	

1
	movq %rax, %reg1	
.Main.main_7:	

1
	movq %rdi, %reg1	
	jmp .Main.main_81	

1
	movq 144(%rbx), %rbx	
	movq %reg1, %rdi	

1
	je .Main.main_31	
	movq -72(%rbp), %rax	

1
	subl %reg0, %edi	
	movq $18841, %rax	

1
	movq -64(%rbp), %reg1	
	movq %r8, %reg3	

1
.Main.funccase_2:	
	movq %rdi, %rax	

1
	movq $29252, %reg0	
	negl %reg1	

1
	call *%r12	
	movq 736(%reg1), %reg2	

1
.DicNode.get_2:	
	popq %reg0	

1
	sete %reg0b	
	jne .DicNode.insert_1	

1
	movq $3000, %rdi	
	movq %rdi, 296(%rax)	

1
	movq -168(%rbp), %reg1	
	movq %rcx, %r8	

1
	movq -128(%rbp), %reg1	
	movq -96(%rbp), %reg3	

1
	movq %rax, 56(%rbx)	
	movq %rbx, %rax	

1
.Bar.new_6:	
	movq %reg0, 16(%rbx)	

1
	movq $9, %rsi	
	cmpl %esi, %edi	

1
	movq $6, %reg0	
	movq $.string5_l, %reg1	

1
	movq %rsp, %reg1	
	movq $72, %reg2	

1
	.string "Foo"	
.string4:	

1
	movq -112(%rbp), %rax	
	movq %rsi, %reg3	

1
	movq $25351, %rax	
	subl %reg1, %ecx	

1
	subl %esi, %eax	
	movq -104(%rbp), %rsi	

1
	je .Main.main_10	
	movq $14, %rsi	

1
	subl %esi, %reg1	
	subl %reg1, %edi	

1
	imull %reg0d	
	subl %reg1, %ebx	

1
	.quad Matrix.elMul	
	.quad Matrix.mul	

1
.string14_l:	
	.string "true"	

1
	setl %sil	
	jge .Main.main_39	

1
	jmp .Main.main_63	
.Main.main_62:	

1
	movq 0(%r12), %reg1	
	movq 128(%reg1), %reg1	

1
	addl %edi, %eax	
	movq $55318, %rdi	

1
	jne .Main.main_3	
	movq 72(%reg0), %reg1	

1
	movq %rax, %rcx	
	movq $25351, %rax	

1
	movq $3000, %reg0	
	movq %reg0, 184(%reg1)	

1
	movq -88(%rbp), %rax	
	subl %ecx, %eax	

1
	movq %reg0, %rbp	
	movq $72, %rdi	

1
	movq %r14, %rsi	
	subl %reg2, %eax	

1
	je .Main.main_79	
	movq $61, %reg0	

1
	movq 16(%rax), %reg1	
	addl %esi, %reg3	

1
	movq -168(%rbp), %reg1	
	movq -24(%rbp), %reg3	

1
	movq $3000, %rdi	
	movq %rdi, 16(%reg1)	

1
	je .Main.new_2	
	cmpq $Main_vtable, 0(%rbx)	

1
	movq $19990, %rdi	
	imull %reg1	

1
	testq $1, %rax	
	je .Razz.new_18	

1
	subl %reg0, %reg1d	
	movq $12, %r9	

1
	movq %r12, %reg1	
	movq $3, %rax	

1
	movq -40(%rbp), %rax	
	movq -48(%rbp), %rsi	

1
	imull %reg0	
	movq $3850, %rdi	

1
	movq $53667, %rsi	
	movq $0, %reg1	

1
	movq $34, %rsi	
	movq $.string3_l, %reg1	

1
	movq -8(%rbp), %reg1	
	movq -32(%rbp), %reg3	

1
	movq -128(%rbp), %rax	
	movq -152(%rbp), %reg3	

1
	imull %r8d	
	movq -136(%rbp), %r8	

1
	movq 160(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq 8(%rax), %r15	
	movq 0(%rax), %r14	

1
	call *%rax	
	movq -40(%rbp), %rdx	

1
	movq $30215, %reg0	
	subl %eax, %reg2	

1
.A2I.c2i_17:	
	movq $.string16, %reg0	

1
	movq 8(%reg0), %rax	
	movq 0(%reg2), %r13	

1
	ret	
	.size Complex.reflect_X, .-Complex.reflect_X	

1
	movq -80(%rbp), %rsi	
	movq -168(%rbp), %rax	

1
	movq -8(%rbp), %rax	
	popq %r15	

1
	jge .Main.main_21	
	movq -80(%rbp), %rax	

1
	movq %rsi, %rax	
	movq -80(%rbp), %rax	

1
	movq $22, %reg0	
	movq $11, %r8	

1
	movq -112(%rbp), %rax	
	movq %r13, %rcx	

1
	movq $21018, %rax	
	movq -8(%rbp), %reg2	

1
	movq $1, %rdi	
	movq 16(%rbx), %rax	

1
	movq %reg0, %rsi	
	call IO.out_int	

1
	movq 16(%reg0), %rax	
	addl %reg2, %reg3	

1
	.quad A2I.new	
	.quad Object.abort	

1
	call String.substr	
	movq 0(%reg0), %r14	

1
	movq $0, %reg0	
	movq %reg0, 552(%rax)	

1
	movq %reg0, %rax	
	movq -16(%rbp), %r8	

1
	movq %rsp, %reg1	
	movq %rsi, %rdi	

1
	idivl %ebx	
	movq %reg1, %reg2	

1
	movq %reg0, %r13	
	movq $12, %reg0	

1
	jne .Matrix.set_30	
	movq %rdi, 96(%rax)	

1
	movq -24(%rbp), %reg1	
	sete %dil	

1
	movq $50929, %reg0	
	addl %reg0d, %reg1	

1
	movq %reg0, %reg1	
	movq $38511, %reg0	

1
	movq $14352, %rdi	
	cmpl %edi, %eax	

1
	movq 136(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq 96(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq 8(%reg0), %rax	
	negl %eax	

1
	movq $62331, %reg0	
	subl %reg1, %reg2	

1
	movq $16029, %reg0	
	movq $19302, %rsi	

1
	movq 8(%reg0), %rbx	
	movq 0(%reg2), %r12	

1
.Bar.new_13:	
	movq 16(%reg0), %rdx	

1
.Main.main_3:	
	movq %rsi, %reg1	

1
.Main.main_10:	
	movq %reg0, %rdx	

1
.Main.main_109:	
	movq -88(%rbp), %reg1	

1
	movq $3233, %r9	
	movq $26083, %reg1	

1
	movq %reg0, %rax	
	movq 8(%reg2), %r13	

1
	call *%r12	
.Main.main_32:	

1
	movq $0, %reg0	
	movq %reg0, 440(%rax)	

1
	movq -16(%rbp), %rax	
	movq %r13, %reg3	

1
.Bar.new_5:	
	movq %rbx, %rax	

1
	movq %rbx, %rsi	
	cmpl %esi, %eax	

1
	subl %reg0, %reg1d	
	movq $61569, %reg2	

1
	imull %reg0	
	movq -128(%rbp), %rsi	

1
	movq $3000, %reg0	
	movq %reg0, 176(%rax)	

1
	jg .Main.main_25	
	movq $.string7, %reg0	

1
	movq $1, %reg0	
	movq $.string6, %r13	

1
	call *%rax	
	movq 512(%reg1), %r12	

1
	movq %reg0, %r13	
	movq $3, %reg0	

1
	idivl %reg0d	
	subl %eax, %r8d	

1
	movq %reg0, %reg1	
	movq %reg1, -152(%rbp)	

1
	call *%reg0	
	movq 648(%reg1), %reg2	

1
	movq 656(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq -80(%rbp), %reg1	
	subl %ecx, %reg3	

1
.Razz.new_20:	
	movq 48(%reg0), %reg1	

1
	je .Main.main_29	
	movq $13, %rsi	

1
	movq 8(%r12), %reg1	
	movq %reg2, %rdi	

1
	idivl %ecx	
	movq -56(%rbp), %rcx	

1
	testq $1, %rax	
	je .Main.func_2	

1
	addl %reg0, %r8d	
	movq %rcx, %rax	

1
	subl %eax, %reg1	
	movq $34422, %reg2	

1
.Main.iota_2:	
	movq 8(%rbx), %reg1	

1
	testq $1, %reg0	
	je .Main.main_155	

1
	call *%reg0	
	movq 736(%rbx), %rax	

1
	movq -80(%rbp), %rax	
	subl %ecx, %eax	

1
	movq -64(%rbp), %reg1	
	subl %edi, %eax	

1
	movq -72(%rbp), %reg1	
	subl %reg1d, %eax	

1
	je .Main.new_2	
	cmpq $Bool_vtable, 0(%rax)	

1
	movq 416(%reg0), %rax	
	movq 0(%reg0), %r12	

1
Matrix.mul:	
	pushq %reg0	

1
	movq -16(%rbp), %rax	
	movq -136(%rbp), %reg3	

1
.Main.main_16:	
	movq 0(%rax), %r12	

1
	movq $35037, %reg0	
	movq $56918, %rax	

1
	movq $.string12, %reg0	
	movq %reg1, %r12	

1
	movq $.string15, %reg0	
	movq %rbx, %reg2	

1
	movq 64(%r12), %r12	
	movq -8(%rbp), %reg2	

1
	movq 8(%reg0), %rdi	
	cmpl %reg2, %reg3	

1
	je .Main.main_102	
	movq %reg0, %rsi	

1
	je .Main.func2_1	
	movq $6, %reg0	

1
	movq %reg0, 640(%rax)	
	movq $3000, %reg0	

1
	movq $38801, %rax	
	cmpl %eax, %edi	

1
	movq -128(%rbp), %reg1	
	movq -72(%rbp), %rcx	

1
	movq 312(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq $3000, %rdi	
	movq %rdi, 320(%rax)	

1
	sete %reg0b	
	jne .Matrix.get_40	

1
	movq %reg0, %r13	
	movq $3, %reg2	

1
	je .Main.main_7	
	movq 0(%reg0), %reg1	

1
	call *%rbx	
.Main.main_192:	

1
.Matrix.set_58:	
	movq $4, %r8	

1
.Main.func_2:	
	movq 0(%rax), %reg1	

1
	movq $61731, %rsi	
	movq %rsi, %reg1	

1
	addl %edi, %eax	
	movq $222, %reg2	

1
	idivl %ecx	
	movq $39267, %reg1	

1
	movq $12757, %rsi	
	imull %reg1	

1
	movq -40(%rbp), %rdi	
	movq -24(%rbp), %rax	

1
	movq $8340, %reg0	
	negl %reg1	

1
	movq %rdi, %rax	
	movq %rax, -144(%rbp)	

1
	movq $29789, %reg0	
	movq %reg0, %reg1	

1
	movq -160(%rbp), %rsi	
	movq %r15, %reg3	

1
	movq $empty_string, %rdi	
	movq %reg1, %reg2	

1
	subl %eax, %reg1	
	movq $54460, %reg2	

1
	imull %reg0	
	movq -144(%rbp), %rsi	

1
	movq -16(%rbp), %rax	
	subl %eax, %ecx	

1
	jne .Matrix.set_36	
	movq %reg0, 120(%reg1)	

1
	movq $Yaz_vtable, 0(%reg0)	
	movq $0, %rdi	

1
	movq %reg0, %rax	
	movq -64(%rbp), %rcx	

1
	movq $47879, %reg0	
	cmpl %reg1, %reg2	

1
	movq %rdi, %reg1	
	movq $2, %r12	

1
	je .Main.main_174	
	movq $308, %reg0	

1
	jne .Matrix.get_43	
	movq 136(%reg0), %reg0	

1
	call String.concat	
	movq %reg0, 8(%rbx)	

1
	call *%reg0	
	jmp .Main.main_23	

1
	movq %reg0, %rdi	
	movq $45807, %reg0	

1
	movq 704(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	imull %reg0	
	movq $47988, %reg1	

1
	jne .Matrix.set_47	
	movq %rdi, 152(%reg1)	

1
	movq %rax, %rbx	
	movq $.string8, %r12	

1
	testq $1, %rax	
	jne .Main.main_6	

1
	.quad Complex.print	
	.quad Complex.reflect_0	

1
	movq $17979, %reg0	
	imull %ebx	

1
	movq 16(%rax), %reg1	
	movq %r12, %rsi	

1
	movq -96(%rbp), %reg1	
	subl %reg2, %reg3d	

1
	movq %reg0, 392(%reg1)	
	movq $0, %reg0	

1
	call String.concat	
	movq %reg0, %rbx	

1
	call *%rbx	
	jmp .Main.main_32	

1
	jne .Main.main_17	
	movq 0(%reg0), %rax	

1
	call String.new	
	movq %reg0, %r14	

1
	movq $5, %rax	
	subl %reg1, %edi	

1
	movq $3000, %reg0	
	movq %reg0, 536(%rax)	

1
	movq $48608, %reg0	
	negl %eax	

1
	movq %reg0, %r12	
	movq $10, %reg2	

1
	jne .Matrix.set_60	
	movq %reg0, 192(%rax)	

1
	jne .Main.main_1	
	movq $1, %reg0	

1
	jmp .Matrix.get_11	
.Matrix.get_10:	

1
	je .Main.func_2	
.Main.func_1:	

1
	je .Main.main_117	
	movq %reg0, %rax	

1
	.quad String.substr	
Dictionary_vtable:	

1
	movq $51549, %rax	
	movq %reg1, %reg2	

1
.string4_l:	
	.string "ERROR: %lld: Exception: dispatch on void\n"	

1
	movq -104(%rbp), %reg1	
	negl %ecx	

1
.Matrix.elMul_3:	
	movq %reg0, %reg1	

1
	movq 472(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	jmp .Main.main_71	
.Main.main_70:	

1
	movq $12, %rsi	
	movq -32(%rbp), %rax	

1
	movq -80(%rbp), %rax	
	movq %rbx, %reg3	

1
.Cons.sort_2:	
	movq 0(%reg0), %reg1	

1
.CellularAutomaton.evolve_2:	
	movq %reg0, 8(%rbx)	

1
	movq 16(%reg0), %reg1	
	cmpl %esi, %reg3	

1
	movq $28227, %r11	
	movq %r11, %reg1	

1
	movq 24(%rbx), %rax	
	sete %al	

1
	movq -112(%rbp), %rax	
	movq %r15, %reg3	

1
	movq 16(%reg0), %rax	
	movq 32(%reg0), %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 696(%rax)	

1
	movq -32(%rbp), %rsi	
	subl %reg2, %reg3	

1
	call *%rax	
	movq 272(%reg1), %r12	

1
	movq $49656, %reg0	
	negl %reg1	

1
	negl %reg0	
	movq -176(%rbp), %r9	

1
.A2I.i2c_8:	
.A2I.i2c_6:	

1
	movq %rax, %reg1	
.Main.main_70:	

1
	addl %reg0, %reg1	
	movq $25036, %reg2	

1
	movq 16(%reg0), %reg1	
	movq 32(%reg0), %reg2	

1
	movq %reg0, %reg1	
	movq %r10, %r11	

1
	movq $222, %reg0	
	negl %reg1	

1
	je .Main.main_4	
	movq $2, %rax	

1
.Matrix.set_40:	
	movq $5, %rcx	

1
	movq %rax, %reg1	
	jmp .CellularAutomaton.cell_at_next_evolution_4	

1
	je .Main.main_168	
	movq $145, %rsi	

1
	addl %edi, %eax	
	movq $55318, %reg2	

1
	movq $48027, %reg0	
	movq 0(%reg1), %reg2	

1
	idivl %esi	
	movq $12660, %reg1	

1
	movq -160(%rbp), %reg1	
	negl %edi	

1
	jmp .Matrix.set_13	
.Matrix.set_1:	

1
	movq %reg0, %rcx	
	subl %ecx, %r8d	

1
.Main.main_57:	
	movq -96(%rbp), %reg1	

1
	je .Main.main_148	
	movq $115, %rsi	

1
	movq %r14, %reg1	
	movq -120(%rbp), %rsi	

1
	idivl %ecx	
	movq $15755, %reg1	

1
	jmp .Bar.new_6	
.Bar.new_4:	

1
	movq $.string7, %r12	
	movq %r12, %rdi	

1
	je .Main.main_4	
	movq $0, %reg0	

1
	movq $15487, %rdi	
	subl %edi, %eax	

1
	movq -80(%rbp), %rsi	
	movq -56(%rbp), %reg3	

1
	movq %rcx, %rax	
	movq -136(%rbp), %rax	

1
	movq %reg0, 80(%reg1)	
	movq %reg0, %reg1	

1
	movq $13, %rax	
	movq %rax, -64(%rbp)	

1
	movq %r12, %rax	
	movq %r8, %r9	

1
	.quad 10	
	.quad Main.new	

1
	movq %rdi, 224(%rax)	
	movq $0, %rdi	

1
	movq 672(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	call *%rax	
	movq 128(%reg1), %reg2	

1
	movq -136(%rbp), %rax	
	imull %ecx	

1
	testq $1, %rdi	
	je .Main.main_134	

1
	movq %rdi, 304(%reg1)	
	movq $0, %rdi	

1
	jmp .Main.main_87	
.Main.main_86:	

1
	movq 0(%rdx), %r13	
	movq 136(%r13), %r13	

1
	sete %reg0b	
	jne .Matrix.set_27	

1
	movq -104(%rbp), %rax	
	movq $0, %r8	

1
	movq 424(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	subl %esi, %edi	
	movq %reg2, 16(%rax)	

1
	movq -160(%rbp), %rsi	
	subl %esi, %eax	

1
.string0_l:	
	.string "Complex"	

1
	call *%rax	
	movq 120(%rbx), %r12	

1
	movq -128(%rbp), %rdi	
	movq -24(%rbp), %rax	

1
	movq %reg0, %r12	
	movq 16(%reg2), %rax	

1
	movq -88(%rbp), %rcx	
	negl %ecx	

1
	movq $12855, %reg0	
	addl %edi, %reg2	

1
	movq %rdi, %rsi	
	movq -160(%rbp), %rdi	

1
	movq 24(%rbx), %reg1	
	movq %r12, %rdi	

1
Complex.reflect_0:	
	pushq %reg0	

1
	negl %eax	
	movq -8(%rbp), %rdx	

1
	movq $35, %rsi	
	movq $.string2_l, %rdi	

1
	call Bar.new	
	movq %reg0, 32(%rbx)	

1
	movq %rdi, 24(%rax)	
	movq %rdi, %rax	

1
	jne .Matrix.get_45	
	movq 144(%rax), %rax	

1
	testq $1, %rsi	
	je .Main.main_4	

1
	je .Main.main_24	
	movq $10, %rsi	

1
	je .Main.main_72	
	movq $19, %rsi	

1
	call out_error	
.Bar.new_7:	

1
	testq $1, %reg0	
	je .Main.main_84	

1
.Main.main_14:	
	movq 0(%rbx), %r15	

1
	movq $.string10, %rbx	
	movq %reg1, %reg2	

1
	je .Main.func_4	
	cmpq $Object_vtable, 0(%rsi)	

1
	movq 360(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq $0, %rdi	
	movq %rdi, 272(%rax)	

1
.Main.main_21:	
	movq 0(%r13), %reg1	

1
	movq $45379, %reg0	
	subl %reg1, %esi	

1
	movq $0, %reg0	
	movq %reg0, 232(%rax)	

1
	movq $35, %reg0	
	movq $.string2_l, %rdi	

1
	movq -88(%rbp), %reg1	
	movq -96(%rbp), %rcx	

1
	movq %reg0, 536(%rax)	
	movq $3000, %reg0	

1
	movq 360(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq $2, %rdi	
	movq %rdi, 16(%rax)	

1
	addl %eax, %reg1	
	movq $1, %rax	

1
	movq $32716, %r10	
	movq $49288, %reg1	

1
	testq $1, %reg0	
	je .Foo.new_7	

1
	movq $10464, %reg0	
	movq $32716, %reg1	

1
	movq -16(%rbp), %rsi	
	movq -96(%rbp), %reg3	

1
	movq -168(%rbp), %rax	
	movq -120(%rbp), %rcx	

1
	movq 32(%reg0), %rax	
	movq 16(%reg0), %rdi	

1
	movq %reg0, %rdi	
	movq -104(%rbp), %reg0	

1
	movq %rdi, 168(%reg1)	
	movq %rdi, %reg1	

1
	movq $15487, %reg0	
	subl %reg1, %eax	

1
.Main.main_104:	
	cdq	

1
	call *%rax	
	movq $.string9, %rax	

1
	movq -40(%rbp), %rax	
	movq -104(%rbp), %reg3	

1
	movq %rax, %r14	
.Main.main_12:	

1
	movq $26083, %reg0	
	movq $56556, %r10	

1
	movq %r12, %rdi	
	call Object.copy	

1
	movq $67, %reg0	
	movq $.string3_l, %reg1	

1
	movq -144(%rbp), %reg1	
	movq -184(%rbp), %reg3	

1
	movq %rax, %reg1	
	movq $38511, %rax	

1
.Main.main_39:	
	movq %reg0, %reg1	

1
	movq %r12, %rax	
	xorq $1, %rax	

1
	subl %eax, %r12d	
	movq $35037, %reg2	

1
	subl %reg0, %reg1	
	movq $43604, %reg2	

1
	movq $19369, %rdi	
	addl %edi, %eax	

1
	movq -32(%rbp), %reg1	
	movq -96(%rbp), %rsi	

1
	negl %eax	
	movq -8(%rbp), %reg2	

1
	call IO.out_int	
	movq $.string6, %reg0	

1
	movq %rbx, %rdi	
	movq -48(%rbp), %rax	

1
	imull %esi	
	movq $59714, %reg1	

1
	movq %reg0, -16(%rbp)	
	call Bar.new	

1
	movq -80(%rbp), %reg1	
	cmpl %eax, %esi	

1
	movq 16(%reg0), %rdi	
	addl %esi, %edi	

1
	.size Main.getFoo, .-Main.getFoo	
	.globl Main.setFoo	

1
	movq -48(%rbp), %reg1	
	movq %rcx, %r8	

1
	movq -16(%rbp), %reg1	
	negl %eax	

1
	call *%reg0	
.Main.funccase_8:	

1
	testq $1, %rdi	
	je .Main.main_26	

1
	movq $0, %rdi	
	movq %rdi, 400(%reg1)	

1
	movq $12, %rdi	
	movq -128(%rbp), %reg2	

1
	movq %reg0, %rax	
	imull %r9d	

1
	testq $1, %reg0	
	je .Main.main_114	

1
	movq %r12, %rsi	
	cmpl %esi, %reg3	

1
	movq 0(%rbx), %r13	
	movq 128(%r13), %r13	

1
	movq $0, %rax	
	movq -16(%rbp), %rdi	

1
	testq $1, %rsi	
	je .Main.main_65	

1
.Main.new_9:	
	movq 24(%rbx), %reg1	

1
	je .Main.main_41	
	movq -80(%rbp), %rax	

1
	.quad 1	
.string12_l:	

1
	.quad .string6_l	
	.quad 15	

1
	movq 8(%reg0), %reg0	
	addl %eax, %reg2	

1
	movq %rdi, 496(%reg1)	
	movq $0, %rdi	

1
	movq -144(%rbp), %rax	
	movq -120(%rbp), %reg3	

1
	movq %rdi, %reg1	
	movq $20384, %rdi	

1
	movq -120(%rbp), %reg1	
	subl %reg1d, %reg2	

1
	movq %rax, 8(%reg1)	
	movq 0(%reg1), %r12	

1
	movq $4, %r9	
	movq %reg1, %reg2	

1
	testq $1, %rsi	
	je .Main.main_180	

1
	movq -32(%rbp), %rax	
	negl %reg2	

1
	call *%rax	
	jmp .Main.main_44	

1
	movq $3000, %rdi	
	movq %rdi, 472(%rax)	

1
	movq $22802, %reg0	
	addl %reg1, %r8d	

1
	movq 128(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
.Matrix.get_46:	
.Matrix.get_44:	

1
	movq -136(%rbp), %rsi	
	imull %reg2	

1
	movq %rax, %rsi	
	movq -24(%rbp), %rcx	

1
	negl %reg0d	
	movq $0, %r10	

1
	movq -64(%rbp), %rdi	
	cmpl %edi, %reg3	

1
	ret	
	.size DicNode.incr, .-DicNode.incr	

1
	movq -32(%rbp), %reg1	
	imull %ecx	

1
.Main.main_11:	
	movq $1, %reg0	

1
	movq $.string7, %reg0	
	movq 8(%rbx), %rdi	

1
	movq $6, %reg0	
	movq %rdi, %rsi	

1
	movq -160(%rbp), %reg1	
	movq %reg2, %r8	

1
	movq $53085, %reg0	
	imull %esi	

1
	movq %rax, %r14	
	movq $10, %rax	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_22	

1
	movq -176(%rbp), %reg1	
	addl %eax, %reg3	

1
	.quad Main.main	
	.quad Main.fib	

1
	testq $1, %rdi	
	je .Main.new_6	

1
	addl %edi, %eax	
	movq %reg2, 16(%reg3)	

1
	movq $3, %rax	
	cmpl $0, %reg1d	

1
	movq 680(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	.size Complex.init, .-Complex.init	
	.globl Complex.print	

1
	addl %edi, %eax	
	movq %reg2, 24(%rbx)	

1
	.string "678987"	
.string19:	

1
	movq $19302, %reg0	
	movq %reg0, %reg1	

1
	movq 16(%reg0), %rax	
	movq %rax, 8(%reg0)	

1
	movq %r12, %rcx	
	negl %ecx	

1
	subl %reg0, %r8d	
	movq -96(%rbp), %rax	

1
	movq %reg0, %rbp	
	subq $184, %reg0	

1
.Main.main_166:	
	jmp .Main.main_167	

1
	movq %rsi, %rdi	
	movq %rdi, 72(%rax)	

1
	je .ListNode.insert_1	
	call ListNode.new	

1
	movq %rdi, %reg1	
	movq %reg2, %r8	

1
	call *%rax	
	movq 120(%reg1), %r12	

1
	setle %al	
	jmp .Main.main_157	

1
	negl %reg0d	
	movq $1, %rax	

1
	movq %reg0, %reg1	
	subl %reg2, %r9d	

1
	movq %rax, 8(%reg1)	
	movq $1, %reg2	

1
	movq $0, %rax	
	movq %r12, %rdi	

1
	movq %reg0, 520(%rax)	
	movq $3000, %reg0	

1
	movq $22, %reg0	
	movq $.string2_l, %rdi	

1
	movq %reg0, 48(%reg1)	
	cmpl %reg2, %eax	

1
	movq %rax, %r13	
	jmp .Matrix.mul_1	

1
	movq %reg0, %rdi	
	movq %reg2, %rdi	

1
	movq $36, %reg0	
	movq $.string2_l, %reg1	

1
	movq %reg0, 288(%rax)	
	movq $0, %reg0	

1
	movq $.string11, %rax	
	jmp .A2I.i2c_10	

1
	movq 8(%rax), %reg1	
	call *%rbx	

1
	movq $18119, %reg0	
	subl %eax, %edi	

1
	movq -136(%rbp), %reg1	
	movq -80(%rbp), %reg3	

1
	.size DicNode.new, .-DicNode.new	
	.globl List.new	

1
	jge .Main.main_90	
	movq -152(%rbp), %rax	

1
	movq %r14, %reg1	
	subl %esi, %reg3	

1
.Main.main_22:	
	movq $.string9, %rax	

1
.Main.main_21:	
	movq $.string8, %reg0	

1
	movq %rax, %r14	
.Matrix.elMul_1:	

1
	movq $15505, %reg0	
	addl %eax, %edi	

1
.Matrix.set_1:	
	movq $2, %reg0	

1
	movq 40(%reg0), %reg0	
	movq 8(%rbx), %reg2	

1
	movq -88(%rbp), %rsi	
	negl %esi	

1
	movq $3850, %reg0	
	movq %reg0, %rsi	

1
	subl %eax, %reg1	
	movq $48118, %rax	

1
	movq %reg0, 512(%reg1)	
	movq $0, %reg0	

1
	movq -152(%rbp), %reg1	
	imull %reg2d	

1
	movq $14356, %rbx	
	subl %ebx, %reg2	

1
.List.insert_4:	
	movq 8(%rbx), %rdx	

1
	je .Main.main_114	
	movq $67, %rsi	

1
	movq %reg0, %reg1	
	movq $55273, %reg2	

1
	imull %edi	
	movq %reg1, %r14	

1
	movq $30, %reg0	
	movq $.string3_l, %rdi	

1
	sete %r13b	
	jne .A2I.c2i_13	

1
	movq %r12, %reg1	
	subl %esi, %eax	

1
	jg .Matrix.mul_4	
	movq %reg0, %rdx	

1
	movq %rdi, 400(%rax)	
	movq $0, %rdi	

1
	movq %rdi, %rbx	
	pushq %rax	

1
	movq -184(%rbp), %reg1	
	subl %reg2, %reg3d	

1
	movq %reg0, %rdi	
	movq 24(%rbx), %reg0	

1
	movq $604, -24(%rbp)	
	movq $21813, %rdi	

1
.Main.func2_2:	
	movq %rbx, %reg1	

1
	movq -136(%rbp), %reg1	
	cmpl %esi, %reg3	

1
	movq %rsi, %rdi	
	imull %edi	

1
.string10_l:	
	.string "+"	

1
	call *%r12	
	movq 184(%rbx), %rax	

1
	movq $.string8, %reg0	
	movq %reg0, %r14	

1
	movq -24(%rbp), %rax	
	movq %r8, %r9	

1
	movq 448(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq -128(%rbp), %rax	
	movq -40(%rbp), %rcx	

1
	.globl Main.funccase	
	.type Main.funccase, @function	

1
	cmpq $Object_vtable, 0(%rbx)	
	je .Main.new_3	

1
	movq %rdi, %rax	
	jmp .Main.main_10	

1
	movq $173, %reg0	
	movq $.string5_l, %rdi	

1
	jge .Main.main_66	
	movq %r14, %rax	

1
	jmp .Bar.new_17	
.Bar.new_17:	

1
	call String.concat	
	movq 8(%reg0), %rdi	

1
	movq $48118, %rax	
	negl %eax	

1
	testq $1, %reg0	
	je .Matrix.get_64	

1
	movq %reg0, %reg1	
	jmp .Matrix.mul_1	

1
	movq $3850, %reg0	
	movq %reg0, %reg1	

1
	movq $17107, %reg0	
	movq 0(%rbx), %r12	

1
	movq $3000, %rdi	
	movq %rdi, 584(%rax)	

1
	movq 512(%rbx), %r12	
	movq 0(%rbx), %rax	

1
.Razz.new_11:	
	movq %rax, 32(%reg1)	

1
	movq 16(%reg0), %reg1	
	addl %reg2, %eax	

1
	movq -96(%rbp), %reg1	
	movq -88(%rbp), %reg3	

1
	movq 152(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
.Main.main_2:	
	movq -32(%rbp), %rdx	

1
	movq 640(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	movq $14356, %reg0	
	subl %ebx, %reg2	

1
	je .Main.main_169	
	movq $145, %rsi	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_57	

1
	movq 632(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	cmpq $Bar_vtable, 0(%rbx)	
	je .Bar.new_5	

1
	movq $51233, %reg0	
	movq $33158, %reg1	

1
	movq $33161, %r8	
	subl %r8d, %reg1	

1
	movq -168(%rbp), %rax	
	movq -48(%rbp), %rdi	

1
	subl %eax, %reg1	
	movq -64(%rbp), %reg3	

1
	movq -56(%rbp), %reg1	
	movq %rdi, %rsi	

1
	movq $12, %reg0	
	movq 0(%reg1), %reg2	

1
.Main.main_39:	
	movq %reg0, %rsi	

1
	movq %reg0, %rax	
.Main.main_160:	

1
	movq -160(%rbp), %rsi	
	cmpl %esi, %reg3	

1
	movq 40(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
.Matrix.get_51:	
	cdq	

1
	je .Main.main_24	
	movq $13, %rsi	

1
	movq -72(%rbp), %rcx	
	addl %reg2, %esi	

1
	movq %r14, %reg1	
	sete %al	

1
	movq $empty_string, %rax	
.A2I.i2c_20:	

1
	sete %r8b	
	jne .Matrix.set_21	

1
	movq %rax, %rdi	
	movq $50538, %rax	

1
	jmp .Main.func_7	
.Main.func_6:	

1
	je .Main.main_44	
	movq $34, %rsi	

1
	.type Cons.tail, @function	
Cons.tail:	

1
	je .DicNode.insert_4	
	movq $58, %rsi	

1
	addl %reg0, %reg1	
	movq %rax, 24(%reg3)	

1
	movq $21521, %reg0	
	imull %reg0d	

1
	call *%reg0	
	movq 8(%rbx), %rax	

1
	call *%rbx	
	jmp .Main.main_28	

1
	je .Main.new_2	
	cmpq $Int_vtable, 0(%rax)	

1
	movq %rdi, 344(%rax)	
	movq $3000, %rdi	

1
	movq -128(%rbp), %reg1	
	movq -48(%rbp), %rsi	

1
	cmpq $Int_vtable, 0(%rsi)	
	je .Main.main_3	

1
	movq 0(%rax), %rbx	
	movq 120(%rbx), %rbx	

1
	movq 8(%reg0), %rdi	
	cmpl $0, %reg2	

1
	.quad IO.out_string	
A2I_vtable:	

1
	movq $2, %reg0	
	addl %edi, %reg2	

1
	movq -56(%rbp), %rax	
	movq -40(%rbp), %rsi	

1
	jmp .Main.main_9	
.Main.main_2:	

1
	addl %eax, %reg1	
	movq -96(%rbp), %rcx	

1
	movq %r15, %reg1	
	movq %r12, %reg3	

1
	movq %rdi, 48(%reg1)	
	cmpl %reg2, %reg3	

1
	.size Main.main, .-Main.main	
	.globl Main.funccase	

1
	movq -128(%rbp), %rax	
	movq -96(%rbp), %reg3	

1
.Main.main_27:	
	movq %reg0, %rax	

1
	movq $.string10, %reg0	
	movq %reg1, %r12	

1
	movq $2438, %reg0	
	negl %esi	

1
	movq $10, %reg0	
	movq $.string1_l, %reg1	

1
	movq $3000, %reg0	
	movq %reg0, 152(%reg1)	

1
	movq -136(%rbp), %reg1	
	movq -64(%rbp), %rdi	

1
	call out_error	
.Razz.new_1:	

1
	movq $0, %reg0	
	movq %reg0, 544(%reg1)	

1
.Main.main_98:	
	movq -96(%rbp), %reg1	

1
	movq $.string6, %rax	
	movq $empty_string, %r12	

1
.string7_l:	
	.string "false"	

1
.Bar.new_16:	
	movq %reg0, %reg1	

1
	movq -128(%rbp), %reg1	
	movq %rbx, %reg3	

1
	addl %eax, %edi	
	movq $38737, %rax	

1
	jne .Matrix.get_53	
	movq $1, %rcx	

1
.Cons.insert_4:	
	movq 16(%rbx), %reg1	

1
	call IO.new	
	movq %reg0, %r12	

1
	movq $0, %reg0	
.CellularAutomaton.cell_at_next_evolution_6:	

1
	movq %rdi, 728(%rax)	
	movq $0, %rdi	

1
	jmp .Main.funccase_5	
.Main.funccase_5:	

1
	movq 40(%rax), %rax	
	jmp .Matrix.get_11	

1
	je .Bar.new_13	
	movq $10, %rsi	

1
	movq $46874, %reg0	
	addl %reg1, %ecx	

1
	movq 368(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq 16(%reg0), %rax	
	addl %edi, %reg3	

1
	movq %rax, %reg1	
	movq $.string8, %r12	

1
	ret	
	.size CellularAutomaton.cell_at_next_evolution, .-CellularAutomaton.cell_at_next_evolution	

1
	movq $30631, %reg0	
	movq $0, %reg1	

1
	.quad 8	
abort_string_l:	

1
	movq $0, %rdi	
	movq %rdi, 552(%reg1)	

1
	movq %reg0, %r13	
	movq 0(%rbx), %rax	

1
Baz.main:	
	pushq %reg0	

1
	movq $127, %rsi	
	movq $.string3_l, %reg1	

1
	movq %r12, 8(%rax)	
	movq 0(%reg2), %reg3	

1
	movq $0, %reg0	
	movq %reg0, 224(%rax)	

1
	movq %rbx, %reg1	
	movq -64(%rbp), %reg3	

1
	subl %esi, %reg1	
	subl %reg1, %eax	

1
.Matrix.get_61:	
.Matrix.get_59:	

1
	jmp .Main.main_24	
.Main.main_24:	

1
	negl %edi	
	cmpl %edi, %reg1	

1
	movq $2, %reg0	
	jmp .A2I.c2i_6	

1
	movq -160(%rbp), %reg1	
	addl %eax, %reg3d	

1
	call *%reg0	
	movq $51549, %rax	

1
	movq %rdi, %rax	
	movq $6765, %rdi	

1
	call *%reg0	
.Main.main_30:	

1
	movq $34, %rsi	
	movq $.string3_l, %rdi	

1
.Main.main_117:	
	cdq	

1
	testq $1, %r10	
	je .Main.main_69	

1
	movq -16(%rbp), %rax	
	subl %reg2d, %eax	

1
	call *%reg0	
	movq $9856, %rax	

1
	jmp .Matrix.get_22	
.Matrix.get_21:	

1
	jne .Matrix.set_23	
	movq %rdi, 80(%rax)	

1
	testq $1, %r8	
	je .Main.main_29	

1
	movq $12, %r14	
	cmpl $0, %reg1d	

1
	movq -176(%rbp), %rax	
	movq %reg2, %rdi	

1
	movq 0(%reg0), %r13	
	movq 128(%r13), %r13	

1
.Main.main_33:	
	jmp .Main.main_36	

1
	call *%r12	
	movq 448(%reg1), %reg2	

1
A2I_vtable:	
	.quad .string0	

1
	movq %rdi, 432(%reg1)	
	movq $3000, %rdi	

1
	movq %rdi, %reg1	
	jmp .Main.main_30	

1
	movq -144(%rbp), %rax	
	cmpl %reg2, %esi	

1
	imull %reg0	
	movq -80(%rbp), %rdi	

1
	je .Main.main_59	
	movq $208, %rsi	

1
	call Bar.new	
	jmp .Razz.new_6	

1
	movq %r13, %reg1	
	imull %ecx	

1
.Dictionary.get_4:	
	movq 8(%reg0), %rdx	

1
	movq 8(%rax), %reg1	
	movq $2, %rcx	

1
	call Object.copy	
	movq %reg0, %rdi	

1
	movq %rax, %rbx	
	movq %reg2, %r13	

1
	je .Razz.new_4	
	cmpq $Bazz_vtable, 0(%rbx)	

1
	jne .A2I.c2i_11	
	movq $5, %rax	

1
	call out_error	
.Main.main_153:	

1
	movq -32(%rbp), %rsi	
	movq -152(%rbp), %reg3	

1
	jge .Main.funcwhilei_2	
	movq $1, %rdi	

1
	movq $3, %reg0	
	movq $0, %rsi	

1
	movq $29524, %reg0	
	movq 0(%rbx), %reg2	

1
	movq %reg0, %reg1	
	jmp .Razz.new_11	

1
	negl %reg0	
	movq -160(%rbp), %rdi	

1
.Bar.new_12:	
	movq 32(%rbx), %rdx	

1
	movq $0, %reg0	
	movq %reg0, 480(%reg1)	

1
	movq -40(%rbp), %rax	
	imull %reg2	

1
	idivl %ecx	
	movq -80(%rbp), %rcx	

1
	movq $5, %rax	
	movq 0(%reg1), %r13	

1
	.type Foo.get, @function	
Foo.get:	

1
	movq %reg0, %reg1	
	jmp .Main.main_141	

1
	movq -96(%rbp), %reg1	
	subl %esi, %eax	

1
.Foo.new_13:	
	movq 16(%rbx), %reg1	

1
	movq $.string8, %r13	
	movq 0(%rbx), %rax	

1
	subl %reg0, %esi	
	movq -128(%rbp), %rax	

1
.Main.main_153:	
	cdq	

1
	movq %reg0, %r12	
	addl %r12d, %reg2	

1
	jne .Matrix.get_41	
	movq 128(%rax), %rax	

1
	movq $.string11, %rax	
	movq 0(%reg1), %reg2	

1
	addl %esi, %reg1	
	movq -104(%rbp), %rsi	

1
	movq 16(%reg0), %r12	
	movq $.string10, %reg2	

1
	testq $1, %rax	
	jne .Main.main_50	

1
	movq $62343, %reg0	
	movq 0(%reg1), %rax	

1
	movq %rsi, %rbx	
	call Matrix.new	

1
	je .Main.main_16	
	cmpq $String_vtable, 0(%reg0)	

1
	negl %ecx	
	movq -48(%rbp), %rax	

1
.Main.main_51:	
	movq 0(%r13), %reg1	

1
	movq 728(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq %rax, %r12	
	movq $1, %r15	

1
	movq 200(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq 480(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq $9, %rax	
	movq %rax, -48(%rbp)	

1
	testq $1, %r8	
	je .Main.main_73	

1
	je .Main.main_145	
	movq $112, %reg0	

1
	movq $12, %rax	
	cmpl $0, %reg1	

1
	movq %rsp, %reg1	
	subq $184, %rsp	

1
	je .Bar.new_4	
	cmpq $Bazz_vtable, 0(%reg0)	

1
	movq %rbx, %reg1	
	addl %eax, %reg3	

1
	movq -128(%rbp), %reg1	
	movq %r14, %rax	

1
	movq %rdi, 72(%reg1)	
	movq %rdi, %reg1	

1
	movq $.string10, %rax	
	movq 0(%r12), %rbx	

1
.Main.main_10:	
	movq %rbx, %reg1	

1
	movq $3000, %rdi	
	movq %rdi, 280(%rax)	

1
	movq %reg0, %reg1	
	movq $12, %rdi	

1
	testq $1, %reg0	
	je .Main.main_126	

1
	movq -144(%rbp), %reg1	
	cmpl %eax, %esi	

1
	movq %rax, 24(%reg1)	
	movq 8(%reg1), %rax	

1
	imull %reg0	
	movq -136(%rbp), %rdi	

1
	ret	
	.size A2I.i2a_aux, .-A2I.i2a_aux	

1
	je .Main.main_8	
	movq $7, %rsi	

1
	call *%r12	
	movq 408(%reg1), %r12	

1
	movq 16(%reg0), %rdi	
	subl %esi, %reg3	

1
	jg .Main.main_9	
	movq $1, %r12	

1
	.quad Foo.set	
	.quad Foo.get	

1
	movq $27231, %reg0	
	movq %reg0, %reg1	

1
	movq 24(%rbx), %rsi	
	movq $0, %rdi	

1
	addl %reg0, %eax	
	movq %rax, -24(%rbp)	

1
	.quad List.cdr	
	.quad List.rev	

1
	movq -168(%rbp), %rax	
	movq -48(%rbp), %reg3	

1
	call Dictionary.new	
	movq %reg0, %reg1	

1
	call Int.new	
	movq 0(%reg0), %reg1	

1
	movq $60575, %rsi	
	negl %esi	

1
.Main.print_list_4:	
	movq 0(%reg0), %reg1	

1
	jge .Main.main_29	
	movq %reg0, %rax	

1
	movq $0, %rdi	
	movq %rdi, 528(%reg1)	

1
	jmp .A2I.i2a_aux_2	
.A2I.i2a_aux_1:	

1
	je .Main.main_81	
	movq $25, %reg0	

1
	movq -56(%rbp), %rax	
	movq $0, %r8	

1
.Main.main_129:	
	movq -152(%rbp), %reg1	

1
	movq %rax, -104(%rbp)	
	movq $9, %rax	

1
	.string "failed\\n"	
.string8:	

1
	call *%r13	
	jmp .Main.main_5	

1
	movq $5456, %reg0	
	subl %reg1, %edi	

1
	movq 8(%r12), %r13	
	movq 0(%reg2), %rax	

1
	imull %reg0	
	movq $27399, %reg1	

1
	movq 32(%rbx), %reg1	
	movq 16(%rbx), %reg2	

1
	je .Main.main_61	
	movq $17, %reg0	

1
	movq %rax, -32(%rbp)	
	movq $19, %rax	

1
	addl %reg0, %reg1	
	movq -104(%rbp), %rsi	

1
	movq -40(%rbp), %rax	
	movq -104(%rbp), %rsi	

1
	movq %rax, 40(%rbx)	
	movq $1, %rax	

1
	movq %rdx, -104(%rbp)	
	movq %reg2, %rdx	

1
	movq %rdi, %rbx	
	movq $2, %r12	

1
	movq 72(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	call *%reg0	
	call Foo.new	

1
	movq $51549, %reg0	
	movq %reg1, %reg2	

1
	movq -32(%rbp), %reg1	
	movq -64(%rbp), %reg3	

1
	movq $CellularAutomaton_vtable, 0(%rax)	
	movq %rax, %reg1	

1
	movq $38737, %reg0	
	subl %eax, %reg2	

1
	je .Main.main_51	
	movq %reg0, %rax	

1
	negl %reg0	
	movq $57936, %rsi	

1
	movq 256(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	je .Main.main_138	
	movq $103, %reg0	

1
	movq 8(%reg0), %rdi	
	negl %edi	

1
	movq 608(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	testq $1, %reg0	
	je .Cons.insert_2	

1
	cmpq $Foo_vtable, 0(%rbx)	
	je .Foo.new_8	

1
	call getmem	
	movq $Matrix_vtable, 0(%reg0)	

1
	movq %reg0, %reg1	
	call ListNode.new	

1
	movq %rax, %rcx	
	movq -72(%rbp), %rax	

1
.Bar.new_6:	
	movq %rax, 16(%rbx)	

1
	addl %reg0, %eax	
	movq %rbx, %rcx	

1
	movq $3000, %reg0	
	movq %reg0, 456(%reg1)	

1
	movq $6, %r13	
	movq $.string6, %reg1	

1
	movq $2, %reg0	
	movq 0(%rax), %r12	

1
	call *%r12	
	movq 24(%reg1), %rax	

1
	call IO.out_string	
	popq %rbx	

1
	testq $1, %rcx	
	je .A2I.i2a_aux_3	

1
	addl %edi, %eax	
	movq $25036, %reg2	

1
	movq 8(%reg0), %rdx	
	call *%reg2	

1
	movq 384(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	je .Main.main_125	
	movq $70, %rsi	

1
	.globl CellularAutomaton.print	
	.type CellularAutomaton.print, @function	

1
	jg .Main.main_35	
	movq %reg0, %reg1	

1
	movq %rbx, %rax	
	movq -40(%rbp), %reg3	

1
	.string "fail"	
.string13:	

1
	movq $62150, %rax	
	movq %rax, %reg1	

1
	movq %reg0, %reg1	
.Main.main_165:	

1
	je .Main.main_7	
	cmpq $Object_vtable, 0(%reg0)	

1
.Main.main_21:	
	movq $.string8, %rbx	

1
	.string "false\\n"	
.string9:	

1
	call *%r12	
	movq 312(%reg1), %rax	

1
	movq -72(%rbp), %rcx	
	addl %ecx, %eax	

1
	movq 680(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq $18, %reg0	
	movq $.string3_l, %rdi	

1
	imull %reg0d	
	movq $59495, %reg0	

1
	movq $61456, %rdi	
	cmpl %edi, %reg2	

1
	movq $30, %reg0	
	movq $.string3_l, %reg1	

1
	jmp .Main.main_79	
.Main.main_78:	

1
	movq $34313, %r12	
	movq 0(%reg1), %rax	

1
	movq $0, %reg0	
	cmpl $0, -16(%rbp)	

1
	movq -16(%rbp), %rdi	
	negl %reg2	

1
	testq $1, %reg0	
	jne .Main.main_62	

1
	movq $3, %reg0	
	subl %reg1, %reg2	

1
	movq $12, %r14	
	movq $10, %rax	

1
	movq %reg0, -8(%rbp)	
	movq $100, %rax	

1
	movq $12, %r8	
	movq -48(%rbp), %reg2	

1
	movq -24(%rbp), %reg1	
	movq %rax, %reg3	

1
	cmpq $Int_vtable, 0(%rdi)	
	je .Main.out_whatever_3	

1
	movq -56(%rbp), %rax	
	movq %r13, %rsi	

1
	movq %rbx, %reg1	
	addl %reg2, %edi	

1
	testq $1, %rcx	
	je .Main.main_114	

1
	call *%reg0	
	movq %reg1, 24(%rbx)	

1
	movq 56(%r12), %r12	
	movq 24(%reg1), %rdi	

1
	subl %eax, %edi	
	movq -136(%rbp), %rsi	

1
	movq -40(%rbp), %rdi	
	movq -24(%rbp), %reg3	

1
.Matrix.get_2:	
	movq $2, %reg0	

1
	movq %rax, 16(%rdi)	
	movq %rdi, %rax	

1
	movq $3000, %reg0	
	movq %reg0, 448(%rax)	

1
	je .Main.main_4	
	movq $8, %reg0	

1
	movq -144(%rbp), %reg1	
	movq -96(%rbp), %rdi	

1
	movq %reg0, -80(%rbp)	
	movq $9, %reg0	

1
.DicNode.insert_4:	
	movq 0(%reg0), %reg1	

1
	movq $15, %rax	
	movq %rax, -104(%rbp)	

1
	call *%rbx	
	movq $empty_string, %rax	

1
	movq %reg0, %reg1	
	addl %r8d, %eax	

1
	movq -40(%rbp), %reg1	
	movq %reg2, %r8	

1
	movq %rdi, %reg1	
	jmp .Main.main_89	

1
.Matrix.set_66:	
	cdq	

1
	movq -128(%rbp), %rax	
	subl %eax, %esi	

1
	movq $name_IO, %r12	
	movq 0(%rbx), %rax	

1
	call *%reg0	
	movq 48(%reg1), %rax	

1
	movq %rdx, %reg1	
	movq %reg2, %rbx	

1
.Main.main_60:	
	movq %reg0, %rdx	

1
	movq %r15, %reg1	
	addl %reg2, %reg3	

1
	movq $192, %rsi	
	movq $.string5_l, %reg1	

1
	idivl %ecx	
	movq $15755, %rsi	

1
	movq $48880, %rdi	
	imull %reg1	

1
	movq -120(%rbp), %reg1	
	subl %eax, %edi	

1
	je .Main.new_9	
	movq $1, %rdi	

1
	negl %r11d	
	movq $48391, %rax	

1
	call *%rax	
.List.insert_3:	

1
	setl %r13b	
	jge .Main.main_11	

1
	movq -56(%rbp), %rax	
	movq -176(%rbp), %rsi	

1
	movq $39267, %reg0	
	negl %esi	

1
	movq -120(%rbp), %rax	
	subl %reg2, %reg3	

1
	movq -32(%rbp), %rsi	
	negl %esi	

1
	jne .Main.main_154	
	movq %reg0, %rdi	

1
	movq %reg0, 632(%reg1)	
	movq $0, %reg0	

1
	call out_error	
.Matrix.get_25:	

1
	jge .Main.main_90	
	movq %reg0, %rax	

1
	addl %reg0, %eax	
	movq $8340, %reg2	

1
	movq %reg0, 24(%rbx)	
	movq $7, %reg2	

1
	addl %reg0, %reg1	
	movq $30018, %rax	

1
	jg .Main.main_25	
	movq $.string7, %rax	

1
	movq 48(%r14), %r14	
	movq %r13, %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 224(%reg1)	

1
	movq $63252, %reg0	
	subl %eax, %reg2d	

1
	movq %rdi, 720(%reg1)	
	movq $3000, %rdi	

1
	movq %reg0, %reg1	
.Main.func_2:	

1
	movq %rax, -16(%rbp)	
	movq $604, %reg2	

1
.Bar.new_17:	
	movq %reg0, 48(%reg1)	

1
	jne .Matrix.set_27	
	movq $1, %reg0	

1
	movq $4, %reg0	
	movq $.string6_l, %reg1	

1
	jg .Main.main_9	
	movq $1, %reg0	

1
	movq %reg0, %rax	
.Main.main_168:	

1
.Main.main_16:	
	movq $.string13, %r12	

1
	testq $1, %reg0	
	je .Foo.new_12	

1
	movq 256(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq %reg0, %rax	
	jmp .Main.main_54	

1
	movq $7, %reg0	
	movq %reg0, -72(%rbp)	

1
	movq $10478, %rax	
	subl %eax, %reg2d	

1
	subl %reg0, %esi	
	movq -16(%rbp), %rcx	

1
	movq %rbx, %rdx	
	call String.substr	

1
.Main.main_5:	
	movq -88(%rbp), %rax	

1
	addl %reg0, %eax	
	movq -104(%rbp), %rsi	

1
	addl %eax, %reg1	
	movq $2, %rax	

1
.Matrix.get_47:	
	movq $5, %reg0	

1
.Main.new_5:	
	movq 0(%rax), %reg1	

1
	movq %rax, %r12	
	movq -168(%rbp), %rax	

1
	sete %cl	
	jne .Matrix.get_4	

1
	movq $61569, %reg0	
	movq $2562, %r11	

1
.Main.new_3:	
	movq %rbx, %reg1	

1
	movq 0(%rbx), %r14	
	movq 56(%r14), %r14	

1
	movq %reg0, %r15	
	popq %reg0	

1
	subl %reg0, %reg1	
	movq -32(%rbp), %rax	

1
.Main.main_11:	
	movq $1, %rax	

1
	call *%rax	
	jmp .Main.main_23	

1
	negl %eax	
	movq $38915, %rdi	

1
	movq %rbx, %rax	
	jmp .Bar.new_17	

1
	je .Main.print_list_2	
	movq $.string8, %reg0	

1
	jne .Matrix.get_43	
	movq 136(%rax), %rax	

1
	movq %rdi, %rbx	
	movq 0(%rax), %reg3	

1
	movq 8(%r12), %rax	
	movq %rbx, %reg3	

1
	.globl DicNode.getCount	
	.type DicNode.getCount, @function	

1
	movq %reg0, %rax	
	jmp .DicNode.insert_2	

1
	subl %eax, %reg1	
	movq -80(%rbp), %reg3	

1
	movq $51816, %reg0	
	movq 0(%reg1), %reg2	

1
.Matrix.get_30:	
	movq $3, %reg0	

1
	call *%reg0	
	movq 456(%reg1), %reg0	

1
	call out_error	
.DicNode.insert_6:	

1
	movq %reg0, 40(%rbx)	
	cmpl %reg2, %esi	

1
	je .Main.main_137	
	movq $103, %reg0	

1
	jge .Main.main_22	
	movq $48027, %reg0	

1
	idivl %reg0	
	movq -56(%rbp), %reg2	

1
	call *%reg0	
.Main.main_27:	

1
	movq %rdi, %reg1	
	movq %reg2, -16(%rbp)	

1
	movq %reg0, %r14	
	movq %r12, %reg0	

1
	subl %reg0, %r8d	
	movq %rcx, %reg3	

1
	je .Main.main_48	
	movq $34, %rsi	

1
	movq -176(%rbp), %r8	
	subl %r8d, %reg2	

1
	movq $.string10, %reg0	
	movq 0(%rbx), %rax	

1
	testq $1, %rdi	
	je .Matrix.get_51	

1
	.type Cons.rcons, @function	
Cons.rcons:	

1
	movq %reg0, %reg1	
.Matrix.elMul_1:	

1
	subl %reg0, %reg1	
	movq $34422, %rax	

1
.Main.main_11:	
	movq $5, %rax	

1
	je .Main.new_1	
	movq $2, %reg0	

1
	subl %edi, %reg1	
	movq %reg2, -152(%rbp)	

1
	imull %reg0	
	movq %rax, -168(%rbp)	

1
	movq $5, %reg0	
	movq $4, %reg1	

1
	movq %reg0, 328(%rax)	
	movq $3000, %reg0	

1
	sete %reg0l	
	jne .Main.main_25	

1
	call *%r12	
	movq 424(%reg1), %reg2	

1
	movq $14, %reg0	
	negl %reg1	

1
.Main.main_127:	
	movq %reg0, %reg1	

1
	movq %reg0, %reg1	
	movq $.string7, %rdi	

1
	movq %rdx, -32(%rbp)	
	movq %reg2, %rbx	

1
	call out_error	
.Main.main_84:	

1
	addl %reg0, %edi	
	movq -48(%rbp), %reg3	

1
.Main.main_134:	
	movq -32(%rbp), %reg1	

1
	cmpq $String_vtable, 0(%rdi)	
	je .Main.out_whatever_4	

1
	movq 352(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq -120(%rbp), %reg1	
	subl %eax, %reg3	

1
	movq $0, %rdi	
	movq %rdi, 696(%rax)	

1
	movq -176(%rbp), %rsi	
	addl %reg2, %reg3	

1
	call *%r12	
	movq 408(%rbx), %r12	

1
	je .Main.main_19	
	movq 0(%rbx), %reg1	

1
	movq $0, %rdi	
	cmpl %reg1, %eax	

1
	negl %reg0	
	movq $65097, %reg1	

1
	movq -72(%rbp), %r8	
	subl %r8d, %eax	

1
	call *%rax	
	movq $3, %r14	

1
	je .Main.out_whatever_2	
	cmpq $Main_vtable, 0(%rdi)	

1
	movq %reg0, %rbx	
	movq %rcx, %reg3	

1
	movq %rdi, 416(%reg1)	
	movq $0, %rdi	

1
	movq $0, %rdi	
	movq %rdi, 216(%reg1)	

1
	movq $22, %rsi	
	imull %esi	

1
	movq $10809, %reg0	
	subl %eax, %reg2d	

1
	movq $103, %reg0	
	movq $.string5_l, %rdi	

1
	testq $1, %reg0	
	je .Main.funccaseb_2	

1
	subl %eax, %reg1	
	movq $34422, %rax	

1
	.quad 0	
	.quad Bar.new	

1
	.string "FAIL"	
.string6:	

1
	movq %r12, %reg1	
	call Object.type_name	

1
	call *%rax	
	movq -40(%rbp), %rax	

1
.CellularAutomaton.cell_at_next_evolution_8:	
	popq %reg0	

1
	movq -136(%rbp), %rax	
	movq -128(%rbp), %reg3	

1
	movq %r8, %rax	
	negl %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 24(%reg1)	

1
	idivl %esi	
	movq -72(%rbp), %rsi	

1
	movq $0, %reg0	
	movq %reg0, 216(%rax)	

1
.Main.main_2:	
	movq $1, %rbx	

1
	testq $1, %r9	
	je .Main.main_93	

1
	movq %reg0, -128(%rbp)	
	movq $6, %reg0	

1
Matrix.new:	
	pushq %rbp	

1
	movq %rbx, %rsi	
	movq -160(%rbp), %reg3	

1
.CellularAutomaton.evolve_1:	
	movq %r13, %rdi	

1
.Cons.rev_1:	
	movq 16(%rax), %reg1	

1
	call *%r12	
	movq 80(%reg1), %reg2	

1
	movq %rdi, 344(%rax)	
	movq $0, %rdi	

1
	movq -160(%rbp), %reg1	
	addl %eax, %r9d	

1
	.size A2I.i2a_aux, .-A2I.i2a_aux	
	.globl Main.main	

1
	sete %r8b	
	jne .Matrix.get_27	

1
	call out_error	
.Bazz.new_1:	

1
.Matrix.set_16:	
	jmp .Matrix.set_26	

1
	movq %reg0, %reg1	
	movq $49119, %reg0	

1
	movq -176(%rbp), %reg1	
	movq %rdi, %rsi	

1
	movq -24(%rbp), %reg1	
	subl %edi, %reg3	

1
.Main.main_8:	
.Main.main_4:	

1
	movq 144(%reg0), %reg0	
	movq 16(%reg1), %reg2	

1
	movq %reg0, %reg1	
	movq -128(%rbp), %r8	

1
	subl %reg0, %edi	
	movq %r12, %reg3	

1
	je .Main.main_4	
	movq $.string7, %r14	

1
.A2I.c2i_20:	
.A2I.c2i_18:	

1
.string7_l:	
	.string "d"	

1
	movq $2, %rdi	
	movq %r12, %rax	

1
.Main.main_5:	
	movq 0(%rax), %r14	

1
	movq %rdi, 696(%reg1)	
	movq $3000, %rdi	

1
	.size Nil.new, .-Nil.new	
	.globl Main.new	

1
	movq %reg0, %r12	
	movq 0(%reg2), %r13	

1
	movq %rsp, %rbp	
	movq 16(%rdi), %reg3	

1
	movq $25099, %rsi	
	movq $52033, %rax	

1
	sete %reg0	
	jne .A2I.i2c_3	

1
.Bazz.new_4:	
	call Razz.new	

1
	movq $40, %rsi	
	movq $.string3_l, %reg1	

1
	jg .Main.main_77	
	movq -136(%rbp), %rax	

1
	je .Nil.rcons_1	
	movq $107, %rsi	

1
	movq -96(%rbp), %reg1	
	cmpl %eax, %reg3	

1
	call *%r12	
	movq 248(%rbx), %rax	

1
	addl %reg0, %eax	
	movq -96(%rbp), %rsi	

1
	je .Main.func_2	
	movq $37, %reg0	

1
	movq 672(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq $4, %rax	
	movq 0(%rbx), %r12	

1
	jne .Main.main_17	
	movq $0, %reg0	

1
	movq %reg0, %reg1	
	movq 8(%rbx), %rdi	

1
	movq %rax, %r12	
	movq %rdi, %reg3	

1
	movq %reg0, %reg1	
	movq %reg1, -176(%rbp)	

1
	movq %r13, %reg1	
	movq -88(%rbp), %reg3	

1
.Cons.rev_1:	
	movq 16(%reg0), %reg1	

1
	setle %dil	
	jg .Main.main_40	

1
	je .Main.main_161	
	movq $142, %reg0	

1
	movq $116, %rsi	
	movq $.string3_l, %rdi	

1
	je .Main.main_47	
	movq $34, %rsi	

1
.Main.funcwhileb_1:	
	movq %reg0, %rax	

1
	idivl %edi	
	movq 0(%reg1), %r12	

1
	addl %eax, %edi	
	movq $2, %reg2	

1
	movq $33866, %reg0	
	subl %reg1, %eax	

1
	movq -48(%rbp), %rax	
	subl %eax, %reg3d	

1
	movq $5, %rax	
	addl %eax, %reg2	

1
.Main.main_14:	
	movq $.string9, %rax	

1
.Main.main_85:	
.Main.main_83:	

1
	movq -80(%rbp), %reg1	
	subl %ecx, %eax	

1
	movq 96(%reg0), %reg0	
	jmp .Matrix.get_31	

1
	.globl CellularAutomaton.evolve	
	.type CellularAutomaton.evolve, @function	

1
	movq %reg0, %rax	
	movq -32(%rbp), %r8	

1
	movq %rax, 8(%reg1)	
	jmp .Dictionary.insert_3	

1
	addl %eax, %reg1	
	movq $14546, %rax	

1
	movq 120(%r12), %r12	
	movq %reg1, %rdi	

1
	jmp .Main.main_101	
.Main.main_100:	

1
	imull %reg0	
	movq $24923, %rsi	

1
	je .Main.main_2	
	movq $11, %rsi	

1
	jg .Main.main_94	
	movq -24(%rbp), %reg1	

1
.Main.main_77:	
	movq %reg0, %rax	

1
	movq $49695, %rdi	
	movq $13131, %rax	

1
.Razz.new_9:	
	call Razz.new	

1
.Main.main_11:	
	movq 0(%rax), %reg1	

1
	imull %edi	
	movq -24(%rbp), %rdi	

1
	movq $.string12, %rax	
	movq 0(%rbx), %reg2	

1
	movq -56(%rbp), %rsi	
	cmpl %reg2, %eax	

1
	je .Main.main_110	
	movq $67, %reg0	

1
	movq %reg0, %r10	
	movq $63899, %reg0	

1
	movq $15505, %reg0	
	addl %reg1, %reg2	

1
	movq %reg0, 8(%rbx)	
	call IO.new	

1
	movq $12, %rsi	
	movq -176(%rbp), %rax	

1
	subl %edi, %eax	
	movq $0, %rdi	

1
	movq %rdi, %rax	
	movq %rbx, %rax	

1
	.quad .string7_l	
	.quad 12	

1
	movq $5, %reg0	
	movq $0, %rdi	

1
	movq $27696, %reg0	
	imull %ebx	

1
	call *%r12	
	movq 232(%reg1), %r12	

1
	movq %rax, %r8	
	movq $10809, %rax	

1
	subl %reg0, %reg1	
	movq %rdi, 16(%reg3)	

1
	movq 616(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq %rdx, %reg1	
	movq %rcx, %r12	

1
	movq $45332, %rax	
	cmpl %eax, %edi	

1
	addl %esi, %eax	
	movq -64(%rbp), %reg3	

1
.Main.main_17:	
	popq %reg0	

1
	movq -168(%rbp), %rax	
	movq -24(%rbp), %rdi	

1
	call *%r12	
	movq 72(%reg1), %reg2	

1
	movq %reg0, %rax	
	movq %rax, %rbx	

1
	movq $11, %r8	
	movq $0, %r9	

1
	movq -64(%rbp), %reg1	
	movq %r14, %rsi	

1
.Main.main_127:	
	movq -16(%rbp), %reg1	

1
	je .Main.main_166	
	movq $145, %reg0	

1
	movq -144(%rbp), %rsi	
	movq %rdi, %reg3	

1
	je .Main.main_115	
	movq %reg0, %rax	

1
	movq %rdi, %reg1	
	movq $name_Bool, %reg2	

1
.Main.main_102:	
	cdq	

1
	movq %reg0, 8(%reg1)	
	movq %reg1, 72(%reg2)	

1
	movq $63399, %reg0	
	imull %reg1	

1
	.size Main.main, .-Main.main	
	.globl Foo.getS	

1
	movq %reg0, %r12	
	movq 8(%rax), %rbx	

1
	movq %reg0, 8(%reg1)	
	movq $5, %reg2	

1
	movq %r11, %reg1	
	subl %reg1d, %reg2	

1
	movq $48887, %reg0	
	negl %reg1	

1
	movq $164, %reg0	
	movq $.string5_l, %reg1	

1
	movq %reg0, -8(%rbp)	
	call Dictionary.new	

1
	movq -16(%rbp), %r8	
	negl %r8d	

1
.Main.main_63:	
	movq 0(%reg0), %reg1	

1
	movq -64(%rbp), %reg1	
	movq %reg2, %rcx	

1
	movq -120(%rbp), %reg1	
	movq -24(%rbp), %reg3	

1
	movq %reg0, %reg1	
	movq $35237, %reg0	

1
	movq %reg0, -72(%rbp)	
	movq $13, %reg0	

1
.Main.main_132:	
	movq -104(%rbp), %rax	

1
	movq %rsi, %r12	
	movq %reg2, %rax	

1
.Matrix.set_39:	
.Matrix.set_26:	

1
	movq 24(%rbx), %rax	
	movq %r12, %reg3	

1
	movq -88(%rbp), %rax	
	movq $0, %r8	

1
.Main.main_8:	
	movq 0(%reg0), %r14	

1
	movq $108, %rsi	
	movq $.string3_l, %reg1	

1
	movq -16(%rbp), %rsi	
	subl %esi, %reg3	

1
	movq $62331, %rax	
	subl %eax, %edi	

1
	movq $23599, %reg0	
	subl %reg1, %reg2	

1
	movq 8(%rax), %rax	
	jmp .Main.main_4	

1
	movq %rdi, 344(%reg1)	
	movq $0, %rdi	

1
	movq $0, %rdi	
	movq %rdi, 344(%rax)	

1
	movq %reg0, %r8	
	movq $10809, %reg0	

1
	movq $.string7, %rax	
	movq 8(%rbx), %rdi	

1
	movq $0, %rdi	
	movq %rdi, 480(%reg1)	

1
	movq %rcx, %reg1	
	movq %r13, %reg1	

1
	movq 216(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	addl %reg0, %eax	
	movq $57963, %rdi	

1
	movq $166, %reg0	
	movq $.string5_l, %reg1	

1
	movq %reg0, %rax	
	jmp .Main.main_104	

1
	movq %rsp, %reg1	
	movq $88, %rdi	

1
	movq %rax, %rdi	
	movq $55049, %rax	

1
	movq $3000, %reg0	
	movq %reg0, 736(%rax)	

1
	movq %reg0, %r13	
	movq 0(%reg2), %reg3	

1
	movq $0, %rdi	
	movq %rdi, 520(%rax)	

1
	movq $18310, %rax	
	subl %reg1, %edi	

1
	.size Cons.insert, .-Cons.insert	
	.globl Cons.rcons	

1
	setle %sil	
	jg .Main.main_131	

1
	movq %reg0, %reg1	
	movq $63252, %reg0	

1
	.quad Object.type_name	
	.quad Foo.set	

1
	call *%r12	
	movq 320(%rbx), %reg2	

1
	je .Razz.new_10	
	cmpq $Razz_vtable, 0(%rbx)	

1
	movq $11435, %reg0	
	movq 0(%rbx), %reg2	

1
	movq 536(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq %reg0, -16(%rbp)	
	jmp .Main.main_1	

1
	movq $0, %rsi	
	movq 16(%rax), %reg2	

1
	je .Main.main_95	
	movq $64, %rsi	

1
.Main.main_1:	
	movq $100, %rdi	

1
.Main.main_111:	
	movq %reg0, %reg1	

1
.Matrix.mul_2:	
	movq %reg0, %rax	

1
	movq %rsi, %rcx	
	movq %reg2, %r8	

1
	movq -80(%rbp), %reg1	
	movq -80(%rbp), %reg2	

1
	movq $22, %rsi	
	movq $.string2_l, %reg1	

1
	subl %r11d, %eax	
	movq %rax, %r11	

1
	movq %reg0, 8(%reg1)	
	movq 0(%reg1), %reg0	

1
	jne .Matrix.set_32	
	movq %reg0, 104(%rax)	

1
	.type Matrix.mul, @function	
Matrix.mul:	

1
	call Int.new	
.Main.main_2:	

1
	subl %reg0d, %eax	
	movq -112(%rbp), %reg0	

1
	movq 24(%reg0), %rdi	
	cmpl $0, %reg2	

1
	.quad Object.type_name	
	.quad Foo.getS	

1
	jmp .CellularAutomaton.cell_at_next_evolution_2	
.CellularAutomaton.cell_at_next_evolution_1:	

1
	call *%reg0	
	movq 376(%reg1), %reg0	

1
	call Bar.new	
	jmp .Bazz.new_6	

1
	negl %ecx	
	movq -144(%rbp), %reg2	

1
	je .Main.main_154	
	movq $115, %reg0	

1
	movq -168(%rbp), %reg1	
	movq %rsi, %reg3	

1
	jge .Main.main_2	
	movq %r12, %reg1	

1
	movq 16(%rax), %reg1	
	addl %reg2, %edi	

1
	testq $1, %rax	
	jne .Main.main_64	

1
	testq $1, %r15	
	je .Main.main_58	

1
	movq $3, %reg0	
	movq $name_Bool, %reg1	

1
.Main.main_29:	
	movq 0(%r13), %reg1	

1
	movq -16(%rbp), %rdi	
	movq %r12, %reg3	

1
.Main.main_41:	
	movq 0(%reg0), %rax	

1
.Main.main_21:	
	movq $51816, %reg0	

1
	je .Main.main_103	
	movq %reg0, %reg1	

1
	movq %rsi, %reg1	
	movq $.string7, %rdi	

1
	jne .Main.funcwhileb_2	
	movq %reg0, %reg1	

1
	movq -152(%rbp), %reg1	
	movq %rsi, %reg3	

1
	movq %r14, %rdi	
	call *%reg2	

1
	movq %r12, %rdi	
	subl %eax, %reg3	

1
	movq $.string10, %reg0	
	movq %reg1, %rdx	

1
	movq 8(%rbx), %rax	
	movq %reg2, %r12	

1
	movq %reg0, 384(%rax)	
	movq $0, %reg0	

1
.Main.main_37:	
	movq $2234, %reg0	

1
	movq %r12, %reg1	
	xorq $1, %reg1	

1
	je .Main.main_191	
	movq $1, %reg0	

1
	addl %reg0, %eax	
	movq $36010, %reg2	

1
	movq $45332, %rax	
	cmpl %reg1, %edi	

1
.Main.main_149:	
	movq %reg0, %rdi	

1
	movq %reg0, %rsi	
	movq %rcx, %rdi	

1
	movq 8(%rdi), %rdi	
	addl %reg1, %eax	

1
	movq -88(%rbp), %reg1	
	movq -32(%rbp), %rax	

1
.Matrix.set_11:	
.Matrix.set_9:	

1
	movq $15505, %reg0	
	addl %reg1, %edi	

1
	je .Main.main_49	
	movq $34, %rsi	

1
	movq $13076, %reg0	
	imull %edi	

1
.Razz.new_12:	
	movq 32(%rbx), %reg1	

1
	imull %reg0	
	movq %reg1, -16(%rbp)	

1
	testq $1, %reg0	
	jne .Main.main_22	

1
	.quad CellularAutomaton.print	
	.quad CellularAutomaton.num_cells	

1
	jne .Main.funcwhileb_2	
	movq %reg0, %rax	

1
	movq -32(%rbp), %rax	
	negl %eax	

1
	movq $12, %reg0	
	cmpl $0, %r12d	

1
	movq $50213, %rdi	
	movq %rdi, %reg1	

1
	movq 16(%reg0), %rax	
	subl %edi, %reg3	

1
	je .Main.main_57	
	movq $17, %rsi	

1
	movq $14356, %rbx	
	subl %ebx, %eax	

1
ListNode.get:	
	pushq %reg0	

1
	movq %rax, 16(%reg1)	
	call Razz.new	

1
	addl %reg0, %ecx	
	movq %rsi, %rax	

1
	movq -24(%rbp), %reg1	
	movq %rsi, %rcx	

1
	movq 696(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	movq $61139, %reg0	
	movq 0(%reg1), %reg2	

1
	movq $18422, %rbx	
	subl %ebx, %eax	

1
	movq $3828, %reg0	
	movq $0, %rcx	

1
	movq %reg0, %r13	
	movq $.string10, %reg2	

1
	movq $21060, %reg0	
	movq $19990, %reg1	

1
	je .Main.main_26	
	movq $36, %reg0	

1
	movq $0, %rdi	
	movq %rdi, 568(%reg1)	

1
	movq 8(%rbx), %reg1	
	movq 16(%rbx), %rax	

1
	movq $0, %reg0	
	movq %reg0, 312(%rax)	

1
	addl %r8d, %eax	
	movq $53181, %r8	

1
.Main.print_list_4:	
	movq 0(%r12), %reg1	

1
	movq $3000, %reg0	
	movq %reg0, 272(%rax)	

1
	movq $.string18, %rdi	
	movq %rdi, %reg1	

1
	movq $27696, %reg0	
	imull %reg1	

1
.Matrix.set_19:	
	movq $4, %r8	

1
	call *%r12	
.Main.main_10:	

1
	movq $.string10, %reg0	
	movq 8(%rax), %reg2	

1
	idivl %reg0	
	movq $12660, %rsi	

1
	movq $25185, %rax	
	addl %reg1, %reg2	

1
	movq %r10, %rax	
	movq $50929, %r10	

1
	.type A2I.i2c, @function	
A2I.i2c:	

1
	jmp .Main.funcwhilei_1	
.Main.funcwhilei_2:	

1
	testq $1, %rcx	
	je .Main.main_78	

1
	addl %ecx, %reg1	
	movq -64(%rbp), %rcx	

1
	movq %rdi, 272(%reg1)	
	movq $0, %rdi	

1
	cmpl $0, 24(%reg0)	
	movq 24(%reg0), %rax	

1
	jne .Main.main_7	
	movq -32(%rbp), %reg1	

1
	jge .Main.main_66	
	movq %reg0, %reg1	

1
	movq $33976, %rdi	
	addl %reg1, %reg2	

1
	call out_error	
.DicNode.get_4:	

1
	negl %ecx	
	movq -120(%rbp), %rsi	

1
.Dictionary.get_1:	
	cmpl $0, 8(%rax)	

1
	movq %r15, %reg1	
	negl %eax	

1
	movq $43617, %rsi	
	imull %esi	

1
	je .Main.print_list_1	
	movq $108, %reg0	

1
	movq $58419, %reg0	
	imull %ecx	

1
	movq $48298, %reg0	
	negl %eax	

1
	call String.substr	
	movq $.string18, %reg0	

1
	call *%rax	
	call List.new	

1
	negl %reg0	
	movq $33636, %rdi	

1
	je .Main.main_107	
	movq %r12, %rax	

1
	movq 24(%reg0), %reg1	
	movq %r12, %rsi	

1
	movq 24(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	subl %eax, %reg1	
	movq $14802, %rax	

1
	movq $.string21, %reg0	
	movq 0(%reg1), %rax	

1
	movq -80(%rbp), %rax	
	movq -144(%rbp), %rdi	

1
	setl %reg0l	
	jge .Main.main_7	

1
	subl %reg0, %reg1	
	movq -136(%rbp), %rsi	

1
.Main.main_22:	
	movq %reg0, %reg1	

1
	movq $49, %rsi	
	movq $.string3_l, %rdi	

1
	movq %reg0, 8(%rax)	
	movq 0(%rbx), %rax	

1
	jmp .Main.func2_2	
.Main.func2_1:	

1
	sete %reg0b	
	jne .A2I.c2i_13	

1
	je .Main.main_12	
	movq $18, %reg0	

1
	movq %r14, %reg1	
	movq $0, %r14	

1
	.quad .string6_l	
	.quad 38	

1
	sete %reg0l	
	jne .Main.main_42	

1
	call *%reg0	
	movq 328(%reg1), %reg2	

1
	jg .Matrix.elMul_2	
	movq -8(%rbp), %rdx	

1
	testq $1, %r8	
	je .Main.main_98	

1
	jmp .Foo.new_6	
.Foo.new_3:	

1
	movq 400(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq $.string7, %reg0	
	movq %reg0, 8(%rbx)	

1
	movq -160(%rbp), %rsi	
	movq %r15, %rax	

1
	movq $228, %reg0	
	movq $.string5_l, %rdi	

1
	movq 56(%rax), %rax	
	jmp .Matrix.get_18	

1
	movq $35, %reg0	
	movq $90, %rdi	

1
	movq %rax, 8(%rbx)	
	movq $5, %r12	

1
	je .Main.main_43	
	movq $3453, %r12	

1
	testq $1, %r11	
	je .Main.main_149	

1
	.quad Bazz.printh	
	.quad Bazz.doh	

1
	movq 24(%reg0), %reg1	
	movq %rbx, %rsi	

1
	jne .Main.funcwhileb_2	
	movq %r12, %reg1	

1
	sete %reg0	
	jne .Matrix.get_15	

1
.Main.main_78:	
	movq -16(%rbp), %reg1	

1
	je .Main.main_109	
	movq -48(%rbp), %rax	

1
	je .Main.main_13	
	movq $6, %r12	

1
	ret	
	.size Cons.cdr, .-Cons.cdr	

1
	movq -16(%rbp), %reg1	
	subl %reg2d, %reg3	

1
	je .Main.main_152	
	movq $115, %rsi	

1
	.quad A2I.c2i	
	.quad A2I.i2c	

1
	call *%rax	
	movq 704(%reg1), %reg2	

1
	movq -136(%rbp), %rax	
	addl %eax, %reg3	

1
	movq %rbx, %rax	
	jmp .Foo.new_11	

1
	movq $1, %r14	
	movq $.string7, %reg1	

1
	call *%reg0	
	movq 384(%rbx), %reg0	

1
	movq -96(%rbp), %rax	
	movq $0, %r8	

1
	movq %r12, %rax	
	movq %reg2, %r9	

1
	subl %reg0, %reg1	
	movq -128(%rbp), %rax	

1
	movq -120(%rbp), %reg1	
	movq -56(%rbp), %rsi	

1
	subl %reg0, %reg1	
	movq $33866, %reg2	

1
	movq $2211, %rsi	
	imull %reg1	

1
	testq $1, %reg0	
	je .Main.main_169	

1
	movq $3000, %rdi	
	movq %rdi, 480(%rax)	

1
	movq -168(%rbp), %reg1	
	movq $0, %rcx	

1
	movq %reg0, %reg1	
	movq -128(%rbp), %rdi	

1
	call *%reg0	
	movq 656(%reg1), %r12	

1
	movq $26972, %reg0	
	movq %reg0, %rsi	

1
	movq %rsi, %rdi	
	movq $0, %rcx	

1
	movq $25316, %rax	
	movq $8214, %reg1	

1
	movq 16(%rax), %rdi	
	subl %reg2, %reg3	

1
	movq 16(%reg0), %reg1	
	negl %edi	

1
	movq %rdi, %reg1	
	movq -56(%rbp), %rdi	

1
	je .Main.func_6	
	cmpq $Main_vtable, 0(%rsi)	

1
	movq $.string15, %reg0	
	movq 0(%rbx), %r12	

1
	testq $1, %rax	
	je .Main.funccaseb_2	

1
	movq $ListNode_vtable, 0(%reg0)	
	movq %reg0, %rbx	

1
	testq $1, %reg0	
	je .Main.main_134	

1
	movq %reg0, %rbx	
	jmp .Main.main_70	

1
	addl %reg0, %reg1	
	movq -96(%rbp), %rcx	

1
	call *%reg0	
	movq $2143, %reg1	

1
	movq %r12, %reg1	
	negl %ecx	

1
	call Bar.new	
	movq %reg0, -32(%rbp)	

1
	movq $16210, %rdi	
	movq $23599, %reg1	

1
	je .Main.main_166	
	movq $145, %rsi	

1
	je .Main.main_6	
	movq $5, %rsi	

1
	cmpq $String_vtable, 0(%rbx)	
	je .Main.main_23	

1
	movq %r9, %rax	
	movq -160(%rbp), %r9	

1
	movq %reg0, %reg1	
	movq $29252, %reg0	

1
.Main.main_10:	
	movq $.string15, %rax	

1
	movq $9, %reg0	
	cmpl %reg1, %reg2	

1
	movq %reg0, 592(%reg1)	
	movq $3000, %reg0	

1
	movq -56(%rbp), %rax	
	cmpl %edi, %reg3	

1
	movq -32(%rbp), %rax	
	addl %reg2, %edi	

1
	movq %rdi, %reg1	
	movq $.string19, %r12	

1
	addl %reg0, %reg1	
	movq $8340, %reg2	

1
	movq $0, %reg0	
	movq %reg0, 576(%reg1)	

1
	je .Main.main_31	
	movq $10, %reg0	

1
	movq %rdi, %rax	
	jmp .Main.main_153	

1
	movq 24(%rbx), %rax	
	addl %reg2, %eax	

1
	movq %rdi, %rax	
	jmp .Matrix.set_9	

1
.Main.main_20:	
	movq 0(%rbx), %rax	

1
	movq $0, %rdi	
	movq %rdi, 280(%rax)	

1
	addl %r9d, %eax	
	movq -16(%rbp), %r9	

1
	call *%r12	
	movq 8(%rbx), %reg2	

1
.Matrix.get_66:	
	cdq	

1
	movq $48298, %rax	
	negl %reg1	

1
	je .Main.main_7	
	movq $13, %rsi	

1
	movq 48(%r14), %r14	
	movq %r13, %rdi	

1
	movq $15798, %rax	
	subl %eax, %r10d	

1
	movq $0, %rdi	
	movq %rdi, 584(%reg1)	

1
	movq $62343, %r12	
	movq 0(%reg1), %rax	

1
	movq $13, %reg0	
	cmpl $0, %reg1d	

1
	je .Main.funccase_2	
	cmpq $Main_vtable, 0(%reg0)	

1
	call *%rbx	
	movq $empty_string, %reg1	

1
	movq -104(%rbp), %rcx	
	negl %reg2	

1
	movq $.string13, %r12	
	movq 0(%reg1), %rax	

1
	testq $1, %reg0	
	je .Matrix.elMul_3	

1
.Razz.new_12:	
	movq 32(%reg0), %rdx	

1
	movq $49411, %rsi	
	movq %rsi, %rcx	

1
	je .Main.main_30	
	movq $10, %reg0	

1
	movq %rdi, %rax	
	jmp .Main.main_139	

1
	testq $1, %reg0	
	je .A2I.i2a_aux_3	

1
	movq $0, %reg0	
	popq %r15	

1
	call *%r14	
.Main.main_3:	

1
	testq $1, %reg0	
	je .Main.print_list_4	

1
Main_vtable:	
	.quad .string3	

1
	movq -112(%rbp), %reg1	
	addl %reg1d, %reg2	

1
	movq $33976, %rdi	
	addl %edi, %eax	

1
	addl %reg0, %edi	
	movq $1, %rax	

1
	.string "Main"	
.string4:	

1
	movq %r12, %r15	
	pushq %rax	

1
	negl %reg0	
	movq %reg1, %r11	

1
	je .Razz.new_7	
	movq $4, %reg0	

1
	idivl %esi	
	movq %reg1, %r14	

1
	subl %esi, %reg1	
	movq %reg2, 16(%rax)	

1
	call out_error	
.Matrix.elMul_3:	

1
.string8_l:	
	.string "B\\n"	

1
	testq $1, %rax	
	je .Main.main_107	

1
	movq $16, %rax	
	movq %rax, -96(%rbp)	

1
	call Complex.new	
	cmpl $0, %eax	

1
	imull %ecx	
	movq $47988, %rcx	

1
	movq %r13, %rsi	
	movq %rbx, %rdx	

1
	movq %reg0, 568(%reg1)	
	movq $0, %reg0	

1
	addl %reg0, %reg1	
	subl %reg1, %reg2	

1
	movq $5, %reg0	
	subl %reg1, %reg2	

1
	movq %rax, %reg1	
.Main.main_12:	

1
	call *%rbx	
	jmp .Main.main_20	

1
	movq $3000, %reg0	
	movq %reg0, 128(%reg1)	

1
	call *%r12	
	movq 168(%reg1), %r12	

1
	.quad 10	
.string2_l:	

1
	subl %reg0, %ecx	
	movq -112(%rbp), %rax	

1
	.quad IO.out_string	
	.quad Bar.foo	

1
	movq %rax, -120(%rbp)	
	movq $7, %rax	

1
	movq %reg0, 64(%rbx)	
	movq $0, %reg0	

1
	movq $3000, %reg0	
	movq %reg0, 728(%rax)	

1
	movq 312(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq %r14, %rsi	
	subl %reg2, %reg3	

1
.Main.main_191:	
	movq $0, %reg0	

1
	je .Main.main_3	
	movq $.string8, %r12	

1
	movq $4, %reg0	
	movq 0(%rbx), %r12	

1
	.type Bar.getI, @function	
Bar.getI:	

1
	movq $2, %r9	
	movq %r8, %rcx	

1
	movq $0, %reg0	
	movq $6, %reg1	

1
	movq 24(%rax), %rdi	
	sete %reg2l	

1
	.size Cons.rcons, .-Cons.rcons	
	.globl Cons.print_list	

1
	jge .Main.main_9	
	movq %r12, %reg1	

1
	movq $2, %reg0	
	movq %r12, %rax	

1
	movq %rsp, %rbp	
	movq $208, %rdi	

1
.Main.main_9:	
	popq %r14	

1
	je .Main.main_171	
	movq $145, %rsi	

1
	idivl %ecx	
	movq -128(%rbp), %rcx	

1
.Main.main_6:	
	movq %r12, %reg1	

1
	movq %rbx, %reg1	
	movq -160(%rbp), %reg3	

1
	subl %reg0, %edi	
	movq -136(%rbp), %reg3	

1
	movq $46404, %r12	
	movq 0(%rbx), %reg2	

1
	movq %rax, %r13	
	jmp .CellularAutomaton.evolve_1	

1
	movq %r15, %rsi	
	call String.concat	

1
	movq %reg0, %rax	
	movq -120(%rbp), %rsi	

1
.Bar.new_19:	
	movq 16(%rbx), %rdx	

1
	movq 16(%rbx), %rax	
	movq 24(%rbx), %rsi	

1
	call *%reg0	
	movq 168(%rbx), %reg0	

1
	movq $0, %reg0	
	movq %reg0, 248(%rax)	

1
	movq $10478, %rax	
	subl %reg1, %reg2d	

1
	.size List.cdr, .-List.cdr	
	.globl List.rev	

1
	movq 16(%reg0), %rdi	
	cmpl %eax, %reg3	

1
	movq -24(%rbp), %reg1	
	movq $0, %rsi	

1
	cmpq $Object_vtable, 0(%rax)	
	je .Main.main_7	

1
	subl %eax, %reg1	
	movq -24(%rbp), %reg3	

1
.Razz.new_17:	
	movq %reg0, 48(%reg1)	

1
	movq $2739, %rsi	
	movq $0, %rcx	

1
	je .Main.main_56	
	movq $17, %reg0	

1
.Matrix.get_34:	
	movq $5, %reg0	

1
.Matrix.set_47:	
	movq $5, %reg0	

1
	sete %reg0	
	jne .Matrix.get_8	

1
.Main.main_1:	
	movq $0, %rdi	

1
	movq %reg0, %r12	
	movq $1, %r13	

1
	movq $0, %reg0	
	movq 16(%reg1), %reg2	

1
	addl %reg0, %eax	
	movq %rax, 24(%reg3)	

1
	je .Main.main_113	
	movq $67, %rsi	

1
	movq -168(%rbp), %rax	
	movq -152(%rbp), %reg3	

1
.Main.main_103:	
	cdq	

1
	movq -128(%rbp), %rax	
	movq -144(%rbp), %rdi	

1
	call *%reg0	
	movq 288(%rbx), %r12	

1
	movq -152(%rbp), %rcx	
	addl %reg2, %reg3	

1
	movq %reg0, %reg1	
	addl %reg2d, %reg3	

1
	movq %reg0, -16(%rbp)	
	movq $604, %reg2	

1
	call List.new	
	movq %rax, -32(%rbp)	

1
	call out_error	
.Dictionary.insert_4:	

1
.A2I.i2c_4:	
.A2I.i2c_2:	

1
	movq 104(%reg0), %reg0	
	jmp .Matrix.get_33	

1
.Main.main_6:	
	movq 0(%reg0), %r13	

1
	movq %reg0, %r13	
	call Bar.new	

1
	movq $29790, %reg0	
	subl %esi, %reg2	

1
	movq %rdi, 120(%reg1)	
	movq $3000, %rdi	

1
	movq -168(%rbp), %reg1	
	movq $0, %reg2	

1
.Main.main_3:	
	cmpq $Int_vtable, 0(%rax)	

1
	subl %reg0, %edi	
	movq $54460, %reg2	

1
	je .Main.main_130	
	movq $70, %reg0	

1
	movq %reg0, %reg1	
.Main.main_167:	

1
	movq $1, %rax	
	movq -16(%rbp), %rdi	

1
	movq $45807, %reg0	
	subl %eax, %reg2	

1
	sete %sil	
	jne .Matrix.get_36	

1
	negl %reg0	
	movq $50691, %r11	

1
	.type CellularAutomaton.cell_at_next_evolution, @function	
CellularAutomaton.cell_at_next_evolution:	

1
	call *%r12	
	movq 432(%reg1), %reg2	

1
	testq $1, %rdi	
	je .Cons.rev_2	

1
	.quad List.isNil	
	.quad List.head	

1
	jmp .Main.main_106	
.Main.main_105:	

1
	subl %reg0, %r9d	
	movq $12, %reg2	

1
	.string "Nil"	
.string1:	

1
.Main.main_4:	
	movq $3, %reg0	

1
.Main.main_147:	
	movq %reg0, %rax	

1
	movq 16(%rax), %rdi	
	addl %esi, %edi	

1
	movq 720(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	movq -152(%rbp), %rax	
	movq %rsi, %rcx	

1
	movq %rdi, 208(%rax)	
	movq $3000, %rdi	

1
	movq $.string6, %reg0	
	movq %reg0, 8(%rbx)	

1
.Main.main_2:	
.Main.main_3:	

1
	je .Main.main_11	
	movq $4, %r12	

1
	movq %rdi, -8(%rbp)	
	movq $100, %rax	

1
	movq %r14, %rax	
	movq -120(%rbp), %reg3	

1
	movq %reg0, %rdi	
	movq %reg0, %reg2	

1
	call List.new	
	movq %rax, 8(%rbx)	

1
.Main.main_14:	
	movq %reg0, %reg1	

1
.DicNode.insert_3:	
	cmpl $0, 24(%rbx)	

1
	movq %reg0, %rbx	
	movq %rcx, %r12	

1
.Main.main_25:	
	movq $.string8, %rax	

1
	movq $25036, %reg0	
	subl %reg1, %eax	

1
	movq -104(%rbp), %rax	
	addl %reg2, %esi	

1
	je .Main.main_1	
	movq $.string8, %reg0	

1
	movq %rdi, %reg1	
	jmp .Main.main_38	

1
	imull %ecx	
	movq -64(%rbp), %reg2	

1
	subl %reg0, %reg1	
	cmpl %reg1, %eax	

1
	movq %reg0, %rax	
	movq $34526, %reg0	

1
	movq 280(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	negl %eax	
	movq $64582, %r13	

1
	sete %reg0	
	jne .Matrix.get_60	

1
	call *%r13	
	movq 0(%rax), %reg2	

1
	jne .Matrix.set_62	
	movq %rdi, 200(%reg1)	

1
.Razz.new_18:	
	movq 32(%rbx), %reg1	

1
	movq $14379, %reg0	
	movq $61731, %reg1	

1
	movq $1, %rdi	
	movq 16(%rbx), %reg2	

1
.Main.main_25:	
	movq %reg0, %reg1	

1
	movq $48027, %reg0	
	movq 0(%reg1), %rax	

1
	addl %reg0, %reg1	
	movq $55318, %rdi	

1
	movq %rdi, %reg1	
	jmp .Main.main_128	

1
	negl %reg0	
	movq -48(%rbp), %reg2	

1
	.globl A2I.a2i_aux	
	.type A2I.a2i_aux, @function	

1
	movq $34, %rax	
	movq 0(%rbx), %r12	

1
	movq $49288, %rax	
	movq $5606, %reg1	

1
	sete %cl	
	jne .Matrix.get_21	

1
	jne .Matrix.set_23	
	movq %reg0, 80(%reg1)	

1
	movq -168(%rbp), %rsi	
	movq -32(%rbp), %reg3	

1
	addl %eax, %reg1	
	movq -88(%rbp), %rax	

1
	.globl Complex.reflect_X	
	.type Complex.reflect_X, @function	

1
	setle %dil	
	jg .Main.main_2	

1
	movq -72(%rbp), %reg1	
	cmpl %esi, %reg3	

1
	movq $25099, %reg0	
	movq $52033, %reg1	

1
	movq $0, %reg0	
	movq %reg0, 256(%rax)	

1
	movq %reg0, %rdi	
	movq -176(%rbp), %rax	

1
	movq $3000, %reg0	
	movq %reg0, 88(%reg1)	

1
	movq -80(%rbp), %rax	
	movq -96(%rbp), %rdi	

1
	call Nil.new	
	movq %rax, 8(%rbx)	

1
	movq $55166, %reg0	
	negl %reg1	

1
	.type Dictionary.setHead, @function	
Dictionary.setHead:	

1
	imull %esi	
	movq $29789, %rsi	

1
	je .Main.main_56	
	movq $204, %rsi	

1
.Main.main_22:	
	movq $63133, %rax	

1
	movq $.string10, %r12	
	movq 0(%rbx), %reg2	

1
	imull %r12d	
	movq %rax, %r12	

1
	movq $2211, %reg0	
	imull %esi	

1
Complex.x_value:	
	pushq %reg0	

1
	movq $47353, %rax	
	negl %reg1	

1
	movq %rdi, 440(%rax)	
	movq $3000, %rdi	

1
	jne .A2I.a2i_3	
	movq $1, %r13	

1
	call out_error	
.Main.main_88:	

1
	movq $52306, %rdi	
	negl %reg1	

1
	movq -72(%rbp), %reg1	
	movq $0, %r8	

1
	movq %reg0, 80(%rax)	
	movq $3000, %reg0	

1
	movq %rdi, %rax	
	jmp .Matrix.set_16	

1
	jg .Main.main_6	
	movq %reg0, %rax	

1
	call *%reg0	
	movq -168(%rbp), %rdx	

1
	movq $3000, %rdi	
	movq %rdi, 8(%rax)	

1
	movq $324, %reg0	
	movq $12, %r14	

1
	movq %rdi, 40(%reg1)	
	cmpl %edi, %esi	

1
	call *%reg0	
	movq 328(%reg1), %rax	

1
.Matrix.set_54:	
	movq $2, %r8	

1
	movq %reg0, 704(%rax)	
	movq $3000, %reg0	

1
	movq $50998, %rax	
	addl %reg1, %reg2	

1
	movq %rdi, %rax	
	jmp .Matrix.set_29	

1
	setl %dil	
	jge .Main.main_146	

1
	movq $0, %rbx	
	movq $0, %reg1	

1
Main.funccasei:	
	pushq %reg0	

1
	testq $1, %rsi	
	je .Main.main_192	

1
	movq %reg0, 16(%rdi)	
	movq %rdi, %reg0	

1
	movq %rbx, %r12	
	movq 8(%reg2), %reg3	

1
	call *%reg0	
	movq 360(%reg1), %reg0	

1
	movq $8937, %reg0	
	movq $45402, %rdi	

1
.A2I.c2i_2:	
	popq %r13	

1
	cmpl $0, %ebx	
	setl %reg1	

1
	movq %rdi, %reg1	
.Main.main_168:	

1
.Main.main_107:	
	movq %reg0, %reg1	

1
	call out_error	
.DicNode.insert_4:	

1
	movq $163, %reg0	
	movq $.string2_l, %reg1	

1
	movq $21813, %rdi	
	movq $25099, %rsi	

1
.Razz.new_16:	
	movq %rbx, %rax	

1
	jmp .Main.main_150	
.Main.main_149:	

1
	subl %reg0, %reg1	
	movq -16(%rbp), %rdi	

1
.string11_l:	
	.string "\\n"	

1
	movq %rax, %rdi	
	call Foo.foo	

1
	movq %reg0, %rax	
	movq $.string7, %rbx	

1
	negl %eax	
	movq -120(%rbp), %rdi	

1
	movq $168, %reg0	
	movq $.string5_l, %rdi	

1
	movq %reg0, 64(%reg1)	
	leave	

1
	call *%r12	
	movq 200(%rbx), %reg2	

1
.Main.main_72:	
	movq %r15, %rax	

1
	movq %rdi, %reg1	
	movq $.string10, %rax	

1
	movq %rbx, %reg1	
	subl %edi, %reg3	

1
	.quad 4	
.string8_l:	

1
.Main.main_70:	
	movq %reg0, %reg1	

1
	jmp .Matrix.set_50	
.Matrix.set_49:	

1
	movq %reg0, 32(%reg1)	
	call Bazz.new	

1
	.quad CellularAutomaton.cell_left_neighbor	
	.quad CellularAutomaton.cell_right_neighbor	

1
.Main.new_4:	
	movq 16(%reg0), %reg1	

1
	movq %r12, 8(%rax)	
	cmpq $Bool_vtable, 0(%rax)	

1
	je .Main.main_1	
	movq $10, %reg0	

1
	movq %reg0, 8(%reg1)	
	cmpq $Bool_vtable, 0(%reg1)	

1
	addl %esi, %edi	
	movq %rdi, 16(%reg3)	

1
	call *%reg0	
	movq $.string17, %reg1	

1
	movq %reg0, 40(%reg1)	
	cmpl %edi, %esi	

1
	jge .Main.main_10	
	movq %r12, %rdi	

1
	movq 64(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	je .Main.main_57	
	movq $49, %reg0	

1
	je .Dictionary.get_4	
	movq $8, %rsi	

1
	movq %rdi, 640(%rax)	
	movq $0, %rdi	

1
	movq %rax, 72(%rbx)	
	movq %rbx, %rax	

1
	movq -168(%rbp), %rax	
	movq -160(%rbp), %rdi	

1
	subl %eax, %reg1	
	movq $14802, %reg2	

1
	movq $0, %reg0	
	movq $44, %rcx	

1
	addl %reg0, %r10d	
	movq %r10, %rax	

1
	idivl %edi	
	movq %reg1, %r12	

1
	movq %reg0, %r8	
	movq -184(%rbp), %rcx	

1
	movq $25, %rsi	
	movq $.string2_l, %rdi	

1
.CellularAutomaton.cell_at_next_evolution_6:	
	movq %reg0, %rdi	

1
	movq $52486, %rax	
	movq $20968, %reg1	

1
	je .Main.main_5	
	movq $4, %reg0	

1
	movq $12, %rsi	
	movq -184(%rbp), %rax	

1
	movq 8(%rbx), %r13	
	pushq %reg2	

1
	movq %rdi, %reg1	
	movq %r12, %reg3	

1
	je .Main.funccase_2	
.Main.funccase_2:	

1
	ret	
	.size Main.funcwhileb, .-Main.funcwhileb	

1
	idivl %reg0	
.Matrix.set_11:	

1
	call String.concat	
	movq %rax, 8(%rbx)	

1
	movq $229, %reg0	
	movq %reg0, %rcx	

1
	movq $1, %reg0	
	movq $.string7, %r13	

1
	setle %dil	
	jg .Main.main_147	

1
	addl %reg0d, %reg1	
	addl %reg1, %ebx	

1
	.size DicNode.init, .-DicNode.init	
	.globl DicNode.get	

1
	je .Main.main_19	
	movq %reg0, %reg1	

1
	movq $3000, %reg0	
	movq %reg0, 560(%rax)	

1
.Main.new_5:	
	movq 0(%reg0), %reg1	

1
	addl %reg0, %eax	
	movq $12, %rcx	

1
	call *%reg0	
	movq 712(%rbx), %reg0	

1
	movq -136(%rbp), %rax	
	subl %reg2, %edi	

1
	idivl %reg0	
.Matrix.get_11:	

1
	je .Main.main_139	
	movq $106, %rsi	

1
	movq -120(%rbp), %rsi	
	cmpl %reg2, %eax	

1
	addl %reg0, %eax	
	movq %reg2, 16(%rbx)	

1
	movq -56(%rbp), %rax	
	movq -136(%rbp), %reg3	

1
	negl %esi	
	movq $12, %reg1	

1
	movq $324, %r13	
	movq $12, %r14	

1
	movq $80, %reg0	
	call getmem	

1
	movq -168(%rbp), %reg1	
	movq -104(%rbp), %reg3	

1
	movq $19322, %rax	
	movq $38661, %rdi	

1
	movq 16(%rbx), %rax	
	cmpl $0, %reg2	

1
	movq %reg0, %rsi	
	movq -136(%rbp), %rcx	

1
	movq $9, %rsi	
	cmpl %reg1, %edi	

1
	idivl %esi	
	movq 0(%rbx), %r12	

1
	movq -160(%rbp), %rax	
	movq %r8, %r9	

1
	setle %dil	
	cmpl %reg1, %eax	

1
	movq $3000, %rdi	
	movq %rdi, 688(%reg1)	

1
	movq $0, %rdi	
	movq %rdi, 232(%rax)	

1
	movq -80(%rbp), %reg1	
	movq -144(%rbp), %reg3	

1
	movq -136(%rbp), %reg1	
	addl %reg2, %edi	

1
	movq $0, %r12	
	call Main.new	

1
	movq -136(%rbp), %rax	
	imull %esi	

1
	jmp .Matrix.get_16	
.Matrix.get_15:	

1
	sete %dil	
	jne .Main.main_21	

1
	sete %dil	
	jne .CellularAutomaton.cell_right_neighbor_1	

1
	movq 736(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	subl %eax, %edi	
	movq %reg2, -32(%rbp)	

1
.CellularAutomaton.cell_at_next_evolution_5:	
	movq $0, %reg0	

1
	movq %rbx, %rdi	
	call String.length	

1
.A2I.c2i_19:	
	movq 0(%reg0), %rbx	

1
	movq $174, %reg0	
	movq $.string5_l, %rdi	

1
	je .Main.print_list_1	
	movq $108, %rsi	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_18	

1
	movq $0, %reg0	
	movq %reg0, 600(%reg1)	

1
.Main.main_48:	
	movq -24(%rbp), %reg1	

1
	negl %reg0d	
	movq %reg0, %r9	

1
	movq $15505, %rax	
	addl %eax, %reg2	

1
	movq $15798, %rax	
	subl %reg1, %r10d	

1
	movq $3000, %reg0	
	movq %reg0, 264(%reg1)	

1
	movq 0(%rdx), %rbx	
	movq 48(%rbx), %rbx	

1
.CellularAutomaton.cell_right_neighbor_2:	
	popq %r12	

1
	testq $1, %reg0	
	je .Main.new_9	

1
	movq %r8, %reg1	
	movq -176(%rbp), %r8	

1
	addl %reg0, %reg1	
	movq $30018, %reg2	

1
	testq $1, %rdi	
	je .Matrix.set_38	

1
	movq -176(%rbp), %rax	
	movq $0, %reg2	

1
	movq 424(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq %r12, %rbx	
	addl %reg2, %eax	

1
	movq -16(%rbp), %rax	
	addl %reg2, %edi	

1
	movq -152(%rbp), %reg1	
	negl %ecx	

1
	movq $0, %reg0	
	movq %reg0, 656(%reg1)	

1
	imull %reg0	
	movq -40(%rbp), %rdi	

1
	movq $2, %rcx	
	movq 8(%reg1), %rsi	

1
	movq 440(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq $60127, %reg0	
	addl %reg0d, %reg1	

1
	movq 8(%rax), %reg1	
	negl %edi	

1
	subl %reg0, %reg1	
	movq $8997, %reg2	

1
	call *%reg0	
	jmp .Main.main_30	

1
.Main.main_2:	
	movq $1, %r12	

1
	call *%reg0	
	movq 80(%reg1), %reg2	

1
	movq %r12, %reg1	
	movq 8(%reg2), %r13	

1
	movq -40(%rbp), %reg1	
	movq $0, %reg2	

1
	.type Main.myInt, @function	
Main.myInt:	

1
	movq %reg0, %reg1	
	movq 8(%rax), %rdi	

1
	idivl %reg0	
	movq -96(%rbp), %rsi	

1
Razz.new:	
	pushq %reg0	

1
	subl %eax, %edi	
	movq -96(%rbp), %reg3	

1
	subl %eax, %reg1d	
	movq $10464, %reg2	

1
	subl %edi, %eax	
	movq %reg2, %r13	

1
	je .Main.main_76	
	movq $19, %reg0	

1
	idivl %esi	
	movq $2739, %rsi	

1
	cmpq $IO_vtable, 0(%rax)	
	je .Main.new_3	

1
	movq %reg0, 160(%reg1)	
	movq $3000, %reg0	

1
	movq 24(%rbx), %rdi	
	movq %reg2, %reg3	

1
	je .Main.func_1	
	movq $1, %reg0	

1
.A2I.c2i_19:	
	movq 0(%rax), %rbx	

1
	movq -16(%rbp), %reg1	
	cmpl %reg2, %esi	

1
	idivl %ecx	
	movq $3175, %rsi	

1
	movq $4, %r12	
	movq 0(%reg1), %rbx	

1
	setle %reg0l	
	jg .Main.main_15	

1
	movq 136(%r13), %r13	
	movq 16(%reg1), %reg2	

1
	subl %eax, %edi	
	movq -96(%rbp), %rax	

1
	movq %reg0, %rbp	
	movq 16(%reg2), %reg3	

1
	je .Razz.new_2	
.Razz.new_2:	

1
	movq 56(%r15), %r15	
	movq %r14, %rdi	

1
	jmp .Main.main_36	
.Main.main_17:	

1
	movq %rdi, %rax	
	movq $46167, %rdi	

1
	movq $11, %rsi	
	movq $.string3_l, %rdi	

1
	jg .Matrix.mul_4	
	movq -8(%rbp), %reg1	

1
.Main.main_37:	
	movq 0(%r13), %rax	

1
	movq -8(%rbp), %reg1	
	popq %r15	

1
	movq %r13, %reg1	
	movq %rdi, %reg3	

1
	cmpq $Bazz_vtable, 0(%rbx)	
	je .Bazz.new_2	

1
	movq %reg0, 16(%reg1)	
	movq 24(%reg1), %reg2	

1
	movq %rax, -128(%rbp)	
	movq $6, %rax	

1
	jne .Matrix.get_23	
	movq 80(%rax), %rax	

1
	movq %reg0, 64(%rax)	
	movq $3000, %reg0	

1
	idivl %reg0	
	movq $63562, %reg1	

1
	movq 720(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	addl %reg0, %eax	
	movq %rax, -16(%rbp)	

1
	je .Main.main_12	
	movq $20, %rsi	

1
	movq %rcx, %reg1	
	movq -80(%rbp), %reg1	

1
	movq %r15, %rax	
	movq -72(%rbp), %rdi	

1
	movq %rax, %reg1	
	jmp .Main.main_12	

1
	movq 8(%rdi), %rdi	
	addl %reg1, %edi	

1
	movq $3966, %reg0	
	cmpl %reg1, %reg2	

1
	movq %r15, %reg1	
	movq %rbx, %rax	

1
	movq $13, %r15	
	cmpl $0, %reg1d	

1
	idivl %esi	
	movq -40(%rbp), %reg2	

1
	negl %eax	
	movq %reg1, 16(%rdi)	

1
.Matrix.mul_5:	
	movq 0(%reg0), %r15	

1
	.size Cons.rev, .-Cons.rev	
	.globl Cons.sort	

1
.Main.main_170:	
.Main.main_76:	

1
CellularAutomaton.cell:	
	pushq %reg0	

1
	negl %reg0	
	movq $9569, %reg1	

1
.Matrix.get_12:	
	cdq	

1
	je .Razz.new_8	
	cmpq $Foo_vtable, 0(%reg0)	

1
.Main.main_11:	
	movq $.string9, %reg0	

1
	movq -80(%rbp), %reg1	
	cmpl %esi, %reg3	

1
	addl %esi, %eax	
	movq -64(%rbp), %rcx	

1
	movq 128(%rax), %rax	
	movq 16(%rbx), %reg2	

1
	movq $47963, %r9	
	imull %r9d	

1
	movq $3000, %reg0	
	movq %reg0, 712(%rax)	

1
	movq $.string7, %r14	
	movq %reg1, %rdi	

1
	call Bar.new	
	movq %rax, -16(%rbp)	

1
	subl %reg0, %reg1	
	subl %reg1, %eax	

1
	call *%reg0	
	movq 80(%rbx), %reg2	

1
	call *%reg0	
.Main.main_52:	

1
	movq -112(%rbp), %rax	
	movq %r13, %rsi	

1
	jne .Matrix.get_41	
	movq 128(%reg0), %reg0	

1
	movq $.string9, %reg0	
	movq 0(%rax), %r12	

1
	movq $8, %rax	
	movq %rax, -80(%rbp)	

1
	movq $168, %reg0	
	movq $.string2_l, %rdi	

1
	movq -64(%rbp), %reg1	
	subl %edi, %reg3	

1
	movq -128(%rbp), %reg1	
	subl %reg2, %esi	

1
	movq -80(%rbp), %rax	
	addl %esi, %eax	

1
.Main.main_31:	
	movq %reg0, %rsi	

1
	call *%reg0	
	movq 48(%rbx), %rax	

1
	movq 256(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	.quad 42	
Bar_vtable:	

1
	movq 24(%reg0), %reg1	
	addl %edi, %eax	

1
	movq %reg0, %r13	
	jmp .A2I.a2i_aux_1	

1
	movq %rsp, %rbp	
	movq $88, %reg2	

1
	movq %reg0, %reg1	
	movq 48(%reg2), %reg3	

1
	movq $3000, %rdi	
	movq %rdi, 136(%reg1)	

1
	jmp .List.insert_3	
.List.insert_1:	

1
	movq -128(%rbp), %rsi	
	movq -72(%rbp), %rcx	

1
	movq $3, %r13	
	movq $name_Bool, %reg1	

1
	movq 72(%rax), %rax	
	movq 16(%reg1), %rdi	

1
	testq $1, %rax	
	je .Main.main_82	

1
	movq %reg0, 424(%rax)	
	movq $3000, %reg0	

1
	cmpq $Razz_vtable, 0(%rbx)	
	je .Bazz.new_3	

1
	movq $19322, %reg0	
	movq $38661, %reg1	

1
	movq -112(%rbp), %reg1	
	addl %ecx, %eax	

1
	movq $43617, %reg0	
	imull %reg1	

1
	movq -96(%rbp), %reg1	
	cmpl %eax, %esi	

1
	movq $0, %rdi	
	movq %rdi, 368(%reg1)	

1
	movq $.string8, %rax	
	movq $.string9, %reg1	

1
	movq %rdi, %reg1	
	jmp .Main.main_22	

1
	imull %reg0	
	movq $52290, %rsi	

1
.CellularAutomaton.cell_left_neighbor_1:	
	movq $1, %rdi	

1
	movq 24(%rbx), %reg1	
	sete %al	

1
	movq 16(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	jge .Main.main_61	
	movq %reg0, %reg1	

1
	.quad DicNode.next	
	.quad DicNode.setNext	

1
	movq %reg0, -8(%rbp)	
	movq $34533, %reg2	

1
	je .Main.main_182	
	movq $151, %reg0	

1
	movq %rbx, %rax	
	movq %r10, %r11	

1
.string0_l:	
	.string "A2I"	

1
	movq $0, %rdi	
	movq %rdi, 360(%reg1)	

1
	subl %edi, %reg1	
	movq 0(%rbx), %r13	

1
	movq $0, %r13	
	movq $5, %rax	

1
	subl %esi, %edi	
	cmpl %edi, %reg2	

1
	movq %rax, -48(%rbp)	
	movq $10, %rax	

1
	movq $63899, %reg0	
	movq $18189, %r11	

1
	movq %rsi, %reg1	
	negl %eax	

1
	movq $3000, %rdi	
	movq %rdi, 720(%reg1)	

1
.Nil.rcons_1:	
	movq 0(%reg0), %reg1	

1
	negl %eax	
	addl %eax, %r8d	

1
Nil.new:	
	pushq %reg0	

1
	movq -88(%rbp), %reg1	
	call *%rax	

1
	movq $.string7, %r13	
	movq $.string7, %r14	

1
	movq $16, %rsi	
	movq $.string2_l, %reg1	

1
	je .Main.func_5	
	cmpq $Int_vtable, 0(%rsi)	

1
	.quad Main.main	
	.quad Main.out_whatever	

1
	.quad .string0_l	
	.quad 17	

1
	movq $3000, %reg0	
	movq %reg0, 32(%reg1)	

1
.Main.main_10:	
	movq 0(%rax), %reg1	

1
	movq 8(%reg0), %r14	
	pushq %rax	

1
	negl %ecx	
	movq -120(%rbp), %reg2	

1
	movq $48887, %reg0	
	negl %eax	

1
	movq $180, %rsi	
	movq $.string5_l, %rdi	

1
	movq $30631, %rdi	
	movq $0, %rsi	

1
	movq $39506, %rsi	
	movq %rsi, %rcx	

1
	movq 640(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	subl %eax, %edi	
	movq $50998, %reg2	

1
	imull %reg0	
	movq $28379, %reg1	

1
CellularAutomaton.init:	
	pushq %rbp	

1
	movq $32151, %rax	
	movq 0(%reg1), %reg2	

1
.Main.main_6:	
	movq 16(%rbx), %reg1	

1
	movq -168(%rbp), %rax	
	movq $0, %rcx	

1
	movq %reg0, %rbx	
	movq $4, %r12	

1
	movq -32(%rbp), %rax	
	movq -24(%rbp), %rdi	

1
	call *%r13	
	jmp .Dictionary.get_3	

1
	subl %edi, %reg1	
	movq -88(%rbp), %rdi	

1
	call *%r15	
	movq %rbx, %reg2	

1
	.quad List.insert	
	.quad List.rcons	

1
	movq $19020, %reg0	
	movq $0, %rcx	

1
	je .Main.main_23	
	cmpq $Main_vtable, 0(%rbx)	

1
	movq %rdi, %rax	
	jmp .Matrix.set_31	

1
	movq %rbx, %reg1	
	movq 8(%rax), %reg3	

1
	movq -24(%rbp), %rax	
	movq -120(%rbp), %reg3	

1
	idivl %edi	
	movq 0(%rbx), %r12	

1
	movq $21613, %r12	
	movq 0(%reg1), %reg2	

1
	addl %edi, %eax	
	movq %rax, 16(%reg3)	

1
	setl %sil	
	jge .Main.main_61	

1
	subl %reg0, %esi	
	movq -128(%rbp), %reg3	

1
	movq $5660, %r8	
	subl %r8d, %reg1	

1
.DicNode.insert_1:	
	movq 24(%rbx), %reg1	

1
	ret	
	.size DicNode.insert, .-DicNode.insert	

1
	movq -168(%rbp), %reg1	
	movq -24(%rbp), %rdi	

1
	movq %reg0, %rax	
	jmp .Matrix.set_11	

1
	negl %reg0	
	movq -128(%rbp), %reg2	

1
	ret	
	.size Matrix.set, .-Matrix.set	

1
.Main.main_96:	
	cdq	

1
	movq 0(%r12), %reg1	
	movq 136(%reg1), %reg1	

1
	movq %rsi, %rdi	
	imull %reg2	

1
	movq $58921, %reg0	
	cmpl %edi, %reg2	

1
	testq $1, %r9	
	je .Main.main_60	

1
	movq $0, %rdi	
	movq %rdi, 296(%reg1)	

1
	jmp .Matrix.get_3	
.Matrix.get_2:	

1
	idivl %reg0d	
	movq -176(%rbp), %reg0	

1
	movq $48672, %reg0	
	movq $3326, %rsi	

1
.Main.main_92:	
	cdq	

1
	movq %rax, 24(%reg1)	
	jmp .DicNode.insert_5	

1
	je .Main.main_86	
	movq %reg0, %reg1	

1
	movq $744, %reg0	
	call getmem	

1
	movq 8(%rax), %reg1	
	movq $1, %rcx	

1
	call *%r12	
	movq 320(%reg1), %rax	

1
	movq -112(%rbp), %rax	
	subl %eax, %edi	

1
	movq %reg0, %reg1	
	jmp .Main.main_49	

1
	movq -144(%rbp), %reg1	
	addl %esi, %eax	

1
	movq $0, %reg0	
	movq %reg0, 432(%rax)	

1
	movq 72(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq %rdi, 120(%rax)	
	movq $3000, %rdi	

1
	movq $744, %rdi	
	call getmem	

1
	movq %reg0, %rcx	
	movq -128(%rbp), %r8	

1
	je .Main.main_10	
	cmpq $Object_vtable, 0(%reg0)	

1
	movq $2, %rdi	
	movq %rdi, 8(%reg1)	

1
	.type Complex.reflect_0, @function	
Complex.reflect_0:	

1
	movq $0, %reg0	
	movq %reg0, 600(%rax)	

1
	je .Main.main_91	
	movq $64, %reg0	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_31	

1
	.quad 33	
String_vtable:	

1
	pushq %reg0	
	movq $64, %rdi	

1
	je .Main.main_8	
	movq 0(%rbx), %reg1	

1
	movq $0, %reg0	
	movq %reg0, 328(%rax)	

1
	movq $name_Int, %r12	
	movq 0(%rbx), %reg2	

1
	cmpl %esi, %edi	
	setle %reg2l	

1
	movq -144(%rbp), %rsi	
	movq -80(%rbp), %rax	

1
	jge .Main.main_72	
	movq %reg0, %reg1	

1
	call *%reg0	
	movq 528(%rbx), %reg0	

1
	subl %eax, %edi	
	movq -64(%rbp), %reg3	

1
	movq $6, %rcx	
	movq %rdi, %reg2	

1
	subl %reg0, %eax	
	movq -104(%rbp), %reg3	

1
	movq 32(%reg0), %rax	
	movq 16(%reg0), %reg2	

1
	setle %reg0l	
	jg .Main.main_42	

1
	movq %reg0, %reg1	
.Main.main_157:	

1
	movq $222, %rdi	
	negl %edi	

1
	movq %reg0, %r14	
.Matrix.mul_3:	

1
	movq -160(%rbp), %rsi	
	subl %esi, %reg3	

1
	subl %eax, %reg1	
	movq -136(%rbp), %rsi	

1
.Bar.new_13:	
	movq 16(%rbx), %reg1	

1
	jmp .Dictionary.get_3	
.Dictionary.get_1:	

1
	idivl %reg0d	
	addl %eax, %r12d	

1
	movq %rsi, %reg1	
	movq $1, %rdi	

1
	.quad .string0	
	.quad 8	

1
CellularAutomaton.cell_left_neighbor:	
	pushq %reg0	

1
	movq 504(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	movq $3000, %reg0	
	movq %reg0, 440(%reg1)	

1
	movq $7493, %reg0	
	addl %edi, %reg2	

1
	movq -168(%rbp), %rax	
	movq -120(%rbp), %reg3	

1
	.quad Main.funccasei	
	.quad Main.funccaseb	

1
.Main.main_13:	
	movq $.string8, %rbx	

1
.CellularAutomaton.evolve_1:	
	movq %reg0, %rdi	

1
	movq 32(%rbx), %reg1	
	movq 16(%rbx), %rdi	

1
.Main.main_18:	
	movq $21613, %reg0	

1
	movq -88(%rbp), %rax	
	movq -16(%rbp), %reg3	

1
	movq $25185, %reg0	
	addl %reg1, %ebx	

1
	movq %reg0, 16(%reg1)	
	movq $.string7, %reg0	

1
	jne .CellularAutomaton.cell_at_next_evolution_5	
	movq $1, %reg0	

1
	movq -40(%rbp), %rdi	
	subl %edi, %reg3	

1
	idivl %reg0	
	movq $47308, %rsi	

1
	movq %rsi, %reg1	
	movq 8(%reg1), %rbx	

1
	movq $4, %reg0	
	movq $.string5_l, %rdi	

1
	addl %reg0, %reg1	
	movq %reg2, -24(%rbp)	

1
	negl %reg0	
	movq $3828, %rsi	

1
	movq 8(%reg0), %r13	
	pushq %reg2	

1
	movq -24(%rbp), %rdx	
	movq %rdx, %reg2	

1
	jne .Main.main_3	
	movq 72(%reg0), %rax	

1
	movq %rbx, %rax	
	jmp .Bar.new_11	

1
	movq $19369, %reg0	
	addl %reg1, %reg2	

1
.Matrix.set_43:	
	movq $3, %reg0	

1
	movq %rax, %r14	
	movq $2, %rax	

1
.Cons.rcons_1:	
	movq 16(%reg0), %reg1	

1
	jmp .Main.main_159	
.Main.main_146:	

1
	testq $1, %reg0	
	je .Main.main_183	

1
	movq $23071, %reg0	
	movq %reg0, %rcx	

1
	subl %ecx, %r8d	
	movq %r8, %rcx	

1
	movq %rcx, %rax	
	movq -88(%rbp), %rax	

1
	call *%reg0	
	movq 264(%reg1), %r12	

1
	movq $15714, %reg0	
	movq $0, %reg1	

1
	.quad 25	
	.quad Matrix.new	

1
.Matrix.set_8:	
	movq $5, %rcx	

1
	movq %r15, %rax	
	imull %reg2	

1
	.type Bazz.printh, @function	
Bazz.printh:	

1
	setle %reg0	
	jmp .Main.main_148	

1
	movq 16(%rbx), %rax	
	cmpl $0, %eax	

1
	movq %reg0, 40(%rax)	
	movq $3000, %reg0	

1
	ret	
	.size Main.iota, .-Main.iota	

1
	movq $Razz_vtable, 0(%reg0)	
	movq %reg0, %reg1	

1
	je .Main.main_33	
	movq %reg0, %reg1	

1
	movq %r13, %reg1	
	movq 8(%reg2), %reg3	

1
	je .Main.main_56	
	movq $204, %reg0	

1
	movq $0, %reg0	
	jmp .Main.new_8	

1
	movq 24(%rax), %reg1	
	movq %rbx, %reg3	

1
	movq %rdi, 624(%rax)	
	movq $0, %rdi	

1
	testq $1, %rcx	
	je .Main.main_106	

1
	movq %reg0, %rsi	
	movq -152(%rbp), %rax	

1
	negl %reg0	
	movq $35, %rsi	

1
	movq -112(%rbp), %reg1	
	movq %rsi, %reg3	

1
	je .Razz.new_20	
	movq $31, %rsi	

1
.Main.main_24:	
	movq -16(%rbp), %rax	

1
.Matrix.elMul_1:	
	movq $5, %rdi	

1
	movq 504(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	addl %ebx, %eax	
	movq %reg2, %rbx	

1
	cmpq $Razz_vtable, 0(%reg0)	
	je .Razz.new_15	

1
	movq %reg0, %reg1	
	movq $6765, %reg0	

1
.Main.main_162:	
	movq -48(%rbp), %rax	

1
	imull %edi	
	movq %rax, -168(%rbp)	

1
	movq %reg0, %rax	
	movq -56(%rbp), %rsi	

1
	movq 688(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_37	

1
	addl %esi, %reg1	
	movq %reg2, %rcx	

1
	.size List.new, .-List.new	
	.globl ListNode.new	

1
	call *%r12	
	movq 96(%reg1), %rax	

1
	movq $40488, %reg0	
	negl %reg1	

1
	negl %eax	
	movq $2951, %reg1	

1
	movq $229, %rsi	
	movq %rsi, %reg1	

1
	movq 8(%r12), %reg1	
	movq 0(%r12), %rbx	

1
	idivl %r9d	
	movq -16(%rbp), %r8	

1
	jmp .Matrix.mul_3	
.Matrix.mul_4:	

1
	movq $64582, %r13	
	movq %r13, %r14	

1
	testq $1, %rdi	
	je .Main.funcifb_1	

1
	movq -72(%rbp), %rsi	
	negl %esi	

1
	addl %reg0d, %eax	
	addl %eax, %reg2	

1
.Main.main_16:	
	movq 0(%reg0), %r12	

1
	call *%reg0	
	movq 680(%rbx), %rax	

1
	movq %rax, %reg1	
	movq $10, %reg2	

1
	sete %cl	
	jne .A2I.i2c_1	

1
	movq 128(%rax), %rax	
	movq 16(%reg1), %rdi	

1
	movq 272(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	addl %reg0, %reg1	
	movq -168(%rbp), %rdi	

1
	movq -144(%rbp), %rdx	
	movq %rdx, %reg2	

1
	.quad Matrix.get	
	.quad Matrix.set	

1
	call *%reg0	
	movq -16(%rbp), %reg0	

1
	jne .Matrix.get_8	
	movq 32(%reg0), %reg0	

1
	jge .Main.main_138	
	movq %reg0, %rax	

1
	idivl %r12d	
	movq $38600, %r12	

1
	movq $.string15, %rdi	
	movq %reg1, %reg2	

1
	movq -152(%rbp), %rdi	
	negl %edi	

1
	movq -104(%rbp), %rsi	
	movq -160(%rbp), %rax	

1
	cmpl $0, 24(%rbx)	
	movq 24(%rbx), %reg1	

1
	idivl %edi	
	movq 0(%rbx), %reg2	

1
	jmp .Main.main_157	
.Main.main_156:	

1
	movq $19369, %reg0	
	addl %reg1, %eax	

1
	movq -160(%rbp), %rax	
	movq %r13, %reg3	

1
	movq %reg0, %rax	
	movq -48(%rbp), %rax	

1
	movq -16(%rbp), %reg1	
	subl %r8d, %eax	

1
	call *%reg0	
	movq 496(%reg1), %rax	

1
	negl %edi	
	movq %rdi, 16(%rax)	

1
	movq $63080, %rsi	
	movq $0, %reg1	

1
	movq $47879, %reg0	
	cmpl %eax, %reg2	

1
	je .Main.main_191	
	movq $151, %reg0	

1
.Main.main_21:	
	movq -96(%rbp), %rax	

1
	call getmem	
	movq $Complex_vtable, 0(%rax)	

1
	negl %edi	
	movq %r13, %rax	

1
	movq $3000, %rdi	
	movq %rdi, 512(%reg1)	

1
	testq $1, %rax	
	je .Main.main_60	

1
	movq $12855, %rdi	
	addl %reg1, %eax	

1
.Foo.new_6:	
	movq %rax, 16(%reg1)	

1
	movq -168(%rbp), %rax	
	movq -88(%rbp), %reg3	

1
	addl %eax, %esi	
	movq -56(%rbp), %rax	

1
	movq 0(%r14), %reg1	
	movq 72(%reg1), %reg1	

1
.Nil.rcons_1:	
	movq 0(%rax), %r13	

1
	movq -144(%rbp), %rax	
	movq -136(%rbp), %reg3	

1
	subl %eax, %reg1	
	movq $43604, %rax	

1
	movq 16(%rax), %rdi	
	movq %reg2, %reg3	

1
	call String.substr	
	movq $.string17, %reg0	

1
	movq -40(%rbp), %rax	
	movq %r13, %reg3	

1
	movq %rdi, 384(%reg1)	
	movq $0, %rdi	

1
	movq %reg0, 424(%reg1)	
	movq $3000, %reg0	

1
	movq 72(%reg0), %rax	
	testq $1, %rax	

1
	call *%r15	
	movq -176(%rbp), %reg2	

1
	call *%rax	
	movq -96(%rbp), %rax	

1
	movq $840, %rsi	
	movq %rsi, %rcx	

1
.Main.main_18:	
	movq %reg0, %rdx	

1
	.quad Cons.cdr	
	.quad Cons.rev	

1
	movq $12, %rsi	
	movq %rbx, %rax	

1
	movq -128(%rbp), %rdi	
	negl %reg2	

1
	movq %rdi, 80(%rax)	
	movq $3000, %rdi	

1
	movq -112(%rbp), %rax	
	movq $0, %r9	

1
	movq $78, %reg0	
	movq $.string3_l, %reg1	

1
	sete %reg0b	
	jne .Matrix.set_40	

1
	call String.concat	
	movq 0(%reg0), %r13	

1
	movq 128(%rax), %rax	
	movq 16(%reg1), %reg2	

1
ListNode.next:	
	pushq %reg0	

1
	movq %rdi, 400(%reg1)	
	movq $3000, %rdi	

1
	negl %reg0d	
	movq -64(%rbp), %rax	

1
	idivl %esi	
.Matrix.set_50:	

1
	movq $.string8, %rdi	
	movq %reg1, %reg2	

1
.string6_l:	
	.string "true"	

1
	movq -152(%rbp), %reg1	
	movq -80(%rbp), %reg3	

1
	movq 88(%rax), %rax	
	jmp .Matrix.get_29	

1
.Matrix.set_32:	
	movq $4, %reg0	

1
.Main.main_11:	
	movq $0, %rax	

1
	addl %eax, %reg1d	
	movq $60159, %rax	

1
	subl %reg0, %edi	
	movq $8997, %rax	

1
	movq $13, %reg0	
	movq %reg0, -64(%rbp)	

1
	movq 136(%reg0), %reg0	
	movq %r12, %reg2	

1
	movq $35043, %rsi	
	movq %rsi, %rcx	

1
	call *%r12	
	movq 8(%reg1), %rax	

1
Bar.getI:	
	pushq %reg0	

1
	jmp .Main.main_148	
.Main.main_147:	

1
	je .Main.main_45	
	movq $15, %reg0	

1
	idivl %reg0	
	movq -80(%rbp), %reg2	

1
	subl %eax, %esi	
	movq -128(%rbp), %reg3	

1
	addl %reg0, %reg1	
	movq %rax, 40(%reg3)	

1
	.quad .string0_l	
	.quad 6	

1
	subl %r10d, %reg1	
	movq $5411, %r10	

1
	movq %rax, %reg1	
	movq 8(%reg2), %rsi	

1
	movq 424(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq -120(%rbp), %rax	
	movq -120(%rbp), %rdi	

1
	movq $127, %reg0	
	movq $.string3_l, %reg1	

1
	addl %esi, %eax	
	movq -160(%rbp), %reg3	

1
	movq %reg0, %r8	
	movq -16(%rbp), %reg0	

1
	call *%reg0	
	movq %r14, %reg0	

1
.Main.main_86:	
	cdq	

1
	setl %sil	
	jge .Main.main_80	

1
	call *%rbx	
.Main.main_2:	

1
	call IO.out_string	
	popq %reg0	

1
	addl %edi, %reg1	
	movq %rax, -64(%rbp)	

1
	movq %reg0, %rdx	
	movq %rdx, -176(%rbp)	

1
	movq %rdi, %reg1	
	movq $3, %rax	

1
	movq $179, %rsi	
	movq $.string5_l, %reg1	

1
	ret	
	.size Dictionary.get, .-Dictionary.get	

1
	movq 384(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	movq -24(%rbp), %rsi	
	movq %reg2, %rax	

1
	movq -48(%rbp), %rax	
	imull %ecx	

1
	movq %r14, %rdi	
	call *%rax	

1
	negl %edi	
	movq -32(%rbp), %reg2	

1
	movq $5456, %rax	
	subl %eax, %reg2	

1
	movq 120(%r12), %r12	
	movq %reg1, %reg2	

1
	movq -80(%rbp), %rsi	
	cmpl %esi, %reg3	

1
	movq 168(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	testq $1, %reg0	
	je .Main.main_161	

1
	call *%reg0	
	movq 352(%reg1), %reg0	

1
	jge .Main.main_68	
	movq %reg0, %rax	

1
.Dictionary.insert_2:	
	movq 0(%reg0), %r14	

1
	movq $Bazz_vtable, 0(%rax)	
	movq %rax, %reg1	

1
	movq %r12, 8(%rax)	
	movq %rax, %r12	

1
	call out_error	
.Main.main_155:	

1
	movq $138, %reg0	
	movq $.string3_l, %reg1	

1
	movq %rdi, %reg1	
	cmpl %reg1d, %reg2	

1
	movq 72(%reg0), %reg0	
	movq %r14, %rdi	

1
	movq $32151, %reg0	
	movq 0(%reg1), %r12	

1
	je .Main.main_4	
	movq $1, %r12	

1
	call *%rax	
	movq 176(%reg1), %rax	

1
	addl %edi, %reg1	
	movq %reg2, 40(%reg3)	

1
	movq $45402, %rdi	
	movq %rdi, %rsi	

1
	subl %eax, %reg1	
	movq $50998, %rax	

1
	movq $181, %reg0	
	movq $.string5_l, %reg1	

1
	movq -48(%rbp), %reg1	
	movq -88(%rbp), %rdi	

1
	movq %reg0, %rsi	
	movq $40488, %reg0	

1
	movq $0, %reg0	
	movq %reg0, 304(%rax)	

1
	subl %edi, %eax	
	movq %rax, %rbx	

1
	cmpq $Foo_vtable, 0(%rbx)	
	je .Bar.new_9	

1
	addl %edi, %eax	
	movq -168(%rbp), %reg3	

1
	movq -168(%rbp), %rdi	
	addl %reg2, %eax	

1
	call *%rax	
	movq -16(%rbp), %rdi	

1
	call *%r12	
.Main.main_27:	

1
	setl %r15b	
	jge .Main.main_35	

1
	movq $3000, %reg0	
	movq %reg0, 368(%rax)	

1
	movq -24(%rbp), %rdi	
	negl %reg2	

1
.Main.main_68:	
	movq -8(%rbp), %rax	

1
.Main.main_134:	
	cdq	

1
.ListNode.insert_4:	
	movq 16(%rbx), %rdx	

1
	movq %rax, 8(%reg1)	
	movq 0(%reg1), %reg2	

1
	movq -64(%rbp), %rax	
	movq -32(%rbp), %reg3	

1
	movq -160(%rbp), %rax	
	movq -168(%rbp), %r9	

1
	movq $0, %reg0	
	movq %reg0, 664(%rax)	

1
	sete %cl	
	jne .Matrix.get_58	

1
	call out_error	
.Main.main_103:	

1
	jmp .Matrix.set_42	
.Matrix.set_41:	

1
	imull %r10d	
	addl %eax, %reg2d	

1
	.quad Foo.func	
Bar_vtable:	

1
	testq $1, %rsi	
	je .Main.main_163	

1
	testq $1, %rcx	
	je .Main.main_11	

1
	movq $51925, %reg0	
	movq 0(%rbx), %reg2	

1
	idivl %reg0d	
	movq -72(%rbp), %r8	

1
	movq %rbx, %rax	
	jmp .Razz.new_11	

1
	negl %eax	
	movq $20470, %reg1	

1
.string6_l:	
	.string "A"	

1
	movq $59714, %rsi	
	movq %rsi, %reg1	

1
	addl %eax, %reg1	
	movq $37073, %rax	

1
	jne .Main.main_6	
	movq $1, %reg0	

1
	testq $1, %rax	
	je .Main.main_16	

1
	call *%rax	
	movq 216(%reg1), %r12	

1
	movq $9569, %rsi	
	imull %esi	

1
	imull %edi	
	movq $27399, %rdi	

1
	.quad 4	
.string5_l:	

1
	idivl %edi	
	movq $55626, %reg1	

1
	movq 8(%rbx), %rsi	
	call *%reg2	

1
	movq $35, %reg0	
	movq $90, %reg1	

1
	movq -176(%rbp), %reg1	
	subl %esi, %reg3	

1
	movq $0, %reg0	
	movq %reg0, 680(%reg1)	

1
	movq 144(%rax), %rax	
	movq 16(%rbx), %reg2	

1
	je .Razz.new_7	
	movq $4, %rsi	

1
	movq $0, %reg0	
	movq %reg0, 240(%rax)	

1
	movq -64(%rbp), %reg1	
	addl %reg1d, %eax	

1
	movq -80(%rbp), %reg1	
	subl %esi, %reg3	

1
	movq %rdi, %rax	
	jmp .Matrix.set_50	

1
	movq %reg0, %reg1	
	movq $72, %rdi	

1
	call *%reg0	
	movq 88(%rbx), %reg2	

1
	movq $12, %rdi	
	movq -128(%rbp), %rax	

1
	movq %rbx, %reg1	
	jmp .Bar.new_6	

1
.Main.main_23:	
	movq $.string10, %reg0	

1
	movq %rdi, %rax	
	jmp .Main.main_76	

1
	movq %rcx, %reg1	
	movq %rax, %rdi	

1
	movq 80(%reg0), %reg0	
	jmp .Matrix.get_24	

1
	movq %reg0, %reg1	
	movq 8(%rbx), %r14	

1
	movq %rdx, %rsi	
	movq %reg2, %reg3	

1
	subl %reg0, %r8d	
	movq $10464, %reg2	

1
	subl %edi, %reg1	
	movq $0, %r14	

1
	cmpq $Object_vtable, 0(%rdi)	
	je .Main.main_16	

1
	movq $0, %reg0	
	popq %r13	

1
	call *%r13	
	movq 0(%reg1), %r13	

1
	call *%r12	
	movq 248(%reg1), %reg2	

1
	je .Main.main_5	
	cmpq $Object_vtable, 0(%reg0)	

1
	jne .Main.main_27	
	movq -144(%rbp), %rax	

1
	movq $12, %reg0	
	movq %r12, %reg2	

1
	subl %eax, %reg1	
	movq $18310, %rax	

1
.A2I.i2c_11:	
	movq $6, %reg0	

1
	addl %eax, %reg1d	
	movq $15079, %reg2	

1
	movq %reg0, 248(%reg1)	
	movq $3000, %reg0	

1
	jmp .Main.main_76	
.Main.main_75:	

1
	movq $46032, %reg0	
	movq %reg0, %reg1	

1
	.size Foo.getBar, .-Foo.getBar	
	.globl Bar.setI	

1
	je .Main.main_102	
	movq $64, %reg0	

1
	movq $18391, %reg0	
	negl %edi	

1
	testq $1, %reg0	
	je .Dictionary.get_2	

1
	call Main.func	
	movq $0, %reg0	

1
	movq $3850, %rdi	
	movq %rdi, %reg1	

1
	movq %rax, %rdi	
	movq -16(%rbp), %reg3	

1
	call *%r13	
	movq %rax, 16(%rbx)	

1
	movq %reg0, 608(%rax)	
	movq $3000, %reg0	

1
	movq %reg0, 728(%reg1)	
	movq $0, %reg0	

1
	movq -72(%rbp), %r8	
	subl %r8d, %reg2	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_29	

1
	.size ListNode.get, .-ListNode.get	
	.globl ListNode.next	

1
	setl %reg0l	
	jge .Main.main_39	

1
	movq -184(%rbp), %reg1	
	movq -32(%rbp), %reg3	

1
	idivl %ecx	
	movq -128(%rbp), %reg2	

1
	movq %rax, -88(%rbp)	
	movq $20, %rax	

1
	call Object.type_name	
	movq 0(%rbx), %r12	

1
	movq -128(%rbp), %reg1	
	movq -64(%rbp), %reg3	

1
	movq -184(%rbp), %reg1	
	imull %reg1d	

1
.Main.out_whatever_1:	
	cmpq $String_vtable, 0(%rdi)	

1
	call *%r12	
	movq 48(%rbx), %reg2	

1
	movq $12591, %rdi	
	movq $38801, %reg1	

1
	jge .Main.main_66	
	movq %reg0, %rax	

1
	call *%r14	
	movq %reg1, 24(%rbx)	

1
	jne .Matrix.set_4	
	movq %reg0, 16(%rax)	

1
	je .Bar.new_19	
	movq $31, %reg0	

1
	movq %reg0, %reg1	
	movq $10, %rax	

1
	movq 384(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq %rdi, %rax	
	movq $39037, %rdi	

1
.Main.main_102:	
	movq -40(%rbp), %rax	

1
	movq -112(%rbp), %reg1	
	subl %reg2, %eax	

1
	jne .CellularAutomaton.cell_at_next_evolution_3	
	movq $1, %reg0	

1
	movq %r10, %rax	
	movq $62723, %r10	

1
	movq $.string10, %r14	
	cmpl $0, %reg1	

1
	jne .Main.main_6	
	movq $1, %rdi	

1
	movq 56(%reg0), %reg0	
	movq %r14, %rdi	

1
	movq -24(%rbp), %rax	
	movq %rsi, %rcx	

1
.Main.main_14:	
	movq -16(%rbp), %reg1	

1
	movq %reg0, %reg1	
	movq -136(%rbp), %rcx	

1
	movq $8271, %reg0	
	imull %reg1	

1
	movq $32151, %rax	
	movq 0(%rbx), %r12	

1
	movq -168(%rbp), %rdi	
	addl %edi, %reg3	

1
	movq $.string14, %reg0	
	movq 0(%rbx), %reg2	

1
	sete %sil	
	jne .A2I.i2c_19	

1
.Main.main_7:	
	movq 8(%rax), %reg1	

1
	movq -152(%rbp), %reg1	
	imull %reg1d	

1
	movq 264(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	movq 48(%rbx), %rbx	
	movq 8(%reg1), %reg2	

1
	negl %eax	
	movq $3828, %rsi	

1
	movq $5, %rsi	
	movq $.string1_l, %reg1	

1
	movq $9042, %rax	
	movq $58652, %reg1	

1
	movq $3175, %reg0	
	imull %esi	

1
	sete %dil	
	jne .Complex.equal_2	

1
	movq %reg0, %r12	
	movq $.string6, %reg2	

1
	movq %rdi, 272(%rax)	
	movq $3000, %rdi	

1
	movq 8(%rdi), %rdi	
	addl %eax, %reg2	

1
	sete %cl	
	jne .Matrix.get_41	

1
	jmp .Main.main_125	
.Main.main_124:	

1
	imull %r12d	
	subl %eax, %reg2	

1
	call *%reg0	
	movq 688(%rbx), %reg0	

1
	imull %reg0	
	movq $2438, %reg1	

1
	movq $1, %r12	
	movq %r12, %reg1	

1
	movq 8(%r12), %rax	
	movq 0(%r12), %rbx	

1
	imull %esi	
	movq -32(%rbp), %rsi	

1
	movq $57963, %rdi	
	subl %edi, %reg2	

1
.Main.main_27:	
.Main.main_23:	

1
	movq $20509, %reg0	
	subl %reg1, %edi	

1
	movq -48(%rbp), %reg1	
	movq -32(%rbp), %r8	

1
	movq $.string10, %r14	
	cmpl $0, %ebx	

1
	movq 416(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	je .Main.main_102	
	movq -160(%rbp), %rsi	

1
	je .Main.main_18	
	movq $164, %reg0	

1
	movq $12, %rax	
	movq %reg1, %reg2	

1
	call *%reg0	
	movq 624(%reg1), %reg0	

1
	call *%reg0	
	movq 512(%rbx), %r12	

1
	je .Main.main_128	
	movq $70, %reg0	

1
	.quad Object.type_name	
	.quad Foo.x	

1
.A2I.c2i_15:	
	movq $.string15, %reg0	

1
	call *%reg0	
	movq $18391, %rdi	

1
	movq $0, %r12	
	call Bool.new	

1
	call getmem	
	movq $CellularAutomaton_vtable, 0(%rax)	

1
	subl %reg0, %reg1	
	movq $18310, %rax	

1
	movq $12, %reg0	
	movq %r13, %rdi	

1
	movq $0, %reg0	
	cmpl %reg1, %eax	

1
	movq $3000, %reg0	
	movq %reg0, 8(%reg1)	

1
	testq $1, %reg0	
	jne .Main.main_71	

1
	movq 352(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq $3, %rdi	
	movq $0, %rsi	

1
	movq %reg0, %reg1	
	movq $name_Int, %reg2	

1
	movq 144(%rbx), %rbx	
	movq %rax, %reg2	

1
	call *%rax	
	movq 64(%rbx), %rax	

1
	.string "!"	
.string7:	

1
	movq $20, %rsi	
	movq $.string2_l, %reg1	

1
	call *%reg0	
	movq 136(%rbx), %reg0	

1
	movq $34422, %rax	
	subl %reg1, %edi	

1
	movq $6, %r13	
	movq 0(%rax), %r12	

1
	call *%rbx	
.Main.main_20:	

1
	je .Matrix.get_12	
	movq $40, %reg0	

1
	movq $3000, %reg0	
	movq %reg0, 672(%reg1)	

1
	addl %reg0, %reg1	
	movq -168(%rbp), %rax	

1
.Bar.getX_1:	
	movq 8(%reg0), %reg1	

1
	movq %rax, %reg1	
	movq $0, -24(%rbp)	

1
	movq %rdi, 72(%rax)	
	movq %rax, %rdi	

1
	movq %reg0, %reg1	
	movq $62723, %reg0	

1
	movq %r15, %rdi	
	addl %edi, %reg3	

1
	je .Main.main_129	
	movq $70, %reg0	

1
	subl %edi, %eax	
	movq %rbx, %rdi	

1
	call *%reg0	
	movq 24(%rbx), %reg0	

1
	movq $39, %rdi	
	movq %rdi, 8(%rax)	

1
	jne .Matrix.set_58	
	movq %rdi, 184(%reg1)	

1
	cmpq $String_vtable, 0(%reg0)	
	je .Main.main_6	

1
	je .Main.func_2	
	cmpq $IO_vtable, 0(%rax)	

1
	movq %rdi, 520(%reg1)	
	movq $3000, %rdi	

1
	movq 96(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq $48672, %reg0	
	movq $3326, %reg1	

1
	movq 64(%r12), %r12	
	movq 8(%reg1), %rdi	

1
	call *%r12	
	movq 688(%rbx), %r12	

1
	je .Main.main_4	
	movq $7, %reg0	

1
.Main.main_30:	
	movq %reg0, %reg1	

1
	movq %rdi, 184(%reg1)	
	movq $3000, %rdi	

1
	movq %rsi, 64(%reg1)	
	movq 32(%reg1), %rdi	

1
	movq %r14, %rax	
	addl %ecx, %eax	

1
	addl %eax, %ebx	
	movq %reg2, %rax	

1
.Main.new_13:	
	jmp .Main.new_1	

1
	movq %reg0, 176(%reg1)	
	movq $3000, %reg0	

1
	movq 112(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	ret	
	.size Main.myInt, .-Main.myInt	

1
	movq -32(%rbp), %reg1	
	movq -64(%rbp), %rdi	

1
	negl %reg0	
	movq %rdi, 8(%rax)	

1
.Main.main_17:	
	movq %reg0, %rsi	

1
	movq $name_Int, %reg0	
	movq 0(%reg1), %rax	

1
	idivl %reg0	
	movq $46032, %reg1	

1
	je .DicNode.get_3	
	movq $0, %r12	

1
	movq %r13, 8(%reg1)	
	movq %reg1, %r13	

1
	.string "ERROR: %lld: Exception: case on void\n"	
.string6:	

1
	subl %reg0, %eax	
	movq $4, %rdi	

1
	.size Razz.new, .-Razz.new	
	.globl Bazz.new	

1
	jmp .A2I.i2c_14	
.A2I.i2c_13:	

1
	sete %dil	
	jne .Main.new_7	

1
.Main.main_60:	
.Main.main_58:	

1
	subl %eax, %reg1	
	movq $25241, %reg2	

1
	movq $29773, %reg0	
	movq 0(%reg1), %r12	

1
	negl %reg0	
	movq $9569, %rsi	

1
.Main.main_1:	
	movq 0(%r14), %r15	

1
	je .Main.out_whatever_6	
	movq $13, %rsi	

1
	movq $0, %reg0	
	movq -8(%rbp), %rdx	

1
.Matrix.set_28:	
	movq $2, %r8	

1
	movq $Matrix_vtable, 0(%rax)	
	movq $0, %reg1	

1
	idivl %reg0	
	movq $12, %rdi	

1
	movq -152(%rbp), %rsi	
	cmpl %esi, %eax	

1
	je .Main.funccase_6	
	movq $24, %reg0	

1
	je .Main.main_20	
	movq $10, %rsi	

1
	jmp .Main.main_5	
.Main.main_5:	

1
	movq %r13, %reg1	
	negl %esi	

1
	call *%r12	
	movq 560(%rbx), %r12	

1
.Main.main_20:	
	movq $0, %rdi	

1
	je .Main.main_5	
	movq $88, %reg0	

1
.Main.main_108:	
.Main.main_106:	

1
	call getmem	
	movq $Bazz_vtable, 0(%rax)	

1
	movq -104(%rbp), %reg1	
	movq $0, %reg2	

1
	movq 8(%rbx), %reg1	
	movq 24(%rbx), %reg2	

1
	movq $4, %r9	
	movq %reg1, %rcx	

1
	je .Main.main_143	
	movq $112, %rsi	

1
.Main.funccase_5:	
	popq %r12	

1
.Main.main_55:	
	movq -16(%rbp), %rdx	

1
	movq $10, %reg0	
	cmpl $0, %ebx	

1
	movq $5, %r12	
	movq 0(%rbx), %rax	

1
	call out_error	
.Matrix.mul_5:	

1
	movq $40570, %r8	
	subl %r8d, %reg1	

1
	movq $Bazz_vtable, 0(%reg0)	
	movq %reg0, %reg1	

1
	je .Razz.new_16	
	cmpq $Razz_vtable, 0(%rbx)	

1
	subl %reg0, %reg1	
	movq $15487, %rdi	

1
	movq %rdi, 696(%rax)	
	movq $3000, %rdi	

1
	movq %reg0, %rax	
	movq %rsi, %r8	

1
	movq $130, %rdi	
	movq %reg1, %rax	

1
	movq 560(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	addl %reg0, %ecx	
	movq -112(%rbp), %reg3	

1
	addl %eax, %esi	
	movq -32(%rbp), %rcx	

1
	movq $1, %rbx	
	movq %reg1, %rdx	

1
	cmpq $Main_vtable, 0(%rax)	
	je .Main.main_7	

1
	movq %reg0, 720(%reg1)	
	movq $0, %reg0	

1
.Bar.new_18:	
	movq 32(%rbx), %rdi	

1
	movq $Bar_vtable, 0(%reg0)	
	leave	

1
	call *%r12	
.Complex.print_2:	

1
	movq $25036, %rdi	
	subl %edi, %reg2	

1
	movq $0, %rdi	
	movq %rdi, 488(%rax)	

1
	.quad 40	
.string12_l:	

1
	je .Main.main_5	
	movq $135, %reg0	

1
	subl %reg0, %reg1d	
	movq $35037, %reg2	

1
	movq $.string15, %rax	
	movq 0(%reg1), %reg2	

1
	movq $84, %rsi	
	movq $.string2_l, %rdi	

1
	movq 8(%reg0), %reg1	
	movq 0(%reg2), %r13	

1
	call out_error	
.Main.main_86:	

1
	movq %rax, %r13	
.Main.iota_1:	

1
.Razz.new_18:	
	movq 32(%reg0), %rdi	

1
	movq -48(%rbp), %reg1	
	movq %reg2, %rax	

1
	movq 624(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	movq $0, %reg0	
	movq %reg0, 488(%reg1)	

1
	movq $40813, %rdi	
	addl %edi, %esi	

1
.Main.main_168:	
	cdq	

1
	movq %rsp, %reg1	
	movq $208, %rdi	

1
	movq $3000, %rdi	
	movq %rdi, 328(%reg1)	

1
CellularAutomaton.num_cells:	
	pushq %rbp	

1
	movq %rsi, %rbx	
	movq 8(%rax), %rdi	

1
.Matrix.get_28:	
	movq $2, %rcx	

1
	movq -168(%rbp), %rax	
	addl %reg2d, %eax	

1
.Main.main_53:	
	movq -136(%rbp), %rsi	

1
	.quad 1	
.string6_l:	

1
	call out_error	
.Main.main_152:	

1
	movq $3000, %rdi	
	movq %rdi, 224(%rax)	

1
	movq 336(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq $4, %reg0	
	call Int.new	

1
	movq $54460, %reg0	
	addl %eax, %reg2	

1
	jne .Main.main_23	
	movq -168(%rbp), %rax	

1
	movq -24(%rbp), %rdi	
	negl %edi	

1
	movq $0, %r14	
	cmpl %r14d, %r13d	

1
	movq $15755, %reg0	
	imull %reg1	

1
	testq $1, %r8	
	je .Main.main_171	

1
	movq -88(%rbp), %reg1	
	movq $0, %r8	

1
	movq $.string14, %reg0	
	movq 0(%reg1), %reg2	

1
	movq $0, %rax	
	movq %rax, -40(%rbp)	

1
	call out_error	
.Main.main_110:	

1
.Main.main_1:	
	cmpl $0, %eax	

1
	movq %reg0, %reg1	
	movq $20, %reg2	

1
	jge .Main.main_9	
	movq $.string8, %rax	

1
	movq %reg0, 376(%rax)	
	movq $3000, %reg0	

1
	call *%reg0	
	movq %reg0, 64(%reg1)	

1
	movq $0, %rdi	
	movq %rdi, 536(%rax)	

1
	je .Main.main_78	
	movq $19, %rsi	

1
	cmpl %esi, %edi	
	setle %sil	

1
	movq $24092, %reg0	
	movq 0(%rbx), %r12	

1
	movq -56(%rbp), %rax	
	subl %reg2, %reg3	

1
	subl %reg0, %reg1	
	movq -152(%rbp), %rcx	

1
	movq 112(%reg0), %reg0	
	movq 16(%rax), %reg2	

1
Dictionary.new:	
	pushq %rbp	

1
	movq $name_Int, %reg0	
	movq 0(%rbx), %rax	

1
	testq $1, %reg0	
	je .Main.main_142	

1
	movq $17107, %rax	
	movq 0(%reg1), %reg2	

1
	je .Main.funccase_2	
	cmpq $IO_vtable, 0(%reg0)	

1
	movq %rsp, %reg1	
	subq $128, %rsp	

1
	call out_error	
.Bar.new_18:	

1
	idivl %ecx	
	movq $37473, %rsi	

1
	movq -24(%rbp), %rax	
	movq -88(%rbp), %rdi	

1
	movq $28968, %rax	
	movq $32079, %reg1	

1
	movq %reg0, -144(%rbp)	
	movq %reg2, %reg0	

1
	addl %eax, %reg1	
	movq $2, %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 192(%reg1)	

1
	movq 40(%rax), %rax	
	movq 8(%reg1), %reg2	

1
	jne .Main.main_7	
	movq %reg0, %rax	

1
	movq %rax, -56(%rbp)	
	movq $6, %rax	

1
	call *%rbx	
	movq $16210, %reg1	

1
	cmpq $Int_vtable, 0(%reg0)	
	je .Main.func_1	

1
.Main.main_131:	
	movq -80(%rbp), %reg1	

1
	movq 8(%reg0), %rax	
	cmpl %reg2, %reg3	

1
	movq $20509, %rax	
	subl %eax, %edi	

1
	movq -136(%rbp), %rax	
	subl %ecx, %eax	

1
	movq 624(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	movq %reg0, %reg1	
	movq $5660, %reg0	

1
	call out_error	
.Main.main_163:	

1
	call *%r13	
	call Int.new	

1
	movq $56556, %r10	
	movq $0, %reg1	

1
	movq -152(%rbp), %rsi	
	movq -152(%rbp), %rax	

1
	movq %reg0, %rbx	
	movq 24(%rbx), %rax	

1
	movq $9042, %reg0	
	movq $58652, %rdi	

1
	movq -88(%rbp), %rax	
	movq -16(%rbp), %rdi	

1
.string1_l:	
	.string "Nil"	

1
	movq $164, %rsi	
	movq $.string5_l, %rdi	

1
	movq $40813, %rdi	
	addl %edi, %reg2	

1
	movq -16(%rbp), %reg1	
	movq %reg2, %r9	

1
	subl %reg0, %reg1	
	movq $48672, %reg2	

1
	call out_error	
.Bar.new_14:	

1
	movq -64(%rbp), %reg1	
	movq -32(%rbp), %reg3	

1
	movq %reg0, %rax	
	jmp .Matrix.set_42	

1
	movq $25351, %reg0	
	subl %reg1, %ecx	

1
.Bar.new_14:	
	cmpq $Bar_vtable, 0(%reg0)	

1
	jne .A2I.c2i_7	
	movq $3, %reg0	

1
	movq %rbx, %reg1	
	jmp .Bar.new_17	

1
	jmp .Foo.new_11	
.Foo.new_11:	

1
	movq %r12, 8(%rax)	
	movq %rax, 8(%rbx)	

1
	movq %reg0, 520(%rax)	
	movq $0, %reg0	

1
.Main.main_72:	
	movq 0(%reg0), %rax	

1
	movq $113, %rsi	
	movq $.string2_l, %rdi	

1
	subl %reg0, %reg1	
	movq $48457, %rax	

1
	movq $0, %rdi	
	movq %rdi, 416(%reg1)	

1
	movq -160(%rbp), %rax	
	movq -168(%rbp), %reg3	

1
	movq -152(%rbp), %reg1	
	movq %reg2, %rax	

1
	movq $2, %reg0	
	movq $.string3_l, %reg1	

1
	call *%reg0	
	jmp .Main.main_38	

1
	je .Main.main_55	
	movq $17, %reg0	

1
	movq -8(%rbp), %reg1	
	movq 0(%reg1), %r14	

1
	movq 720(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	setl %reg0l	
	jge .Main.main_45	

1
.Main.main_1:	
	cmpq $String_vtable, 0(%rsi)	

1
	movq -32(%rbp), %reg1	
	movq %rcx, %r8	

1
.Main.main_10:	
	movq $.string15, %reg0	

1
.Main.main_2:	
	movq %r13, %r12	

1
	movq $19, %rax	
	movq %rax, -24(%rbp)	

1
	addl %eax, %edi	
	movq -152(%rbp), %reg3	

1
	movq $27399, %reg0	
	imull %edi	

1
.Matrix.get_49:	
	movq $1, %rax	

1
	movq %r14, %reg1	
	imull %esi	

1
	movq %r13, %reg1	
.Main.main_1:	

1
	call out_error	
.ListNode.insert_2:	

1
	setl %reg0b	
	jge .Main.main_10	

1
	movq -56(%rbp), %reg1	
	subl %esi, %reg3	

1
	movq %reg0, %r12	
	movq 0(%rax), %reg3	

1
	subl %reg0, %edi	
	movq -184(%rbp), %reg3	

1
	movq $60913, %reg0	
	movq $0, %reg1	

1
	cmpq $Foo_vtable, 0(%reg0)	
	je .Bazz.new_4	

1
	jmp .Bazz.new_6	
.Bazz.new_6:	

1
	sete %r8b	
	jne .Matrix.set_28	

1
	jmp .Main.main_122	
.Main.main_121:	

1
	movq %reg0, 64(%reg1)	
	movq 32(%reg1), %reg2	

1
	jmp .Bar.new_11	
.Bar.new_9:	

1
	.string "List"	
.string2:	

1
	negl %r8d	
	subl %r8d, %eax	

1
	movq $.string14, %rdi	
	movq %reg1, %reg2	

1
	movq %reg0, %rax	
.Main.main_171:	

1
	movq 64(%reg0), %reg0	
	movq 24(%reg1), %reg2	

1
	movq %reg0, %reg1	
.Main.main_159:	

1
	subl %edi, %reg1	
	movq -88(%rbp), %reg3	

1
	call Complex.new	
	cmpl $0, %reg0	

1
	movq %rdi, 712(%reg1)	
	movq $3000, %rdi	

1
	je .Main.main_9	
	movq %reg0, %rax	

1
	movq -56(%rbp), %reg1	
	imull %reg1d	

1
	.size DicNode.setNext, .-DicNode.setNext	
	.globl List.getHead	

1
	movq %reg0, %r8	
	cmpl %r8d, %ecx	

1
	addl %reg0, %reg1	
	movq $18119, %reg2	

1
	je .Main.main_167	
	movq $145, %reg0	

1
	movq -96(%rbp), %rax	
	subl %ecx, %eax	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_48	

1
	movq %rsi, %rbx	
	movq $.string7, %reg2	

1
	je .Main.main_59	
	movq %reg0, %reg1	

1
	movq %rax, %r9	
	movq %r13, %rax	

1
	movq $25241, %rax	
	movq $13257, %reg1	

1
ListNode.init:	
	pushq %rbp	

1
	movq %reg0, %r12	
	movq $1, %r15	

1
	movq -32(%rbp), %rdx	
	movq %rdx, -104(%rbp)	

1
	movq -168(%rbp), %reg1	
	movq -40(%rbp), %rdi	

1
	cmpq $Object_vtable, 0(%rsi)	
	je .Main.func_2	

1
	movq -112(%rbp), %rax	
	movq -104(%rbp), %reg3	

1
	testq $1, %r13	
	je .Main.main_60	

1
	movq %r12, %rax	
	movq 8(%reg2), %r14	

1
	movq $3000, %reg0	
	movq %reg0, 104(%reg1)	

1
	movq $12, %r9	
	movq -112(%rbp), %reg2	

1
	movq 16(%reg0), %rdi	
	cmpl %reg2, %eax	

1
	movq 0(%reg0), %reg0	
	movq 16(%reg0), %reg0	

1
	movq 336(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 520(%rax)	

1
	movq 16(%rax), %rdi	
	addl %reg2, %edi	

1
	movq %reg0, %reg1	
	movq $.string6, %rbx	

1
	subl %reg0, %edi	
	movq $18310, %reg2	

1
.Main.main_5:	
	popq %reg0	

1
	movq %r15, %reg1	
	movq %r13, %reg3	

1
	jne .Main.main_152	
	movq -72(%rbp), %rax	

1
	jge .Main.main_121	
	movq %reg0, %rax	

1
	.type List.sort, @function	
List.sort:	

1
	movq %reg0, 96(%reg1)	
	movq $3000, %reg0	

1
.Main.main_1:	
	movq $5, %rdi	

1
	movq $6, %reg0	
	movq $.string1_l, %rdi	

1
	je .Main.func_5	
	cmpq $Int_vtable, 0(%reg0)	

1
	subl %edi, %eax	
	movq %reg2, -176(%rbp)	

1
.Main.main_15:	
	movq 0(%reg0), %r15	

1
	testq $1, %rdi	
	je .Matrix.set_66	

1
.Main.main_113:	
	movq -144(%rbp), %rsi	

1
	testq $1, %r9	
	je .Main.main_123	

1
	movq %rdi, 296(%reg1)	
	movq $3000, %rdi	

1
	movq -48(%rbp), %rax	
	movq %rcx, %r8	

1
	movq 8(%rax), %rdx	
	movq 0(%rdx), %rbx	

1
.Main.main_32:	
	movq $.string9, %reg0	

1
	movq %r12, %rsi	
	cmpl %esi, %eax	

1
	je .Main.main_117	
	movq %r15, %rax	

1
	call *%rbx	
	movq %reg1, %rbx	

1
	movq -40(%rbp), %rdx	
	movq %rdx, -184(%rbp)	

1
	movq -144(%rbp), %reg1	
	movq -184(%rbp), %rcx	

1
	testq $1, %reg0	
	jne .Main.funcwhileb_2	

1
	movq %reg0, 24(%rbx)	
	movq 8(%rbx), %reg0	

1
	movq $147, %reg0	
	movq $.string5_l, %rdi	

1
	je .Main.main_19	
	movq $10, %rsi	

1
	imull %esi	
	movq -40(%rbp), %rsi	

1
	call *%r12	
	movq 680(%rbx), %rax	

1
	jne .Matrix.get_49	
	movq 160(%rax), %rax	

1
	.size Foo.x, .-Foo.x	
	.globl Foo.y	

1
	movq %rbx, %reg1	
	jmp .Razz.new_6	

1
	movq %rdi, 632(%reg1)	
	movq $3000, %rdi	

1
	movq -96(%rbp), %rax	
	subl %reg2, %esi	

1
.Matrix.get_38:	
	cdq	

1
	movq -64(%rbp), %rdi	
	negl %edi	

1
	movq $2, %rsi	
	imull %reg1	

1
	movq 40(%r15), %r15	
	movq %rax, %rdi	

1
	movq -16(%rbp), %reg1	
	imull %ecx	

1
.Main.new_11:	
	movq 32(%reg0), %reg1	

1
	movq $Bar_vtable, 0(%rax)	
	leave	

1
.Matrix.get_40:	
	movq $5, %reg0	

1
	movq -128(%rbp), %reg1	
	movq -152(%rbp), %reg3	

1
	movq -16(%rbp), %reg1	
	subl %reg2, %esi	

1
	movq -24(%rbp), %rax	
	subl %edi, %eax	

1
.Main.main_11:	
	movq -128(%rbp), %rax	

1
List.car:	
	pushq %rbp	

1
	testq $1, %reg0	
	je .Razz.new_18	

1
	subl %reg0, %eax	
	movq %reg2, -144(%rbp)	

1
	movq %rdi, 136(%rax)	
	movq %rdi, %rax	

1
	imull %reg0	
	movq -144(%rbp), %reg2	

1
	movq %rdi, %reg1	
	movq $.string19, %reg2	

1
	negl %reg0	
	movq %reg1, 16(%rax)	

1
	movq $98, %reg0	
	movq $.string3_l, %rdi	

1
	movq -48(%rbp), %rax	
	movq -48(%rbp), %reg2	

1
	idivl %r11d	
	movq -144(%rbp), %reg2	

1
	movq -184(%rbp), %rax	
	subl %reg2, %esi	

1
	call *%reg0	
	movq 184(%rbx), %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 328(%rax)	

1
	movq $.string6, %rax	
	movq $.string7, %rbx	

1
	jmp .A2I.a2i_6	
.A2I.a2i_5:	

1
	movq $12, %r8	
	movq -16(%rbp), %rax	

1
	jne .Main.main_2	
	movq %r12, %reg1	

1
	movq $3000, %reg0	
	movq %reg0, 272(%reg1)	

1
.Main.new_4:	
	movq %rax, 8(%rbx)	

1
	movq $2730, %rax	
	movq -8(%rbp), %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 648(%rax)	

1
	movq -56(%rbp), %reg1	
	movq -96(%rbp), %rsi	

1
	cmpq $Int_vtable, 0(%reg0)	
	je .Main.new_3	

1
	je .Main.main_30	
	movq $10, %rsi	

1
.Main.main_6:	
	movq 0(%rbx), %rax	

1
	je .Main.main_124	
	movq -32(%rbp), %reg1	

1
	call *%reg0	
	movq $18391, %reg1	

1
	movq $0, %r14	
	cmpl %r14d, %reg1d	

1
	movq $8022, %reg0	
	negl %eax	

1
	jmp .Matrix.mul_1	
.Matrix.mul_2:	

1
	.quad .string6_l	
	.quad 52	

1
	movq %reg0, %reg1	
	movq $14461, %reg0	

1
.Main.main_139:	
.Main.main_137:	

1
	ret	
	.size Nil.sort, .-Nil.sort	

1
	call *%reg0	
	movq 424(%reg1), %rax	

1
	movq $.string10, %r12	
	movq 0(%reg1), %rax	

1
	.globl List.getHead	
	.type List.getHead, @function	

1
	addl %esi, %reg1	
	movq -160(%rbp), %reg3	

1
	movq $2143, %rdi	
	addl %reg1, %reg2	

1
	addl %edi, %eax	
	movq $222, %rdi	

1
.Main.main_127:	
	movq %reg0, %rsi	

1
	movq -48(%rbp), %rsi	
	movq -56(%rbp), %rax	

1
	movq $48985, %rax	
	movq 0(%reg1), %r12	

1
	negl %eax	
	movq $58688, %rbx	

1
	call *%reg0	
	movq $0, %r14	

1
	movq $25185, %reg0	
	addl %reg1, %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 232(%reg1)	

1
	movq %rax, %reg1	
	movq $1317, %rax	

1
	movq %reg0, %rax	
	jmp .Razz.new_17	

1
	movq %reg0, %r12	
	jmp .Main.main_38	

1
	movq 296(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq -96(%rbp), %reg1	
	movq %r15, %reg3	

1
	movq %reg0, 472(%reg1)	
	movq $3000, %reg0	

1
	imull %reg0	
	movq $9556, %reg1	

1
	call *%rax	
.Main.main_22:	

1
	movq %rdi, %r13	
	movq 0(%reg2), %rax	

1
	subl %eax, %edi	
	movq -32(%rbp), %rax	

1
	subl %reg0, %eax	
	movq %r13, %reg3	

1
	movq $48557, %reg0	
	negl %eax	

1
	movq $.string14, %rdi	
	movq %rbx, %reg2	

1
	movq -88(%rbp), %reg1	
	movq %rdi, %reg3	

1
	movq 144(%rax), %rax	
	movq 16(%reg1), %rdi	

1
.Main.main_13:	
	movq 0(%rax), %r13	

1
	movq %reg0, 8(%reg1)	
	movq $.string7, %reg0	

1
	movq $9556, %reg0	
	cmpl %reg1, %eax	

1
	call out_error	
.DicNode.get_6:	

1
	addl %edi, %reg1	
	movq %rax, 56(%rbx)	

1
	movq %rsi, %r12	
	movq 0(%rax), %rbx	

1
	movq -120(%rbp), %reg1	
	movq -168(%rbp), %reg3	

1
	.quad A2I.i2a	
	.quad A2I.i2a_aux	

1
	movq -120(%rbp), %reg1	
	addl %ecx, %esi	

1
	movq -80(%rbp), %rax	
	cmpl %eax, %esi	

1
	movq $2, %reg0	
	movq 8(%reg1), %rsi	

1
	testq $1, %rax	
	je .Main.main_59	

1
	movq %rdi, 8(%rax)	
	movq $3000, %rdi	

1
	sete %cl	
	jne .Matrix.set_23	

1
	movq %reg0, %reg1	
	movq $20995, %reg0	

1
	call *%reg0	
	movq 608(%reg1), %reg0	

1
	cmpl %r15d, %r14d	
	sete %r15b	

1
	movq %r13, %reg1	
	pushq %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 192(%rax)	

1
	setl %reg0l	
	jge .Main.main_29	

1
	movq $10809, %reg0	
	subl %reg1, %r8d	

1
	movq -72(%rbp), %reg1	
	movq -72(%rbp), %reg2	

1
	addl %eax, %reg1	
	movq $30018, %reg2	

1
	movq %reg0, %reg1	
	movq -120(%rbp), %rax	

1
	jne .Main.main_152	
	movq %reg0, %reg1	

1
	movq 48(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq -104(%rbp), %reg1	
	subl %esi, %reg3	

1
	jne .A2I.i2c_5	
	movq $.string9, %rax	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_42	

1
	xorq $1, %rax	
	jmp .Main.main_130	

1
	movq $15469, %reg0	
	movq %reg0, %reg1	

1
	je .Razz.new_14	
	movq $26, %rsi	

1
	movq $29524, %reg0	
	movq 0(%rbx), %rax	

1
	call *%rax	
	movq 704(%reg1), %r12	

1
.Main.main_84:	
	movq %reg0, %reg1	

1
.Main.func_3:	
	movq 0(%rbx), %reg1	

1
	movq %rax, %reg1	
	jmp .Main.main_49	

1
	movq $3828, %rsi	
	movq $0, %reg1	

1
	movq $26355, %rax	
	movq 0(%rbx), %reg2	

1
	subl %reg0, %r10d	
	movq $61569, %rax	

1
	movq $3000, %reg0	
	movq %reg0, 576(%rax)	

1
	movq %rdi, 368(%rax)	
	movq $3000, %rdi	

1
	cmpq $Object_vtable, 0(%rdi)	
	je .Main.out_whatever_2	

1
	movq $45379, %reg0	
	subl %reg1, %reg2	

1
	movq $1, %rdi	
	addl %edi, %esi	

1
	jne .Matrix.set_8	
	movq %rdi, 32(%rax)	

1
	jge .Main.main_146	
	movq %reg0, %rax	

1
	xorq $1, %reg0	
	jmp .Main.main_143	

1
.string2_l:	
	.string "List"	

1
	idivl %reg0	
	movq $43856, %reg1	

1
	jne .Matrix.set_43	
	movq %rdi, 136(%reg1)	

1
	movq $36212, %reg0	
	negl %reg1	

1
	movq %r10, %reg1	
	movq $17594, %r10	

1
	movq 456(%rbx), %r12	
	movq 0(%rbx), %rax	

1
Nil.sort:	
	pushq %reg0	

1
	call *%reg0	
	movq 328(%rbx), %rax	

1
	call out_error	
.Main.main_142:	

1
.Main.main_8:	
	movq 0(%r13), %r15	

1
.Main.main_4:	
	movq $0, %r13	

1
	movq $29252, %rcx	
	negl %ecx	

1
Razz_vtable:	
	.quad .string2	

1
	movq 128(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	je .Main.main_72	
	movq $228, %rsi	

1
	je .Main.main_55	
	movq %reg0, %reg1	

1
	imull %ecx	
	movq %rbx, %rcx	

1
	call *%r15	
	movq -168(%rbp), %reg2	

1
.Matrix.get_14:	
	movq $3, %reg0	

1
	movq -88(%rbp), %rax	
	movq %reg2, %rcx	

1
	.type A2I.new, @function	
A2I.new:	

1
	movq $2, %rax	
	movq %r13, %reg2	

1
.Main.main_9:	
	popq %reg0	

1
	movq $.string17, %rdi	
	movq %rdi, %reg1	

1
	movq $12, %rcx	
	movq -56(%rbp), %rax	

1
	movq -40(%rbp), %rdi	
	subl %eax, %reg3	

1
	imull %reg0	
	movq %rax, -152(%rbp)	

1
	movq $42968, %rdi	
	imull %edi	

1
	testq $1, %reg0	
	je .DicNode.insert_4	

1
	movq %rdi, %reg1	
	movq %rbx, %reg1	

1
Complex.equal:	
	pushq %rbp	

1
	movq 8(%reg0), %rax	
	popq %r14	

1
.Main.main_56:	
	movq 0(%reg0), %reg1	

1
	movq 0(%r14), %reg1	
	movq 80(%reg1), %reg1	

1
	testq $1, %rax	
	je .Main.func_1	

1
	je .Main.main_3	
	movq $0, %rax	

1
	movq %reg0, %reg1	
	jmp .Main.main_101	

1
	movq $30215, %rax	
	subl %eax, %reg2	

1
	movq %reg0, %rax	
	cmpl $0, 8(%reg2)	

1
	movq $62723, %reg0	
	negl %reg0d	

1
	movq 72(%reg0), %reg0	
	movq 16(%reg1), %reg2	

1
	movq $16280, %rsi	
	imull %reg1	

1
	movq $name_Bool, %reg0	
	movq %reg0, %reg1	

1
	movq $3000, %rdi	
	movq %rdi, 560(%rax)	

1
	movq %reg0, -16(%rbp)	
	movq $46509, %reg2	

1
	movq %reg0, %reg1	
.Main.main_7:	

1
	je .Main.main_82	
	movq $27, %reg0	

1
	movq %r15, %rax	
	movq -48(%rbp), %reg3	

1
	movq 0(%reg0), %r12	
	movq 152(%r12), %r12	

1
.A2I.a2i_5:	
	movq 0(%rbx), %rax	

1
.Main.main_3:	
	movq 8(%reg0), %reg0	

1
.Main.main_37:	
	movq 0(%reg0), %rax	

1
	.globl Cons.sort	
	.type Cons.sort, @function	

1
	je .Main.main_187	
	movq $316, %reg0	

1
	movq $3000, %rdi	
	movq %rdi, 312(%reg1)	

1
	movq -16(%rbp), %rdi	
	imull %reg2	

1
.Main.main_10:	
	movq $.string8, %r12	

1
	subl %esi, %reg1	
	cmpl %reg1, %reg2	

1
	.quad ListNode.push	
	.quad ListNode.setVal	

1
	negl %reg0	
	movq $2951, %reg1	

1
	movq 672(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	je .Main.main_84	
	movq $61, %reg0	

1
	ret	
	.size Foo.getS, .-Foo.getS	

1
	subl %eax, %reg1	
	movq %rdi, -32(%rbp)	

1
	je .Main.main_51	
	movq $203, %rsi	

1
	cmpq $IO_vtable, 0(%rax)	
	je .Main.main_7	

1
	movq $name_Bool, %reg0	
	movq %reg0, %rdi	

1
	.size Cons.new, .-Cons.new	
	.globl Main.new	

1
	movq $0, %reg0	
	movq %reg0, 728(%rax)	

1
	jmp .Main.main_167	
.Main.main_94:	

1
	movq %reg0, %rax	
.Main.main_166:	

1
	movq %rdi, %rax	
	jmp .Main.main_87	

1
	je .Main.main_108	
	movq $67, %reg0	

1
	movq -88(%rbp), %reg1	
	addl %eax, %esi	

1
	movq $3000, %reg0	
	movq %reg0, 656(%rax)	

1
	addl %reg0, %reg1	
	movq $36010, %rdi	

1
	movq $.string10, %reg0	
	movq 8(%reg1), %r15	

1
.Main.main_80:	
	movq -128(%rbp), %rsi	

1
	movq 152(%r14), %r14	
	movq %reg1, %rdi	

1
	movq %r8, %rax	
	movq -176(%rbp), %r8	

1
	movq %rdi, %reg1	
	movq %r12, %r13	

1
	testq $1, %rdi	
	je .Main.func_2	

1
	movq $22, %rsi	
	movq $.string3_l, %reg1	

1
	jne .Matrix.set_45	
	movq %reg0, 144(%reg1)	

1
	call *%reg0	
	jmp .Main.main_26	

1
	jge .Main.main_3	
	movq $2, %rdi	

1
	sete %sil	
	jne .A2I.i2a_1	

1
	testq $1, %r8	
	je .Main.main_182	

1
.Main.main_13:	
	movq 0(%reg0), %r13	

1
	movq $empty_string, %r12	
	movq %r12, %rdi	

1
	movq 16(%rbx), %rax	
	movq %reg2, %rdi	

1
	movq 536(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq $48027, %reg0	
	movq 0(%rbx), %reg2	

1
	jge .Main.main_5	
	movq $.string7, %reg0	

1
	movq 104(%rax), %rax	
	jmp .Matrix.get_33	

1
	movq %r13, %reg1	
	movq -80(%rbp), %rdi	

1
	sete %sil	
	jne .Matrix.get_23	

1
	movq $16420, %reg0	
	negl %esi	

1
	addl %reg0, %reg1	
	movq $2, %rax	

1
	movq $132, %rsi	
	movq $.string3_l, %rdi	

1
	addl %eax, %edi	
	movq %rbx, %rax	

1
	je .Main.main_48	
	movq $34, %reg0	

1
	imull %reg0	
	movq $29789, %rsi	

1
	.quad Main.funccaseb	
	.quad Main.funcifi	

1
	sete %cl	
	jne .A2I.i2c_9	

1
.Main.main_25:	
	movq 0(%r13), %rax	

1
	movq $3000, %rdi	
	movq %rdi, 160(%rax)	

1
	movq $0, %rdi	
	movq %rdi, 288(%reg1)	

1
	movq $3000, %reg0	
	movq %reg0, 184(%rax)	

1
	movq 56(%rax), %rax	
	movq -32(%rbp), %rdi	

1
	call *%r12	
	movq $1, %rbx	

1
	je .Main.main_8	
	movq 0(%reg0), %rax	

1
	call String.substr	
	popq %r12	

1
	call *%reg0	
	movq 144(%rbx), %reg0	

1
	movq -16(%rbp), %rax	
	movq %rdi, %reg3	

1
	movq -128(%rbp), %rax	
	movq -40(%rbp), %reg3	

1
	movq %rax, %r14	
	jmp .Matrix.mul_3	

1
	movq %rdi, %rax	
	movq %rax, -96(%rbp)	

1
	movq %rdi, 360(%reg1)	
	movq $3000, %rdi	

1
	movq $33, %rax	
	movq $2, %reg1	

1
	call *%rax	
	movq 704(%rbx), %reg2	

1
	subl %reg0, %reg1	
	subl %reg1, %edi	

1
	negl %reg0	
	movq $17979, %reg1	

1
	movq -16(%rbp), %rax	
	cmpl %eax, %edi	

1
.Matrix.set_9:	
.Matrix.set_7:	

1
	movq %rax, %reg1	
	jmp .Main.main_5	

1
	movq $0, %rdi	
	movq %rdi, 728(%rax)	

1
	movq 48(%reg0), %reg0	
	movq 8(%rax), %reg2	

1
	movq -160(%rbp), %rax	
	movq -104(%rbp), %reg3	

1
	movq %reg0, %reg1	
	movq $.string9, %reg2	

1
	addl %esi, %reg1	
	movq %rdi, 16(%rax)	

1
	movq %reg0, 168(%rax)	
	movq $3000, %reg0	

1
	call out_error	
.A2I.i2a_aux_3:	

1
	movq -96(%rbp), %reg1	
	movq -48(%rbp), %r8	

1
.Main.main_4:	
	cmpl $0, %ebx	

1
	movq -160(%rbp), %reg1	
	movq %reg1, -128(%rbp)	

1
	movq 248(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	.quad 10	
percentlld_string_l:	

1
	jge .Main.main_138	
	movq %r12, %reg1	

1
	imull %r12d	
	subl %reg1, %reg2	

1
	.string "ERROR: %lld: Exception: stack overflow\n"	
.string7:	

1
	movq $1823, %rax	
	movq $177, %reg1	

1
Nil.insert:	
	pushq %reg0	

1
.string10_l:	
	.string "O"	

1
	movq $100, %rsi	
	movq $.string2_l, %reg1	

1
	jmp .A2I.i2c_2	
.A2I.i2c_1:	

1
	call *%r12	
	movq 88(%reg1), %rax	

1
	movq %rax, 8(%reg1)	
	call Bar.new	

1
	movq -64(%rbp), %r8	
	subl %r8d, %eax	

1
	testq $1, %reg0	
	jne .Main.main_8	

1
	movq 368(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	.quad Object.type_name	
	.quad A2I.c2i	

1
	movq -16(%rbp), %rax	
	movq %rdi, %rsi	

1
	je .Main.main_89	
	movq $64, %rsi	

1
	movq %reg0, %rbx	
	movq %rbx, %r12	

1
	movq $5, %rax	
	movq $4, %reg1	

1
	movq $29524, %r12	
	movq 0(%rbx), %reg2	

1
	movq $.string8, %reg0	
	movq 0(%rbx), %r12	

1
	movq %r12, %rsi	
	call String.cmp	

1
	movq $112, %reg0	
	movq $.string3_l, %rdi	

1
	.type Dictionary.getHead, @function	
Dictionary.getHead:	

1
	je .Main.main_9	
	cmpl %edi, %esi	

1
.Main.main_16:	
.Main.main_14:	

1
	idivl %reg0	
	movq %rax, -16(%rbp)	

1
	movq 112(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
.Main.main_141:	
.Main.main_139:	

1
	movq %rdi, %rax	
	movq 48(%reg2), %rsi	

1
	movq %rax, -16(%rbp)	
	call List.new	

1
	imull %reg0	
	movq %rax, %r14	

1
.Main.main_6:	
	movq $.string14, %r12	

1
.Main.main_22:	
	movq -16(%rbp), %rbx	

1
	movq $3000, %reg0	
	movq %reg0, 256(%reg1)	

1
	movq $98, %reg0	
	movq $.string3_l, %reg1	

1
	movq -176(%rbp), %rdi	
	movq %reg2, %reg3	

1
	movq 96(%r14), %r14	
	movq %rbx, %rdi	

1
	movq 136(%reg0), %reg0	
	movq 16(%reg1), %rdi	

1
	movq $0, %reg0	
	movq %reg0, 544(%rax)	

1
.List.insert_2:	
	movq 0(%rax), %r13	

1
	movq $24320, %reg0	
	movq $3520, %r9	

1
	call *%reg0	
	movq -16(%rbp), %rbx	

1
	movq $43177, %rdi	
	subl %reg1, %eax	

1
	.quad DicNode.new	
	.quad Object.abort	

1
	movq $3000, %reg0	
	movq %reg0, 600(%rax)	

1
	movq %rdi, %reg1	
.Main.main_159:	

1
	jne .Matrix.set_4	
	movq %reg0, 16(%reg1)	

1
.Main.funcwhilei_2:	
	movq 0(%reg0), %reg1	

1
	call *%rax	
	movq 592(%reg1), %rax	

1
	movq %reg0, %reg1	
	movq $100, %rax	

1
	movq 16(%rax), %rdi	
	subl %reg2, %edi	

1
	movq -40(%rbp), %rdi	
	subl %reg2, %edi	

1
	jg .Main.main_15	
	movq $1, %reg0	

1
	idivl %r11d	
	movq -144(%rbp), %r10	

1
	call *%rax	
	movq $14352, %rdi	

1
	subl %eax, %esi	
	movq -152(%rbp), %rax	

1
	call *%reg0	
	movq 656(%rbx), %r12	

1
	je .Main.main_4	
	movq $0, %rax	

1
	movq $127, %reg0	
	movq $.string5_l, %reg1	

1
.Main.main_6:	
	cmpl $0, %eax	

1
	movq $.string7, %reg0	
	movq %rax, %reg2	

1
.Main.main_15:	
	movq %reg0, %reg1	

1
.Main.fib_1:	
	movq $1, %rdi	

1
	je .DicNode.get_3	
	movq $0, %reg0	

1
	movq $15735, %rax	
	movq $932, %r9	

1
	movq $0, %rdi	
	movq %rdi, 624(%reg1)	

1
	je .Foo.new_13	
	movq $10, %rsi	

1
	movq %reg0, 408(%reg1)	
	movq $3000, %reg0	

1
	movq -56(%rbp), %rdi	
	movq -16(%rbp), %rax	

1
	addl %eax, %reg1	
	movq $25947, %rsi	

1
.Main.main_152:	
	movq -48(%rbp), %reg1	

1
	je .Main.main_33	
	cmpl $0, %reg0d	

1
	movq -16(%rbp), %rsi	
	movq %r14, %rax	

1
	movq %reg0, %reg1	
	jmp .Main.main_54	

1
	movq -168(%rbp), %reg1	
	addl %reg2, %eax	

1
	setl %reg0	
	jge .Main.main_29	

1
	movq 256(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
.Main.main_7:	
	movq 8(%rbx), %rdx	

1
	call *%reg0	
	movq 224(%rbx), %reg0	

1
	movq %reg0, 8(%reg1)	
	jmp .Main.main_26	

1
	movq -176(%rbp), %rax	
	addl %reg2, %reg3	

1
	sete %reg0	
	jne .Matrix.get_19	

1
.Main.main_97:	
	cdq	

1
DicNode.setNext:	
	pushq %reg0	

1
	movq 24(%reg0), %rdi	
	movq %rbx, %rsi	

1
	movq -176(%rbp), %reg1	
	movq $0, %reg2	

1
	movq %rax, %r12	
	movq %rdi, %r13	

1
	je .Main.main_2	
	movq $13, %reg0	

1
	movq -48(%rbp), %rax	
	movq -56(%rbp), %rdi	

1
	call *%reg0	
	movq 320(%reg1), %rax	

1
.Main.main_2:	
	movq %r12, %r14	

1
	movq $34313, %r12	
	movq 0(%rbx), %reg2	

1
	movq %rax, -16(%rbp)	
	movq $57869, -24(%rbp)	

1
	je .CellularAutomaton.evolve_2	
	movq 0(%rbx), %rax	

1
	movq $31735, %reg0	
	imull %reg1	

1
	movq %reg0, %r9	
	movq -40(%rbp), %reg0	

1
	subl %edi, %eax	
	movq %reg2, -96(%rbp)	

1
	movq $20968, %reg0	
	movq %reg0, %reg1	

1
	.quad DicNode.getCount	
	.quad DicNode.incr	

1
.Main.main_12:	
	popq %reg0	

1
.Main.main_24:	
	popq %reg0	

1
	movq $23599, %rax	
	subl %eax, %edi	

1
	addl %reg0d, %eax	
	movq $53181, %reg0	

1
	movq %rbx, %rax	
	movq %rsi, %rcx	

1
	movq %reg0, %reg1	
	cmpl $0, 8(%rbx)	

1
	.globl DicNode.insert	
	.type DicNode.insert, @function	

1
	movq %reg0, 312(%rax)	
	movq $0, %reg0	

1
	.globl Dictionary.new	
	.type Dictionary.new, @function	

1
	movq %reg0, %reg1	
	movq $28147, %reg0	

1
	movq $3000, %rdi	
	movq %rdi, 688(%rax)	

1
	movq 24(%reg0), %reg1	
	addl %reg2, %eax	

1
	movq %rsi, %rdi	
	movq %reg2, %rdi	

1
	movq $0, %reg0	
	movq 16(%rax), %rdi	

1
	je .Main.main_6	
	cmpq $Main_vtable, 0(%reg0)	

1
	movq 648(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	movq $127, %rsi	
	movq $.string5_l, %reg1	

1
	.quad IO.out_string	
	.quad Main.iota	

1
	movq %reg0, 552(%reg1)	
	movq $0, %reg0	

1
	movq %rsp, %reg1	
	movq $744, %rdi	

1
	movq %rdi, %reg1	
	movq %reg1, -96(%rbp)	

1
	je .Main.main_41	
	movq $192, %reg0	

1
	je .List.cons_1	
	movq $32, %reg0	

1
.Main.main_11:	
	movq 0(%r12), %reg1	

1
	movq %r14, %r13	
	movq $0, %r14	

1
	movq $38915, %rdi	
	movq $0, %rsi	

1
	testq $1, %rcx	
	je .Main.main_19	

1
.Main.main_10:	
	jmp .Main.main_11	

1
	movq -32(%rbp), %reg1	
	addl %eax, %edi	

1
	movq $Baz_vtable, 0(%rax)	
	movq $0, %rdi	

1
	movq -40(%rbp), %rax	
	subl %eax, %reg3	

1
	movq %reg0, %rbp	
	movq $32, %rdi	

1
	movq $15, %reg0	
	movq %reg0, -48(%rbp)	

1
	call *%rbx	
	movq $21018, %rax	

1
	je .Main.main_12	
	movq $5, %reg0	

1
	jmp .Main.main_48	
.Main.main_46:	

1
	je .Main.main_87	
	movq $61, %rsi	

1
	movq $.string11, %reg0	
	popq %r12	

1
	.quad .string6_l	
	.quad 10	

1
	testq $1, %rcx	
	je .Main.main_73	

1
	movq %reg0, %reg1	
	movq $88, %rdi	

1
	movq %reg0, %r12	
	movq $1, %rdi	

1
	imull %reg0	
	movq $3850, %reg1	

1
	movq $Baz_vtable, 0(%reg0)	
	movq $0, %rdi	

1
	je .Main.main_62	
	movq $49, %rsi	

1
	call *%r12	
.Main.main_38:	

1
	movq 8(%rbx), %rax	
	movq %r12, %rdi	

1
	je .Main.main_190	
	movq $151, %reg0	

1
	movq $1, %reg0	
	movq %reg0, -32(%rbp)	

1
.Main.func_3:	
	movq 0(%reg0), %r12	

1
.Foo.new_2:	
	call Foo.new	

1
	je .Main.main_80	
	movq $61, %reg0	

1
CellularAutomaton.print:	
	pushq %reg0	

1
.Matrix.get_22:	
.Matrix.get_20:	

1
	movq -152(%rbp), %rax	
	movq -112(%rbp), %rsi	

1
	movq -144(%rbp), %reg1	
	movq -160(%rbp), %reg3	

1
	movq $3000, %rdi	
	movq %rdi, 384(%reg1)	

1
	movq %rdi, %reg1	
	movq $19369, %rdi	

1
	movq $0, %rdi	
	movq %rdi, 376(%reg1)	

1
	testq $1, %reg0	
	je .Main.iota_3	

1
	movq $3, %rdi	
	subl %reg1, %eax	

1
	subl %reg0d, %eax	
	movq $5411, %reg0	

1
	movq $0, %reg0	
	movq %reg0, 616(%rax)	

1
	movq 672(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
.Razz.new_10:	
	movq %rbx, %rax	

1
	je .Main.main_127	
	movq $70, %rsi	

1
	movq 8(%rax), %reg1	
	movq 0(%rax), %rbx	

1
	testq $1, %reg0	
	je .Matrix.set_53	

1
	movq %rax, %reg1	
	movq $.string10, %reg2	

1
	addl %esi, %eax	
	movq -96(%rbp), %rsi	

1
	call *%rax	
	movq -136(%rbp), %rbx	

1
	imull %esi	
	movq $43617, %rsi	

1
	call *%r12	
	movq 672(%rbx), %rax	

1
	movq 40(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq $14356, %reg0	
	subl %reg1, %reg2	

1
	testq $1, %reg0	
	je .Main.funccase_1	

1
	movq -144(%rbp), %reg1	
	movq -40(%rbp), %reg3	

1
.Main.new_4:	
	movq 16(%rbx), %reg1	

1
	testq $1, %rdi	
	je .Main.new_1	

1
	movq $12, %rsi	
	movq -152(%rbp), %reg2	

1
	movq -88(%rbp), %reg1	
	subl %eax, %ecx	

1
	subl %eax, %reg1	
	movq -32(%rbp), %rax	

1
	call Bar.new	
	movq %reg0, -16(%rbp)	

1
	movq -80(%rbp), %reg1	
	movq -112(%rbp), %rdi	

1
	movq %reg0, %rax	
	popq %r14	

1
.Main.main_9:	
	cmpq $String_vtable, 0(%rax)	

1
	movq $1000, %rax	
	movq %rax, 32(%rbx)	

1
.Main.main_4:	
	movq %reg0, %r12	

1
	movq $14461, %rdi	
	movq $15505, %reg1	

1
	je .Main.main_22	
	cmpq $Bar_vtable, 0(%reg0)	

1
	.size Bazz.printh, .-Bazz.printh	
	.globl Bazz.doh	

1
	movq $0, %reg0	
	movq %reg0, 208(%reg1)	

1
	movq %reg0, %rdi	
	movq $9508, %reg0	

1
	movq %rdi, %reg1	
	movq -136(%rbp), %rdi	

1
.Main.out_whatever_6:	
	movq 0(%rax), %reg1	

1
	call *%r15	
	movq -128(%rbp), %reg2	

1
	movq 288(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	je .Main.main_17	
	movq $23, %rsi	

1
	addl %reg0, %reg1	
	movq -80(%rbp), %rsi	

1
	call Matrix.new	
	movq %reg0, %r13	

1
.A2I.i2c_15:	
	movq $8, %rcx	

1
	movq -184(%rbp), %r9	
	subl %r9d, %reg2	

1
	movq $49656, %rax	
	negl %eax	

1
	movq %rbx, %rax	
	jmp .Bar.new_6	

1
	call *%reg0	
	movq 592(%rbx), %reg0	

1
	movq -72(%rbp), %reg1	
	addl %ecx, %eax	

1
.Cons.sort_1:	
	movq 16(%reg0), %reg1	

1
	movq -32(%rbp), %rsi	
	movq -152(%rbp), %rax	

1
.Main.main_146:	
	movq -168(%rbp), %rax	

1
.Main.main_1:	
	movq $130, %rdi	

1
	je .Main.main_25	
	movq $10, %rsi	

1
	movq %rdi, 248(%rax)	
	movq $0, %rdi	

1
	movq -112(%rbp), %rax	
	subl %esi, %reg3	

1
	movq $18429, %r9	
	movq $52820, %reg1	

1
	movq %reg0, %r12	
	movq $.string10, %rax	

1
	.size ListNode.init, .-ListNode.init	
	.globl ListNode.get	

1
	movq %rax, %rsi	
	cmpl %reg2, %reg3	

1
	call *%r14	
	movq %reg1, %rax	

1
	idivl %r14d	
	movq %rax, %reg2	

1
	call *%r12	
	movq 504(%rbx), %r12	

1
	movq $2, %rcx	
	movq 8(%rax), %rsi	

1
	jne .A2I.i2c_9	
	movq $.string11, %rax	

1
	movq -40(%rbp), %reg1	
	subl %eax, %r8d	

1
	testq $1, %rsi	
	je .Main.main_107	

1
	cmpq $Razz_vtable, 0(%reg0)	
	je .Razz.new_3	

1
	ret	
	.size CellularAutomaton.new, .-CellularAutomaton.new	

1
	movq $33158, %reg0	
	movq $0, %reg1	

1
	movq %rdi, 104(%rax)	
	movq $3000, %rdi	

1
	.size _main, .-_main	
	.globl Baz.main	

1
	imull %esi	
	movq $24923, %reg1	

1
	call *%rax	
	movq 160(%rbx), %rax	

1
	movq $61456, %reg0	
	cmpl %reg1, %reg2	

1
	movq $16, %reg0	
	movq $.string2_l, %reg1	

1
	.quad 5	
name_String_l:	

1
	call *%rax	
	movq 128(%rbx), %r12	

1
	movq 696(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
.Main.main_11:	
	movq 0(%reg0), %rax	

1
	movq $13, %reg0	
	movq 0(%reg1), %rax	

1
	movq $3233, %r9	
	movq $26083, %rax	

1
	movq -80(%rbp), %rax	
	addl %eax, %esi	

1
.string1_l:	
	.string "Dictionary"	

1
	movq $3000, %rdi	
	movq %rdi, 616(%reg1)	

1
	movq %rbx, %rax	
	imull %esi	

1
	movq 664(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	addl %eax, %edi	
	movq $37073, %reg2	

1
	subl %reg0, %eax	
	movq %reg2, %r13	

1
	movq %reg0, %rax	
	jmp .Matrix.set_59	

1
	cmpq $IO_vtable, 0(%reg0)	
	je .Main.out_whatever_2	

1
	je .Main.main_32	
	movq $16, %reg0	

1
	testq $1, %rbx	
	je .Main.main_75	

1
	testq $1, %r9	
	je .Main.main_110	

1
	testq $1, %rcx	
	je .Main.main_165	

1
	movq %reg0, 240(%rax)	
	movq $0, %reg0	

1
	movq $18841, %reg0	
	movq $54759, %rsi	

1
	movq $32151, %rax	
	movq 0(%rbx), %reg2	

1
	call *%r12	
	movq 576(%rbx), %rax	

1
	movq %rdi, 592(%rax)	
	movq $3000, %rdi	

1
	je .Main.funccase_1	
	movq $22, %reg0	

1
	movq 248(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
.Main.main_143:	
	cdq	

1
	negl %reg0	
	movq -88(%rbp), %rdi	

1
	jne .A2I.i2c_19	
	movq $.string16, %reg0	

1
	call *%r12	
	movq 256(%rbx), %r12	

1
	jne .A2I.i2c_15	
	movq $.string14, %reg0	

1
	movq %rdi, %reg1	
	jmp .Main.main_65	

1
	movq 144(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
Foo.setS:	
	pushq %reg0	

1
	movq $12, %r8	
	movq -16(%rbp), %reg2	

1
	movq 16(%reg0), %reg1	
	cmpl %eax, %reg3	

1
	movq 456(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
.ListNode.push_1:	
	movq 8(%reg0), %rdx	

1
	setle %reg0l	
	jg .Main.main_147	

1
	movq $22130, %reg0	
	movq $60913, %reg1	

1
	movq $3000, %reg0	
	movq %reg0, 320(%reg1)	

1
	movq $2, %rdi	
	addl %reg1, %reg2	

1
	call Int.new	
	movq %rax, %reg1	

1
	movq -104(%rbp), %reg1	
	cmpl %eax, %reg3	

1
	movq -168(%rbp), %reg1	
	movq -48(%rbp), %rdi	

1
	jmp .Bazz.new_6	
.Bazz.new_4:	

1
	movq $4, %r13	
	movq %reg1, %reg2	

1
.Main.main_34:	
.Main.main_32:	

1
	movq $60750, %reg0	
	movq 0(%reg1), %reg2	

1
.Main.main_144:	
	movq %reg0, %reg1	

1
	je .Main.main_63	
	movq $17, %reg0	

1
	movq %reg0, %rbx	
	movq $2, %r12	

1
	cmpq $IO_vtable, 0(%reg0)	
	je .Main.main_15	

1
	je .Foo.new_3	
	cmpq $Bazz_vtable, 0(%reg0)	

1
	je .Main.print_list_5	
	movq $112, %rsi	

1
	movq %r12, %rdi	
	imull %reg2	

1
	movq $.string6, %reg0	
	movq $empty_string, %reg1	

1
	movq %rcx, %rax	
	negl %eax	

1
	movq $62, %reg0	
	movq $.string2_l, %reg1	

1
	movq 8(%reg0), %reg1	
	movq 0(%reg2), %rax	

1
	movq %rax, %reg1	
	movq -184(%rbp), %rsi	

1
	movq %reg0, %rax	
	movq -16(%rbp), %rax	

1
.Matrix.set_17:	
	movq $3, %r8	

1
	call *%r12	
	movq 440(%reg1), %reg2	

1
	movq %r12, %rdi	
	imull %edi	

1
.A2I.c2i_15:	
	movq $.string15, %rdi	

1
	call String.length	
	movq %reg0, %r13	

1
	movq 80(%reg0), %reg1	
	testq $1, %reg1	

1
.A2I.c2i_1:	
	movq $.string8, %rdi	

1
	jg .Main.main_84	
	movq -168(%rbp), %rax	

1
	movq $80, %reg0	
	movq $.string4_l, %reg1	

1
	movq $3000, %reg0	
	movq %reg0, 208(%rax)	

1
	movq 736(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	subl %eax, %reg1d	
	movq $12, %r9	

1
	movq $1170, %reg0	
	movq $33472, %reg1	

1
	movq $50998, %rax	
	addl %eax, %edi	

1
	movq -16(%rbp), %rdi	
	subl %edi, %eax	

1
	sete %reg0	
	jne .A2I.i2c_11	

1
	jg .Main.main_13	
	movq $1, %reg0	

1
	movq $15469, %reg0	
	movq %reg0, %rsi	

1
	movq %rax, 24(%rbx)	
.Main.new_3:	

1
	movq 8(%rax), %rdx	
	movq 0(%rdx), %r12	

1
	movq $19020, %rsi	
	movq $0, %reg1	

1
	jge .Main.new_10	
	movq 16(%rbx), %rax	

1
	movq %rsp, %reg1	
	movq 16(%rdi), %reg3	

1
	movq %reg0, %rsi	
	addl %esi, %edi	

1
	movq %rsi, %r12	
	movq $1, %rdi	

1
	movq $18781, %rcx	
	imull %ecx	

1
	idivl %ecx	
	movq $58210, %rsi	

1
	movq %rax, %rbx	
	movq %reg2, %rax	

1
	movq -144(%rbp), %reg1	
	imull %ecx	

1
	movq 24(%reg0), %rdi	
	sete %dil	

1
	movq 80(%rbx), %rax	
	testq $1, %rax	

1
	movq $.string6, %rax	
	movq %rbx, %rdi	

1
	subl %eax, %esi	
	movq -24(%rbp), %reg3	

1
	movq $CellularAutomaton_vtable, 0(%rax)	
	movq %rax, %rbx	

1
	movq %reg0, %rbx	
	movq 8(%reg2), %reg3	

1
	cmpq $Razz_vtable, 0(%rbx)	
	je .Bar.new_3	

1
.string17:	
	.quad String_vtable	

1
	movq $0, %rdi	
	movq %rdi, 328(%rax)	

1
	movq $11, %reg0	
	movq $.string1_l, %rdi	

1
	je .Main.main_44	
	movq $15, %reg0	

1
	addl %reg0, %reg1	
	movq $25947, %reg2	

1
	movq $24, %reg0	
	movq $.string1_l, %reg1	

1
	.type ListNode.setVal, @function	
ListNode.setVal:	

1
	movq %rdi, %rbx	
	movq %reg2, %r13	

1
	imull %reg0	
	movq $27696, %reg1	

1
	movq $1, %rax	
	movq $.string6, %reg1	

1
	je .Main.main_75	
	movq $19, %reg0	

1
	subl %reg0, %reg1	
	movq %r14, %reg3	

1
	movq %reg0, 48(%reg1)	
	cmpl %edi, %reg3	

1
	movq -168(%rbp), %rax	
	addl %reg2d, %reg3	

1
	subl %edi, %reg1	
	movq %rax, -152(%rbp)	

1
	movq %reg0, 312(%rax)	
	movq $3000, %reg0	

1
	je .Main.main_82	
	movq %reg0, %rax	

1
	idivl %reg0	
	movq $15755, %reg1	

1
	movq -56(%rbp), %rsi	
	cmpl %esi, %reg3	

1
	movq $5411, %reg0	
	addl %reg0d, %eax	

1
	movq 16(%reg0), %rax	
	addl %reg2, %eax	

1
	movq %rax, %reg1	
	movq 0(%reg2), %reg3	

1
	movq -24(%rbp), %rsi	
	movq -16(%rbp), %rax	

1
	movq $112, %rsi	
	movq $.string3_l, %rdi	

1
.Main.main_1:	
	movq $52, %reg0	

1
	movq %reg0, %r15	
	pushq %rax	

1
	movq -64(%rbp), %r8	
	subl %r8d, %reg2	

1
	movq %reg0, %rdi	
	movq -176(%rbp), %reg0	

1
	movq %reg0, %r12	
	call String.new	

1
	movq 24(%rbx), %rdi	
	movq %reg2, %rsi	

1
.Main.main_109:	
	movq %reg0, %rsi	

1
	movq 120(%r13), %r13	
	movq %rbx, %rdi	

1
	movq %r15, %reg1	
	call String.cmp	

1
	call out_error	
.Cons.print_list_1:	

1
	movq %r15, %reg1	
	negl %reg2	

1
.A2I.i2a_3:	
	movq $1, %rdi	

1
	movq %r13, 8(%reg1)	
	movq 0(%reg2), %reg1	

1
	je .Main.main_6	
	movq $89, %reg0	

1
	subl %reg0, %ecx	
	movq $43604, %reg2	

1
	setl %sil	
	jge .Main.main_138	

1
	je .Main.main_31	
	movq $10, %rsi	

1
	movq -144(%rbp), %reg1	
	negl %reg1d	

1
	movq -136(%rbp), %reg1	
	subl %reg2, %ecx	

1
	addl %edi, %reg1	
	movq %r14, %rdi	

1
	movq %reg0, 56(%rax)	
	movq %reg0, %rax	

1
	movq -16(%rbp), %rdi	
	movq -120(%rbp), %reg3	

1
	movq $12660, %rsi	
	negl %reg1	

1
	.string "hi"	
.string7:	

1
	movq $8937, %rax	
	movq $45402, %reg1	

1
	movq -104(%rbp), %reg1	
	movq -168(%rbp), %reg3	

1
	movq %reg0, %reg1	
	jmp .Razz.new_6	

1
	movq $64464, %rcx	
	movq $0, %reg1	

1
	jmp .Main.main_27	
.Main.main_25:	

1
	movq %rdi, %rax	
	movq 48(%reg2), %reg3	

1
	movq $46874, %rax	
	addl %reg1, %reg2	

1
	idivl %ecx	
	movq $20908, %rsi	

1
	testq $1, %r11	
	je .Main.main_39	

1
	testq $1, %reg0	
	je .Foo.new_13	

1
	movq %rdx, %reg1	
	movq $1, %reg2	

1
	movq %reg0, -8(%rbp)	
	movq %reg2, -16(%rbp)	

1
	movq $20, %rsi	
	movq $.string2_l, %rdi	

1
	movq $43177, %rdi	
	subl %edi, %eax	

1
	movq $8997, %rax	
	movq $30996, %reg1	

1
	je .Main.main_5	
	movq $8, %rsi	

1
	movq %r15, %reg1	
	movq -48(%rbp), %reg3	

1
.Dictionary.get_2:	
	movq 0(%reg0), %reg1	

1
	call *%reg0	
	movq %rax, %r13	

1
	call *%r12	
	movq 688(%reg1), %r12	

1
	movq -64(%rbp), %reg1	
	movq %r12, %reg3	

1
	movq $0, %reg0	
	movq %reg0, 280(%rax)	

1
	movq $26355, %rax	
	movq 0(%reg1), %r12	

1
	movq %rdi, 688(%reg1)	
	movq $0, %rdi	

1
	je .Main.main_53	
	movq %reg0, %reg1	

1
	movq %reg0, %reg1	
	jmp .Main.main_61	

1
	movq -88(%rbp), %rax	
	addl %eax, %esi	

1
	.size Main.main, .-Main.main	
	.globl Complex.init	

1
	sete %reg0l	
	jne .Main.main_9	

1
	movq $180, %reg0	
	movq $.string5_l, %reg1	

1
	movq -64(%rbp), %rax	
	movq $0, %rcx	

1
	je .Dictionary.insert_4	
	movq $15, %rsi	

1
	movq $107, %reg0	
	movq $.string3_l, %reg1	

1
.Matrix.get_33:	
.Matrix.get_31:	

1
	movq %rsi, %reg1	
.Main.funcwhileb_1:	

1
	movq $2, %reg0	
	movq %reg0, %r13	

1
	jmp .Cons.insert_3	
.Cons.insert_1:	

1
	subl %reg0, %edi	
	movq %reg2, -16(%rbp)	

1
	movq %rdi, %reg1	
	jmp .Main.main_8	

1
	movq $5456, %rax	
	subl %eax, %edi	

1
	movq %rax, -64(%rbp)	
	movq $14, %rax	

1
	call *%r12	
	movq 536(%reg1), %rax	

1
.Main.main_12:	
	movq %r12, %rdi	

1
	pushq %r12	
	movq $40, %rdi	

1
	movq -112(%rbp), %rax	
	movq %rsi, %rcx	

1
	movq %rax, %rdi	
	movq 24(%rbx), %rax	

1
	call *%r12	
.Main.main_22:	

1
	movq $.string8, %reg0	
	movq 0(%reg1), %r14	

1
	testq $1, %rax	
	je .Main.main_28	

1
	movq %reg0, %r12	
	movq %rdx, %reg3	

1
	subl %edi, %reg1	
	movq -96(%rbp), %reg3	

1
	call *%r13	
.Main.main_12:	

1
	movq 128(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq $58921, %rdi	
	cmpl %edi, %reg2	

1
.Complex.equal_4:	
	movq $0, %reg0	

1
	testq $1, %rsi	
	je .Main.main_47	

1
.Main.main_44:	
	movq -32(%rbp), %rdx	

1
	negl %edi	
	movq %rdi, 8(%reg2)	

1
	movq %reg0, -32(%rbp)	
	movq -16(%rbp), %rbx	

1
	idivl %r14d	
	movq $7741, %r13	

1
	idivl %esi	
	movq %rax, %r13	

1
	movq %rax, %r12	
	cmpl $0, %ebx	

1
	movq %reg0, 128(%rax)	
	movq $3000, %reg0	

1
Matrix.elMul:	
	pushq %rbp	

1
	movq $15755, %rsi	
	imull %esi	

1
	movq $Nil_vtable, 0(%rax)	
	leave	

1
	movq %r15, %rsi	
	cmpl %esi, %eax	

1
	movq %rbx, %rdi	
	movq %reg2, %rax	

1
	movq %reg0, %rax	
	jmp .Matrix.set_20	

1
	movq %rsi, %reg1	
	movq 16(%reg2), %reg3	

1
	movq %rsi, %reg1	
	cmpl $0, %ebx	

1
	movq $27409, %r9	
	movq $0, %reg1	

1
	addl %eax, %reg1d	
	movq -144(%rbp), %rax	

1
	movq $1, %rbx	
	movq -8(%rbp), %rdx	

1
	movq $0, %rsi	
	movq 16(%rax), %rdi	

1
	je .Main.main_144	
	movq %reg0, %rax	

1
	movq $67, %reg0	
	movq $.string3_l, %rdi	

1
.Main.main_27:	
	movq 0(%reg0), %reg1	

1
	movq $3000, %rdi	
	movq %rdi, 320(%reg1)	

1
	movq $3000, %rdi	
	movq %rdi, 704(%rax)	

1
	movq %rax, %r13	
	movq $11, %rax	

1
	movq %reg0, %reg1	
	movq -72(%rbp), %r8	

1
.Matrix.set_63:	
.Matrix.set_61:	

1
.string7_l:	
	.string "ERROR: %lld: Exception: stack overflow\n"	

1
	call *%reg0	
	movq 312(%reg1), %reg2	

1
	movq $3, %r9	
	movq %reg1, %reg2	

1
	movq %rax, %reg1	
	movq $9508, %rax	

1
	je .Main.main_15	
	cmpq $Main_vtable, 0(%rdi)	

1
	movq %rdi, 296(%rax)	
	movq $3000, %rdi	

1
	movq 184(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq $604, %reg0	
	movq $21813, %reg1	

1
.Matrix.get_41:	
	movq $2, %rcx	

1
	movq %reg0, %r14	
.Main.main_16:	

1
	movq $45332, %rax	
	cmpl %eax, %reg2	

1
	movq $.string14, %reg0	
	movq %rbx, %r12	

1
	movq $3000, %reg0	
	movq %reg0, 560(%reg1)	

1
	subl %eax, %reg1	
	movq -80(%rbp), %rax	

1
	.quad Foo.doh	
Object_vtable:	

1
	movq -48(%rbp), %rax	
	movq -72(%rbp), %reg3	

1
	movq -80(%rbp), %reg1	
	movq -152(%rbp), %rdi	

1
	movq $12, %r9	
	movq -72(%rbp), %rax	

1
	movq $18422, %rbx	
	subl %ebx, %reg2	

1
	movq 8(%rbx), %rax	
	cmpl %reg2, %eax	

1
	call String.substr	
	movq %rax, %r13	

1
	movq $23071, %reg0	
	movq %reg0, %reg1	

1
	movq $63252, %reg0	
	subl %reg1, %reg2d	

1
.A2I.c2i_9:	
	movq $.string12, %rdi	

1
	movq $4, %rsi	
	movq $.string5_l, %rdi	

1
	negl %eax	
	movq %rax, %r9	

1
	movq %reg0, 240(%rax)	
	movq $3000, %reg0	

1
.Main.main_131:	
	movq %reg0, %rax	

1
	movq $59495, %r11	
	movq %r11, %reg1	

1
	movq -176(%rbp), %rdi	
	movq %reg2, %rax	

1
	imull %reg0	
	movq $7258, %rsi	

1
	testq $1, %rdi	
	je .Nil.rcons_1	

1
	movq -160(%rbp), %rsi	
	movq -24(%rbp), %rax	

1
.Main.main_18:	
	movq 0(%reg0), %reg1	

1
	movq 40(%reg0), %reg0	
	movq 8(%rbx), %rdi	

1
	movq %r12, %rdi	
	subl %edi, %reg3	

1
	movq $8423, %rax	
	movq $34498, %rsi	

1
.Main.main_53:	
	movq %reg0, %rsi	

1
	movq $61456, %reg0	
	cmpl %edi, %eax	

1
	idivl %r14d	
	movq %reg1, %r13	

1
	movq 320(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq $12, %reg0	
	cmpl $0, %reg1	

1
	movq $12, %reg0	
	movq -152(%rbp), %reg2	

1
	idivl %r13d	
	addl %eax, %reg2d	

1
	movq %rdi, 8(%rax)	
	movq $39, %rdi	

1
	call out_error	
.Main.main_140:	

1
	movq -80(%rbp), %rsi	
	subl %reg2, %reg3	

1
	movq -120(%rbp), %reg1	
	movq -120(%rbp), %rdi	

1
	addl %eax, %edi	
	movq -48(%rbp), %reg3	

1
.Main.main_22:	
	movq %reg0, %rbx	

1
	movq $29181, %reg0	
	negl %edi	

1
	call *%r12	
	movq 96(%rbx), %rax	

1
.Bar.new_16:	
	movq %reg0, %rax	

1
	call *%r12	
	jmp .Main.funccase_8	

1
	movq -16(%rbp), %reg1	
	subl %edi, %esi	

1
	.quad .string12_l	
	.quad 2	

1
	movq $3966, %rdi	
	cmpl %reg1, %reg2	

1
	movq $3966, %rdi	
	cmpl %edi, %eax	

1
.Foo.new_12:	
	movq 32(%rbx), %reg1	

1
	call *%reg0	
	movq -64(%rbp), %reg2	

1
	movq %r12, %rbx	
	pushq %reg2	

1
	.size Main.main, .-Main.main	
	.globl ListNode.push	

1
	movq $52290, %rsi	
	imull %reg1	

1
	je .Main.main_88	
	movq $64, %reg0	

1
	movq %reg0, %r12	
	movq $0, %reg2	

1
	je .Main.main_81	
	movq $25, %rsi	

1
	imull %reg0	
	movq $19020, %rsi	

1
	movq %rax, -128(%rbp)	
	movq $15, %rax	

1
	je .Main.main_11	
	cmpq $Main_vtable, 0(%rax)	

1
	movq 72(%r14), %r14	
	movq -8(%rbp), %reg2	

1
	movq $17815, %reg0	
	movq %reg0, %rcx	

1
	call getmem	
	movq $Dictionary_vtable, 0(%rax)	

1
.A2I.c2i_13:	
	movq $.string14, %reg0	

1
	movq 48(%reg0), %reg0	
	movq %r13, %rdi	

1
	movq $48027, %r12	
	movq 0(%rbx), %rax	

1
	subl %eax, %reg1d	
	movq %r8, %rax	

1
	movq $7493, %rdi	
	addl %reg1, %eax	

1
	movq $3000, %reg0	
	movq %reg0, 552(%rax)	

1
.string15_l:	
	.string "8"	

1
.Main.main_9:	
	cmpl %reg0, %reg1	

1
	movq %reg0, %rbp	
	subq $168, %reg0	

1
.Main.funcwhilei_2:	
	movq 0(%reg0), %rax	

1
	je .Main.main_65	
	movq $49, %reg0	

1
	jmp .Main.main_12	
.Main.main_7:	

1
	movq $228, %rsi	
	movq $.string5_l, %rdi	

1
	je .Main.main_1	
	movq $10, %rsi	

1
	call *%r12	
	movq 424(%reg1), %rax	

1
	movq $60606, %reg0	
	cmpl %eax, %reg2	

1
	movq $33472, %rax	
	movq $7201, %reg1	

1
	je .Main.main_69	
	movq $52, %reg0	

1
	movq $.string8, %rdi	
	movq %rbx, %reg2	

1
	movq %rdi, %rax	
	jmp .Main.main_36	

1
	.size Main.funcifi, .-Main.funcifi	
	.globl Main.funcifb	

1
	movq $54759, %rsi	
	movq %rsi, %rcx	

1
	movq %rdi, %rax	
	cmpl $0, 8(%reg2)	

1
	call *%r12	
	movq 16(%rbx), %rax	

1
	je .Main.main_40	
	movq $15, %rsi	

1
.A2I.c2i_5:	
	movq $.string10, %reg0	

1
	call *%r12	
	movq 680(%reg1), %rax	

1
	movq %reg0, 304(%reg1)	
	movq $3000, %reg0	

1
	movq %reg0, 56(%rbx)	
	movq $0, %reg0	

1
	movq %reg0, %reg1	
	subl %eax, %r9d	

1
	addl %eax, %r10d	
	movq %r10, %rax	

1
	call *%reg0	
	movq 176(%reg1), %reg0	

1
	movq -152(%rbp), %reg1	
	movq -144(%rbp), %rax	

1
	movq $175, %rsi	
	movq $.string5_l, %rdi	

1
	subl %reg0, %edi	
	movq -64(%rbp), %reg3	

1
	movq -64(%rbp), %reg1	
	movq %r14, %reg3	

1
	testq $1, %rcx	
	je .Main.main_119	

1
	movq $58419, %rcx	
	imull %ecx	

1
	movq -72(%rbp), %rax	
	movq %rsi, %rcx	

1
	negl %eax	
	movq $58419, %rcx	

1
	jne .Matrix.set_10	
	movq %reg0, 40(%reg1)	

1
	subl %esi, %reg1	
	movq -152(%rbp), %rsi	

1
	jne .Main.main_23	
	movq %reg0, %reg1	

1
	movq -160(%rbp), %reg1	
	movq -104(%rbp), %reg3	

1
	addl %r8d, %reg1	
	movq $53181, %r8	

1
	movq -152(%rbp), %reg1	
	movq %r15, %rdi	

1
	movq %r13, 8(%reg1)	
	movq 0(%rbx), %reg3	

1
	subl %eax, %edi	
	movq $34422, %rax	

1
	imull %reg0d	
	movq -144(%rbp), %reg0	

1
	jne .Main.main_21	
	movq 0(%reg0), %reg1	

1
	movq %reg0, %rdi	
	movq $20995, %reg0	

1
	testq $1, %reg0	
	je .Bar.new_20	

1
	.size Main.main, .-Main.main	
	.globl Main.fib	

1
	movq $4, %reg0	
	movq %reg0, %rbx	

1
	movq -120(%rbp), %rax	
	movq -56(%rbp), %rsi	

1
.Cons.insert_4:	
	movq 16(%reg0), %rdx	

1
	movq $7, %r12	
	movq 0(%rax), %rbx	

1
	testq $1, %rcx	
	je .Main.main_144	

1
	movq %rax, %rbx	
.Main.main_7:	

1
	subl %ecx, %reg1	
	movq -152(%rbp), %rcx	

1
	movq -168(%rbp), %rax	
	cmpl %eax, %edi	

1
.Main.new_10:	
	movq $0, %r12	

1
	movq %reg0, 56(%reg1)	
	movq %reg0, %reg1	

1
	negl %eax	
	movq -40(%rbp), %rsi	

1
	movq -112(%rbp), %reg1	
	addl %esi, %eax	

1
.Main.funccase_2:	
	movq %rdi, %reg1	

1
	movq $26972, %rax	
	movq %rax, %reg1	

1
	movq $14352, %reg0	
	cmpl %edi, %reg2	

1
	idivl %r8d	
	movq -104(%rbp), %reg2	

1
	imull %r11d	
	movq $38208, %r11	

1
	movq %r13, %rax	
	addl %eax, %ecx	

1
	movq -160(%rbp), %reg1	
	movq -88(%rbp), %reg3	

1
	movq $20, %rax	
	movq %rax, %r14	

1
	movq $.string14, %r12	
	movq 0(%rbx), %rax	

1
	movq $2951, %r12	
	movq $0, %reg1	

1
	jmp .Main.main_17	
.Main.main_17:	

1
	movq %reg0, 688(%reg1)	
	movq $3000, %reg0	

1
	movq %rbx, %rax	
	subl %reg2, %ecx	

1
	call *%rax	
	movq $18391, %rdi	

1
.Main.main_32:	
	jmp .Main.main_33	

1
	movq -160(%rbp), %rax	
	movq %reg2, %rsi	

1
	movq $8640, %reg0	
	imull %edi	

1
	call Int.new	
	movq %reg0, %rdi	

1
.Main.main_9:	
	cmpq $String_vtable, 0(%reg0)	

1
	movq $28147, %reg0	
	negl %eax	

1
	movq $3000, %rdi	
	movq %rdi, 440(%rax)	

1
	jne .Main.main_2	
	movq %reg0, %r14	

1
	movq %rdi, 40(%reg1)	
	cmpl %reg2, %esi	

1
.Main.main_2:	
	movq $0, %rdi	

1
.CellularAutomaton.cell_at_next_evolution_4:	
	movq %reg0, %rax	

1
	je .Main.main_186	
	movq $151, %rsi	

1
	movq 112(%rbx), %rbx	
	movq %reg1, %rdi	

1
	movq %rsi, %reg1	
	movq -24(%rbp), %rsi	

1
	call *%r12	
	movq 96(%rbx), %reg2	

1
.Main.main_48:	
	movq -24(%rbp), %rdx	

1
	movq %reg0, 8(%rbx)	
	movq $.string7, %reg0	

1
	movq $5, %rax	
	movq 0(%rbx), %r13	

1
	subl %eax, %esi	
	movq -112(%rbp), %reg3	

1
	movq $89, %reg0	
	movq $.string2_l, %reg1	

1
	movq $3, %r9	
	movq %reg1, %rcx	

1
	movq %reg0, 528(%rax)	
	movq $0, %reg0	

1
	call *%r12	
	cmpl $0, 16(%reg1)	

1
	movq %rdi, %rax	
	jmp .Matrix.set_46	

1
	movq %rdi, %rax	
	movq %reg2, %rsi	

1
	movq $127, %rsi	
	movq $.string5_l, %rdi	

1
	movq %rsi, %reg1	
	call Bool.new	

1
	je .Main.new_2	
	cmpq $Main_vtable, 0(%reg0)	

1
	movq %rbx, %reg1	
	subl %reg2, %ecx	

1
	.globl Matrix.elMul	
	.type Matrix.elMul, @function	

1
	testq $1, %rcx	
	je .Main.main_54	

1
.Main.main_129:	
	movq -152(%rbp), %rax	

1
	ret	
	.size CellularAutomaton.num_cells, .-CellularAutomaton.num_cells	

1
	movq -136(%rbp), %reg1	
	addl %eax, %reg3	

1
	movq $53748, %reg0	
	movq 0(%reg1), %reg2	

1
	negl %reg0	
	addl %reg0, %r8d	

1
	movq -48(%rbp), %reg1	
	addl %eax, %ecx	

1
	movq $39, %rdi	
	movq %rdi, 8(%reg1)	

1
	movq -40(%rbp), %reg1	
	movq -176(%rbp), %rax	

1
	call *%reg0	
	movq 472(%rbx), %reg2	

1
	je .Main.out_whatever_1	
	movq $10, %rsi	

1
	imull %reg0	
	movq $47988, %rcx	

1
.Dictionary.get_4:	
	movq 8(%reg0), %reg1	

1
	movq 24(%rbx), %reg1	
	cmpl $0, %eax	

1
DicNode.new:	
	pushq %reg0	

1
	je .Main.main_31	
	movq %reg0, %reg1	

1
	movq %rdi, 112(%reg1)	
	movq %rdi, %reg1	

1
	subl %eax, %reg1	
	movq %rdi, -16(%rbp)	

1
	imull %ecx	
	movq -80(%rbp), %reg2	

1
	movq $9569, %reg0	
	imull %reg1	

1
	negl %esi	
	movq %rbx, %rax	

1
	movq $0, %r13	
	movq 0(%reg1), %rax	

1
	movq %rax, %r14	
	movq $.string11, %r15	

1
	je .Main.main_53	
	cmpl $0, %reg0d	

1
	movq %reg0, %reg1	
	movq -184(%rbp), %r8	

1
	movq $175, %reg0	
	movq $.string5_l, %reg1	

1
	setl %reg0l	
	jge .Main.main_21	

1
	movq %reg0, %reg1	
	movq $15798, %reg0	

1
	movq $110, %reg0	
	movq $.string3_l, %rdi	

1
.Main.main_31:	
	movq $.string8, %rax	

1
	je .Main.new_2	
.Main.new_2:	

1
	movq -112(%rbp), %rax	
	addl %esi, %eax	

1
	movq %rdi, 512(%rax)	
	movq $0, %rdi	

1
	addl %reg0, %reg1	
	movq $47041, %rax	

1
	movq %r13, %reg1	
	movq -88(%rbp), %rdi	

1
	movq $10, %rsi	
	movq $.string1_l, %reg1	

1
	movq %rbx, %rsi	
	cmpl %reg2, %eax	

1
	je .Main.main_40	
	movq $15, %reg0	

1
	movq %rdi, %rax	
	jmp .Main.main_60	

1
	je .Main.main_38	
	movq $34, %rsi	

1
	movq %reg0, 32(%reg1)	
	movq $.string6, %reg0	

1
	cmpq $IO_vtable, 0(%rax)	
	je .Main.func_2	

1
	movq $3000, %rdi	
	movq %rdi, 472(%reg1)	

1
	movq %r13, %reg1	
	movq 8(%rbx), %rdx	

1
	jmp .Main.main_114	
.Main.main_113:	

1
.Bazz.new_6:	
	movq %reg0, 16(%reg1)	

1
	movq -144(%rbp), %rdi	
	imull %reg2	

1
	call out_error	
.List.insert_4:	

1
	movq $58688, %reg0	
	movq %reg0, %reg1	

1
	movq %reg0, 320(%rax)	
	movq $0, %reg0	

1
	je .Main.main_121	
	movq $70, %reg0	

1
	idivl %ecx	
	movq $58210, %reg1	

1
	movq %rdi, %rax	
.Main.main_167:	

1
	movq -136(%rbp), %rcx	
	subl %reg2, %eax	

1
	je .Main.main_14	
	movq $156, %rsi	

1
	movq $.string7, %rbx	
	movq %rax, %rdi	

1
	movq $.string7, %reg0	
	movq $0, %reg1	

1
	call *%reg0	
	movq 152(%reg1), %reg2	

1
.DicNode.insert_6:	
	movq 24(%rbx), %reg1	

1
	movq %r15, %rax	
	negl %reg2	

1
	testq $1, %r8	
	je .Main.main_105	

1
.string8_l:	
	.string "\\n\\t"	

1
	movq -112(%rbp), %reg1	
	movq %r15, %reg3	

1
	testq $1, %r10	
	je .Main.main_47	

1
	movq %reg0, %rax	
	movq -112(%rbp), %rsi	

1
.Main.main_17:	
	movq $0, %reg0	

1
	movq %rdi, 600(%rax)	
	movq $3000, %rdi	

1
	imull %r11d	
	movq $19892, %r11	

1
	movq $8214, %reg0	
	imull %reg0d	

1
	idivl %reg0	
	movq $46154, %reg1	

1
	movq %rbx, %reg1	
	movq %r9, %r10	

1
	je .Main.main_34	
	movq $24092, %reg0	

1
	call *%r12	
	cmpl $0, 16(%rbx)	

1
	je .Main.main_112	
	movq $67, %reg0	

1
.Bar.new_6:	
	movq %reg0, 16(%reg1)	

1
	movq %reg0, %reg1	
	movq $24320, %reg0	

1
.Main.main_14:	
	movq $2, %reg0	

1
	movq 208(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	subl %eax, %r10d	
	movq $61569, %reg2	

1
	idivl %reg0	
	movq $12660, %reg1	

1
	movq %r12, 8(%rax)	
	movq %rax, 72(%reg2)	

1
	testq $1, %r9	
	je .Main.main_96	

1
	testq $1, %reg0	
	je .Main.main_150	

1
	movq $60323, %reg0	
	imull %esi	

1
	testq $1, %rax	
	je .Main.main_191	

1
	movq -40(%rbp), %reg1	
	testq $1, %reg1	

1
	addl %esi, %eax	
	movq -56(%rbp), %rsi	

1
.Main.main_4:	
	movq %r13, %rax	

1
	movq -48(%rbp), %reg1	
	movq -48(%rbp), %rdi	

1
	subl %reg0, %reg1	
	movq %rbx, %rcx	

1
	movq %rdx, -32(%rbp)	
	movq -16(%rbp), %reg3	

1
	call out_error	
.Main.main_115:	

1
	movq -160(%rbp), %rsi	
	movq -24(%rbp), %reg3	

1
	negl %r8d	
	movq -152(%rbp), %reg2	

1
.Main.main_3:	
	movq %r12, %reg1	

1
	subl %eax, %r9d	
	movq %reg2, %reg3	

1
	subl %reg0, %eax	
	movq %reg2, -120(%rbp)	

1
	je .Main.main_23	
	cmpq $String_vtable, 0(%reg0)	

1
	movq -120(%rbp), %rax	
	movq -56(%rbp), %reg3	

1
	call *%reg0	
	movq %reg1, 16(%reg2)	

1
	je .Main.main_134	
	movq $97, %reg0	

1
	je .Main.main_159	
	movq $133, %reg0	

1
	call *%reg0	
	movq 384(%reg1), %reg0	

1
	movq 56(%rax), %rax	
	movq 8(%rbx), %rdi	

1
	call out_error	
.Main.main_101:	

1
	movq %reg0, %rdi	
	movq -32(%rbp), %rsi	

1
	je .Main.main_23	
	cmpq $Bool_vtable, 0(%reg0)	

1
	movq $3, %rsi	
	movq $.string1_l, %reg1	

1
	movq -56(%rbp), %reg1	
	movq %r13, %rsi	

1
	movq 16(%reg0), %reg1	
	movq $.string10, %r13	

1
	jne .Matrix.set_15	
	movq %reg0, 48(%reg1)	

1
	subl %edi, %eax	
	movq %reg2, -120(%rbp)	

1
	movq $3000, %reg0	
	movq %reg0, 112(%rax)	

1
	.size DicNode.getCount, .-DicNode.getCount	
	.globl DicNode.incr	

1
	movq %rdi, 720(%rax)	
	movq $3000, %rdi	

1
	movq 496(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
.Main.main_12:	
	jmp .Main.main_13	

1
	movq %reg0, %reg1	
	movq 8(%reg0), %reg2	

1
	imull %edi	
	movq -152(%rbp), %rdi	

1
	movq -80(%rbp), %reg1	
	movq $0, %rcx	

1
	call *%reg0	
.Dictionary.get_3:	

1
	call out_error	
.Main.main_149:	

1
	movq $47879, %reg0	
	cmpl %eax, %edi	

1
	movq %rdi, %rax	
	jmp .Main.main_56	

1
	.size List.getHead, .-List.getHead	
	.globl List.insert	

1
	je .Main.main_92	
	movq %reg0, %reg1	

1
.Main.main_77:	
	movq -16(%rbp), %reg1	

1
	movq $3, %rsi	
	movq $.string1_l, %rdi	

1
	movq -32(%rbp), %rax	
	movq -96(%rbp), %rsi	

1
	subl %reg0, %edi	
	movq -56(%rbp), %reg3	

1
	movq -152(%rbp), %rax	
	movq %reg2, %rcx	

1
	movq 56(%rax), %rax	
	movq 8(%reg1), %rdi	

1
	sete %r12b	
	jne .A2I.c2i_19	

1
	movq %rdi, %rsi	
	movq %reg2, %rax	

1
	movq $3000, %rdi	
	movq %rdi, 720(%rax)	

1
	movq %reg0, 192(%rax)	
	movq $3000, %reg0	

1
	movq 240(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq %rcx, %rax	
	movq %r14, %rax	

1
	movq $34, %reg0	
	movq $.string1_l, %reg1	

1
.Main.main_16:	
	movq -16(%rbp), %reg1	

1
	movq %reg0, 32(%rbx)	
.Main.new_1:	

1
	movq %reg0, %r12	
	movq $4, %reg0	

1
	call *%reg0	
	movq 128(%reg1), %r12	

1
	call *%rax	
	movq 280(%reg1), %r12	

1
	.string "o"	
.string6:	

1
	movq $3000, %reg0	
	movq %reg0, 264(%rax)	

1
	movq 176(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	subl %reg0, %esi	
	movq $48118, %reg2	

1
	negl %edi	
	addl %edi, %esi	

1
	movq -56(%rbp), %rdi	
	movq %reg2, %reg3	

1
	testq $1, %reg0	
	je .Main.main_108	

1
	movq $0, %rdi	
	movq %rdi, 336(%rax)	

1
	jge .Main.main_2	
	movq 0(%reg0), %reg1	

1
	movq -80(%rbp), %rdi	
	negl %edi	

1
	movq %rax, %reg1	
.Main.main_10:	

1
	movq $62649, %r12	
	movq 0(%rbx), %reg2	

1
.Foo.new_11:	
	movq %rax, 32(%rbx)	

1
	movq %rdi, 432(%rax)	
	movq $0, %rdi	

1
	subl %edi, %reg1	
	movq %reg2, -40(%rbp)	

1
	movq %rdi, 312(%rax)	
	movq $3000, %rdi	

1
	movq %rax, %rdi	
.CellularAutomaton.cell_at_next_evolution_4:	

1
	jge .Main.main_13	
	movq %reg0, %rax	

1
	movq %rsi, %reg1	
	cmpl $0, %edi	

1
	je .Main.main_1	
	movq $.string6, %rax	

1
	call *%r14	
	movq %rax, 24(%rbx)	

1
	movq $3000, %rdi	
	movq %rdi, 280(%reg1)	

1
	movq %r14, %rax	
	addl %eax, %ecx	

1
	je .Main.main_27	
	movq $10, %reg0	

1
	movq $.string8, %reg0	
	jmp .CellularAutomaton.cell_at_next_evolution_8	

1
	jge .Main.main_146	
	movq %reg0, %reg1	

1
	imull %reg0	
	movq %rbx, %rsi	

1
	subl %eax, %reg1	
	movq $47353, %reg2	

1
.Main.main_3:	
	movq $3, %rax	

1
	je .Main.main_129	
	movq $70, %rsi	

1
	movq -16(%rbp), %reg1	
	movq -136(%rbp), %rsi	

1
	.globl Foo.getS	
	.type Foo.getS, @function	

1
.Main.main_84:	
	movq -96(%rbp), %reg1	

1
	movq -144(%rbp), %rax	
	movq -120(%rbp), %rcx	

1
	testq $1, %rax	
	jne .Main.main_3	

1
	jmp .Matrix.set_44	
.Matrix.set_43:	

1
	subl %eax, %edi	
	movq -88(%rbp), %reg3	

1
	movq $20470, %reg0	
	negl %reg1	

1
	movq -120(%rbp), %reg1	
	cmpl %esi, %reg3	

1
	idivl %ecx	
	movq -64(%rbp), %rsi	

1
	movq %reg0, %reg1	
	movq $1, %r15	

1
.Main.main_132:	
	movq %reg0, %rax	

1
	movq $12, %rsi	
	movq %r13, %reg2	

1
.Main.main_30:	
	movq $60750, %reg0	

1
	movq %reg0, 24(%rax)	
	movq $3000, %reg0	

1
	call out_error	
.Main.print_list_1:	

1
	je .Main.func_2	
.Main.func_2:	

1
	movq $0, %r13	
	movq $5, %reg1	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_61	

1
	movq -128(%rbp), %rax	
	movq -96(%rbp), %rsi	

1
	movq %reg0, 696(%reg1)	
	movq $0, %reg0	

1
.Main.main_5:	
	movq 8(%reg0), %r12	

1
.Main.main_19:	
	cmpl $0, %r13d	

1
.Main.main_15:	
	movq $.string8, %reg0	

1
	movq %reg0, %reg1	
	movq $34526, %reg0	

1
	movq $60858, %reg0	
	negl %reg1	

1
	.quad 4	
.string14_l:	

1
	.quad 5	
	.quad Main.new	

1
.Main.main_142:	
	movq %reg0, %reg1	

1
	movq %rax, %r8	
	movq -96(%rbp), %rax	

1
	movq %rdi, 64(%rax)	
	movq $1, %rdi	

1
	call Object.abort	
	movq $3, %rax	

1
	movq $30102, %rdi	
	movq $25895, %reg1	

1
	movq $15798, %reg0	
	subl %reg1, %r10d	

1
	movq %reg0, 8(%rax)	
	jmp .Main.main_4	

1
	movq $34, %rax	
	movq 0(%reg1), %reg2	

1
	movq %reg0, 56(%reg1)	
	movq %reg1, %reg0	

1
	testq $1, %rcx	
	je .Main.main_122	

1
	je .Main.main_50	
	movq $15, %rsi	

1
	imull %esi	
	movq -48(%rbp), %reg2	

1
	movq 40(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	setl %reg0b	
	jge .Main.main_5	

1
	cmpq $Bazz_vtable, 0(%reg0)	
	je .Bazz.new_2	

1
	jmp .Matrix.set_24	
.Matrix.set_23:	

1
	movq 64(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	ret	
	.size Foo.x, .-Foo.x	

1
	movq $0, %rdi	
	movq %rdi, 208(%rax)	

1
	.string "Baz"	
.string0:	

1
.Main.main_7:	
	movq 8(%rbx), %reg1	

1
	testq $1, %rdi	
	je .Main.main_139	

1
	movq -112(%rbp), %rsi	
	movq -104(%rbp), %rax	

1
	jne .Matrix.get_1	
	movq $1, %rcx	

1
	jmp .Main.main_74	
.Main.main_73:	

1
	movq 336(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq %r13, %r12	
	pushq %reg2	

1
	movq $12855, %rdi	
	addl %edi, %eax	

1
	movq %reg0, 8(%reg1)	
	movq 0(%reg2), %reg1	

1
	idivl %esi	
	movq %rax, %r14	

1
	testq $1, %rsi	
	je .Main.main_3	

1
	call *%rax	
	movq 288(%reg1), %reg2	

1
	movq 16(%reg0), %rdi	
	subl %esi, %edi	

1
	movq $181, %reg0	
	movq $.string5_l, %rdi	

1
	addl %edi, %eax	
	movq $4, %reg2	

1
	movq -64(%rbp), %reg1	
	imull %edi	

1
	movq %reg0, %rbx	
	movq $10, %rax	

1
	imull %reg0	
	movq $2438, %rsi	

1
	movq -40(%rbp), %reg1	
	movq %reg2, %rcx	

1
	testq $1, %reg0	
	je .Main.main_87	

1
	movq %rdi, 736(%rax)	
	movq $3000, %rdi	

1
	je .Main.main_75	
	movq $52, %rsi	

1
	movq 24(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq %rax, %reg1	
	movq $40488, %rax	

1
	movq %reg0, %rbp	
	call Foo.new	

1
	movq %reg0, 376(%rax)	
	movq $0, %reg0	

1
	movq $28260, %reg0	
	subl %eax, %edi	

1
	movq %rdi, %reg1	
	jmp .Main.main_14	

1
.Main.main_19:	
	movq 0(%r12), %reg1	

1
	movq %rax, %r10	
	movq $8022, %rax	

1
	call *%reg0	
	movq 560(%rbx), %reg0	

1
	movq 8(%r12), %rax	
	movq %rbx, %rdi	

1
	movq $30631, %rdi	
	movq $0, %reg1	

1
	idivl %esi	
	movq -40(%rbp), %rsi	

1
	.quad List.cons	
Bool_vtable:	

1
.Main.main_3:	
	movq 80(%rbx), %rax	

1
	call *%reg0	
	movq 192(%rbx), %rax	

1
	movq %reg0, %rax	
	addl %r8d, %eax	

1
	testq $1, %r9	
	je .Main.main_169	

1
	movq %rax, %rsi	
	call IO.out_int	

1
	movq -168(%rbp), %r8	
	movq -184(%rbp), %rcx	

1
	movq %reg0, %rdi	
	movq $6821, %rsi	

1
	movq %reg0, %reg1	
	movq $name_Bool, %reg2	

1
	.quad .string17_l	
	.quad 1	

1
.Matrix.mul_3:	
	movq $5, %rdi	

1
	.type CellularAutomaton.init, @function	
CellularAutomaton.init:	

1
	je .Main.main_73	
	movq $19, %reg0	

1
	movq $20384, %rdi	
	imull %edi	

1
	movq -40(%rbp), %reg1	
	addl %reg2, %edi	

1
	je .Main.main_66	
	movq $49, %reg0	

1
	call *%r12	
	movq 736(%rbx), %reg2	

1
	movq $62343, %reg0	
	movq 0(%reg1), %reg2	

1
	movq %rdi, 440(%reg1)	
	movq $3000, %rdi	

1
	idivl %reg0	
	movq $20908, %rsi	

1
.Main.main_42:	
	movq $8800, %r12	

1
	addl %edi, %eax	
	movq %r14, %rdi	

1
	setl %reg0l	
	jge .Main.new_4	

1
	movq 0(%rdx), %reg1	
	movq 112(%reg1), %reg1	

1
	movq $0, %reg0	
	movq %reg0, 632(%rax)	

1
	movq $49, %reg0	
	movq $.string3_l, %rdi	

1
	movq $30605, %reg0	
	movq $35043, %rsi	

1
	movq $11282, %rax	
	movq $39523, %rsi	

1
	subl %eax, %reg1	
	movq %r14, %rax	

1
	movq %reg0, %reg1	
	movq 0(%reg2), %rbx	

1
	movq 32(%reg0), %reg1	
	movq %reg1, 40(%reg0)	

1
	call out_error	
.Main.new_5:	

1
	movq %reg0, %rdi	
	movq $0, %rcx	

1
	movq 0(%rax), %r14	
	movq 96(%r14), %r14	

1
	negl %reg0d	
	movq -152(%rbp), %rax	

1
	movq -72(%rbp), %rax	
	movq -72(%rbp), %rdi	

1
	movq $3000, %rdi	
	movq %rdi, 672(%reg1)	

1
	movq -120(%rbp), %rax	
	movq -24(%rbp), %rcx	

1
	movq %reg0, %rbx	
	movq $name_Bool, %rax	

1
.Main.main_77:	
	movq %reg0, %reg1	

1
	je .Main.main_88	
	movq %reg0, %rax	

1
	addl %edi, %reg1	
	movq $8340, %reg2	

1
	movq $55348, %rsi	
	movq %rsi, %rcx	

1
	movq 16(%rbx), %reg1	
	addl %reg2, %eax	

1
	movq $58210, %reg0	
	negl %reg1	

1
	jne .Matrix.get_34	
	movq 112(%reg0), %reg0	

1
	je .Bar.new_18	
	movq $31, %rsi	

1
	movq %rdi, %rax	
	jmp .Main.main_6	

1
	movq 8(%rdi), %rdi	
	addl %edi, %eax	

1
	movq %rax, %rsi	
	movq -136(%rbp), %reg3	

1
	movq 8(%r12), %reg1	
	movq %rbx, %rdi	

1
.Matrix.get_14:	
	movq $3, %r8	

1
	movq %rsi, %reg1	
	movq %reg2, %rax	

1
	movq %rsi, %reg1	
	movq 16(%rbx), %rax	

1
	movq %r13, %rax	
	cmpl %eax, %reg3	

1
	.globl Cons.insert	
	.type Cons.insert, @function	

1
	movq $2730, %rax	
	movq %reg1, %rdx	

1
	movq %reg0, %reg1	
	call Foo.getX	

1
	movq %reg0, %reg1	
	jmp .Main.main_5	

1
	je .Main.main_70	
	movq $19, %reg0	

1
	movq %reg0, %rax	
	movq -160(%rbp), %rsi	

1
	movq $2438, %reg0	
	negl %reg1	

1
	movq 120(%r12), %r12	
	movq 16(%rax), %reg2	

1
	call *%r12	
	jmp .Main.main_48	

1
	movq $0, %rdi	
	movq %rdi, 632(%rax)	

1
	movq $.string7, %r15	
	movq %reg1, %rdx	

1
	movq $229, %reg0	
	movq %reg0, %reg1	

1
	call *%reg0	
	movq 112(%rbx), %reg2	

1
	movq %r12, %rdi	
	call Object.type_name	

1
	movq $0, %reg0	
	movq %reg0, 216(%reg1)	

1
	testq $1, %reg0	
	je .Bar.new_7	

1
	movq $0, %reg0	
	popq %rbx	

1
	movq $34422, %reg0	
	subl %reg1, %edi	

1
	movq -104(%rbp), %rax	
	movq -168(%rbp), %reg3	

1
	movq $25351, %reg0	
	subl %eax, %reg2	

1
	movq $38600, %reg0	
	movq $0, %reg1	

1
	je .Main.main_10	
	movq $5, %reg0	

1
	je .Main.main_14	
	movq $23, %reg0	

1
	movq %reg0, %reg1	
	movq 0(%rbx), %r13	

1
	movq $24320, %rax	
	movq $3520, %r9	

1
Main.print_list:	
	pushq %reg0	

1
.Matrix.get_4:	
	movq $3, %reg0	

1
	movq $15, %reg0	
	movq %reg0, -104(%rbp)	

1
	movq $135, %reg0	
	movq $.string3_l, %rdi	

1
	movq $30018, %rax	
	subl %reg1, %reg2	

1
	movq $52033, %rax	
	subl %reg1, %reg2	

1
	addl %reg0d, %reg1	
	movq -128(%rbp), %reg0	

1
	movq %reg0, %r15	
	pushq %reg2	

1
	testq $1, %r11	
	je .Main.main_74	

1
.Main.main_1:	
	movq %rbx, %rax	

1
.Main.new_4:	
	movq %reg0, 80(%rax)	

1
	negl %eax	
	movq -96(%rbp), %reg2	

1
	movq 144(%rax), %rax	
	movq 16(%reg1), %reg2	

1
	call out_error	
.Main.main_112:	

1
	movq 16(%reg0), %reg1	
	subl %reg2, %eax	

1
	je .Main.main_53	
	movq $17, %rsi	

1
	movq 0(%r13), %r15	
	movq 56(%r15), %r15	

1
	movq $11435, %r12	
	movq 0(%reg1), %rax	

1
	movq %rsp, %rbp	
	subq $184, %rsp	

1
.Main.main_111:	
	movq %reg0, %rax	

1
	movq $25185, %reg0	
	addl %eax, %ebx	

1
	subl %eax, %edi	
	movq $14802, %rax	

1
	movq $2, %rbx	
	movq 0(%rax), %reg2	

1
	movq 152(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	movq $20509, %reg0	
	subl %eax, %reg2	

1
	movq $.string9, %r14	
	movq 0(%reg1), %reg2	

1
	movq %rdi, %rsi	
	movq -160(%rbp), %reg3	

1
	movq -136(%rbp), %reg1	
	movq %rcx, %r8	

1
	movq %rdi, %rax	
	movq $29181, %rdi	

1
	movq %r12, %reg1	
	popq %r15	

1
	call *%reg0	
	movq 536(%reg1), %rax	

1
	movq 568(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq 24(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq %rbx, %rax	
	movq %reg2, %r13	

1
	movq %rbx, %reg1	
	call String.concat	

1
	movq %rsi, %rax	
	movq $49411, %rsi	

1
	.globl Main.fib	
	.type Main.fib, @function	

1
	movq -32(%rbp), %rax	
	subl %esi, %reg3	

1
	movq $90, %reg0	
	subl %reg1, %esi	

1
	movq $21813, %reg0	
	movq $25099, %rsi	

1
	call Nil.new	
	movq %rax, 8(%reg1)	

1
	pushq %rbx	
	movq $24, %rdi	

1
.Main.main_9:	
	movq $.string8, %r13	

1
	movq 664(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq $30215, %rax	
	subl %eax, %edi	

1
	movq $30631, %reg0	
	movq $0, %rsi	

1
	je .Main.main_35	
	movq $31, %reg0	

1
	movq %reg0, 464(%reg1)	
	movq $3000, %reg0	

1
	movq -48(%rbp), %rax	
	movq %rdi, %rsi	

1
	movq $1, %rax	
	movq $1, %reg1	

1
	je .Main.main_22	
	cmpq $Bar_vtable, 0(%rbx)	

1
	movq $empty_string, %rdi	
	movq %rax, %r12	

1
	movq 40(%rax), %rax	
	movq 8(%rbx), %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 328(%reg1)	

1
	movq %reg0, 464(%rax)	
	movq $3000, %reg0	

1
	je .Bazz.new_3	
	cmpq $Foo_vtable, 0(%reg0)	

1
	movq -152(%rbp), %rsi	
	movq %reg2, %rax	

1
	movq $43604, %reg0	
	addl %eax, %reg2	

1
	testq $1, %reg0	
	je .Main.main_133	

1
	movq $57869, %reg0	
	movq $49695, %reg1	

1
	movq -16(%rbp), %reg1	
	movq -40(%rbp), %reg3	

1
	call *%rax	
	movq 392(%reg1), %reg2	

1
DicNode.getCount:	
	pushq %rbp	

1
	movq 168(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq 456(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
.Matrix.get_58:	
	movq $4, %reg0	

1
	movq $name_Bool, %reg0	
	cmpl $0, 8(%rbx)	

1
	movq $102, %reg0	
	movq $.string3_l, %reg1	

1
	movq $.string8, %reg0	
	movq %reg0, %r13	

1
.Main.main_4:	
	movq 8(%reg0), %reg1	

1
	movq $36010, %rdi	
	negl %reg1	

1
.Main.main_137:	
.Main.main_135:	

1
	movq %rax, %rdi	
	movq $62331, %rax	

1
	movq $32704, %rsi	
	imull %esi	

1
	idivl %esi	
	movq $60858, %reg1	

1
	movq $222, %rdi	
	negl %reg1	

1
	movq 128(%r13), %r13	
	movq %rbx, %reg2	

1
	movq %reg0, %rax	
	movq $62723, %reg0	

1
	movq %rdi, 440(%reg1)	
	movq $0, %rdi	

1
	movq 416(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq %rax, %r8	
	movq $53642, %rax	

1
	.quad Dictionary.getHead	
	.quad Dictionary.setHead	

1
	movq 104(%r12), %r12	
	movq %rbx, %rdi	

1
	movq 264(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq %r12, %reg1	
	movq %rbx, %rdi	

1
	subl %reg0, %edi	
	movq $8997, %reg2	

1
	movq 80(%rax), %rax	
	jmp .Matrix.get_24	

1
	movq %rdi, %rsi	
	movq %reg2, %rdi	

1
	movq -16(%rbp), %reg1	
	movq -120(%rbp), %reg3	

1
	movq $0, %rdi	
	movq %rdi, 304(%reg1)	

1
	subl %reg0d, %reg1	
	movq -176(%rbp), %reg0	

1
	movq %reg0, %rsi	
	movq -72(%rbp), %rcx	

1
	movq -120(%rbp), %rax	
	movq -64(%rbp), %rcx	

1
	subl %eax, %edi	
	movq -184(%rbp), %reg3	

1
	je .Main.main_162	
	movq $142, %rsi	

1
	.string "\\n"	
.string11:	

1
	movq $0, %r14	
	movq 0(%rbx), %rax	

1
	je .Main.main_103	
	movq $64, %rsi	

1
.string4_l:	
	.string "Foo"	

1
	movq 128(%reg0), %reg0	
	movq %r12, %reg2	

1
.Main.main_10:	
	movq -16(%rbp), %reg1	

1
	movq $15798, %rax	
	subl %reg1, %reg2d	

1
	movq -136(%rbp), %reg1	
	movq %rsi, %rcx	

1
	call *%reg0	
.CellularAutomaton.cell_left_neighbor_2:	

1
	pushq %reg0	
	movq $64, %reg1	

1
	movq -16(%rbp), %rax	
	movq -136(%rbp), %rsi	

1
.Main.main_14:	
	movq 0(%r12), %rax	

1
	movq %rdi, -8(%rbp)	
	call Dictionary.new	

1
	movq $32, %rsi	
	movq $.string4_l, %reg1	

1
	movq -112(%rbp), %reg1	
	movq %r15, %rsi	

1
.ListNode.insert_2:	
	movq 0(%reg0), %reg1	

1
	movq %reg0, %rax	
	movq $0, %r10	

1
	movq $0, %rax	
	movq %rax, 72(%reg1)	

1
	movq %reg0, %reg1	
	movq $.string8, %r12	

1
	movq %rdi, %reg1	
	movq -80(%rbp), %reg1	

1
	movq 64(%r12), %r12	
	movq 8(%reg1), %reg2	

1
	movq 16(%reg0), %rdi	
	addl %reg2, %edi	

1
	subl %reg0, %reg1	
	movq $50998, %reg2	

1
	movq -48(%rbp), %rax	
	movq -48(%rbp), %rdi	

1
	movq $50213, %reg0	
	movq %reg0, %reg1	

1
	testq $1, %rax	
	jne .Main.main_22	

1
	movq -128(%rbp), %rax	
	addl %eax, %reg3	

1
	movq %reg0, %rax	
.Main.main_163:	

1
	movq -16(%rbp), %reg1	
	negl %edi	

1
	movq $3000, %reg0	
	movq %reg0, 48(%reg1)	

1
.Matrix.set_44:	
.Matrix.set_42:	

1
	idivl %esi	
	movq %reg1, %r13	

1
	testq $1, %rax	
	je .ListNode.push_1	

1
	imull %ecx	
	movq %rbx, %reg2	

1
	cmpq $Main_vtable, 0(%rdi)	
	je .Main.funccase_2	

1
	movq 16(%rbx), %rdi	
	cmpl %eax, %reg3	

1
	movq %rax, %reg1	
.Main.main_61:	

1
.Main.main_102:	
	movq -40(%rbp), %reg1	

1
	jmp .Main.func_7	
.Main.func_5:	

1
	movq -176(%rbp), %rax	
	subl %esi, %eax	

1
.Main.main_64:	
	movq %reg0, %reg1	

1
	movq -72(%rbp), %rax	
	movq %rcx, %r8	

1
	call *%reg0	
	movq 352(%rbx), %reg0	

1
	je .DicNode.get_4	
	movq $45, %reg0	

1
	movq %reg0, %rax	
	jmp .Main.main_2	

1
	subl %reg0, %reg1	
	movq $48457, %reg2	

1
	movq 640(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	call *%reg0	
	movq 400(%rbx), %reg0	

1
	call *%rax	
	movq 640(%rbx), %reg2	

1
	movq %reg0, %reg1	
	movq 0(%rax), %rbx	

1
	movq $38220, %reg0	
	movq $48887, %reg1	

1
	movq $3000, %rdi	
	movq %rdi, 544(%reg1)	

1
	movq 24(%reg0), %reg1	
	sete %dil	

1
	cmpq $String_vtable, 0(%rax)	
	je .Main.main_10	

1
	movq $3, %rdi	
	subl %edi, %eax	

1
	movq $25, %reg0	
	movq 0(%reg1), %reg2	

1
	je .List.insert_4	
	movq $104, %reg0	

1
	movq 272(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	je .Main.main_21	
	movq $11, %rsi	

1
.Main.main_101:	
	cdq	

1
.A2I.c2i_14:	
.A2I.c2i_12:	

1
	movq $5606, %r11	
	imull %r11d	

1
	je .Foo.new_8	
.Foo.new_8:	

1
	movq 24(%reg0), %reg1	
	movq %rbx, %reg3	

1
	je .Dictionary.get_4	
	movq $8, %reg0	

1
	subl %reg0, %ecx	
	movq -168(%rbp), %rax	

1
	call out_error	
.Cons.rcons_1:	

1
	movq -32(%rbp), %rsi	
	cmpl %reg2, %reg3	

1
	movq -32(%rbp), %rax	
	movq -56(%rbp), %rdi	

1
	movq 136(%reg0), %reg0	
	movq 8(%rbx), %rdi	

1
	setle %reg0l	
	jg .Main.new_12	

1
	movq 8(%reg0), %reg1	
	movq %reg2, %r12	

1
	movq $0, %rdi	
	movq %rdi, 296(%rax)	

1
	movq $3000, %rdi	
	movq %rdi, 656(%rax)	

1
.Matrix.set_21:	
	movq $5, %rcx	

1
	movq $6550, %rcx	
	movq $0, %reg1	

1
	movq %reg0, 456(%reg1)	
	movq $0, %reg0	

1
	movq $18310, %reg0	
	subl %eax, %reg2	

1
	movq %reg0, 296(%reg1)	
	movq $0, %reg0	

1
	subl %edi, %reg1	
	movq %rax, -136(%rbp)	

1
	movq -120(%rbp), %reg1	
	subl %reg1d, %eax	

1
	movq %reg0, 16(%rax)	
	movq 24(%rax), %rsi	

1
	imull %reg0	
	movq $23071, %rsi	

1
	movq 72(%reg0), %reg0	
	movq 16(%rbx), %reg2	

1
	jne .Matrix.set_40	
	movq $1, %r8	

1
	movq -168(%rbp), %rax	
	movq %rdi, %rsi	

1
	je .Main.main_189	
	movq $316, %reg0	

1
	je .Main.main_28	
	movq $13, %rsi	

1
	.globl Main.funccasei	
	.type Main.funccasei, @function	

1
	je .Main.main_37	
	movq -144(%rbp), %reg1	

1
	movq %rsi, %reg1	
	call Matrix.new	

1
.Razz.new_10:	
	movq %reg0, %reg1	

1
	je .Main.main_67	
	movq $17, %rsi	

1
	movq -80(%rbp), %rsi	
	cmpl %reg2, %reg3	

1
	movq $18422, %rbx	
	subl %reg1, %reg2	

1
	je .Main.new_2	
	cmpq $Bool_vtable, 0(%reg0)	

1
	movq 8(%reg0), %reg1	
	popq %r14	

1
	movq %rax, 72(%reg1)	
	movq $1, %rax	

1
.Main.main_2:	
	movq 0(%reg0), %rbx	

1
	movq $168, %rsi	
	movq $.string2_l, %rdi	

1
	call out_error	
.ListNode.insert_4:	

1
	.size CellularAutomaton.cell, .-CellularAutomaton.cell	
	.globl CellularAutomaton.cell_left_neighbor	

1
.Main.main_5:	
	movq 0(%rbx), %rax	

1
.Matrix.get_43:	
	movq $3, %rcx	

1
	movq -56(%rbp), %rax	
	movq -64(%rbp), %r9	

1
	subl %reg0, %reg1	
	movq $20509, %reg2	

1
	movq $27409, %reg0	
	movq $0, %reg1	

1
	sete %reg0b	
	jne .Matrix.set_14	

1
	call *%rbx	
	jmp .Main.func_2	

1
	je .Main.main_100	
	movq $64, %reg0	

1
	movq -16(%rbp), %rax	
	movq %rbx, %reg3	

1
	subl %reg0, %reg1	
	movq %reg2, -120(%rbp)	

1
	call *%r12	
	movq 80(%rbx), %reg2	

1
	movq %reg0, -32(%rbp)	
	movq $0, %reg0	

1
	.size Main.iota, .-Main.iota	
	.globl Main.main	

1
	.type Matrix.get, @function	
Matrix.get:	

1
	movq %rdi, %rbx	
	pushq %reg2	

1
	jg .Main.main_19	
	movq $.string7, %reg0	

1
	movq %rdi, %reg1	
	cmpl $0, 8(%reg1)	

1
	movq $192, %reg0	
	movq $.string5_l, %rdi	

1
	call *%r12	
.Main.funcifb_2:	

1
	movq %reg0, %reg1	
	jmp .Main.main_19	

1
	movq -104(%rbp), %reg1	
	movq -128(%rbp), %rcx	

1
	testq $1, %r8	
	je .Main.main_124	

1
	movq 16(%rbx), %reg1	
	movq 32(%rbx), %reg2	

1
.Main.main_101:	
.Main.main_99:	

1
	pushq %r15	
	movq %rdi, %rax	

1
	testq $1, %reg0	
	je .CellularAutomaton.cell_at_next_evolution_7	

1
	movq $.string10, %reg0	
	movq 0(%reg1), %rbx	

1
	movq 16(%rbx), %r12	
	movq 8(%rbx), %reg2	

1
	movq %r13, %rax	
	subl %edi, %reg3	

1
	testq $1, %rax	
	je .Complex.equal_1	

1
	.globl Bar.setJ	
	.type Bar.setJ, @function	

1
.Main.func_2:	
	movq $0, %reg0	

1
.Matrix.get_32:	
	movq $4, %rcx	

1
	movq %r14, %rcx	
	addl %reg2, %eax	

1
	negl %reg0	
	movq $57936, %reg1	

1
	je .Cons.rev_2	
	movq $74, %reg0	

1
	movq %reg0, %r12	
	movq $678987, %reg2	

1
	movq $0, %reg0	
	movq %reg0, 640(%reg1)	

1
	testq $1, %r8	
	je .Main.main_8	

1
	movq %reg0, %reg1	
	jmp .Main.main_22	

1
	movq $46874, %reg0	
	addl %eax, %ecx	

1
	movq 696(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	movq $6, %r13	
	movq 0(%rax), %reg2	

1
	movq $25947, %reg0	
	movq $22130, %rax	

1
	movq %rax, %rdi	
	movq $11282, %rax	

1
	negl %reg0	
	movq %r12, %rsi	

1
	movq $58688, %rbx	
	movq %rbx, %reg1	

1
	jmp .Main.main_153	
.Main.main_152:	

1
	je .A2I.a2i_1	
	movq $0, %rax	

1
	movq -24(%rbp), %rdi	
	addl %eax, %edi	

1
	movq -128(%rbp), %rax	
	movq %rdi, %rsi	

1
	je .Main.main_37	
	movq %reg0, %reg1	

1
	call *%r14	
	movq 0(%rbx), %reg2	

1
	call out_error	
.Main.main_90:	

1
	movq %reg0, %rax	
	jmp .Main.main_26	

1
	movq %rcx, %reg1	
	movq $1, %rax	

1
	movq 48(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	setle %dil	
	jg .Matrix.mul_4	

1
	movq 8(%rbx), %r13	
	pushq %rax	

1
	movq %reg0, %rax	
	movq -128(%rbp), %r9	

1
	cmpq $Bool_vtable, 0(%reg0)	
	je .Main.func_2	

1
	movq -32(%rbp), %rdi	
	subl %edi, %eax	

1
	je .Main.main_151	
	movq -128(%rbp), %reg1	

1
	movq $3000, %reg0	
	movq %reg0, 136(%reg1)	

1
	imull %esi	
	movq $52290, %rsi	

1
	je .Main.main_107	
	movq %reg0, %rax	

1
	movq 480(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	call *%r14	
	movq 0(%reg1), %reg2	

1
	testq $1, %rsi	
	je .Main.main_16	

1
	subl %reg0, %reg1	
	movq %r14, %rax	

1
	movq $5880, %reg0	
	movq $12843, %reg1	

1
	.quad Cons.isNil	
	.quad Cons.head	

1
	movq %rdi, %reg1	
	movq $.string7, %rax	

1
	movq $3000, %rdi	
	movq %rdi, 80(%reg1)	

1
	movq %reg0, %r10	
	movq $55273, %r11	

1
.Main.main_88:	
	movq %rbx, %rax	

1
	subl %reg0, %reg1	
	movq -64(%rbp), %reg3	

1
	jne .Matrix.set_10	
	movq %reg0, 40(%rax)	

1
	imull %esi	
	movq $55348, %rsi	

1
	movq $14901, %reg0	
	movq %reg0, %reg1	

1
	call *%r12	
	movq 440(%rbx), %rax	

1
	movq -96(%rbp), %reg1	
	movq $0, %rcx	

1
	testq $1, %reg0	
	je .Main.main_123	

1
	pushq %reg0	
	movq $80, %reg1	

1
	idivl %ecx	
	movq -16(%rbp), %rcx	

1
	movq $6, %reg0	
	movq $.string5_l, %rdi	

1
	movq $3000, %reg0	
	movq %reg0, 672(%rax)	

1
	movq %rbx, %rax	
	movq -168(%rbp), %rsi	

1
	movq $41765, %reg0	
	subl %reg1, %edi	

1
	movq 728(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq %reg0, %reg1	
.Main.main_183:	

1
	je .Foo.new_13	
	movq $10, %reg0	

1
	imull %esi	
	movq $52290, %reg1	

1
.Main.main_13:	
	movq -160(%rbp), %reg1	

1
	testq $1, %r9	
	je .Main.main_44	

1
.Matrix.set_45:	
	movq $4, %reg0	

1
	.globl Cons.tail	
	.type Cons.tail, @function	

1
	.type ListNode.get, @function	
ListNode.get:	

1
.A2I.i2a_4:	
.A2I.i2a_2:	

1
	movq %r12, %rbx	
	call Bool.new	

1
.Main.main_84:	
	movq -96(%rbp), %rsi	

1
	setl %reg0l	
	jge .Main.main_72	

1
	addl %reg0, %eax	
	movq %rax, -112(%rbp)	

1
	movq %reg0, 336(%reg1)	
	movq $0, %reg0	

1
	cmpq $Object_vtable, 0(%reg0)	
	je .Main.out_whatever_2	

1
	movq -24(%rbp), %reg1	
	imull %reg1d	

1
	je .Main.main_150	
	movq $115, %reg0	

1
	movq -112(%rbp), %reg1	
	subl %eax, %edi	

1
	addl %edi, %eax	
	movq %reg2, -112(%rbp)	

1
	movq $.string9, %reg0	
	movq %rbx, %reg2	

1
	movq 56(%r12), %r12	
	movq 8(%reg1), %reg2	

1
	call Foo.new	
	jmp .Bazz.new_6	

1
	movq %rsi, %reg1	
	movq $.string7, %reg2	

1
	movq %r12, %rbx	
	addl %ebx, %eax	

1
	call *%r12	
	jmp .Main.main_52	

1
.Matrix.get_21:	
	movq $5, %reg0	

1
	je .Main.main_19	
	movq -72(%rbp), %reg1	

1
	call Main.func	
	popq %rbx	

1
.Main.main_18:	
	movq -16(%rbp), %rdx	

1
.Bar.new_17:	
	movq %reg0, 48(%rbx)	

1
	subl %reg0, %reg1	
	movq $47353, %rax	

1
	addl %esi, %eax	
	movq -56(%rbp), %reg3	

1
	negl %reg0	
	movq $20470, %reg1	

1
	je .Main.main_20	
	movq $26, %rsi	

1
	testq $1, %rax	
	je .Main.main_151	

1
	ret	
	.size List.sort, .-List.sort	

1
	movq %rdi, 680(%reg1)	
	movq $3000, %rdi	

1
	movq -96(%rbp), %rax	
	movq %reg2, %rdi	

1
	movq -64(%rbp), %rdi	
	movq %r12, %rax	

1
	jmp .Main.main_91	
.Main.main_90:	

1
	je .Main.main_6	
.Main.main_6:	

1
	setle %al	
	xorq $1, %rax	

1
	movq %reg0, 400(%reg1)	
	movq $3000, %reg0	

1
	subl %ecx, %eax	
	movq $12, %reg2	

1
	call *%r12	
	movq 96(%reg1), %reg2	

1
	movq -144(%rbp), %rax	
	movq -136(%rbp), %rdi	

1
Main.setFoo:	
	pushq %rbp	

1
	movq 344(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq $6821, %rsi	
	movq $45379, %rax	

1
	.quad 4	
name_Object_l:	

1
	movq $.string9, %r13	
	cmpl $0, %ebx	

1
	call *%rax	
	movq 728(%rbx), %rax	

1
	movq $3, %reg0	
	movq $.string1_l, %rdi	

1
.A2I.a2i_aux_2:	
	movq %r14, %reg1	

1
	movq $62649, %reg0	
	movq 0(%rbx), %rax	

1
	movq $12, %rcx	
	movq -56(%rbp), %reg2	

1
	movq $10478, %reg0	
	subl %eax, %r8d	

1
	movq %reg0, %r13	
	jmp .Main.main_61	

1
	movq %rax, %reg1	
	movq %r12, %rdx	

1
	movq $57936, %reg0	
	movq $0, %rcx	

1
.Main.main_37:	
	movq $2234, %rax	

1
	jge .Main.main_78	
	movq %r15, %rax	

1
	movq $6, %rax	
	movq %rax, -120(%rbp)	

1
	pushq %rax	
	movq %rbx, %rdi	

1
	call *%reg0	
	movq $2730, %rax	

1
	movq 16(%rbx), %rdi	
	cmpl %edi, %reg3	

1
	movq 120(%rbx), %rbx	
	movq %reg1, %reg2	

1
	movq %rsp, %reg1	
	movq $32, %rdi	

1
	addl %edi, %eax	
	movq $57963, %rdi	

1
	movq %r14, %r8	
	subl %r8d, %reg2	

1
	.quad .string10_l	
	.quad 26	

1
	movq %reg0, %r12	
	movq $.string10, %reg2	

1
.string5_l:	
	.string "ERROR: %lld: Exception: division by zero\n"	

1
	movq %rax, %reg1	
	movq -128(%rbp), %reg3	

1
	movq $15487, %reg0	
	subl %reg1, %reg2	

1
	call *%rax	
	movq $5, %reg1	

1
	movq $8214, %r8	
	imull %r8d	

1
	movq -40(%rbp), %reg1	
	movq -104(%rbp), %rsi	

1
	movq 616(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	jne .Matrix.get_58	
	movq 184(%reg0), %reg0	

1
	setl %reg0	
	movq $2, %reg1	

1
	movq %reg0, %reg1	
	jmp .Main.main_116	

1
	jge .Main.main_2	
	movq 0(%reg0), %rax	

1
.Matrix.set_27:	
	movq $4, %reg0	

1
	movq $48557, %reg0	
	negl %reg1	

1
	call *%reg0	
	movq -16(%rbp), %rdi	

1
	je .A2I.i2a_aux_3	
	movq $102, %reg0	

1
	movq %rax, %rdi	
	movq -160(%rbp), %rax	

1
	movq $31786, %reg0	
	movq %reg0, %reg1	

1
	call *%r12	
	movq 200(%reg1), %rax	

1
	movq %r12, %reg1	
	movq %r8, %r9	

1
	movq -24(%rbp), %reg1	
	movq %rsi, %reg3	

1
	movq $0, %rax	
	movq %r12, %r13	

1
	sete %reg0l	
	jne .Main.main_113	

1
	xorq $1, %rax	
	jmp .Main.main_91	

1
	movq %reg0, 496(%rax)	
	movq $0, %reg0	

1
	movq $1, %rdi	
	movq 24(%reg1), %reg2	

1
	movq $empty_string, %reg0	
	movq %reg1, %reg2	

1
	movq %rdi, %rax	
	movq %reg2, %r8	

1
	setle %reg0	
	jmp .Main.main_157	

1
	movq $27940, %reg0	
	movq $0, %reg1	

1
	imull %reg0	
	movq $17975, %rdi	

1
	movq $1, %rcx	
	movq 8(%rax), %reg2	

1
	testq $1, %rcx	
	je .Main.main_111	

1
	movq -72(%rbp), %reg1	
	movq -40(%rbp), %rdi	

1
	.size Bazz.doh, .-Bazz.doh	
	.globl Main.main	

1
	movq %rax, %rbx	
.Main.main_70:	

1
.Main.main_165:	
.Main.main_101:	

1
.Main.out_whatever_4:	
	movq %rdi, %r12	

1
	call out_error	
.Main.main_147:	

1
	movq $13765, %rax	
	movq $5137, %reg1	

1
.Main.main_152:	
	cdq	

1
	movq $29524, %r12	
	movq 0(%reg1), %rax	

1
.Main.main_9:	
	cmpl %edi, %reg1	

1
	negl %reg0	
	movq %rax, 8(%reg2)	

1
	movq 0(%rdx), %r12	
	movq 120(%r12), %r12	

1
	movq %rax, -72(%rbp)	
	movq $13, %rax	

1
	.quad 1	
.string13_l:	

1
	movq $30018, %rax	
	subl %reg1, %edi	

1
	testq $1, %rsi	
	je .Main.main_69	

1
	movq %rax, %rbx	
	movq $13, %rax	

1
	movq %reg0, %rax	
.Main.main_164:	

1
	movq %reg0, %reg1	
	jmp .Main.main_42	

1
	addl %edi, %eax	
	leave	

1
	movq $.string7, %rdi	
	movq %reg1, %r12	

1
	movq 480(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq -32(%rbp), %reg1	
	movq -144(%rbp), %rax	

1
	subl %eax, %r8d	
	movq %rcx, %reg3	

1
	jne .Main.main_22	
	movq %reg0, %rax	

1
	je .Main.main_73	
	movq $229, %reg0	

1
	movq %reg0, 384(%reg1)	
	movq $0, %reg0	

1
	movq $3000, %rdi	
	movq %rdi, 696(%reg1)	

1
	subl %eax, %ecx	
	movq -168(%rbp), %rax	

1
	movq $.string13, %rdi	
	movq %rbx, %reg2	

1
	movq %reg0, %rsi	
	movq -80(%rbp), %rax	

1
Matrix.get:	
	pushq %reg0	

1
	.string "9"	
.string16:	

1
	movq %rbx, 8(%rax)	
.Main.main_39:	

1
	.size List.tail, .-List.tail	
	.globl List.cons	

1
	.quad Complex.x_value	
	.quad Complex.y_value	

1
	sete %r8b	
	jne .Matrix.set_47	

1
	movq 64(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq $.string8, %reg0	
	movq %rax, %rdi	

1
	call *%r12	
	movq 576(%reg1), %rax	

1
	idivl %reg0	
	movq %rax, -120(%rbp)	

1
	movq 696(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	subl %eax, %r9d	
	movq $12, %r10	

1
	movq 32(%rbx), %rdi	
	movq %rdi, 40(%rbx)	

1
	addl %edi, %eax	
	movq -136(%rbp), %reg3	

1
	je .Matrix.get_12	
	movq $40, %rsi	

1
.Matrix.set_61:	
.Matrix.set_59:	

1
	movq $22130, %rax	
	movq $60913, %rcx	

1
	movq %rbx, %rax	
	movq -152(%rbp), %reg3	

1
	movq -136(%rbp), %rax	
	movq %reg2, %rcx	

1
	movq -128(%rbp), %r8	
	imull %r8d	

1
	movq $20509, %reg0	
	subl %eax, %edi	

1
	movq -128(%rbp), %reg1	
	movq -64(%rbp), %rsi	

1
	movq $9856, %rax	
	movq $8640, %reg1	

1
	movq 40(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq -80(%rbp), %reg1	
	cmpl %eax, %reg3	

1
	movq 368(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	call *%reg0	
	movq 200(%reg1), %reg2	

1
	call IO.out_string	
	movq $1, %reg0	

1
	call out_error	
.Dictionary.insert_2:	

1
	call *%reg0	
	movq 576(%reg1), %reg2	

1
	movq -136(%rbp), %rax	
	movq -128(%rbp), %rdi	

1
	movq %rdi, -16(%rbp)	
	movq $46509, %reg2	

1
	cmpq $Foo_vtable, 0(%reg0)	
	je .Main.main_22	

1
	movq -80(%rbp), %rax	
	cmpl %edi, %eax	

1
	movq 344(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	jne .Matrix.get_49	
	movq 160(%reg0), %reg0	

1
Matrix.elMul:	
	pushq %reg0	

1
	movq %rdi, %rax	
	movq -80(%rbp), %rdi	

1
	movq -176(%rbp), %reg1	
	addl %esi, %edi	

1
	movq %rdi, 672(%reg1)	
	movq $0, %rdi	

1
	movq %rsi, %reg1	
	movq %rdx, %rax	

1
	cmpl $0, %r14d	
	movq %r14, %rdi	

1
	movq $0, %rdi	
	movq %rdi, 464(%rax)	

1
	call *%r13	
	movq %r12, %rdi	

1
	movq %rdi, 32(%rax)	
	movq $3000, %rdi	

1
	movq $25351, %rax	
	subl %eax, %ecx	

1
.Main.main_5:	
	movq 0(%reg0), %r13	

1
	call *%reg0	
	movq 208(%rbx), %reg0	

1
.A2I.a2i_3:	
	movq $0, %r13	

1
	subl %eax, %reg1	
	movq $17376, %reg2	

1
	movq -136(%rbp), %reg1	
	imull %reg1d	

1
.Main.main_57:	
	cmpl $0, %r13d	

1
	movq $6550, %rcx	
	movq $0, %r8	

1
	movq -48(%rbp), %rax	
	movq %rdi, %reg3	

1
	movq %rdi, 448(%reg1)	
	movq $3000, %rdi	

1
	movq -144(%rbp), %reg1	
	movq %rbx, %reg3	

1
.string2_l:	
	.string "Razz"	

1
	movq %reg0, %rax	
	movq -184(%rbp), %rcx	

1
	movq -176(%rbp), %rax	
	movq %rdi, %rsi	

1
	movq -8(%rbp), %rdi	
	movq -88(%rbp), %rsi	

1
	movq -144(%rbp), %reg1	
	movq %rbx, %rsi	

1
	je .Main.main_7	
	movq $2, %reg0	

1
	testq $1, %rax	
	je .Main.print_list_2	

1
.Main.main_13:	
	movq -160(%rbp), %rsi	

1
	movq $.string8, %rdi	
	movq %rdi, %rbx	

1
List.rcons:	
	pushq %rbp	

1
	movq %reg0, 8(%reg1)	
	movq %reg1, %rax	

1
	.globl A2I.new	
	.type A2I.new, @function	

1
	jmp .Matrix.set_52	
.Matrix.set_40:	

1
	negl %reg0	
	movq -168(%rbp), %reg2	

1
	je .Main.main_7	
	movq $5, %rsi	

1
	testq $1, %rax	
	je .Main.main_23	

1
	addl %reg0, %reg1	
	movq %reg2, 24(%reg3)	

1
	movq %reg0, %rsi	
	movq -40(%rbp), %reg3	

1
	movq -72(%rbp), %rsi	
	movq -48(%rbp), %reg3	

1
	movq $0, %rdi	
	movq %rdi, 552(%rax)	

1
	movq -80(%rbp), %rax	
	movq $0, %rcx	

1
	.type CellularAutomaton.cell_left_neighbor, @function	
CellularAutomaton.cell_left_neighbor:	

1
	movq %reg0, 368(%reg1)	
	movq $0, %reg0	

1
	movq $48298, %rax	
	negl %eax	

1
	movq 8(%reg0), %reg1	
	movq %rbx, %rdi	

1
	movq -136(%rbp), %rax	
	subl %reg2, %eax	

1
Dictionary.new:	
	pushq %reg0	

1
	call out_error	
.Main.main_83:	

1
	call IO.new	
	movq %reg0, 8(%rbx)	

1
.A2I.a2i_aux_2:	
	movq %reg0, %reg1	

1
	jne .Main.main_123	
	movq -80(%rbp), %rsi	

1
	movq $20470, %reg0	
	negl %ecx	

1
	subl %reg0, %reg1	
	movq $4, %reg2	

1
.Main.main_5:	
	movq %reg0, %rdx	

1
	negl %reg0	
	movq %rbx, %rdi	

1
	movq $80, %reg0	
	movq $.string4_l, %rdi	

1
	je .Main.print_list_4	
	movq $110, %reg0	

1
	setle %dil	
	jg .Main.new_12	

1
	movq %reg0, %r14	
	movq $13, %r15	

1
	je .DicNode.insert_4	
	movq $58, %reg0	

1
	je .Main.main_63	
	movq $49, %reg0	

1
A2I.c2i:	
	pushq %rbp	

1
	movq -80(%rbp), %rsi	
	cmpl %reg2, %eax	

1
	subl %ecx, %reg1	
	movq %rbx, %rcx	

1
	movq -104(%rbp), %reg1	
	addl %reg2, %esi	

1
	.size Foo.getBar, .-Foo.getBar	
	.globl Bar.getJ	

1
	testq $1, %reg0	
	je .Bar.new_12	

1
	call Bar.new	
	jmp .Bar.new_17	

1
	xorq $1, %reg0	
	jmp .Main.main_91	

1
	subq $128, %reg0	
	pushq %rbx	

1
	je .Bar.new_1	
	movq $39, %reg0	

1
	jg .Main.main_13	
	movq $.string7, %reg0	

1
	movq %rsi, %reg1	
	movq -120(%rbp), %rsi	

1
.Main.main_59:	
	movq -128(%rbp), %rax	

1
	testq $1, %reg0	
	je .Main.main_158	

1
	movq $1, %reg0	
	call IO.new	

1
	cmpq $String_vtable, 0(%reg0)	
	je .Main.main_23	

1
	movq -168(%rbp), %reg1	
	movq -184(%rbp), %rcx	

1
	jge .Main.main_39	
	movq %reg0, %rax	

1
	testq $1, %reg0	
	je .Main.main_90	

1
	movq %reg0, 608(%reg1)	
	movq $0, %reg0	

1
	movq $61139, %reg0	
	movq 0(%rbx), %reg2	

1
	movq -120(%rbp), %reg1	
	addl %ecx, %reg3	

1
	movq $3000, %rdi	
	movq %rdi, 664(%reg1)	

1
	subl %eax, %edi	
	movq %rbx, %reg3	

1
	call *%reg0	
	movq 88(%reg1), %rax	

1
	movq $0, %r14	
	movq 0(%rbx), %reg2	

1
	movq $.string12, %reg0	
	movq %reg1, %reg2	

1
	movq -88(%rbp), %rax	
	addl %reg2, %esi	

1
	movq %rdi, 424(%reg1)	
	movq $0, %rdi	

1
	movq $97, %rsi	
	movq $.string2_l, %rdi	

1
	movq -120(%rbp), %reg1	
	movq %reg2, %rax	

1
	movq %rdi, 560(%reg1)	
	movq $3000, %rdi	

1
.Complex.equal_1:	
	movq 0(%reg0), %reg1	

1
	movq 248(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq -96(%rbp), %reg1	
	movq -16(%rbp), %rsi	

1
.Bazz.new_6:	
	movq %rax, 16(%rbx)	

1
.Nil.rcons_1:	
	movq 0(%rax), %reg1	

1
	negl %ecx	
	movq $1202, %reg1	

1
	movq $49656, %reg0	
	negl %eax	

1
	sete %cl	
	jne .Matrix.get_43	

1
	movq %reg0, %rbx	
	movq -24(%rbp), %rax	

1
	movq %rsi, %reg1	
	movq -56(%rbp), %rsi	

1
	movq 512(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	movq $2, %reg0	
	addl %reg1, %esi	

1
	movq -56(%rbp), %reg1	
	movq %reg2, %r9	

1
	movq %rdi, 384(%reg1)	
	movq $3000, %rdi	

1
	je .Cons.sort_2	
	movq $76, %rsi	

1
	movq %rax, %reg1	
.CellularAutomaton.cell_at_next_evolution_4:	

1
.Main.main_3:	
	movq $1170, %reg0	

1
	subl %reg0, %reg1	
	movq -112(%rbp), %rax	

1
	movq %rax, %rbx	
	movq $1, %rax	

1
	negl %eax	
	movq $2951, %r12	

1
	movq 0(%rbx), %r12	
	movq 104(%r12), %r12	

1
	movq %reg0, %rbx	
.Main.main_7:	

1
.Main.main_19:	
	movq 0(%reg0), %reg1	

1
	movq -128(%rbp), %reg1	
	movq -168(%rbp), %reg3	

1
	je .Main.main_188	
	movq $151, %rsi	

1
	movq $.string10, %rax	
	jmp .A2I.i2c_8	

1
	movq $34498, %reg0	
	imull %esi	

1
	movq -40(%rbp), %rax	
	cmpl %reg2, %reg3	

1
	movq -80(%rbp), %rax	
	addl %esi, %reg3	

1
	movq %rax, %r15	
	popq %rax	

1
	movq $17155, %rdi	
	movq $30215, %rax	

1
	testq $1, %r8	
	je .Main.main_55	

1
	movq %rdi, 40(%rbx)	
	cmpl %reg2, %reg3	

1
	setl %sil	
	jge .Main.main_66	

1
	movq $5, %reg0	
	movq %rdi, %rsi	

1
	movq $7, %reg0	
	movq %reg1, %reg2	

1
	jmp .Matrix.set_31	
.Matrix.set_30:	

1
	subl %eax, %r9d	
	movq %r8, %rax	

1
.Matrix.set_6:	
	movq $4, %reg0	

1
.Main.new_9:	
	movq 24(%reg0), %rax	

1
	movq $29252, %reg0	
	negl %ecx	

1
	movq %rbx, %reg1	
	movq 8(%rbx), %reg2	

1
	call *%reg0	
	movq 16(%rbx), %rdi	

1
.Main.main_61:	
	cmpl $0, %r13d	

1
	movq -24(%rbp), %rax	
	movq -128(%rbp), %rcx	

1
	movq %reg0, 104(%reg1)	
	movq %reg0, %reg1	

1
.Main.main_146:	
	cdq	

1
	movq -72(%rbp), %reg1	
	movq %rdi, %rax	

1
	movq %rax, 16(%rbx)	
	movq $1000, %rax	

1
	movq %rdi, 696(%rax)	
	movq $0, %rdi	

1
	movq $12, %rax	
	movq %reg1, %rdi	

1
	idivl %reg0	
	movq %reg1, %r14	

1
	movq $24, %reg0	
	movq $.string3_l, %reg1	

1
.Razz.new_11:	
	movq %reg0, 32(%rbx)	

1
	jge .Main.main_11	
	movq $.string7, %reg0	

1
	movq $ListNode_vtable, 0(%rax)	
	movq %rax, %rbx	

1
.Main.main_7:	
	movq 8(%reg0), %rdx	

1
	movq $0, %rdi	
	movq %rdi, 264(%rax)	

1
	movq %reg0, %rdi	
	movq $1, %r8	

1
	idivl %reg0d	
	movq $33161, %reg1	

1
.Main.main_23:	
	movq $.string10, %rax	

1
	movq %reg0, %r13	
	movq $12, %reg2	

1
Cons.rcons:	
	pushq %reg0	

1
	movq $65097, %r12	
	imull %r12d	

1
	movq %rdi, %rbx	
	movq $10, %rax	

1
	call *%reg0	
	jmp .Main.main_44	

1
	movq $2, %r12	
	movq 0(%rbx), %rax	

1
	movq %rdx, %rdi	
	movq $1, %r8	

1
	movq $1, %rax	
	movq %rax, -32(%rbp)	

1
	movq $3000, %rdi	
	movq %rdi, 584(%reg1)	

1
	movq $.string6, %rbx	
	movq 0(%reg1), %r12	

1
.Main.main_26:	
	movq $.string9, %reg0	

1
	movq $22520, %reg0	
	movq $40813, %rdi	

1
	subl %reg0, %reg1	
	movq %r12, %rsi	

1
	movq $46874, %rax	
	addl %eax, %reg2	

1
	movq %reg0, %rax	
	movq %reg0, %r9	

1
.Main.main_2:	
	movq %rax, %reg1	

1
	movq $29181, %rdi	
	negl %edi	

1
	movq -128(%rbp), %rdi	
	movq -24(%rbp), %reg3	

1
	movq -24(%rbp), %rax	
	movq %rsi, %reg3	

1
	movq 8(%r12), %rax	
	movq %reg2, %rdi	

1
	setle %dil	
	jg .Main.main_15	

1
	addl %eax, %r10d	
	movq $7429, %reg2	

1
.Main.main_16:	
	movq $53961, %rax	

1
	je .Main.main_5	
	movq $11, %rsi	

1
	movq $14352, %rdi	
	cmpl %edi, %reg2	

1
.Main.main_92:	
	movq %reg0, %rax	

1
	movq %r12, %reg1	
	movq -72(%rbp), %reg3	

1
	addl %reg0, %esi	
	movq -56(%rbp), %reg3	

1
.Bar.new_11:	
	movq %rax, 32(%reg1)	

1
	movq 144(%reg0), %reg0	
	movq 16(%rbx), %rdi	

1
	addl %reg0, %ecx	
	movq -168(%rbp), %reg3	

1
	movq $19020, %rsi	
	movq $0, %rcx	

1
	subl %eax, %edi	
	movq -104(%rbp), %reg3	

1
	movq $12, %r10	
	movq -112(%rbp), %reg2	

1
	movq %r14, %rax	
	movq -16(%rbp), %rdi	

1
	movq %reg0, -16(%rbp)	
	movq $57869, %reg2	

1
	movq -48(%rbp), %reg1	
	movq -56(%rbp), %rax	

1
	movq %rsi, %rbx	
	cmpl $0, %ebx	

1
	imull %edi	
	movq %r14, %rdi	

1
	movq -168(%rbp), %r8	
	movq -184(%rbp), %reg3	

1
	call *%rax	
	movq 272(%rbx), %reg2	

1
	movq $20995, %reg0	
	movq $47127, %rsi	

1
	movq 152(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	call out_error	
.Matrix.get_38:	

1
	movq %r13, %rsi	
	movq 8(%reg2), %rdx	

1
	movq -120(%rbp), %r8	
	subl %r8d, %eax	

1
	negl %reg0	
	movq $30631, %reg1	

1
.Main.main_3:	
	movq %rdi, %rax	

1
	je .Main.main_31	
	movq $13, %reg0	

1
	movq %rdi, 720(%reg1)	
	movq $0, %rdi	

1
.Bar.new_19:	
	movq 16(%rbx), %reg1	

1
	movq -24(%rbp), %reg1	
	subl %eax, %edi	

1
.Main.main_45:	
	movq %reg0, %rsi	

1
	movq %reg0, %reg1	
	movq $.string7, %rax	

1
	movq %rax, 8(%rbx)	
	call Bar.new	

1
	movq %rax, %reg1	
	movq $.string11, %rax	

1
	movq -16(%rbp), %reg1	
	cmpl %eax, %esi	

1
	movq $29773, %reg0	
	movq 0(%rbx), %r12	

1
	movq %r14, %rax	
	negl %eax	

1
	movq %reg0, %rdx	
.Main.main_43:	

1
	movq 736(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq %rax, %rbx	
	jmp .Main.main_70	

1
	movq -72(%rbp), %rax	
	movq -40(%rbp), %rdi	

1
	movq %rax, 16(%reg1)	
	movq $1000, %rax	

1
	movq %rax, %rsi	
	movq $1317, %rax	

1
	movq $62, %reg0	
	movq $.string2_l, %rdi	

1
DicNode.setNext:	
	pushq %rbp	

1
.Main.main_169:	
.Main.main_91:	

1
	movq -168(%rbp), %reg1	
	addl %reg1d, %eax	

1
	je .Main.main_8	
	movq $11, %reg0	

1
	movq %reg0, %rbx	
	movq $5, %reg0	

1
	idivl %reg0	
	movq $37473, %rsi	

1
	call *%r13	
	movq %reg1, 16(%reg2)	

1
	movq -184(%rbp), %rax	
	movq -136(%rbp), %rsi	

1
	movq $14461, %rdi	
	movq $15505, %rax	

1
	movq -160(%rbp), %reg1	
	addl %eax, %reg3	

1
	movq $3000, %reg0	
	movq %reg0, 296(%reg1)	

1
	idivl %ecx	
	movq $17815, %rsi	

1
	movq %rdi, %rax	
	jmp .Main.main_24	

1
	movq $.string8, %rax	
	jmp .A2I.i2c_4	

1
.Cons.rev_2:	
	movq 0(%rax), %r12	

1
	negl %edi	
	movq %reg1, %rsi	

1
	movq %reg0, %reg1	
	addl %esi, %edi	

1
	subl %edi, %eax	
	movq %reg2, -144(%rbp)	

1
	movq 0(%rbx), %reg1	
	movq 32(%reg1), %reg1	

1
	movq $.string8, %rax	
	movq 0(%reg1), %r14	

1
	imull %esi	
	movq -128(%rbp), %reg2	

1
	addl %reg0, %reg1	
	movq $46874, %rax	

1
	movq $62331, %rax	
	subl %reg1, %reg2	

1
	je .Main.main_9	
	movq $153, %rsi	

1
	movq -80(%rbp), %reg1	
	addl %reg2, %esi	

1
	idivl %reg0	
	movq $55626, %reg1	

1
	movq %rdi, %rax	
	jmp .Main.main_110	

1
	movq $0, %rbx	
	movq %reg1, %r13	

1
	movq $1, %rdi	
	movq $0, %rsi	

1
	call *%rax	
	movq 0(%rax), %r13	

1
	movq $3000, %rdi	
	movq %rdi, 728(%rax)	

1
	testq $1, %r8	
	je .Main.main_161	

1
	movq 128(%r13), %r13	
	movq %rbx, %rdi	

1
.Matrix.get_17:	
	movq $3, %rcx	

1
	movq $2, %r12	
	movq 0(%rbx), %reg2	

1
	jg .Main.main_40	
	movq $9042, %rax	

1
	movq -24(%rbp), %rsi	
	movq -16(%rbp), %reg3	

1
	movq $157, %rsi	
	movq $.string5_l, %rdi	

1
	movq %rdi, %reg1	
	jmp .Main.main_104	

1
.Main.main_26:	
	movq $.string9, %rbx	

1
	.size _main, .-_main	
	.globl Foo.doh	

1
	je .Main.main_61	
	movq $49, %rsi	

1
	addl %esi, %reg1	
	movq -56(%rbp), %reg3	

1
	setle %reg0l	
	jg .Main.main_127	

1
	call *%r12	
	movq 680(%reg1), %reg2	

1
	call *%reg0	
	movq -160(%rbp), %rdx	

1
	call *%r12	
	movq 480(%reg1), %rax	

1
	movq 352(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	je .Razz.new_18	
	movq $31, %reg0	

1
	movq -24(%rbp), %reg1	
	negl %esi	

1
	.quad DicNode.incr	
	.quad DicNode.decr	

1
	movq %rax, %reg1	
	movq %rdi, %r13	

1
	movq 112(%rax), %rax	
	jmp .Matrix.get_35	

1
	movq $30996, %reg0	
	movq $0, %rcx	

1
	movq 56(%reg0), %reg0	
	movq -32(%rbp), %rdi	

1
.Matrix.set_12:	
	cdq	

1
	imull %r11d	
	movq $27940, %r11	

1
	je .Cons.sort_1	
	movq $76, %reg0	

1
	movq %r12, 8(%reg1)	
	cmpq $Bool_vtable, 0(%reg1)	

1
	movq $28379, %reg0	
	movq $0, %rcx	

1
	jmp .Matrix.set_63	
.Matrix.set_62:	

1
	.quad .string1	
	.quad 3	

1
	call *%reg0	
	jmp .Main.func_2	

1
.Main.main_88:	
	movq %rbx, %reg1	

1
	jge .Main.main_121	
	movq %reg0, %reg1	

1
	je .Main.main_18	
	movq $23, %reg0	

1
	movq %rax, %reg1	
	movq 0(%rbx), %reg3	

1
	movq 56(%r12), %r12	
	movq 24(%reg1), %reg2	

1
	addl %edi, %reg1	
	movq $55318, %reg2	

1
	movq $.string9, %rbx	
	movq 16(%rax), %r12	

1
	movq $44, %reg0	
	movq $22, %rax	

1
.Main.main_144:	
	cdq	

1
	movq %rax, %reg1	
.CellularAutomaton.evolve_1:	

1
	movq %rdi, %rax	
	movq $1, %r12	

1
	jge .Main.main_3	
	movq $2, %reg0	

1
.string8_l:	
	.string "ERROR: %lld: Exception: case without matching branch\n"	

1
	movq -144(%rbp), %rax	
	subl %eax, %esi	

1
	movq $88, %reg0	
	call getmem	

1
.Matrix.set_2:	
	movq $2, %reg0	

1
	movq -152(%rbp), %rsi	
	cmpl %reg2, %reg3	

1
	movq %reg0, %rax	
	jmp .Main.main_63	

1
	movq 40(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	jne .Matrix.get_6	
	movq 24(%rax), %rax	

1
	jne .Matrix.get_30	
	movq 96(%reg0), %reg0	

1
.Main.main_41:	
	movq 0(%r13), %rax	

1
	jge .Main.new_4	
	movq $0, %rax	

1
	movq %reg0, %reg1	
	movq $30605, %reg0	

1
.Main.main_125:	
	cdq	

1
	testq $1, %rcx	
	je .Main.main_187	

1
.Main.main_11:	
	movq 0(%rax), %r12	

1
	je .Main.main_39	
	movq $15, %rsi	

1
	movq -112(%rbp), %reg1	
	movq %r13, %rcx	

1
.Bar.new_10:	
	movq %reg0, %rax	

1
	.quad Main.iota	
	.quad Main.main	

1
	testq $1, %rcx	
	je .Main.main_22	

1
	movq %reg0, %reg1	
	movq $55049, %reg0	

1
	movq %rsi, %rax	
	movq -48(%rbp), %rax	

1
	movq $10, %reg0	
	cmpl $0, %reg1	

1
	movq %rdi, %reg1	
	movq %reg1, 56(%rbx)	

1
	addl %eax, %reg1	
	movq $37073, %reg2	

1
	movq %rdi, %rax	
	movq -136(%rbp), %rax	

1
	movq %reg0, %r13	
.CellularAutomaton.cell_at_next_evolution_2:	

1
	movq $0, %rdi	
	movq %rdi, 720(%rax)	

1
	movq %reg0, 728(%rax)	
	movq $3000, %reg0	

1
	movq %rax, %rdi	
	movq -104(%rbp), %rax	

1
	je .Main.main_41	
	movq $70, %rsi	

1
	negl %reg0	
	movq %reg1, -136(%rbp)	

1
	je .Cons.rev_2	
	movq $74, %rsi	

1
	movq -104(%rbp), %reg1	
	movq -152(%rbp), %reg3	

1
	movq $3000, %reg0	
	movq %reg0, 344(%reg1)	

1
	je .Main.main_129	
	movq %r14, %rdi	

1
	movq -176(%rbp), %reg1	
	negl %esi	

1
	movq 8(%reg0), %rsi	
	call *%rax	

1
	movq -96(%rbp), %rax	
	subl %eax, %esi	

1
	movq -96(%rbp), %rdi	
	subl %reg2, %eax	

1
	sete %reg0b	
	jne .Matrix.set_47	

1
	movq $18189, %reg0	
	movq $0, %reg1	

1
	movq %reg0, %r12	
	movq $678987, %r13	

1
	movq 16(%reg0), %reg1	
	addl %edi, %eax	

1
	movq $3000, %rdi	
	movq %rdi, 640(%rax)	

1
	je .Main.main_44	
	movq $34, %reg0	

1
.Main.main_56:	
.Main.main_54:	

1
	movq %rax, %reg1	
.Matrix.elMul_1:	

1
	movq $78, %rsi	
	movq $.string2_l, %reg1	

1
	movq -168(%rbp), %reg1	
	movq -184(%rbp), %reg3	

1
	movq -128(%rbp), %r8	
	negl %r8d	

1
.string20_l:	
	.string " == "	

1
	jne .Matrix.set_21	
	movq %rdi, 72(%reg1)	

1
	movq -120(%rbp), %rax	
	subl %eax, %reg3	

1
	movq 96(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	idivl %r9d	
	movq $27409, %r9	

1
	movq $3000, %reg0	
	movq %reg0, 360(%reg1)	

1
	imull %esi	
	movq $28379, %reg1	

1
	je .Main.main_19	
	movq 0(%reg0), %rax	

1
	movq 504(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 352(%rax)	

1
	movq 376(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	subl %reg0, %reg1	
	movq 0(%reg2), %r13	

1
	.quad 12	
substrerr_string_l:	

1
	movq $54759, %reg0	
	movq %reg0, %reg1	

1
	movq -96(%rbp), %rax	
	movq -48(%rbp), %rcx	

1
	je .Razz.new_9	
.Razz.new_8:	

1
.CellularAutomaton.cell_at_next_evolution_1:	
	movq $0, %rax	

1
	je .Razz.new_15	
.Razz.new_15:	

1
.Main.main_74:	
	jmp .Main.main_171	

1
.Matrix.get_42:	
	jmp .Matrix.get_52	

1
	movq %reg0, 712(%rax)	
	movq $3000, %reg0	

1
	movq -160(%rbp), %reg1	
	addl %reg2, %reg3d	

1
	jne .Matrix.set_28	
	movq %reg0, 88(%reg1)	

1
	movq -144(%rbp), %reg1	
	movq -168(%rbp), %reg3	

1
.Main.main_9:	
	movq -136(%rbp), %rax	

1
	call *%r15	
	movq -176(%rbp), %rdi	

1
	movq %reg0, %r8	
	movq %reg2, %rax	

1
	je .Main.main_191	
	movq $151, %rsi	

1
	je .Matrix.get_66	
	movq $78, %reg0	

1
	movq $.string9, %reg0	
	movq 16(%rax), %r12	

1
	movq %reg0, %rax	
	jmp .Bar.new_6	

1
	je .Main.main_64	
	movq $17, %reg0	

1
.Main.main_20:	
	movq $62649, %reg0	

1
	je .Main.main_7	
	movq $162, %rsi	

1
	movq %rdi, 16(%reg1)	
	movq $3000, %rdi	

1
.CellularAutomaton.cell_at_next_evolution_2:	
	movq 0(%reg0), %reg1	

1
.Bar.new_12:	
	movq 32(%rbx), %reg1	

1
	movq $.string11, %reg0	
	jmp .A2I.i2c_10	

1
	movq %rdi, 312(%reg1)	
	movq $0, %rdi	

1
	movq %r14, %rax	
	sete %al	

1
	movq 16(%rax), %rdi	
	negl %edi	

1
.Bar.new_1:	
	cmpq $Bar_vtable, 0(%rbx)	

1
	movq %reg0, %reg1	
	jmp .Main.main_135	

1
	sete %r8b	
	jne .Matrix.get_14	

1
	movq $.string6, %rdi	
	movq %rdi, %rsi	

1
	movq %reg0, 280(%reg1)	
	movq $3000, %reg0	

1
	movq %reg0, -80(%rbp)	
	movq $12, %reg0	

1
	movq $.string10, %reg0	
	movq -8(%rbp), %reg2	

1
	je .Main.main_41	
	movq -80(%rbp), %reg1	

1
	je .Main.main_14	
	movq $6, %rax	

1
	movq 8(%r12), %rax	
	movq 0(%reg2), %r13	

1
	call *%r12	
	movq -136(%rbp), %reg2	

1
	je .Main.main_16	
	cmpq $Bool_vtable, 0(%rdi)	

1
	movq $0, %reg0	
	movq %reg0, 576(%rax)	

1
	movq %reg0, %rbp	
	movq $32, %reg2	

1
	call out_error	
.Main.main_165:	

1
.Main.main_3:	
	movq %reg0, %rsi	

1
	movq %reg0, %r12	
.Main.funcwhileb_1:	

1
	movq %rdi, 664(%reg1)	
	movq $0, %rdi	

1
	movq %rax, 24(%rbx)	
	jmp .Main.new_3	

1
	subl %reg0, %esi	
	movq -152(%rbp), %reg3	

1
	movq $10809, %rax	
	subl %eax, %r8d	

1
	movq $4844, %rax	
	movq $42968, %reg1	

1
	movq 352(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	.size Bar.new, .-Bar.new	
	.globl Foo.new	

1
	movq %reg0, %reg1	
	movq $18429, %reg2	

1
	call *%r12	
	movq 672(%reg1), %rax	

1
	testq $1, %rbx	
	je .Main.main_42	

1
	movq %rax, %rdi	
	movq $30605, %rax	

1
	sete %cl	
	jne .Matrix.get_60	

1
	movq $18119, %reg0	
	subl %reg1, %edi	

1
	testq $1, %rsi	
	je .Main.main_164	

1
	movq %rdi, %rbx	
	movq $20, %rax	

1
	call *%rax	
.Main.main_31:	

1
.Main.main_21:	
	movq 0(%reg0), %rax	

1
	movq %rax, %r13	
	movq $.string10, %r14	

1
	.quad Bazz.new	
	.quad Object.abort	

1
	movq $3000, %rdi	
	movq %rdi, 352(%reg1)	

1
	movq $49119, %rax	
	movq $40570, %r8	

1
	addl %reg0, %reg1	
	movq %rdi, 16(%reg3)	

1
	testq $1, %rdi	
	je .DicNode.get_4	

1
	je .Main.main_16	
	movq $21, %reg0	

1
.List.insert_4:	
	movq 8(%reg0), %rdx	

1
	movq %rdi, 136(%reg1)	
	movq %rdi, %reg1	

1
	movq -88(%rbp), %reg1	
	call *%reg2	

1
	movq 584(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq $108, %rsi	
	movq $.string3_l, %rdi	

1
	.size Main.main, .-Main.main	
	.globl Main.out_whatever	

1
	movq -16(%rbp), %rax	
	subl %reg2, %ecx	

1
	movq -64(%rbp), %reg1	
	movq -72(%rbp), %rdi	

1
	testq $1, %reg0	
	je .Main.print_list_1	

1
	subl %reg0, %edi	
	movq -80(%rbp), %reg3	

1
	movq %reg0, -176(%rbp)	
	movq %reg2, %reg0	

1
	call *%reg0	
	movq 88(%rbx), %rax	

1
	je .Main.main_63	
	movq $215, %rsi	

1
	movq $.string10, %rbx	
	movq -8(%rbp), %rdx	

1
.string11_l:	
	.string "ya"	

1
	testq $1, %rax	
	je .Main.main_102	

1
	cmpl $0, 24(%rax)	
	movq 24(%rax), %reg1	

1
	movq 16(%reg0), %rax	
	movq 24(%reg0), %rsi	

1
	movq $24092, %rax	
	movq 0(%rbx), %r12	

1
	movq $17815, %reg0	
	movq %reg0, %reg1	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_3	

1
	addl %eax, %edi	
	movq $25947, %rsi	

1
	movq -144(%rbp), %reg1	
	negl %edi	

1
	idivl %r10d	
	movq -176(%rbp), %r10	

1
	movq $90, %reg0	
	subl %reg1, %reg2	

1
.Main.main_4:	
	movq $2, %rax	

1
	subl %eax, %esi	
	movq -112(%rbp), %rcx	

1
	movq -56(%rbp), %reg1	
	movq -96(%rbp), %reg3	

1
	movq $18189, %reg0	
	movq $0, %rbx	

1
	jne .Matrix.get_32	
	movq 104(%reg0), %reg0	

1
	movq -120(%rbp), %rax	
	subl %reg2, %edi	

1
	jne .Matrix.get_54	
	movq 168(%reg0), %reg0	

1
	addl %eax, %edi	
	movq $25947, %reg2	

1
.Main.main_146:	
	movq %reg0, %rax	

1
	subl %reg0, %reg1	
	movq $4, %rdi	

1
	call String.length	
	movq $1, %reg0	

1
	movq 56(%r15), %r15	
	movq %r12, %reg2	

1
	movq 8(%rbx), %reg1	
	movq 16(%rbx), %reg2	

1
	movq $45332, %reg0	
	cmpl %reg1, %reg2	

1
	movq -32(%rbp), %reg1	
	movq -144(%rbp), %rdi	

1
	movq %reg0, 8(%reg1)	
	movq $2, %r13	

1
	movq 16(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq %reg0, %rdi	
	movq $60606, %reg0	

1
	je .Main.main_64	
	movq -160(%rbp), %reg1	

1
	movq $.string7, %reg0	
	movq %rbx, %r12	

1
	movq $1, %reg0	
	jmp .A2I.c2i_4	

1
	movq %reg0, %reg1	
	movq 24(%reg1), %reg2	

1
	.size Nil.print_list, .-Nil.print_list	
	.globl Main.iota	

1
	movq $13, %rbx	
	movq 0(%reg1), %rax	

1
.Main.main_3:	
	movq 0(%reg0), %rbx	

1
	.quad Foo.y	
	.quad Foo.z	

1
	movq %rax, %reg1	
	movq $33, %rax	

1
.ListNode.push_1:	
	movq 8(%reg0), %reg1	

1
	call out_error	
.Main.print_list_4:	

1
	je .Main.main_40	
	movq $34, %rsi	

1
	movq %r14, %r8	
	imull %r8d	

1
	movq -168(%rbp), %rax	
	movq -40(%rbp), %rdi	

1
	movq %reg0, %reg1	
	movq $1, %rbx	

1
	movq $3000, %rdi	
	movq %rdi, 464(%reg1)	

1
	movq $0, %reg0	
	movq %reg0, 256(%reg1)	

1
	addl %eax, %ecx	
	movq -112(%rbp), %reg3	

1
	movq $62343, %r12	
	movq 0(%reg1), %reg2	

1
	call *%rax	
	movq %rax, 64(%reg1)	

1
	testq $1, %rax	
	je .Bar.new_20	

1
	movq 184(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq 0(%r12), %rax	
	movq 136(%rax), %rax	

1
	movq -112(%rbp), %rsi	
	imull %reg2	

1
	movq 192(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	call *%r12	
	movq 432(%rbx), %rax	

1
	jne .CellularAutomaton.cell_at_next_evolution_1	
	movq $1, %reg0	

1
	movq %rax, %rdi	
	movq -176(%rbp), %rax	

1
DicNode.getCount:	
	pushq %reg0	

1
	movq $5, %reg0	
	movq %rdi, %reg2	

1
	movq $49411, %reg0	
	movq %reg0, %reg1	

1
	jmp .Matrix.set_61	
.Matrix.set_60:	

1
.Main.fib_1:	
	movq $1, %reg0	

1
	movq -80(%rbp), %rax	
	movq -80(%rbp), %reg2	

1
	call Razz.new	
	movq %rax, 24(%rbx)	

1
	movq 360(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	movq 8(%r12), %r13	
	movq 0(%rbx), %reg3	

1
.Main.funcifb_2:	
	popq %r12	

1
	movq $2, %rax	
	movq $2, %rsi	

1
	je .ListNode.insert_4	
	movq $128, %rsi	

1
	movq $0, %reg0	
	movq %reg0, 504(%rax)	

1
.Main.fib_2:	
	popq %r13	

1
	.size A2I.i2a, .-A2I.i2a	
	.globl A2I.i2a_aux	

1
	movq 56(%reg0), %reg0	
	movq 8(%rax), %rdi	

1
	cmpl $0, %r14d	
	movq %r14, %rax	

1
.Main.main_147:	
	movq -160(%rbp), %rax	

1
	testq $1, %reg0	
	je .Matrix.set_12	

1
	testq $1, %reg0	
	je .Main.main_106	

1
	call *%reg0	
	movq 120(%reg1), %r12	

1
.Matrix.elMul_2:	
	movq %r14, %rax	

1
	subl %reg0, %reg1	
	movq %rax, -112(%rbp)	

1
	movq $63562, %rsi	
	movq %rsi, %rcx	

1
	movq $0, %reg0	
	movq %reg0, 344(%rax)	

1
	movq $62343, %reg0	
	movq 0(%rbx), %reg2	

1
	movq 600(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq %reg0, %reg1	
	movq %reg1, -104(%rbp)	

1
	movq -16(%rbp), %rsi	
	subl %reg2, %eax	

1
	subl %edi, %eax	
	movq -16(%rbp), %reg3	

1
.Razz.new_6:	
	movq %reg0, 16(%reg1)	

1
	movq 96(%r14), %r14	
	movq %rax, %reg2	

1
	movq $.string7, %rax	
	movq %rax, 24(%rbx)	

1
	movq -160(%rbp), %rsi	
	cmpl %reg2, %reg3	

1
	je .Bazz.new_4	
	cmpq $Bazz_vtable, 0(%rbx)	

1
	movq $22, %reg0	
	popq %reg1	

1
.Main.main_36:	
.Main.main_34:	

1
	je .Main.main_176	
	movq $308, %reg0	

1
	idivl %reg0d	
	addl %reg1, %r10d	

1
	.quad String_vtable	
	.quad .string16_l	

1
	subl %reg0, %edi	
	movq $14379, %reg2	

1
	addl %edi, %eax	
	movq $8340, %reg2	

1
	movq $33472, %reg0	
	movq $7201, %reg1	

1
	movq $1, %r9	
	movq %r8, %rcx	

1
.Main.func_2:	
	movq $.string6, %r12	

1
	movq %reg0, 576(%reg1)	
	movq $0, %reg0	

1
	imull %reg0	
	movq $55348, %rsi	

1
	movq $12, %reg0	
	cmpl $0, %reg1d	

1
.Main.main_136:	
	movq %reg0, %reg1	

1
	jge .Main.main_3	
	movq %r12, %rdi	

1
	movq $59, %reg0	
	movq $.string5_l, %reg1	

1
	movq %reg0, 600(%rax)	
	movq $3000, %reg0	

1
.Main.main_2:	
.Main.main_4:	

1
	movq $3000, %rdi	
	movq %rdi, 544(%rax)	

1
	movq %reg0, 16(%rax)	
	movq $3000, %reg0	

1
.Main.main_154:	
	movq -40(%rbp), %rdi	

1
	subl %eax, %reg1	
	movq $54460, %rax	

1
	je .Main.main_2	
	cmpl %reg0, %reg1	

1
	call Matrix.new	
	movq %rax, %rbx	

1
	movq $50, %reg0	
	movq $.string3_l, %reg1	

1
	movq $0, %rdi	
	jmp .Main.new_4	

1
	movq $name_Int, %r12	
	movq 0(%reg1), %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 576(%rax)	

1
	je .Main.main_24	
	movq $13, %reg0	

1
	movq %reg0, %reg1	
	movq $5, %r12	

1
	testq $1, %rcx	
	je .Main.main_153	

1
	movq $35, %rsi	
	movq $90, %reg1	

1
	movq $47963, %reg0	
	imull %reg0d	

1
	movq %rdi, %reg1	
	movq 0(%rax), %reg3	

1
	jne .Matrix.set_62	
	movq %reg0, 200(%reg1)	

1
	movq %reg0, %reg1	
	jmp .Main.main_70	

1
.Main.main_12:	
	movq %rbx, %reg1	

1
	movq $1, %rdi	
	movq %reg1, %rcx	

1
	movq $3326, %reg0	
	movq %reg0, %rcx	

1
	jg .Main.main_105	
	movq -96(%rbp), %reg1	

1
	movq 120(%r13), %r13	
	movq %rbx, %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 712(%rax)	

1
	movq -104(%rbp), %reg1	
	subl %reg2, %eax	

1
.Main.main_23:	
	cmpl $0, %r13d	

1
	call *%r12	
	movq 336(%rbx), %reg2	

1
.Main.main_9:	
	movq %r12, %reg1	

1
	subl %edi, %eax	
	movq %r13, %reg3	

1
	movq $.string15, %reg0	
	movq 0(%rbx), %reg2	

1
	subl %eax, %ebx	
	movq $47353, %rax	

1
	movq $23915, %reg0	
	movq $63399, %reg1	

1
	movq %rdi, %reg1	
	jmp .Main.main_97	

1
	je .Main.main_181	
	movq $151, %reg0	

1
.Main.main_2:	
	movq %reg0, %rdx	

1
	je .Main.main_104	
	movq $64, %reg0	

1
	call *%r12	
	movq $0, %r13	

1
.Complex.equal_2:	
	movq $0, %rax	

1
	subl %reg0, %eax	
	movq %r12, %rsi	

1
	sete %r8b	
	jne .Matrix.set_54	

1
Matrix.mul:	
	pushq %rbp	

1
	call Matrix.new	
	movq %rax, %r13	

1
	movq -160(%rbp), %rsi	
	cmpl %reg2, %eax	

1
	call *%r12	
	movq 72(%rbx), %rax	

1
.Main.main_14:	
	movq 0(%rbx), %rax	

1
.Main.main_21:	
	cmpq $Foo_vtable, 0(%reg0)	

1
	movq -184(%rbp), %rax	
	movq %rsi, %rcx	

1
	movq %rdi, 224(%reg1)	
	movq $3000, %rdi	

1
	movq %rax, %reg1	
	jmp .CellularAutomaton.evolve_1	

1
	movq 8(%rax), %rax	
	popq %reg1	

1
	movq %reg0, %rax	
	jmp .Matrix.set_7	

1
	movq -112(%rbp), %reg1	
	addl %ecx, %reg3	

1
	je .Bar.new_16	
	cmpq $Razz_vtable, 0(%rbx)	

1
	addl %eax, %edi	
	movq $28260, %reg2	

1
	movq %reg0, 672(%rax)	
	movq $3000, %reg0	

1
	call out_error	
.Main.main_130:	

1
	setl %sil	
	jge .Main.main_45	

1
	movq $154, %reg0	
	movq $.string5_l, %reg1	

1
	movq -152(%rbp), %reg1	
	negl %edi	

1
	testq $1, %rcx	
	je .Main.main_38	

1
	movq 344(%rbx), %r12	
	movq 0(%rbx), %rax	

1
.A2I.c2i_7:	
	movq $.string11, %rdi	

1
	call *%rax	
	movq $.string10, %rax	

1
	idivl %esi	
	movq 0(%rbx), %reg2	

1
	movq $3, %rdi	
	subl %reg1, %reg2	

1
	movq -56(%rbp), %rsi	
	movq -48(%rbp), %rax	

1
	call Bool.new	
	movq 8(%rax), %rax	

1
	movq 96(%r12), %r12	
	movq %rbx, %reg2	

1
	movq $4, %reg0	
	jmp .A2I.c2i_10	

1
	.quad IO.out_string	
	.quad Nil.isNil	

1
	setle %sil	
	jg .Main.main_49	

1
	movq $27399, %rdi	
	imull %reg1	

1
	movq %reg0, 336(%reg1)	
	movq $3000, %reg0	

1
	subl %ecx, %reg1	
	negl %reg1	

1
	.quad Bazz.doh	
Bool_vtable:	

1
	movq -16(%rbp), %rax	
	movq %rsi, %reg3	

1
	movq %reg0, %rax	
	jmp .Main.main_40	

1
	movq %reg0, 512(%reg1)	
	movq $3000, %reg0	

1
.Matrix.set_58:	
	movq $4, %reg0	

1
	movq -80(%rbp), %rax	
	movq -96(%rbp), %reg3	

1
	movq %rdi, %reg1	
	movq $name_Int, %reg2	

1
	negl %eax	
	movq $33636, %rdi	

1
	ret	
	.size Cons.insert, .-Cons.insert	

1
	movq $0, %reg0	
	movq %reg0, 624(%reg1)	

1
	sete %cl	
	jne .A2I.i2c_15	

1
	movq -80(%rbp), %rsi	
	movq -168(%rbp), %reg3	

1
	movq $2, %reg0	
	movq %reg0, -16(%rbp)	

1
	movq $12, %rax	
	movq %rax, %rbx	

1
	je .Main.main_3	
	movq $6, %reg0	

1
	je .Foo.new_5	
	cmpq $Razz_vtable, 0(%rbx)	

1
	.type A2I.a2i_aux, @function	
A2I.a2i_aux:	

1
	movq %rax, 24(%reg1)	
	movq $1, %rax	

1
	movq 64(%reg0), %reg0	
	movq 24(%rbx), %reg2	

1
	idivl %reg0d	
	movq $28227, %reg0	

1
	movq $.string8, %rdi	
	movq %rbx, %r12	

1
	sete %sil	
	jne .Complex.print_1	

1
	negl %reg0d	
	movq $1357, %reg1	

1
.Matrix.get_54:	
	movq $2, %reg0	

1
	movq -104(%rbp), %reg1	
	addl %eax, %reg3	

1
	movq 192(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq $.string21, %reg0	
	movq 0(%rbx), %reg2	

1
	movq $10478, %reg0	
	subl %eax, %reg2d	

1
	.globl Main.setFoo	
	.type Main.setFoo, @function	

1
	movq $3000, %reg0	
	movq %reg0, 24(%rax)	

1
	.quad 92	
	.quad Main.new	

1
	movq 8(%rbx), %reg1	
	movq %rdi, %reg3	

1
	movq -48(%rbp), %rax	
	movq -72(%rbp), %rdi	

1
	movq 720(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	addl %reg0, %edi	
	movq -80(%rbp), %rax	

1
	movq %reg0, %rax	
	movq -152(%rbp), %reg0	

1
	call out_error	
.List.insert_2:	

1
	movq 24(%reg0), %rdi	
	sete %reg2l	

1
	movq %rax, %rsi	
	movq %r14, %rax	

1
	movq %r15, %rax	
	movq %r13, %reg3	

1
	movq %rdi, %rax	
.Main.main_165:	

1
	movq %reg0, %rsi	
	addl %reg2, %esi	

1
	movq %reg0, %reg1	
	movq $57869, -24(%rbp)	

1
	movq $22130, %reg0	
	movq $60913, %rcx	

1
	imull %esi	
	movq $59714, %rsi	

1
	addl %r10d, %reg1	
	movq $60127, %r10	

1
	movq -128(%rbp), %reg1	
	movq %rdi, %rsi	

1
	movq 8(%reg0), %reg0	
	popq %rbx	

1
.Bar.getX_1:	
	movq 8(%reg0), %rdx	

1
	idivl %reg0	
	movq %reg1, %r8	

1
	movq $132, %rsi	
	movq $.string3_l, %reg1	

1
.Main.main_4:	
	movq $1, %rax	

1
	movq -40(%rbp), %rax	
	movq $0, %reg2	

1
	je .Main.main_111	
	movq $67, %rsi	

1
	movq 16(%rax), %reg1	
	movq %r12, %reg3	

1
	setle %reg0l	
	jg .Main.main_84	

1
	sete %r13b	
	jne .A2I.c2i_1	

1
	movq -184(%rbp), %reg1	
	subl %reg1d, %eax	

1
	subl %edi, %eax	
	movq %rax, -176(%rbp)	

1
	movq %reg0, 640(%reg1)	
	movq $0, %reg0	

1
	movq 128(%reg0), %reg0	
	movq 16(%reg1), %rdi	

1
	testq $1, %rdi	
	je .Matrix.mul_5	

1
	je .Cons.print_list_1	
	movq $93, %reg0	

1
	movq %rsi, %rdi	
	movq $0, %reg2	

1
	.type Nil.sort, @function	
Nil.sort:	

1
	.quad 4	
.string0_l:	

1
	.size Cons.car, .-Cons.car	
	.globl Cons.cdr	

1
	negl %edi	
	movq %reg1, 8(%rax)	

1
	movq %reg0, -24(%rbp)	
	movq $0, %reg0	

1
	movq %rdi, 80(%rax)	
	movq %rdi, %rax	

1
	jge .Main.main_9	
	movq $.string8, %reg0	

1
.Main.main_5:	
	cmpl $0, %r12d	

1
	movq 136(%reg0), %reg0	
	movq 8(%reg1), %rdi	

1
	movq $5, %r14	
	movq 0(%rbx), %rax	

1
	call *%rax	
	movq 392(%rbx), %reg2	

1
	call *%reg0	
	movq $.string12, %reg1	

1
	.quad DicNode.init	
	.quad DicNode.get	

1
.Matrix.get_44:	
.Matrix.get_42:	

1
.Main.main_20:	
	movq $2, %rax	

1
	movq 520(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	jne .Matrix.get_27	
	movq $1, %rcx	

1
Bar.getJ:	
	pushq %reg0	

1
	jne .DicNode.insert_1	
	movq %reg0, %rax	

1
	addl %reg0, %edi	
	movq $37073, %reg2	

1
	movq %rsi, %rax	
	movq -152(%rbp), %rax	

1
	movq %rbx, %r12	
	movq $0, %rbx	

1
.Main.main_47:	
	movq %reg0, %reg1	

1
	movq $3453, %r12	
	movq 0(%rbx), %rax	

1
	movq -144(%rbp), %rax	
	imull %ecx	

1
	testq $1, %reg0	
	je .Main.main_147	

1
	je .Main.func_1	
	movq $1, %rdi	

1
	movq -40(%rbp), %rax	
	addl %eax, %edi	

1
	.quad 2	
.string8_l:	

1
	jmp .Main.main_31	
.Main.main_28:	

1
	movq %rcx, %reg1	
	negl %ecx	

1
.Bar.new_17:	
	movq %rax, 48(%rbx)	

1
	call Object.type_name	
	movq %rax, %reg1	

1
.Dictionary.get_2:	
	movq 0(%reg0), %r13	

1
	testq $1, %rsi	
	je .Main.main_20	

1
	movq 24(%rbx), %reg1	
	movq 0(%reg1), %rax	

1
	sete %reg0b	
	jne .A2I.c2i_3	

1
	movq $5, %reg0	
	cmpl %reg1, %eax	

1
.Main.main_3:	
	movq 0(%reg0), %r14	

1
	sete %reg0b	
	jne .Matrix.get_27	

1
	movq -104(%rbp), %reg1	
	addl %eax, %esi	

1
	movq $0, %reg0	
	movq %reg0, 360(%rax)	

1
	movq 16(%rax), %rdi	
	subl %esi, %edi	

1
	subl %reg0, %eax	
	movq %rax, -144(%rbp)	

1
	subl %eax, %r8d	
	movq -96(%rbp), %reg3	

1
	movq %rax, %r13	
	cmpl $0, %r13d	

1
	movq $18781, %reg0	
	imull %ecx	

1
	movq %reg0, 712(%rax)	
	movq $0, %reg0	

1
	movq -32(%rbp), %rdi	
	movq %r13, %rsi	

1
	movq $10, %rdi	
	movq %r14, %reg2	

1
	movq -168(%rbp), %reg1	
	movq -48(%rbp), %reg3	

1
	movq -128(%rbp), %reg1	
	movq %reg1, -72(%rbp)	

1
	movq $.string9, %r14	
	movq 0(%reg1), %rax	

1
.Razz.new_19:	
	movq 16(%rbx), %reg1	

1
	movq $33866, %reg0	
	subl %reg1, %reg2	

1
.Main.main_1:	
	movq $.string7, %reg0	

1
.Razz.new_14:	
	cmpq $Bar_vtable, 0(%reg0)	

1
	movq $41455, %reg0	
	movq $64464, %reg1	

1
	movq $2, %rcx	
	movq 8(%reg1), %reg2	

1
	movq -128(%rbp), %rax	
	subl %eax, %edi	

1
	movq $0, %rdi	
	movq %rdi, 376(%rax)	

1
	movq %rbx, %rax	
	jmp .DicNode.insert_2	

1
	je .Main.main_8	
	movq $17, %reg0	

1
	subl %r10d, %eax	
	movq $5411, %r10	

1
	sete %reg0	
	jne .Matrix.get_34	

1
	testq $1, %reg0	
	je .Main.new_2	

1
	movq $840, %reg0	
	movq %reg0, %rcx	

1
	.quad List.cons	
	.quad Cons.init	

1
	movq $3000, %reg0	
	movq %reg0, 376(%rax)	

1
	movq $6, %rsi	
	movq $.string5_l, %reg1	

1
	movq %reg0, 72(%rbx)	
	movq $1, %reg0	

1
	movq %rax, %r14	
	movq $1, %rdi	

1
	subl %reg0, %ecx	
	movq -96(%rbp), %reg3	

1
	movq -112(%rbp), %rax	
	movq -136(%rbp), %reg3	

1
	call *%reg0	
	movq %reg1, 16(%rbx)	

1
	call *%reg0	
	movq $empty_string, %reg0	

1
	call *%reg0	
	jmp .Main.main_35	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_61	

1
	sete %sil	
	jne .Main.main_134	

1
	call *%reg0	
	movq 24(%reg1), %reg2	

1
.Main.main_76:	
.Main.main_74:	

1
	movq %rax, %reg1	
.Main.main_16:	

1
	movq $8340, %rdi	
	negl %edi	

1
	movq $37073, %reg0	
	movq $6195, %rsi	

1
	movq -96(%rbp), %reg1	
	subl %eax, %reg3	

1
	call *%reg0	
	movq 272(%reg1), %r12	

1
	movq %reg0, 624(%reg1)	
	movq $3000, %reg0	

1
	movq $38511, %rax	
	subl %reg1, %reg2	

1
	jne .A2I.a2i_3	
	movq $1, %reg0	

1
	movq $3000, %reg0	
	movq %reg0, 552(%reg1)	

1
Main.funccase:	
	pushq %reg0	

1
.Razz.new_1:	
	cmpq $Bar_vtable, 0(%reg0)	

1
	je .Main.main_15	
	movq $157, %reg0	

1
	imull %reg0	
	movq %reg1, -128(%rbp)	

1
	subl %reg0, %r8d	
	movq $12, %reg2	

1
	movq $17979, %rbx	
	imull %reg1	

1
	negl %eax	
	movq $17979, %rbx	

1
	movq -48(%rbp), %reg1	
	call *%reg2	

1
.string3_l:	
	.string "Main"	

1
.Main.new_4:	
	movq %rdi, 80(%reg1)	

1
	movq 288(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq -96(%rbp), %reg1	
	movq -48(%rbp), %rax	

1
	movq 240(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
.Cons.rcons_2:	
	movq 0(%rax), %reg1	

1
	je .Main.main_6	
	movq $2, %r12	

1
	call *%r12	
	movq 344(%rbx), %r12	

1
	movq 8(%rax), %r13	
	pushq %rax	

1
	idivl %reg0	
	movq $15755, %rsi	

1
	idivl %esi	
	movq -96(%rbp), %reg2	

1
	call *%rax	
	movq 240(%reg1), %rax	

1
	movq $39267, %rsi	
	negl %reg1	

1
	jge .Main.fib_1	
	movq $1, %rax	

1
	movq -128(%rbp), %reg1	
	movq -136(%rbp), %rdi	

1
	movq 440(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq %rsi, %reg1	
	movq 0(%reg2), %rbx	

1
	movq -104(%rbp), %reg1	
	movq %rsi, %reg3	

1
.string10_l:	
	.string "\\\\\\\""	

1
	movq $5660, %reg0	
	subl %reg0d, %eax	

1
	jne .Matrix.set_1	
	movq $1, %r8	

1
.Main.new_2:	
	movq $1, %rdi	

1
	movq 168(%rbx), %r12	
	movq 0(%rbx), %rax	

1
.Main.main_11:	
	movq 0(%rbx), %r15	

1
	negl %eax	
	movq -24(%rbp), %reg2	

1
	subl %reg0, %eax	
	movq %rbx, %rcx	

1
	negl %eax	
	movq %reg1, %r11	

1
	movq 24(%reg0), %reg1	
	movq %r12, %rdi	

1
	movq $0, %reg0	
	movq %reg0, 536(%rax)	

1
	movq %reg0, 152(%rax)	
	movq %reg0, %rax	

1
	cmpq $String_vtable, 0(%reg0)	
	je .Main.main_7	

1
	movq $38661, %rdi	
	imull %reg1	

1
.Main.new_4:	
	movq %reg0, 8(%reg1)	

1
	movq $57936, %reg0	
	movq $0, %reg1	

1
	je .Main.main_7	
	cmpq $Int_vtable, 0(%reg0)	

1
	movq $3966, %reg0	
	cmpl %edi, %reg2	

1
	movq %reg0, %rsi	
	movq 8(%rbx), %rdx	

1
	movq -80(%rbp), %reg1	
	movq %rbx, %rdi	

1
	movq $180, %rsi	
	movq $.string5_l, %reg1	

1
	movq 64(%r14), %r14	
	movq %reg1, %reg2	

1
	movq %rbx, %rax	
	testq $1, %rax	

1
	movq %reg0, %rax	
	jmp .Main.main_118	

1
	movq %rdi, 576(%rax)	
	movq $3000, %rdi	

1
	movq -160(%rbp), %reg1	
	subl %reg2, %edi	

1
	movq %rdi, 216(%reg1)	
	movq $0, %rdi	

1
	movq %rdi, %reg1	
	jmp .Main.main_116	

1
	imull %esi	
	movq $16280, %rsi	

1
	movq $63399, %reg0	
	imull %esi	

1
	movq 56(%reg0), %reg0	
	movq 24(%rax), %reg2	

1
	movq 16(%reg0), %reg1	
	subl %esi, %reg3	

1
	je .Main.new_3	
.Main.new_2:	

1
	movq 0(%reg0), %r15	
	movq 40(%r15), %r15	

1
	movq %reg0, %rax	
	jmp .Main.main_145	

1
	movq $7493, %rdi	
	addl %edi, %reg2	

1
	subl %edi, %reg1	
	movq $43177, %rdi	

1
.Main.main_17:	
	movq 0(%rax), %reg1	

1
	movq $18841, %rax	
	movq $54759, %rsi	

1
	movq %reg0, %reg1	
	cmpl $0, 8(%reg1)	

1
	movq -152(%rbp), %reg1	
	movq %r15, %reg3	

1
	movq %rbx, %reg1	
	movq %reg2, %r11	

1
	movq 24(%rbx), %rax	
	cmpl $0, %eax	

1
.Main.main_19:	
	movq -72(%rbp), %reg1	

1
	call out_error	
.Foo.new_7:	

1
	call *%reg0	
	movq -176(%rbp), %reg2	

1
	testq $1, %reg0	
	je .Complex.equal_1	

1
	.string "hi"	
.string10:	

1
	movq -184(%rbp), %reg1	
	subl %reg1d, %reg2	

1
.Main.main_18:	
	movq 0(%r12), %reg1	

1
	movq 664(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq -176(%rbp), %rsi	
	negl %esi	

1
	movq %rax, %reg1	
	movq $16029, %rax	

1
	movq %reg0, %reg1	
	jmp .Main.main_30	

1
	movq 8(%reg0), %r12	
	movq 0(%reg0), %rbx	

1
	cmpq $Main_vtable, 0(%reg0)	
	je .Main.func_2	

1
	testq $1, %reg0	
	je .Main.main_98	

1
	movq %rax, %rcx	
	movq -64(%rbp), %rax	

1
	movq 112(%r12), %r12	
	movq 16(%rax), %rdi	

1
	negl %reg0	
	movq -16(%rbp), %rax	

1
	movq -168(%rbp), %rax	
	movq %reg2, %r8	

1
Cons.print_list:	
	pushq %reg0	

1
	call *%r12	
	movq 472(%reg1), %rax	

1
	movq %rdi, 608(%rax)	
	movq $3000, %rdi	

1
	movq %reg0, 40(%reg1)	
	movq $3000, %reg0	

1
	je .Main.main_3	
	movq $132, %reg0	

1
	movq $.string10, %reg0	
	movq 0(%rax), %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 32(%rax)	

1
	addl %reg0, %r8d	
	movq -144(%rbp), %rax	

1
	call *%r12	
	movq $.string17, %reg1	

1
	imull %edi	
	movq %reg1, -168(%rbp)	

1
	movq 584(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq %rdi, %reg1	
	movq $34533, %reg2	

1
	movq -184(%rbp), %rsi	
	imull %reg2	

1
.Main.main_165:	
	cdq	

1
	movq $0, %reg0	
	movq %reg0, 632(%reg1)	

1
	.size A2I.a2i, .-A2I.a2i	
	.globl A2I.a2i_aux	

1
	movq %reg0, %rax	
	jmp .Main.main_30	

1
	sete %cl	
	jne .Matrix.get_34	

1
	movq %r15, %rax	
	movq -48(%rbp), %rdi	

1
	movq $name_Object, %rax	
	movq 0(%reg1), %reg2	

1
	movq $113, %reg0	
	movq $.string2_l, %rdi	

1
	movq -136(%rbp), %rsi	
	cmpl %reg2, %eax	

1
	movq $12, %rsi	
	movq %r14, %rax	

1
	addl %reg0, %reg1	
	movq -112(%rbp), %rax	

1
	movq %reg0, %r8	
	movq -48(%rbp), %rax	

1
	subl %esi, %eax	
	movq -152(%rbp), %reg3	

1
Foo.y:	
	pushq %rbp	

1
	movq $0, %rdi	
	movq %reg1, %rsi	

1
	movq $4, %reg0	
	movq %r8, %rcx	

1
	movq -80(%rbp), %rax	
	cmpl %reg2, %eax	

1
	je .Main.main_90	
	movq $64, %reg0	

1
	ret	
	.size A2I.i2a, .-A2I.i2a	

1
	movq 704(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	movq 664(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq -48(%rbp), %reg1	
	negl %esi	

1
	movq %rsi, %reg1	
	movq -144(%rbp), %rsi	

1
	movq %r8, %rax	
	movq $5660, %r8	

1
	movq -24(%rbp), %reg1	
	movq %r8, %reg3	

1
	jmp .Main.main_141	
.Main.main_140:	

1
CellularAutomaton.cell_at_next_evolution:	
	pushq %reg0	

1
	movq %r14, %reg1	
	movq %r12, %reg3	

1
	je .Main.main_172	
	movq $145, %rsi	

1
	movq %r15, %reg1	
	addl %edi, %reg3	

1
	movq %r13, %rcx	
	imull %ecx	

1
	jge .Main.main_132	
	movq %r15, %reg1	

1
	movq -152(%rbp), %reg1	
	negl %reg1d	

1
	movq %rax, 8(%rbx)	
	movq $1, %rdi	

1
	je .Main.main_1	
	movq $14, %reg0	

1
	movq $7, %reg0	
	movq 0(%reg1), %rbx	

1
	jg .Main.main_51	
	movq $21060, %rax	

1
	movq $3000, %reg0	
	movq %reg0, 568(%reg1)	

1
	movq 360(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	movq %reg0, 40(%reg1)	
	cmpl %reg2, %reg3	

1
	movq $3000, %rdi	
	movq %rdi, 592(%reg1)	

1
	movq $20, %reg0	
	movq $.string2_l, %rdi	

1
	.globl ListNode.init	
	.type ListNode.init, @function	

1
	.quad .string7_l	
	.quad 5	

1
	movq 24(%reg0), %rsi	
	movq $0, %rdi	

1
	movq -176(%rbp), %rax	
	movq %rdi, %reg3	

1
	movq $.string10, %rax	
	movq %rax, %r12	

1
	movq %reg0, %rbx	
	movq 8(%rax), %reg3	

1
	idivl %reg0d	
	movq -72(%rbp), %reg2	

1
	idivl %ecx	
	movq -184(%rbp), %reg2	

1
	ret	
	.size Main.setFoo, .-Main.setFoo	

1
.Main.main_46:	
	movq 0(%reg0), %r13	

1
	testq $1, %rcx	
	je .Main.main_64	

1
	movq -128(%rbp), %reg1	
	subl %eax, %edi	

1
	movq %rax, %r10	
	movq $63899, %rax	

1
	je .Main.main_41	
	movq %reg0, %rax	

1
	movq %rax, %reg1	
	movq $1823, %rax	

1
	je .Main.main_120	
	movq $70, %reg0	

1
	movq %reg0, 64(%rax)	
	movq %reg0, %rax	

1
.Main.main_71:	
.Main.main_69:	

1
	movq $0, %rdi	
	movq %rdi, 640(%rax)	

1
.Main.main_144:	
	movq -80(%rbp), %reg1	

1
	movq $33976, %reg0	
	addl %edi, %reg2	

1
	movq %reg0, -16(%rbp)	
	movq $3, %reg0	

1
	idivl %ecx	
	movq $6550, %rcx	

1
	movq $28147, %rax	
	negl %reg1	

1
	call *%r14	
	movq %reg1, 24(%reg2)	

1
	movq -144(%rbp), %reg1	
	movq -48(%rbp), %rax	

1
	jne .Matrix.get_10	
	movq 40(%reg0), %reg0	

1
	movq %reg0, 40(%rbx)	
	cmpl %edi, %esi	

1
	subl %reg0, %eax	
	movq $33866, %reg2	

1
.Cons.insert_2:	
	movq 0(%rax), %reg1	

1
	call out_error	
.Bar.new_12:	

1
	addl %reg0, %ecx	
	movq -88(%rbp), %rax	

1
	movq %rax, %reg1	
	movq $55273, %reg2	

1
	addl %esi, %reg1	
	movq %reg2, 16(%rax)	

1
	movq $3000, %reg0	
	movq %reg0, 640(%rax)	

1
.Main.main_55:	
	movq -16(%rbp), %reg1	

1
	movq %rsi, %r8	
	movq %rdx, %rsi	

1
.Main.main_33:	
	movq -128(%rbp), %reg1	

1
	movq %reg0, 8(%reg1)	
	movq 8(%reg2), %reg0	

1
	movq %reg0, %r8	
	movq $10478, %reg0	

1
.Main.out_whatever_2:	
	movq %rdi, %reg1	

1
	jg .Main.main_105	
	movq -96(%rbp), %rax	

1
	movq -152(%rbp), %rsi	
	negl %esi	

1
	movq $10280, %r12	
	movq 0(%rbx), %reg2	

1
	movq 120(%reg0), %reg0	
	movq 16(%rax), %reg2	

1
	addl %eax, %reg1	
	movq $47041, %rax	

1
	movq %reg0, %reg1	
	movq $5456, %reg0	

1
	call *%reg0	
	movq 472(%reg1), %rax	

1
	ret	
	.size Foo.z, .-Foo.z	

1
	movq %rax, %reg1	
.Matrix.mul_1:	

1
	sete %r8b	
	jne .Matrix.set_4	

1
	call out_error	
.Main.main_169:	

1
.string19:	
	.quad String_vtable	

1
	movq 296(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	movq -32(%rbp), %reg1	
	movq -24(%rbp), %rdi	

1
	movq %reg0, %rax	
	jmp .Matrix.set_5	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_5	

1
	subl %eax, %edi	
	movq $23915, %reg2	

1
	movq $4, %reg0	
	movq %reg1, %rdi	

1
	movq -80(%rbp), %rax	
	cmpl %edi, %reg3	

1
	subl %reg0, %edi	
	movq -64(%rbp), %rax	

1
.Main.main_108:	
	cdq	

1
	cmpq $Int_vtable, 0(%rax)	
	je .Main.main_11	

1
	je .Main.main_36	
	movq $34, %rsi	

1
	movq 424(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq $2143, %rdi	
	addl %edi, %reg2	

1
	testq $1, %rsi	
	je .Main.main_176	

1
	.quad ListNode.get	
	.quad ListNode.next	

1
List.cdr:	
	pushq %rbp	

1
	imull %reg0	
	movq $53667, %rsi	

1
	movq %reg0, %reg1	
	jmp .Main.main_104	

1
	movq $1, %reg0	
	movq -16(%rbp), %rdi	

1
	movq %rax, %r12	
	movq $678987, %r13	

1
	movq %r13, %reg1	
	movq 8(%rbx), %reg3	

1
	call Foo.new	
	movq %rax, 16(%reg1)	

1
	call String.cmp	
	movq %rax, %r12	

1
	movq -48(%rbp), %rax	
	movq -32(%rbp), %r8	

1
	jmp .Main.main_70	
.Main.main_71:	

1
	movq -80(%rbp), %reg1	
	movq -24(%rbp), %reg3	

1
.Cons.print_list_1:	
	movq 16(%rbx), %rdx	

1
	jmp .Main.main_42	
.Main.main_41:	

1
	movq $0, %reg0	
	movq %reg0, 688(%rax)	

1
	movq $61731, %reg0	
	movq %reg0, %rcx	

1
	movq $15755, %reg0	
	imull %esi	

1
	movq %reg0, %rdi	
	movq 8(%reg2), %rsi	

1
	movq -136(%rbp), %rbx	
	movq %reg2, %reg3	

1
	je .Main.main_4	
	movq 0(%rbx), %reg1	

1
	movq %rax, %reg1	
	movq $55273, %r11	

1
	movq $0, %rsi	
	movq %reg1, %rax	

1
	idivl %esi	
.Matrix.set_24:	

1
	jne .Main.main_25	
	movq $8937, %rax	

1
	je .Main.main_139	
	movq $106, %reg0	

1
	movq $58921, %rdi	
	cmpl %reg1, %reg2	

1
	addl %reg0, %eax	
	movq %rax, 56(%reg3)	

1
.Razz.new_17:	
	movq %reg0, 48(%rbx)	

1
	movq -136(%rbp), %reg1	
	movq -72(%rbp), %reg3	

1
	movq %rdi, 200(%reg1)	
	movq $0, %rdi	

1
.A2I.i2c_5:	
	movq $3, %rcx	

1
	movq $34313, %reg0	
	movq 0(%reg1), %reg2	

1
	movq $80, %rdi	
	call getmem	

1
	call *%r12	
	jmp .Main.print_list_3	

1
	movq %reg0, 256(%reg1)	
	movq $3000, %reg0	

1
.Main.main_63:	
	movq 0(%r13), %reg1	

1
	movq %rdi, 552(%rax)	
	movq $3000, %rdi	

1
.Main.main_49:	
	movq -80(%rbp), %rsi	

1
	movq $25241, %reg0	
	movq $13257, %reg1	

1
	movq $16210, %rdi	
	movq $23599, %rax	

1
.Main.main_117:	
	movq %reg0, %rsi	

1
	movq 432(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	negl %reg0	
	movq $38915, %reg1	

1
	movq 680(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq 224(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq $3453, %reg0	
	movq 0(%rbx), %rax	

1
	movq %rdi, %rax	
	jmp .Main.main_118	

1
	call *%reg0	
	movq $14352, %reg1	

1
	movq $3453, %r12	
	movq 0(%reg1), %rax	

1
	movq $12, %rdi	
	movq -168(%rbp), %reg2	

1
	.quad .string0	
	.quad 92	

1
	movq %reg0, 488(%reg1)	
	movq $0, %reg0	

1
	movq -24(%rbp), %rax	
	negl %eax	

1
	movq -40(%rbp), %rax	
	movq -48(%rbp), %rdi	

1
	movq %reg0, %r9	
	movq -96(%rbp), %reg0	

1
	movq $3000, %reg0	
	movq %reg0, 416(%reg1)	

1
	je .Main.main_100	
	movq -104(%rbp), %rax	

1
	movq $125, %reg0	
	movq $.string3_l, %rdi	

1
	movq %reg0, %rax	
	subl %reg2d, %eax	

1
	movq -104(%rbp), %rax	
	movq %rsi, %reg3	

1
	movq %reg0, %r12	
	movq %rdx, %rax	

1
	addl %ecx, %eax	
	movq $12, %rcx	

1
	negl %esi	
	movq $62150, %reg1	

1
	movq $3000, %rdi	
	movq %rdi, 64(%reg1)	

1
	movq %reg0, %reg1	
	jmp .Main.main_67	

1
	movq $60750, %reg0	
	movq 0(%reg1), %rax	

1
	ret	
	.size Dictionary.insert, .-Dictionary.insert	

1
	movq %rax, 32(%rbx)	
.Main.new_1:	

1
	movq $47041, %reg0	
	negl %eax	

1
	movq -152(%rbp), %rax	
	movq -24(%rbp), %rdi	

1
	addl %reg0, %edi	
	movq %reg2, %r13	

1
	movq %rdi, 408(%rax)	
	movq $0, %rdi	

1
	movq $.string12, %rax	
	movq 0(%reg1), %r12	

1
	.type Foo.getY, @function	
Foo.getY:	

1
	movq %rdi, 640(%reg1)	
	movq $3000, %rdi	

1
	testq $1, %reg0	
	je .List.insert_2	

1
	movq $.string7, %reg0	
	movq 0(%rbx), %r13	

1
	testq $1, %r8	
	je .Main.main_187	

1
	jmp .Matrix.get_39	
.Matrix.get_27:	

1
	movq -24(%rbp), %r9	
	addl %r9d, %reg2	

1
	sete %sil	
	jne .Main.main_1	

1
	movq 400(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq 544(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
.Matrix.set_40:	
	movq $5, %reg0	

1
.Main.main_12:	
	movq $2, %reg0	

1
List.rev:	
	pushq %reg0	

1
	movq -40(%rbp), %rsi	
	movq -56(%rbp), %rax	

1
	.quad Foo.getX	
Bar_vtable:	

1
	movq %reg0, %rax	
	jmp .Main.main_14	

1
.Main.main_64:	
	movq -40(%rbp), %reg1	

1
	movq $6, %rax	
	jmp .A2I.c2i_14	

1
	movq -16(%rbp), %rax	
	negl %reg2	

1
	subl %eax, %reg1d	
	movq %r8, %reg3	

1
	movq 72(%reg0), %reg1	
	testq $1, %reg1	

1
	setl %reg0l	
	jge .Main.main_138	

1
	movq %reg0, 440(%rax)	
	movq $3000, %reg0	

1
	movq -112(%rbp), %reg1	
	movq %reg2, %r10	

1
.Main.main_34:	
	movq 0(%reg0), %rax	

1
	movq %r15, %reg1	
	movq %rax, %rsi	

1
	movq -40(%rbp), %rax	
	addl %reg2, %edi	

1
	setle %reg0l	
	jg .Main.main_73	

1
	call *%reg0	
	movq 280(%reg1), %r12	

1
	movq $0, %rdi	
	movq %rdi, 384(%rax)	

1
	movq $39506, %reg0	
	movq %reg0, %reg1	

1
	sete %sil	
	jne .Main.main_11	

1
	subl %reg0, %eax	
	movq $33866, %rdi	

1
	addl %reg0, %reg1	
	movq $57963, %reg2	

1
	movq %reg0, %reg1	
.Matrix.mul_3:	

1
	movq -32(%rbp), %rax	
	addl %edi, %reg3	

1
	addl %reg0, %reg1	
	movq $53587, %reg2	

1
	movq 120(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq 24(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
.A2I.a2i_5:	
	movq 0(%reg0), %reg1	

1
	movq 24(%rax), %rdi	
	movq %rbx, %reg3	

1
	movq %rdx, %rbx	
	movq %rcx, %reg3	

1
	movq $0, %reg0	
	movq %reg0, 696(%rax)	

1
	movq %reg0, 8(%reg1)	
	call IO.new	

1
	movq $15234, %reg0	
	movq 0(%reg1), %rax	

1
	setle %al	
	xorq $1, %reg1	

1
	movq %reg0, %reg1	
	jmp .Foo.new_11	

1
	je .Main.main_11	
	cmpq $Bool_vtable, 0(%rax)	

1
	movq %rax, %r8	
	movq $10478, %rax	

1
	movq -16(%rbp), %reg1	
	imull %edi	

1
.string8_l:	
	.string "true\\n"	

1
	.globl A2I.a2i	
	.type A2I.a2i, @function	

1
	movq $173, %rsi	
	movq $.string2_l, %rdi	

1
	je .Main.main_9	
	movq $13, %rsi	

1
	call *%reg0	
	movq $empty_string, %rax	

1
	imull %edi	
	movq $27399, %reg1	

1
	movq %rdi, 160(%reg1)	
	movq $3000, %rdi	

1
	jmp .A2I.c2i_2	
.A2I.c2i_1:	

1
	.size CellularAutomaton.new, .-CellularAutomaton.new	
	.globl Main.new	

1
	movq $14, %reg0	
	movq %reg0, -56(%rbp)	

1
	movq %reg0, 368(%rax)	
	movq $3000, %reg0	

1
	movq %r8, %reg1	
	movq -120(%rbp), %r8	

1
	movq 552(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq %rdi, 576(%rax)	
	movq $0, %rdi	

1
	jg .Main.main_126	
	movq -56(%rbp), %rax	

1
	movq %r12, %reg1	
	movq $2, %reg2	

1
	negl %edi	
	movq $2, %rax	

1
	negl %r10d	
	addl %r10d, %eax	

1
	movq %rax, %rdi	
	movq $51233, %rax	

1
	movq -120(%rbp), %rsi	
	addl %reg2, %eax	

1
	cmpq $String_vtable, 0(%reg0)	
	je .Main.funccase_2	

1
	movq 24(%rbx), %reg1	
	movq %reg2, %rdi	

1
	je .Main.main_140	
	movq %reg0, %rax	

1
.Main.main_25:	
	movq 0(%reg0), %rax	

1
	call *%reg0	
	movq %r12, %rax	

1
	movq 528(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq -152(%rbp), %rsi	
	addl %reg2, %eax	

1
	movq %rdi, %rax	
	movq $.string7, %rbx	

1
	movq $38801, %reg0	
	cmpl %reg1, %edi	

1
	je .Razz.new_3	
	cmpq $Foo_vtable, 0(%rbx)	

1
	je .Main.out_whatever_2	
	cmpq $Bool_vtable, 0(%rdi)	

1
	testq $1, %rdi	
	je .Main.main_132	

1
A2I.i2a:	
	pushq %rbp	

1
	movq $144, %rsi	
	movq $.string2_l, %rdi	

1
	jge .Main.main_29	
	movq -152(%rbp), %rax	

1
	movq %rdi, 64(%reg1)	
	movq %rdi, %reg1	

1
	movq %reg0, %reg1	
.Main.main_70:	

1
	je .Main.main_9	
	cmpl %edi, %reg1	

1
	movq %reg0, 16(%reg1)	
	movq $1, %reg0	

1
	movq -152(%rbp), %rcx	
	addl %ecx, %reg3	

1
	call *%rax	
	movq -88(%rbp), %rax	

1
.Main.main_43:	
	movq -160(%rbp), %rax	

1
	movq $3000, %rdi	
	movq %rdi, 8(%reg1)	

1
	imull %edi	
	movq %r12, %rdi	

1
	movq $3000, %rdi	
	movq %rdi, 416(%reg1)	

1
	movq $20509, %reg0	
	subl %reg1, %reg2	

1
	call *%reg0	
	movq 472(%reg1), %reg2	

1
	movq -24(%rbp), %rax	
	imull %esi	

1
	movq %rdi, 192(%reg1)	
	movq %rdi, %reg1	

1
	testq $1, %rax	
	je .Main.main_93	

1
	movq $name_Bool, %rax	
	cmpl $0, 8(%reg1)	

1
.Main.new_2:	
	movq $1, %reg0	

1
	je .A2I.i2a_aux_3	
	movq $102, %rsi	

1
	jne .Main.main_57	
	movq -48(%rbp), %reg1	

1
.Main.main_19:	
	movq $0, %rax	

1
	call *%r12	
	movq -40(%rbp), %reg2	

1
	movq $.string8, %r12	
	cmpl $0, %ebx	

1
	movq $197, %reg0	
	movq $.string5_l, %rdi	

1
	movq $48887, %rax	
	negl %eax	

1
	movq -136(%rbp), %rax	
	movq -160(%rbp), %reg3	

1
	addl %edi, %reg1	
	movq $25036, %reg2	

1
	je .Main.main_1	
	movq $83, %reg0	

1
	idivl %ecx	
	movq -16(%rbp), %rsi	

1
	je .Main.main_184	
	movq $151, %reg0	

1
	movq %reg0, %r12	
	movq %reg0, %rbx	

1
	movq %rdi, %reg1	
	jmp .Main.main_44	

1
	movq $0, %reg0	
	movq %reg0, 672(%rax)	

1
	movq -160(%rbp), %rsi	
	addl %esi, %eax	

1
	jne .Matrix.set_41	
	movq %rdi, 128(%reg1)	

1
	movq $10809, %rax	
	subl %reg1, %reg2d	

1
	jmp .Main.main_7	
.Main.main_1:	

1
	movq $13, %rbx	
	movq 0(%reg1), %reg2	

1
	je .Main.main_156	
	movq %reg0, %reg1	

1
	movq $15, %reg0	
	movq $.string3_l, %rdi	

1
.Main.new_11:	
	movq 32(%reg0), %rax	

1
	movq %reg0, -16(%rbp)	
	movq %r14, %reg0	

1
	movq -168(%rbp), %reg1	
	movq -120(%rbp), %reg3	

1
	subl %reg0, %eax	
	movq $15487, %reg2	

1
	je .Main.main_130	
	movq $70, %rsi	

1
	movq %r14, %rax	
	movq %reg2, %rcx	

1
	movq %rax, %rdi	
	movq $20995, %rax	

1
	testq $1, %reg0	
	je .Foo.new_1	

1
	movq -32(%rbp), %reg1	
	movq %reg1, -104(%rbp)	

1
	movq $0, %rax	
	jmp .A2I.a2i_2	

1
	subl %eax, %reg1d	
	movq $61569, %rax	

1
	setle %reg0	
	xorq $1, %rax	

1
	movq $.string12, %rdi	
	movq %rbx, %reg2	

1
	.size Main.func, .-Main.func	
	.globl Foo.getX	

1
	movq %rax, 8(%rbx)	
	movq %rax, 16(%rbx)	

1
	movq $46154, %reg0	
	imull %reg1	

1
	movq %r12, 8(%reg1)	
	movq %reg1, 8(%reg2)	

1
	addl %reg0, %eax	
	movq %reg2, 24(%rbx)	

1
	movq $29790, %rsi	
	subl %esi, %edi	

1
	movq $3000, %rdi	
	movq %rdi, 576(%reg1)	

1
	call *%r12	
.Main.main_20:	

1
	movq $34526, %reg0	
	subl %reg1, %eax	

1
	sete %reg0b	
	jne .CellularAutomaton.cell_at_next_evolution_1	

1
	movq 208(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	cmpq $Main_vtable, 0(%rax)	
	je .Main.func_2	

1
	call *%rax	
	movq $14352, %reg1	

1
	testq $1, %r8	
	je .Main.main_18	

1
	sete %r9b	
	jne .Matrix.set_40	

1
	movq %reg0, %reg1	
	jmp .Main.main_153	

1
	movq -160(%rbp), %reg1	
	movq %reg1, %reg2	

1
.Main.main_49:	
	movq %reg0, %rsi	

1
	movq -96(%rbp), %reg1	
	movq -128(%rbp), %reg3	

1
	subq $176, %rsp	
	pushq %reg1	

1
	subl %eax, %reg1d	
	movq -96(%rbp), %reg3	

1
.List.insert_4:	
	movq 8(%rbx), %reg1	

1
.Matrix.get_63:	
.Matrix.get_61:	

1
	movq %reg0, 88(%reg1)	
	movq $3000, %reg0	

1
.Main.main_65:	
	cmpl $0, %r13d	

1
	movq 56(%rax), %rax	
	movq 8(%reg1), %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 48(%rax)	

1
	movq 408(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	movq %rbx, %rdx	
	call *%r12	

1
	movq $.string7, %reg0	
	movq %rbx, %reg2	

1
.Main.main_142:	
	movq -168(%rbp), %reg1	

1
	.string "\\\\n"	
.string11:	

1
	movq %reg0, %reg1	
	movq $57869, %reg2	

1
	movq %rdi, %rax	
	jmp .Matrix.set_57	

1
.Bazz.new_6:	
	movq %rax, 16(%reg1)	

1
	movq 704(%reg0), %r12	
	movq 0(%reg0), %rax	

1
.string21:	
	.quad String_vtable	

1
	testq $1, %reg0	
	je .Main.main_112	

1
	movq -16(%rbp), %reg1	
	movq %reg1, -32(%rbp)	

1
	movq %rax, %reg1	
	movq $51233, %rax	

1
	movq -112(%rbp), %rsi	
	cmpl %reg2, %reg3	

1
	cmpq $Int_vtable, 0(%rsi)	
	je .Main.func_3	

1
	movq %r12, %r9	
	negl %r9d	

1
	movq $2, %rdi	
	movq %rdi, 8(%rax)	

1
	movq %rax, %rsi	
	movq -96(%rbp), %rax	

1
	movq %reg0, %rax	
	jmp .Matrix.set_37	

1
	movq %reg0, %reg1	
	jmp .CellularAutomaton.evolve_1	

1
	movq $2730, %reg0	
	movq -8(%rbp), %reg2	

1
	movq 16(%reg0), %reg1	
	cmpl %esi, %edi	

1
	movq $61456, %rdi	
	cmpl %reg1, %eax	

1
	movq $15487, %rdi	
	subl %edi, %reg2	

1
	setl %reg0l	
	jge .Main.main_61	

1
	movq %rdi, 648(%reg1)	
	movq $0, %rdi	

1
	.size Dictionary.get, .-Dictionary.get	
	.globl Dictionary.insert	

1
	movq 8(%rbx), %rdi	
	movq %rdi, 48(%rbx)	

1
	.string "ERROR: %lld: Exception: dispatch on void\n"	
.string4:	

1
	movq $1, %reg0	
	movq -8(%rbp), %reg2	

1
	idivl %ecx	
	movq $8271, %reg1	

1
	movq %rsp, %rbp	
	movq %rsi, %rdi	

1
	addl %esi, %eax	
	negl %eax	

1
	movq $33161, %reg0	
	subl %reg0d, %eax	

1
	jne .Matrix.set_30	
	movq %reg0, 96(%rax)	

1
	movq -136(%rbp), %reg1	
	movq -80(%rbp), %rsi	

1
	movq $90, %reg0	
	subl %edi, %reg2	

1
	movq 24(%rax), %rax	
	jmp .Matrix.get_7	

1
	movq %rdi, 160(%rax)	
	movq %rdi, %rax	

1
	cmpq $Bazz_vtable, 0(%rbx)	
	je .Razz.new_2	

1
	movq 0(%rax), %r12	
	movq 120(%r12), %r12	

1
	jne .Matrix.set_56	
	movq %reg0, 176(%reg1)	

1
	testq $1, %reg0	
	je .Main.main_171	

1
	movq $51925, %reg0	
	movq 0(%reg1), %r12	

1
	movq -32(%rbp), %reg1	
	movq %reg1, -152(%rbp)	

1
	je .Main.main_103	
	movq $64, %reg0	

1
	jge .Main.main_7	
	movq $1, %reg0	

1
A2I.c2i:	
	pushq %reg0	

1
	movq $1317, %reg0	
	movq $47218, %reg1	

1
	movq $0, %reg0	
	movq %reg0, 336(%reg1)	

1
.A2I.a2i_aux_2:	
	movq %r14, %rax	

1
	movq 8(%rdi), %reg1	
	negl %reg2	

1
	je .Main.main_79	
	movq $61, %rsi	

1
	jne .Matrix.set_27	
	movq $1, %r8	

1
	movq %rdi, 200(%rax)	
	movq $3000, %rdi	

1
	movq %reg0, %rbp	
	subq $176, %reg0	

1
	movq %r12, %rdi	
	subl %reg2, %eax	

1
	movq %reg0, %rax	
.Main.main_1:	

1
.Main.main_24:	
	popq %r12	

1
.Main.main_8:	
	movq $0, %r12	

1
	subl %eax, %reg1d	
	movq %rcx, %rax	

1
	call *%r12	
	movq 24(%rbx), %r12	

1
.Main.funcwhileb_2:	
	movq 0(%rbx), %rax	

1
	call *%reg0	
	movq 104(%rbx), %reg0	

1
	movq %reg0, %rax	
	movq -64(%rbp), %r9	

1
	movq $1, %r12	
	movq $1, %reg1	

1
	jne .Main.main_7	
	movq %reg0, %reg1	

1
.string10_l:	
	.string "How many numbers to sort? "	

1
	movq %reg0, -120(%rbp)	
	movq $18, %reg0	

1
	movq $25036, %rdi	
	subl %reg1, %eax	

1
	movq $20968, %rsi	
	movq %rsi, %rcx	

1
	movq %reg0, %r13	
	movq $1, %reg0	

1
	idivl %esi	
	movq $12, %rdi	

1
	call out_error	
.Razz.new_18:	

1
	movq %reg0, %rbx	
	movq $1, %reg0	

1
	movq $67, %rsi	
	movq $.string3_l, %rdi	

1
	movq 64(%r12), %r12	
	movq -8(%rbp), %rdi	

1
	movq -128(%rbp), %reg1	
	movq -32(%rbp), %rdi	

1
.Main.main_23:	
	movq $0, %reg0	

1
	movq $0, -24(%rbp)	
	cmpl $0, %reg1	

1
	movq %rbx, %reg1	
	movq -88(%rbp), %rsi	

1
	movq %r13, %rax	
	movq %rdi, %rsi	

1
	jmp .Main.main_155	
.Main.main_154:	

1
	je .Main.func_2	
	cmpq $Main_vtable, 0(%rax)	

1
.Main.main_6:	
	movq $2, %reg0	

1
	movq -80(%rbp), %rsi	
	movq -24(%rbp), %reg3	

1
	ret	
	.size CellularAutomaton.print, .-CellularAutomaton.print	

1
	movq -176(%rbp), %reg1	
	movq -136(%rbp), %rdi	

1
	testq $1, %rcx	
	je .Main.main_36	

1
	movq $27940, %r11	
	movq $0, %rbx	

1
	movq $30215, %reg0	
	subl %reg1, %edi	

1
	movq $33161, %r8	
	subl %r8d, %eax	

1
	jne .Matrix.get_21	
	movq 72(%rax), %rax	

1
	negl %eax	
	movq -96(%rbp), %rdi	

1
	movq %reg0, 312(%reg1)	
	movq $0, %reg0	

1
	pushq %reg0	
	movq %reg1, %r12	

1
	je .Main.main_10	
	movq $19, %reg0	

1
	imull %reg0	
	movq $59714, %rsi	

1
	testq $1, %rsi	
	je .Main.main_104	

1
	cmpl %r15d, %reg1d	
	sete %r15b	

1
	imull %reg0	
	movq $27696, %rbx	

1
.Main.main_31:	
	movq -40(%rbp), %reg1	

1
	movq $3, %reg0	
	movq %reg0, %rbx	

1
	movq -176(%rbp), %rsi	
	negl %reg2	

1
	movq %r15, %rsi	
	cmpl %reg2, %eax	

1
	call *%reg0	
	movq $31515, %reg0	

1
	movq 48(%rax), %rax	
	movq 8(%reg1), %rdi	

1
	je .Main.main_4	
	movq $9, %reg0	

1
	je .Main.main_21	
	movq $10, %rsi	

1
	sete %r13b	
	jne .A2I.c2i_15	

1
	movq 120(%reg0), %reg0	
	jmp .Matrix.get_37	

1
.Main.main_91:	
	cdq	

1
	call *%reg0	
	movq 728(%reg1), %reg0	

1
Foo.set:	
	pushq %rbp	

1
	jmp .Main.main_161	
.Main.main_126:	

1
	movq -72(%rbp), %rax	
	movq %rsi, %reg3	

1
Dictionary.get:	
	pushq %rbp	

1
	movq $7, %rax	
	movq %rax, -112(%rbp)	

1
	movq -160(%rbp), %rax	
	movq -40(%rbp), %rdi	

1
	movq -128(%rbp), %rax	
	movq -56(%rbp), %rdi	

1
	movq -32(%rbp), %rax	
	movq -16(%rbp), %rdi	

1
	movq $56556, %r10	
	movq $0, %r11	

1
	movq 56(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	je .Main.main_54	
	movq $17, %rsi	

1
	subl %reg0, %reg1	
	movq $43177, %rdi	

1
	movq %rdi, 392(%reg1)	
	movq $3000, %rdi	

1
	jne .A2I.c2i_9	
	movq $4, %rax	

1
	.quad 15	
.string1_l:	

1
	movq $18310, %reg0	
	subl %reg1, %edi	

1
	movq -128(%rbp), %reg1	
	movq -96(%rbp), %rsi	

1
	pushq %r13	
	movq %reg1, %r12	

1
	movq -56(%rbp), %rax	
	movq -136(%rbp), %rdi	

1
	movq $3, %rax	
	movq %rax, 24(%rbx)	

1
.Main.main_3:	
	movq $.string8, %rax	

1
	movq $3000, %reg0	
	movq %reg0, 704(%rax)	

1
	movq %reg0, %rax	
	movq -24(%rbp), %rcx	

1
	.type CellularAutomaton.new, @function	
CellularAutomaton.new:	

1
	je .Main.main_46	
	movq $15, %rsi	

1
	subl %esi, %reg1	
	negl %reg1	

1
	movq -184(%rbp), %reg1	
	subl %reg2, %esi	

1
	movq %reg0, %reg1	
	movq $50538, %reg0	

1
	je .ListNode.insert_2	
	movq $127, %reg0	

1
	call *%reg0	
.Main.funcifb_2:	

1
	movq -64(%rbp), %reg1	
	movq %reg2, %rsi	

1
.Main.main_88:	
	movq %reg0, %rax	

1
	movq -160(%rbp), %rdx	
	movq %rdx, %reg2	

1
	movq $Complex_vtable, 0(%reg0)	
	movq $0, %rdi	

1
	movq %rax, %r13	
.Main.main_19:	

1
	movq $12, %rsi	
	movq -176(%rbp), %reg2	

1
	movq $27231, %rsi	
	movq %rsi, %rcx	

1
.List.insert_2:	
	movq 0(%reg0), %reg1	

1
	call *%reg0	
	movq %r14, %rax	

1
	movq 120(%r12), %r12	
	movq %rax, %rdi	

1
	call *%reg0	
	movq %r14, %rdi	

1
	movq %reg0, 136(%reg1)	
	movq $3000, %reg0	

1
.Main.main_161:	
	testq $1, %reg0	

1
	movq %reg0, %reg1	
	subl %r8d, %reg3	

1
	movq $22, %reg0	
	popq %r12	

1
	movq %reg0, %r12	
	movq 16(%rbx), %reg3	

1
	movq $57963, %rdi	
	subl %reg1, %reg2	

1
.A2I.i2a_2:	
	popq %r12	

1
	movq $3326, %reg0	
	movq %reg0, %reg1	

1
	addl %eax, %ecx	
	movq $46874, %reg2	

1
	idivl %esi	
	movq %rax, -160(%rbp)	

1
	movq %reg0, %reg1	
	jmp .Matrix.elMul_1	

1
	movq %reg0, %r12	
	movq $1, %rax	

1
	subl %reg0, %reg1	
	movq %rdi, -32(%rbp)	

1
.Main.main_19:	
	movq 0(%reg0), %rax	

1
.Main.main_19:	
	movq $.string8, %reg0	

1
	call out_error	
.Razz.new_7:	

1
	movq -88(%rbp), %rax	
	movq %r13, %reg3	

1
	movq %reg0, %reg1	
	movq $8423, %reg0	

1
	movq $3, %reg0	
	movq $name_Bool, %rax	

1
	.type Main.setFoo, @function	
Main.setFoo:	

1
	movq %reg0, %reg1	
.Main.funcwhileb_1:	

1
	call *%r12	
	movq 448(%rbx), %rax	

1
	testq $1, %rax	
	je .Main.funccase_7	

1
	movq -96(%rbp), %rax	
	movq %reg2, %r9	

1
	movq 672(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq -24(%rbp), %rcx	
	negl %ecx	

1
	movq $51233, %rax	
	movq $33158, %reg1	

1
	movq 24(%reg0), %rax	
	imull %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 144(%rax)	

1
	movq -56(%rbp), %reg1	
	movq $0, %reg2	

1
	addl %reg0, %reg1	
	movq $25947, %rsi	

1
	movq %reg0, %rax	
	jmp .Main.main_48	

1
	movq -104(%rbp), %rax	
	movq -168(%rbp), %rsi	

1
	movq 232(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	testq $1, %rcx	
	je .Main.main_30	

1
	movq 0(%reg0), %rax	
	movq 144(%rax), %rax	

1
	movq 56(%r12), %r12	
	movq 8(%reg1), %rdi	

1
.Main.out_whatever_3:	
	movq %rdi, %rax	

1
	movq -104(%rbp), %rax	
	movq -152(%rbp), %rdi	

1
	movq $38220, -32(%rbp)	
	movq $48887, %rax	

1
	jmp .Matrix.get_46	
.Matrix.get_45:	

1
	.globl Complex.print	
	.type Complex.print, @function	

1
	movq -152(%rbp), %rax	
	movq -96(%rbp), %reg3	

1
	movq 728(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq %reg0, 504(%reg1)	
	movq $3000, %reg0	

1
	je .Main.main_6	
	cmpq $String_vtable, 0(%reg0)	

1
.Main.main_5:	
	movq -88(%rbp), %reg1	

1
	movq $5, %rcx	
	movq %reg1, %rsi	

1
	je .Main.main_67	
	movq $.string10, %rbx	

1
	movq $61456, %reg0	
	cmpl %reg1, %eax	

1
	je .Main.main_178	
	movq $308, %rsi	

1
	movq 424(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq %reg0, %rbp	
	movq %rsi, %rdi	

1
.Main.main_1:	
	cmpl $0, %reg0	

1
	call Foo.getX	
	movq -8(%rbp), %rdx	

1
	call *%reg0	
	movq -160(%rbp), %reg2	

1
.Main.func2_1:	
	movq $5, %reg0	

1
	movq $13131, %reg0	
	addl %eax, %edi	

1
	movq -96(%rbp), %rax	
	addl %reg2, %esi	

1
	movq %reg0, %reg1	
	movq $744, %reg2	

1
.Main.main_42:	
	movq -40(%rbp), %rdx	

1
	movq $26355, %reg0	
	movq 0(%rbx), %reg2	

1
	movq -128(%rbp), %reg1	
	movq -40(%rbp), %reg3	

1
	movq $4, %rax	
	movq 0(%reg1), %r12	

1
	.size Dictionary.insert, .-Dictionary.insert	
	.globl Dictionary.getHead	

1
	movq %rdi, %rax	
	cmpl $0, 8(%rbx)	

1
	movq %r12, %rsi	
	cmpl %reg2, %reg3	

1
	movq -40(%rbp), %rax	
	testq $1, %rax	

1
	call *%r12	
	movq -184(%rbp), %reg2	

1
	movq %r15, %reg1	
	imull %edi	

1
.A2I.i2c_10:	
.A2I.i2c_8:	

1
.Main.main_2:	
	movq %rsi, %reg1	

1
	cmpq $Bool_vtable, 0(%reg0)	
	je .Main.main_16	

1
	movq -88(%rbp), %rax	
	subl %esi, %reg3	

1
	movq $.string11, %reg0	
	movq %reg1, %rdi	

1
	addl %edi, %reg1	
	movq %reg2, -16(%rbp)	

1
	addl %eax, %r8d	
	movq %rcx, %reg3	

1
	movq -24(%rbp), %rax	
	cmpl %eax, %edi	

1
	movq -80(%rbp), %reg1	
	movq -96(%rbp), %reg3	

1
	movq %reg0, 600(%reg1)	
	movq $0, %reg0	

1
	movq $22802, %reg0	
	addl %eax, %reg2d	

1
	.string "z"	
.string7:	

1
	movq %rsi, %reg1	
	movq $0, %rax	

1
	movq -184(%rbp), %rax	
	subl %reg2, %ecx	

1
	movq $0, %reg0	
	movq %reg0, 384(%reg1)	

1
	call List.new	
	popq %rbx	

1
.Main.main_59:	
	movq 0(%rax), %reg1	

1
ListNode.init:	
	pushq %reg0	

1
	call out_error	
.Main.main_85:	

1
	call out_error	
.Main.main_99:	

1
	je .Main.main_25	
	movq %rdi, %rax	

1
	movq 0(%r12), %reg1	
	movq 40(%reg1), %reg1	

1
	movq 8(%reg0), %reg1	
	movq 0(%rax), %reg3	

1
.Main.main_156:	
	movq %reg0, %reg1	

1
	movq 192(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq %reg0, 24(%rbx)	
	movq $7, %r12	

1
	movq $13131, %reg0	
	addl %reg1, %reg2	

1
	movq $5, %rsi	
	movq %rax, %reg2	

1
	movq 144(%rbx), %rbx	
	movq %rax, %rdi	

1
	sete %r13b	
	jne .A2I.c2i_9	

1
	testq $1, %r8	
	je .Main.main_7	

1
.Main.main_94:	
	movq %reg0, %rax	

1
	movq %rdi, %rax	
	movq -56(%rbp), %rdi	

1
	addl %eax, %edi	
	movq $53587, %rax	

1
	.quad .string13_l	
	.quad 4	

1
	call *%reg0	
	movq 440(%rbx), %reg2	

1
	movq %reg0, %reg1	
	movq -24(%rbp), %r8	

1
	subl %eax, %edi	
	movq $17376, %reg2	

1
	movq $55166, %reg0	
	negl %eax	

1
CellularAutomaton.print:	
	pushq %rbp	

1
	movq 24(%rax), %reg1	
	movq 0(%reg1), %reg2	

1
	movq $13, %reg0	
	negl %reg1	

1
	call *%r12	
	movq 672(%reg1), %reg2	

1
	je .Main.func_1	
	movq $37, %rsi	

1
	movq 328(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	call out_error	
.Main.main_117:	

1
	movq 8(%reg0), %rax	
	movq %rbx, %rdi	

1
	movq $107, %rsi	
	movq $.string3_l, %reg1	

1
	je .Main.main_178	
	movq $145, %reg0	

1
	movq $163, %rsi	
	movq $.string2_l, %reg1	

1
	movq $10464, %reg0	
	movq $32716, %r10	

1
	call *%reg0	
	movq 600(%reg1), %reg2	

1
	call *%rax	
	movq 552(%reg1), %rax	

1
.Main.main_30:	
	movq %reg0, %rax	

1
	movq 0(%rax), %r15	
	movq 40(%r15), %r15	

1
	movq -56(%rbp), %rcx	
	negl %reg2	

1
	je .Main.main_11	
	movq $153, %reg0	

1
	movq -16(%rbp), %rsi	
	subl %reg2, %reg3	

1
	call out_error	
.Main.main_107:	

1
.Main.main_64:	
	movq -40(%rbp), %rax	

1
	movq %reg0, %reg1	
.Main.main_16:	

1
	movq -48(%rbp), %reg1	
	movq -48(%rbp), %reg2	

1
	call *%rax	
	movq 656(%rbx), %r12	

1
	jmp .Main.main_16	
.Main.main_17:	

1
	addl %ebx, %eax	
	movq %reg2, %reg3	

1
	movq $29790, %reg0	
	subl %reg1, %edi	

1
	movq $.string10, %rdi	
	movq %rbx, %r12	

1
	je .Main.main_140	
	movq %reg0, %reg1	

1
	movq $55273, %r11	
	movq $38801, %reg1	

1
	movq $1, %reg0	
	jmp .Main.new_4	

1
	movq %r14, %rax	
	movq -160(%rbp), %rdi	

1
	addl %eax, %esi	
	movq -56(%rbp), %reg3	

1
	movq %rdi, %rax	
	cmpl %reg2, %eax	

1
	movq 128(%reg0), %reg0	
	movq %rax, %reg2	

1
	movq %r13, %rsi	
	movq -128(%rbp), %reg3	

1
	imull %reg0	
	movq %reg1, -168(%rbp)	

1
	movq $0, %reg0	
	call Main.new	

1
	subq $168, %reg0	
	pushq %reg1	

1
	movq $name_Object, %reg0	
	movq 0(%rbx), %r12	

1
	movq $103, %reg0	
	movq $.string5_l, %reg1	

1
	movq $2739, %rsi	
	movq $0, %reg1	

1
	testq $1, %rsi	
	je .Main.main_28	

1
	ret	
	.size Bar.setI, .-Bar.setI	

1
	movq $.string13, %reg0	
	movq %rbx, %r12	

1
	movq 336(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	addl %edi, %reg1	
	movq -168(%rbp), %reg3	

1
.Main.main_8:	
	movq $48298, %rax	

1
	call *%reg0	
	movq $name_Bool, %rax	

1
	movq $30102, %rdi	
	movq $25895, %rax	

1
	movq %reg0, %rcx	
	movq -160(%rbp), %reg0	

1
	call *%r12	
.Main.main_44:	

1
	movq 432(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq -112(%rbp), %rax	
	movq %r9, %reg3	

1
	movq %rax, %r12	
	movq $1, %r13	

1
	idivl %reg0	
	movq $36212, %reg1	

1
	movq 8(%rbx), %rax	
	cmpl %edi, %reg3	

1
	movq %rax, %reg1	
	movq $49119, %rax	

1
	sete %reg0l	
	jne .Main.new_7	

1
	je .Main.main_92	
	movq $64, %reg0	

1
	movq -8(%rbp), %reg1	
	movq -32(%rbp), %rsi	

1
	movq %rdi, %rax	
	jmp .Main.main_106	

1
	testq $1, %rsi	
	je .Main.main_42	

1
	je .Main.func_3	
	movq $37, %reg0	

1
	movq $3000, %rdi	
	movq %rdi, 712(%reg1)	

1
	je .Main.main_2	
	cmpl %edi, %esi	

1
	movq %rdi, %rax	
.Main.main_170:	

1
	movq -152(%rbp), %reg1	
	addl %ecx, %reg3	

1
	movq -40(%rbp), %reg1	
	movq -176(%rbp), %reg3	

1
	movq %reg0, 304(%reg1)	
	movq $0, %reg0	

1
	subl %eax, %reg1	
	movq -88(%rbp), %rax	

1
	movq $Main_vtable, 0(%reg0)	
	movq %reg0, %rdi	

1
	movq %rdi, %rax	
	jmp .Main.main_67	

1
	movq $22520, %reg0	
	movq $40813, %reg1	

1
	movq %reg0, 32(%rbx)	
	movq $.string6, %reg0	

1
	movq %rbx, %reg1	
	movq %r12, %rax	

1
.string6_l:	
	.string "abc"	

1
	movq %reg0, 8(%rax)	
	movq 8(%reg2), %reg0	

1
	addl %reg0, %eax	
	movq $222, %reg2	

1
A2I.a2i_aux:	
	pushq %reg0	

1
	movq $50929, %r10	
	addl %r10d, %reg1	

1
	pushq %r12	
	movq $32, %reg1	

1
	movq -136(%rbp), %rax	
	subl %eax, %ecx	

1
	je .Main.main_19	
	movq -72(%rbp), %rax	

1
	movq $9, %reg0	
	cmpl %esi, %reg2	

1
	call *%r12	
	movq 192(%reg1), %reg2	

1
	movq %rdi, 152(%reg1)	
	movq %rdi, %reg1	

1
.Main.main_27:	
	movq 0(%r13), %rax	

1
.Main.main_93:	
	cdq	

1
	movq $22, %reg0	
	imull %reg1	

1
	.quad String_vtable	
	.quad .string19_l	

1
	movq %rdi, 304(%reg1)	
	movq $3000, %rdi	

1
	call *%r12	
.Main.func2_2:	

1
	movq $16420, %rsi	
	negl %reg1	

1
	jg .Matrix.elMul_2	
	movq -8(%rbp), %reg1	

1
	je .Main.main_169	
	movq $145, %reg0	

1
	movq $0, %reg0	
	movq %reg0, 232(%reg1)	

1
	jne .Main.main_20	
	cmpl $0, %reg0d	

1
Nil.sort:	
	pushq %rbp	

1
	movq $3000, %reg0	
	movq %reg0, 40(%rax)	

1
	movq -80(%rbp), %reg1	
	subl %esi, %eax	

1
	movq $22, %reg0	
	movq $11, %reg1	

1
	jmp .A2I.i2c_18	
.A2I.i2c_17:	

1
	movq 64(%r12), %r12	
	movq 8(%rbx), %reg2	

1
	movq %rdi, 552(%reg1)	
	movq $3000, %rdi	

1
	call *%r12	
	movq 496(%rbx), %rax	

1
Matrix.set:	
	pushq %reg0	

1
	testq $1, %rax	
	je .Main.main_75	

1
	je .ListNode.insert_2	
	movq $127, %rsi	

1
	movq -168(%rbp), %reg1	
	movq %rdi, %reg3	

1
	.string "halt"	
.string8:	

1
	call *%rax	
.A2I.a2i_6:	

1
	call *%reg0	
	jmp .Main.main_68	

1
.Main.func_7:	
	popq %r12	

1
	call getmem	
	movq $Nil_vtable, 0(%rax)	

1
	movq 536(%rbx), %rax	
	movq 0(%rbx), %r12	

1
.Main.out_whatever_5:	
	popq %reg0	

1
	jmp .Main.funcifb_2	
.Main.funcifb_1:	

1
	movq %rdi, 256(%rax)	
	movq $3000, %rdi	

1
.Main.main_12:	
	movq $5, %reg0	

1
.Main.main_32:	
	movq 0(%reg0), %reg1	

1
	testq $1, %rcx	
	je .Main.main_173	

1
	movq 24(%rbx), %rax	
	addl %edi, %eax	

1
.Main.main_27:	
	movq $.string8, %reg0	

1
	call *%reg0	
	movq 448(%rbx), %reg2	

1
	addl %esi, %reg1	
	movq %r14, %reg3	

1
	addl %reg0, %reg1	
	movq -56(%rbp), %rsi	

1
	movq $151, %rsi	
	movq $.string5_l, %rdi	

1
	movq -88(%rbp), %reg1	
	movq -16(%rbp), %rdi	

1
	subl %edi, %reg1	
	movq %rax, -144(%rbp)	

1
	movq %r12, %rax	
	movq -96(%rbp), %reg3	

1
	movq -152(%rbp), %rdi	
	negl %reg2	

1
	call *%reg0	
	movq 736(%rbx), %reg2	

1
	movq -40(%rbp), %reg1	
	cmpl %eax, %esi	

1
	movq $11435, %reg0	
	movq 0(%reg1), %rax	

1
	movq $40, %rsi	
	movq $.string3_l, %rdi	

1
.A2I.i2c_17:	
	movq $9, %rsi	

1
	movq $33866, %reg0	
	subl %edi, %eax	

1
	movq $.string8, %r15	
	movq %reg1, %rdx	

1
	je .Main.main_171	
	movq $145, %reg0	

1
	movq $0, %rdi	
	movq %reg1, %rax	

1
	negl %reg0	
	movq $30631, %rdi	

1
	movq %reg0, %rax	
	jmp .Main.main_110	

1
	.quad .string12_l	
	.quad 1	

1
	call *%reg0	
	movq 512(%reg1), %r12	

1
	jge .Main.main_98	
	movq %reg0, %reg1	

1
	movq -160(%rbp), %rax	
	movq -88(%rbp), %rsi	

1
.Main.main_66:	
	movq 0(%r13), %reg1	

1
	movq $48457, %reg0	
	movq $18781, %reg1	

1
	imull %edi	
	movq %reg1, -128(%rbp)	

1
.A2I.i2c_15:	
	movq $8, %reg0	

1
	movq 0(%rdx), %reg1	
	movq 144(%reg1), %reg1	

1
	.quad 7	
name_Bool_l:	

1
	imull %r8d	
	movq -64(%rbp), %r8	

1
	movq %rbx, %rax	
	cmpl %reg2, %eax	

1
	movq %rax, %r8	
	movq $22802, %rax	

1
	movq -24(%rbp), %reg1	
	negl %edi	

1
	movq %reg0, 40(%reg1)	
	cmpl %edi, %reg3	

1
	movq -32(%rbp), %rdi	
	movq %r12, %rsi	

1
	subl %edi, %eax	
	movq %reg2, -112(%rbp)	

1
	subl %reg0, %edi	
	movq $23915, %reg2	

1
	movq $55662, %reg0	
	movq $0, %reg1	

1
	movq $8800, %r12	
	movq 0(%rbx), %reg2	

1
	movq $39037, %reg0	
	negl %edi	

1
	movq -56(%rbp), %reg1	
	movq -176(%rbp), %reg3	

1
	call *%r12	
	movq 496(%reg1), %rax	

1
	movq -64(%rbp), %rax	
	movq %rsi, %rcx	

1
	movq 304(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	call *%rbx	
.Main.main_24:	

1
	movq $47127, %reg0	
	imull %reg1	

1
	movq %r13, 8(%reg1)	
	movq 0(%reg2), %r14	

1
	movq %r13, %reg1	
	movq %rbx, %rdx	

1
	call *%r12	
	movq 184(%reg1), %rax	

1
	call *%rbx	
	movq -72(%rbp), %rdi	

1
	movq %rdi, 272(%rax)	
	movq $0, %rdi	

1
.Matrix.get_27:	
	movq $4, %reg0	

1
	movq $154, %rsi	
	movq $.string5_l, %rdi	

1
	sete %reg0	
	jne .Matrix.get_28	

1
	movq %reg0, 408(%rax)	
	movq $3000, %reg0	

1
	movq %r12, %rax	
	movq -72(%rbp), %r8	

1
	movq %reg0, %reg1	
.Main.main_19:	

1
	jg .Main.main_31	
	movq $.string7, %rax	

1
	movq $16029, %rax	
	movq $19302, %reg1	

1
	call *%r12	
	movq 720(%rbx), %r12	

1
	movq $3, %r9	
	movq %r8, %reg2	

1
	movq %rdi, %rax	
	movq -48(%rbp), %rdi	

1
	movq 32(%reg0), %reg0	
	movq %rbx, %reg2	

1
.Main.main_1:	
	movq $4, %r12	

1
	movq $46404, %reg0	
	movq 0(%reg1), %rax	

1
	je .Main.main_7	
	movq $15, %reg0	

1
	testq $1, %r9	
	je .Main.main_172	

1
	testq $1, %rcx	
	je .Main.main_147	

1
	movq 360(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq -24(%rbp), %reg1	
	movq $0, %rcx	

1
	movq %rdi, 200(%reg1)	
	leave	

1
	call *%rax	
	movq %reg1, %r14	

1
	idivl %reg0	
	movq $12618, %reg1	

1
	movq -104(%rbp), %rdi	
	negl %edi	

1
	movq $98, %rsi	
	movq $.string3_l, %reg1	

1
	.quad Main.out_whatever	
	.text 	

1
	jg .Matrix.elMul_2	
	movq %reg0, %reg1	

1
	movq %r12, %rsi	
	subl %esi, %reg3	

1
	movq -16(%rbp), %rax	
	movq -160(%rbp), %reg3	

1
.Main.main_2:	
	movq 8(%reg0), %r12	

1
	movq $76, %reg0	
	movq $.string2_l, %reg1	

1
	movq 416(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq $.string9, %rax	
	movq %rax, %reg1	

1
	movq 192(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq %rdi, 176(%rax)	
	movq $3000, %rdi	

1
	movq %reg0, -24(%rbp)	
	movq $20, %reg0	

1
.Main.main_142:	
	cdq	

1
	movq %reg0, %reg1	
	movq -64(%rbp), %r9	

1
	movq $3, %reg0	
	subl %reg1, %eax	

1
	movq $34313, %r12	
	movq 0(%rbx), %rax	

1
.DicNode.get_4:	
	movq 0(%reg0), %r13	

1
	movq %reg0, %rax	
	jmp .Main.main_38	

1
	call *%reg0	
	movq $.string10, %reg1	

1
	movq %r13, %rax	
	addl %eax, %reg3	

1
	imull %reg0	
	movq $9556, %rdi	

1
	movq 656(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq 480(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	je .Main.main_147	
	movq $112, %rsi	

1
	movq %reg0, %reg1	
.Matrix.mul_1:	

1
	movq 576(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq %rdi, 200(%reg1)	
	movq $3000, %rdi	

1
	je .Razz.new_12	
	movq $10, %reg0	

1
	call *%reg0	
	movq 568(%rbx), %reg0	

1
	movq -64(%rbp), %rax	
	movq %r14, %reg3	

1
	movq %r14, %reg1	
	movq -56(%rbp), %rax	

1
	call *%reg0	
	movq $19322, %reg0	

1
	jg .Matrix.elMul_2	
	movq %reg0, %rdx	

1
	je .Main.main_9	
	movq $30, %rsi	

1
	movq $8271, %rsi	
	imull %esi	

1
	movq %reg0, 472(%rax)	
	movq $0, %reg0	

1
	movq 136(%rax), %rax	
	movq 8(%reg1), %rdi	

1
	movq %reg0, %rax	
	jmp .Main.main_52	

1
	movq $.string9, %r14	
	movq 0(%rbx), %reg2	

1
	subl %reg0, %edi	
	cmpl %edi, %reg2	

1
	movq %reg0, 616(%rax)	
	movq $0, %reg0	

1
	subl %reg0, %ecx	
	movq -168(%rbp), %reg3	

1
	movq -32(%rbp), %rax	
	movq -96(%rbp), %reg3	

1
	testq $1, %rax	
	je .CellularAutomaton.cell_at_next_evolution_7	

1
	sete %sil	
	jne .Main.main_57	

1
	negl %reg0	
	movq $1202, %rax	

1
	call *%reg0	
	movq 576(%rbx), %reg2	

1
	movq $179, %rsi	
	movq $.string5_l, %rdi	

1
	movq $10, %rsi	
	movq %r12, %reg2	

1
	je .Cons.sort_1	
	movq $76, %rsi	

1
	movq 0(%rdx), %rax	
	movq 144(%rax), %rax	

1
	movq %r12, 8(%rax)	
	movq %rax, 32(%reg2)	

1
	movq -32(%rbp), %rdi	
	subl %reg2, %eax	

1
	jg .Main.main_131	
	movq -48(%rbp), %rax	

1
	movq %rax, %reg1	
	movq 0(%reg2), %r13	

1
	testq $1, %rax	
	je .Foo.new_1	

1
	movq -128(%rbp), %reg1	
	movq -168(%rbp), %rdi	

1
	call *%reg0	
	movq 48(%reg1), %reg2	

1
	call *%reg0	
	movq $51549, %reg1	

1
	movq %rdx, -32(%rbp)	
	movq -16(%rbp), %rbx	

1
.Main.main_1:	
	movq $.string7, %rax	

1
	jmp .Foo.new_6	
.Foo.new_4:	

1
.string0_l:	
	.string "Matrix"	

1
.Matrix.get_52:	
.Matrix.get_39:	

1
	movq $0, %reg0	
	movq %reg0, 680(%rax)	

1
	je .Main.main_185	
	movq $151, %rsi	

1
	negl %r8d	
	movq -152(%rbp), %rax	

1
	idivl %reg0	
	movq $229, %reg1	

1
	movq $3, %reg0	
	subl %edi, %eax	

1
	call *%reg0	
	movq -72(%rbp), %rdi	

1
	cmpq $Object_vtable, 0(%reg0)	
	je .Main.funccase_2	

1
Dictionary.getHead:	
	pushq %rbp	

1
	movq 184(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	negl %reg0	
	movq $58419, %reg1	

1
	call *%reg0	
	movq $58921, %reg1	

1
	setl %reg0l	
	jge .Main.main_22	

1
	.quad Cons.car	
	.quad Cons.cdr	

1
	call *%rax	
	movq 632(%reg1), %r12	

1
	movq -72(%rbp), %rax	
	movq -104(%rbp), %rdi	

1
	movq %reg0, %reg1	
	movq $16029, %reg0	

1
.Main.main_66:	
	movq -136(%rbp), %reg1	

1
	movq $List_vtable, 0(%reg0)	
	movq $0, %rdi	

1
	movq 8(%reg0), %rax	
	movq %rdi, %r12	

1
	movq %reg0, 296(%rax)	
	movq $0, %reg0	

1
	.quad Main.fib	
	.text 	

1
.Main.main_10:	
.Main.main_8:	

1
	jne .Matrix.get_47	
	movq 152(%rax), %rax	

1
	movq 136(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq %rdi, 656(%rax)	
	movq $0, %rdi	

1
	.string "5"	
.string12:	

1
	movq %rdi, 488(%reg1)	
	movq $0, %rdi	

1
	movq -24(%rbp), %reg1	
	subl %reg2, %esi	

1
	movq -56(%rbp), %reg1	
	movq -64(%rbp), %r9	

1
Bar.foo:	
	pushq %reg0	

1
	addl %reg0, %eax	
	movq $25036, %reg2	

1
	call out_error	
.Main.main_145:	

1
	movq $52820, %reg0	
	movq $38686, %reg1	

1
	testq $1, %rdi	
	je .Main.main_81	

1
	movq %reg0, %r11	
	imull %r11d	

1
	testq $1, %reg0	
	je .A2I.a2i_1	

1
.Cons.insert_5:	
	movq 0(%reg0), %reg1	

1
	movq %reg0, 128(%rax)	
	movq %reg0, %rax	

1
	movq $34498, %reg0	
	imull %reg1	

1
	movq -64(%rbp), %reg1	
	imull %reg2d	

1
	jne .Main.main_57	
	movq %reg0, %rax	

1
	addl %reg0, %eax	
	movq $55318, %reg2	

1
	movq $7, %reg0	
	movq %reg1, %rsi	

1
	movq $157, %reg0	
	movq $.string5_l, %reg1	

1
	movq 0(%rbx), %r13	
	movq 120(%r13), %r13	

1
	call *%r15	
	movq -160(%rbp), %reg2	

1
	movq %reg0, 8(%reg1)	
.Main.main_38:	

1
	movq %rax, %reg1	
	movq $10478, %rax	

1
	movq 216(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq $15714, %r9	
	movq $0, %reg1	

1
	movq %r11, %r10	
	subl %r10d, %reg2	

1
	imull %edi	
	movq %rax, -128(%rbp)	

1
	movq $28379, %reg0	
	movq $0, %reg1	

1
	movq %r8, %rax	
	movq $35237, %r8	

1
	movq $0, %reg0	
	movq %reg0, 392(%rax)	

1
	cmpq $Main_vtable, 0(%rbx)	
	je .Main.new_2	

1
.Foo.new_5:	
	movq %rbx, %reg1	

1
	movq %rax, %rdi	
	movq $16029, %rax	

1
	movq $63664, %reg0	
	movq $60238, %reg1	

1
	call *%rax	
.Main.main_2:	

1
	movq $0, %reg0	
	movq 16(%reg1), %rdi	

1
	testq $1, %reg0	
	je .Main.main_153	

1
	testq $1, %r9	
	je .Main.main_95	

1
	movq %reg0, 8(%reg1)	
	movq %reg1, 16(%reg2)	

1
	movq $1, %rdi	
	movq %rsi, %reg2	

1
List.rcons:	
	pushq %reg0	

1
	call out_error	
.Main.main_167:	

1
	movq $51549, %rax	
	movq -8(%rbp), %reg2	

1
	.globl List.car	
	.type List.car, @function	

1
	setl %reg0l	
	jge .A2I.i2a_3	

1
	sete %reg0	
	jne .A2I.i2c_5	

1
	movq -160(%rbp), %rax	
	movq -88(%rbp), %reg3	

1
	.string "Dictionary"	
.string1:	

1
	subl %reg0, %eax	
	movq %r13, %rdi	

1
	.size Main.new, .-Main.new	
	.globl Complex.new	

1
	movq %reg0, %reg1	
	movq 48(%reg2), %rsi	

1
	negl %reg0	
	movq %rax, %r12	

1
	movq 0(%rdx), %r14	
	movq 72(%r14), %r14	

1
	subl %reg0, %eax	
	movq -88(%rbp), %rcx	

1
	movq -72(%rbp), %rax	
	movq -72(%rbp), %reg2	

1
	jmp .Foo.new_6	
.Foo.new_5:	

1
	movq %rbx, %r12	
	movq 8(%rax), %r13	

1
	movq $12591, %reg0	
	movq $38801, %rax	

1
	movq $11282, %reg0	
	movq $39523, %reg1	

1
	movq %reg0, 560(%rax)	
	movq $0, %reg0	

1
	call *%reg0	
	movq 248(%reg1), %reg2	

1
.Bar.new_16:	
	movq %rbx, %reg1	

1
	subl %eax, %reg1	
	movq -64(%rbp), %rax	

1
	movq 200(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq -160(%rbp), %rsi	
	addl %reg2, %eax	

1
	.string "ERROR: %lld: Exception: division by zero\n"	
.string5:	

1
	jmp .Main.main_46	
.Main.main_45:	

1
	movq -104(%rbp), %rax	
	subl %reg2, %reg3	

1
	movq %rdi, %rax	
	jmp .Main.main_145	

1
	movq $51549, %reg0	
	movq %reg1, %rdx	

1
	movq 112(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	movq $18444, %reg0	
	negl %eax	

1
.Matrix.get_25:	
	cdq	

1
	addl %reg0, %edi	
	movq $2, %rax	

1
	testq $1, %reg0	
	je .Cons.print_list_1	

1
	movq -136(%rbp), %rax	
	movq -160(%rbp), %rdi	

1
	jmp .A2I.c2i_8	
.A2I.c2i_7:	

1
	addl %edi, %eax	
	movq %reg2, 56(%reg3)	

1
.Matrix.set_14:	
	movq $3, %r9	

1
	ret	
	.size Razz.new, .-Razz.new	

1
	je .Main.main_140	
	movq $112, %rsi	

1
	movq %rdi, 152(%rax)	
	movq $3000, %rdi	

1
	call *%r12	
	movq 440(%rbx), %reg2	

1
	movq %reg0, %reg1	
	movq $63664, %reg0	

1
	movq $.string11, %r12	
	cmpl $0, %reg1	

1
	negl %edi	
	movq -96(%rbp), %rax	

1
	je .Matrix.set_64	
	movq $125, %rsi	

1
	.size Foo.setX, .-Foo.setX	
	.globl Bar.getX	

1
	negl %reg0	
	movq -120(%rbp), %rdi	

1
	movq $Dictionary_vtable, 0(%reg0)	
	movq $0, %reg1	

1
	movq 176(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	addl %edi, %eax	
	movq %rax, 56(%rbx)	

1
	negl %reg0d	
	movq 0(%rbx), %reg2	

1
	movq %reg0, 128(%reg1)	
	movq %reg0, %reg1	

1
	movq $25, %reg0	
	movq 0(%rbx), %reg2	

1
	movq %reg0, %rax	
.Main.main_161:	

1
	call *%rax	
	movq $2143, %rdi	

1
	movq $56453, %reg0	
	imull %esi	

1
	movq %reg0, %rax	
	movq %r13, %rcx	

1
	movq $9856, %rax	
	movq $8640, %rdi	

1
	addl %reg0, %esi	
	movq -32(%rbp), %reg3	

1
	movq $.string6, %reg0	
	movq %reg0, 8(%reg1)	

1
	.quad 1	
	.quad Baz.new	

1
	movq %reg0, %reg1	
	movq %r15, %reg0	

1
	movq 8(%reg0), %reg1	
	movq %r12, %rdi	

1
	movq $21018, %rax	
	movq %reg1, %reg2	

1
	movq $61695, %reg0	
	movq $50213, %reg1	

1
	jmp .Main.func_7	
.Main.func_7:	

1
	movq $18310, %reg0	
	subl %reg1, %reg2	

1
	je .Main.main_95	
	movq %reg0, %reg1	

1
	.quad .string9_l	
	.quad 7	

1
	movq 712(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq $5, %rdi	
	cmpl %reg1, %reg2	

1
	jmp .Main.main_104	
.Main.main_103:	

1
	movq %rsi, %rax	
	cmpl %reg2, %eax	

1
.Main.main_4:	
	movq $1, %reg0	

1
	idivl %edi	
	movq $46032, %rdi	

1
	movq -168(%rbp), %rsi	
	movq -160(%rbp), %rax	

1
	jne .Main.main_1	
	movq -112(%rbp), %reg1	

1
	movq %reg0, %rax	
	movq $19369, %reg0	

1
	movq -136(%rbp), %reg1	
	movq $0, %r8	

1
	movq $0, %rdi	
	movq %rdi, 328(%reg1)	

1
	movq $52486, %rax	
	movq $20968, %rsi	

1
	movq $58419, %reg0	
	imull %reg1	

1
	subl %reg0, %edi	
	movq $34422, %reg2	

1
	je .Main.main_16	
	movq $23, %reg0	

1
	movq %rbx, %rax	
	movq %rsi, %reg3	

1
	movq 408(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	cmpq $String_vtable, 0(%rsi)	
	je .Main.func_5	

1
	movq $30018, %reg0	
	subl %reg1, %edi	

1
CellularAutomaton.evolve:	
	pushq %rbp	

1
	je .Main.func_2	
	jmp .Main.func_1	

1
	movq %rdx, %reg1	
	movq %rcx, %rdi	

1
	je .ListNode.insert_4	
	movq $128, %reg0	

1
	movq %r14, 8(%reg1)	
	movq %reg1, %reg2	

1
	movq %rbx, %reg1	
	imull %ecx	

1
	call *%rax	
.Main.print_list_3:	

1
	addl %reg0, %reg1	
	movq $55318, %reg2	

1
	movq $18310, %reg0	
	subl %eax, %edi	

1
	addl %esi, %reg1	
	movq -80(%rbp), %rsi	

1
	movq 128(%r12), %r12	
	movq %reg1, %reg2	

1
	addl %reg0, %esi	
	movq $14546, %rax	

1
	movq -64(%rbp), %rax	
	movq $0, %reg2	

1
	movq %reg0, %rax	
	movq -112(%rbp), %rax	

1
	je .Main.new_2	
	movq $1, %reg0	

1
	movq $3000, %reg0	
	movq %reg0, 544(%rax)	

1
	movq 376(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 448(%reg1)	

1
	subl %reg0, %reg1	
	movq -184(%rbp), %rax	

1
	movq %reg0, 368(%reg1)	
	movq $3000, %reg0	

1
	movq 704(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	jmp .Matrix.get_63	
.Matrix.get_62:	

1
	movq -184(%rbp), %rcx	
	addl %reg2, %eax	

1
.Main.main_49:	
	cmpl $0, %reg0d	

1
.Main.main_2:	
	movq 0(%rax), %r14	

1
	movq $18429, %reg0	
	movq $52820, %rax	

1
	movq %rax, %reg1	
	movq $.string9, %reg2	

1
	movq %r12, %rdx	
	call *%rax	

1
	movq 24(%rax), %reg1	
	sete %reg2l	

1
	movq $20509, %rax	
	subl %reg1, %edi	

1
	subl %reg0, %reg1	
	movq %reg2, -144(%rbp)	

1
.Main.main_3:	
	movq 80(%reg0), %rax	

1
	movq %reg0, %rax	
	negl %ecx	

1
	.quad .string0	
	.quad 10	

1
A2I.i2a:	
	pushq %reg0	

1
	movq %rdi, 456(%rax)	
	movq $0, %rdi	

1
	movq $.string11, %rax	
	movq %r12, %rdi	

1
	subl %eax, %reg1	
	movq -136(%rbp), %reg3	

1
	movq 8(%rax), %rdi	
	movq $1, %reg2	

1
	movq 584(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq $12, %r8	
	movq -64(%rbp), %rax	

1
	call *%r12	
	movq 424(%rbx), %rax	

1
	negl %reg0	
	movq -128(%rbp), %rax	

1
	movq %reg0, 184(%reg1)	
	movq %reg0, %reg1	

1
	call List.new	
	movq %reg0, 8(%rbx)	

1
	movq $76, %rsi	
	movq $.string2_l, %rdi	

1
	movq %rdi, %reg1	
	movq $46509, %reg2	

1
	addl %edi, %reg1	
	movq %reg2, -64(%rbp)	

1
.Main.main_168:	
	jmp .Main.main_169	

1
.Cons.rcons_2:	
	movq 0(%reg0), %reg1	

1
DicNode_vtable:	
	.quad .string2	

1
	je .Main.main_7	
	movq $15, %rsi	

1
	movq %r13, %rax	
	movq %r15, %reg3	

1
	call *%rax	
	movq $empty_string, %reg1	

1
	movq $35237, %r8	
	subl %r8d, %eax	

1
	imull %r11d	
	movq $2985, %r11	

1
	imull %reg0	
	movq -72(%rbp), %rcx	

1
	movq $8, %rsi	
	movq $.string5_l, %rdi	

1
Nil.print_list:	
	pushq %rbp	

1
	movq $97, %reg0	
	movq $.string2_l, %rdi	

1
.string13_l:	
	.string "fail"	

1
	movq %r15, %reg1	
	cmpl %esi, %reg3	

1
	movq $840, %reg0	
	movq %reg0, %reg1	

1
	movq $61139, %rax	
	movq 0(%reg1), %reg2	

1
	movq 256(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	movq $12, %r10	
	movq -128(%rbp), %reg2	

1
	movq -40(%rbp), %rdi	
	movq -176(%rbp), %rax	

1
	addl %reg0d, %reg1	
	addl %reg1, %reg2	

1
	movq $38511, %reg0	
	subl %reg1, %edi	

1
	movq %reg0, %r10	
	subl %r10d, %reg2	

1
	movq %r9, %rax	
	movq %reg2, %rax	

1
	movq -96(%rbp), %rsi	
	subl %reg2, %eax	

1
Main.funcifi:	
	pushq %rbp	

1
	addl %reg0, %edi	
	movq %r12, %reg3	

1
Cons.head:	
	pushq %reg0	

1
	jg .Main.main_147	
	movq %reg0, %reg1	

1
	movq 384(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	sete %cl	
	jne .Matrix.get_54	

1
	movq -80(%rbp), %rax	
	movq -88(%rbp), %reg3	

1
.Main.main_14:	
	movq -16(%rbp), %rdx	

1
	.quad Object.type_name	
	.quad Matrix.get	

1
	movq $0, %reg0	
	jmp .A2I.c2i_2	

1
	movq 192(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq %rax, %reg1	
	movq -24(%rbp), %reg3	

1
	sete %r14b	
	testq $1, %r14	

1
	movq %reg0, %rax	
.Main.func_1:	

1
	call *%reg0	
	movq 600(%rbx), %reg2	

1
	movq %rcx, %reg1	
	movq $29252, %rcx	

1
	movq %r12, %reg1	
	movq $3, %reg2	

1
	movq -96(%rbp), %rcx	
	movq -144(%rbp), %rax	

1
	testq $1, %r8	
	je .Main.main_10	

1
.Main.main_36:	
	movq 0(%reg0), %reg1	

1
	movq $6934, %reg0	
	movq $0, %rcx	

1
	movq $17594, %r10	
	subl %r10d, %eax	

1
	movq $41765, %reg0	
	subl %eax, %edi	

1
	movq $6, %reg0	
	movq %rdi, %reg2	

1
	je .Main.main_192	
	movq $151, %reg0	

1
	movq -128(%rbp), %rsi	
	movq %r14, %rax	

1
	movq $.string8, %reg0	
	movq 0(%rax), %rbx	

1
	movq %rdi, 8(%reg1)	
	movq 16(%reg1), %rdi	

1
	ret	
	.size Nil.rev, .-Nil.rev	

1
	movq %reg0, %rax	
	jmp .Matrix.set_48	

1
	movq %reg0, %rcx	
	movq $49119, %reg0	

1
	movq -128(%rbp), %rcx	
	negl %ecx	

1
	movq %rdi, 40(%reg1)	
	movq $3000, %rdi	

1
	addl %reg0, %reg1	
	movq %rax, 56(%rbx)	

1
.Main.main_3:	
	movq %r12, %rdi	

1
	movq 632(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	call out_error	
.Main.main_89:	

1
	movq $15735, %rax	
	movq $932, %reg1	

1
.Main.main_20:	
	movq $.string9, %reg0	

1
.Main.main_2:	
	movq 16(%rbx), %reg1	

1
	movq 472(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq %rsi, %rdi	
	cmpl $0, %reg2	

1
	idivl %ecx	
	movq $3175, %reg1	

1
	call *%r12	
	movq 488(%rbx), %rax	

1
	addl %edi, %reg1	
	movq %rax, -24(%rbp)	

1
.A2I.i2c_7:	
	movq $4, %reg0	

1
	call *%reg0	
	movq 176(%rbx), %reg0	

1
	movq -48(%rbp), %rsi	
	movq %reg2, %reg3	

1
	jmp .Matrix.set_65	
.Matrix.set_53:	

1
ListNode.push:	
	pushq %rbp	

1
	movq $14546, %rax	
	subl %reg1, %reg2	

1
	call out_error	
.Main.main_95:	

1
	.quad .string18_l	
	.quad 1	

1
	.size A2I.a2i_aux, .-A2I.a2i_aux	
	.globl A2I.i2a	

1
.Razz.new_19:	
	movq 16(%rbx), %rdx	

1
	movq %r12, %reg1	
	movq 8(%rbx), %r13	

1
	subl %reg0, %reg1	
	movq %rdi, -16(%rbp)	

1
	movq -184(%rbp), %rax	
	movq %rsi, %reg3	

1
	jne .Matrix.get_36	
	movq 120(%rax), %rax	

1
	movq $33976, %reg0	
	addl %edi, %eax	

1
	movq $33472, %rax	
	movq $7201, %rsi	

1
	movq %rax, 16(%rbx)	
	jmp .ListNode.insert_3	

1
.Main.main_16:	
	movq %reg0, %rax	

1
	je .Main.main_3	
	movq $4, %reg0	

1
	je .Main.main_70	
	movq %r15, %reg1	

1
	movq %reg0, 192(%reg1)	
	movq $3000, %reg0	

1
	movq %rdi, 104(%reg1)	
	movq $3000, %rdi	

1
.Matrix.get_45:	
	movq $4, %rcx	

1
	movq 416(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq -168(%rbp), %reg1	
	addl %reg2d, %reg3	

1
	subl %reg0, %reg1	
	movq $25241, %rax	

1
	addl %reg0, %reg1	
	movq $46874, %reg2	

1
	movq -104(%rbp), %reg1	
	cmpl %eax, %esi	

1
	addl %esi, %reg1	
	movq -80(%rbp), %reg3	

1
.A2I.c2i_3:	
	movq $.string9, %rdi	

1
	movq $.string6, %reg0	
	movq %rbx, %reg2	

1
	addl %r12d, %reg1	
	addl %reg1, %reg2	

1
	je .Main.main_182	
	movq $308, %reg0	

1
	movq %rax, 8(%rbx)	
	jmp .Dictionary.insert_3	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_24	

1
	testq $1, %reg0	
	je .Main.funccase_6	

1
.Main.main_35:	
	movq -112(%rbp), %rsi	

1
	movq $12, %rcx	
	movq -88(%rbp), %reg2	

1
	movq $4, %reg0	
	cmpl %reg1, %reg2	

1
	jne .Matrix.set_45	
	movq %rdi, 144(%rax)	

1
	setl %reg0l	
	jge .Main.main_1	

1
	movq %reg0, 80(%reg1)	
	movq $3000, %reg0	

1
	jge .Main.main_2	
	movq 0(%rbx), %rax	

1
	cmpq $Bar_vtable, 0(%reg0)	
	je .Bar.new_5	

1
	movq $.string13, %reg0	
	movq 0(%reg1), %rax	

1
	negl %eax	
	movq -168(%rbp), %rcx	

1
	jne .Main.main_4	
	movq $.string7, %rax	

1
	movq $106, %rsi	
	movq $.string2_l, %reg1	

1
	ret	
	.size Matrix.new, .-Matrix.new	

1
	call out_error	
.Main.main_87:	

1
	subl %eax, %reg1	
	movq %rbx, %reg3	

1
	movq -104(%rbp), %reg1	
	negl %edi	

1
	movq $18, %rax	
	movq %rax, %reg1	

1
	movq $3000, %reg0	
	movq %reg0, 16(%reg1)	

1
	je .Main.main_11	
	cmpq $Int_vtable, 0(%rax)	

1
	movq 40(%reg0), %reg0	
	jmp .Matrix.get_11	

1
	movq $2, %reg0	
	movq %reg1, %rax	

1
	je .Main.main_62	
	movq $17, %reg0	

1
	movq %reg0, -8(%rbp)	
	movq $34533, %rax	

1
	movq %rbx, %rax	
	movq %reg2, %r10	

1
	movq 16(%reg0), %reg1	
	movq %reg1, 8(%reg0)	

1
	movq %rdi, %reg1	
	negl %edi	

1
	je .Main.main_109	
	movq %reg0, %reg1	

1
	movq 8(%rax), %rdi	
	cmpl $0, %edi	

1
	call *%rax	
.DicNode.insert_5:	

1
	movq -64(%rbp), %rdi	
	subl %edi, %eax	

1
	addl %eax, %edi	
	movq -80(%rbp), %reg3	

1
	movq %reg0, 352(%reg1)	
	movq $0, %reg0	

1
	idivl %ecx	
	movq -56(%rbp), %reg2	

1
CellularAutomaton.new:	
	pushq %rbp	

1
	movq 32(%reg0), %reg1	
	movq 16(%reg0), %reg2	

1
	movq 8(%rbx), %reg1	
	popq %r12	

1
	movq %rax, 32(%rbx)	
	call Bazz.new	

1
.Main.main_15:	
.Main.main_13:	

1
	call *%r12	
.Main.main_48:	

1
	movq $25185, %rax	
	addl %reg1, %ebx	

1
	movq 16(%rbx), %reg1	
	subl %reg2, %reg3	

1
	movq $3000, %reg0	
	movq %reg0, 336(%reg1)	

1
	movq -96(%rbp), %rax	
	subl %reg2, %r9d	

1
	addl %ecx, %eax	
	movq $12, %reg2	

1
	movq 120(%reg0), %reg0	
	movq 16(%rax), %rdi	

1
	call *%reg0	
	movq $2730, %reg1	

1
	imull %reg0	
	movq $21514, %reg1	

1
	movq $1, %reg0	
	movq 16(%rbx), %rax	

1
	jmp .Matrix.set_59	
.Matrix.set_58:	

1
	call *%reg0	
	movq -184(%rbp), %reg0	

1
	je .Main.main_36	
	movq $13, %rsi	

1
	movq %rax, %reg1	
	movq $16693, %rax	

1
	pushq %r12	
	movq $80, %reg1	

1
	movq $9, %rsi	
	movq $.string2_l, %rdi	

1
	je .Main.print_list_2	
	movq $.string8, %rax	

1
	movq -96(%rbp), %rax	
	movq -88(%rbp), %reg3	

1
	movq $0, %reg0	
	movq %reg0, 352(%rax)	

1
	movq %reg0, %rax	
	movq -152(%rbp), %rcx	

1
	movq %rax, -64(%rbp)	
	movq $7, %rax	

1
.Main.main_65:	
	cmpl $0, %reg0d	

1
	movq %reg0, 16(%rbx)	
	jmp .ListNode.insert_3	

1
	movq -16(%rbp), %reg1	
	movq %reg2, %rcx	

1
	subl %eax, %edi	
	movq $18310, %reg2	

1
	movq 256(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	testq $1, %rsi	
	je .Main.main_33	

1
.Main.main_1:	
	movq $2, %rax	

1
	movq %reg0, %rax	
	movq %r12, %rsi	

1
	movq %rax, %reg1	
	jmp .Main.main_19	

1
	addl %ecx, %esi	
	imull %esi	

1
	movq %reg0, 232(%rax)	
	movq $3000, %reg0	

1
	movq %rdi, %rax	
	jmp .Main.main_16	

1
	movq 24(%rax), %rdi	
	movq %reg2, %reg3	

1
	movq -104(%rbp), %reg1	
	movq $0, %r8	

1
	movq %rdi, %rsi	
	movq -160(%rbp), %rax	

1
	movq $5, %r14	
	movq 0(%rbx), %reg2	

1
	movq 512(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	idivl %esi	
	movq $16420, %rsi	

1
	movq $33866, %reg0	
	subl %edi, %reg2	

1
	movq %r15, 8(%rax)	
	jmp .Main.main_26	

1
	movq %rcx, %r13	
	movq %reg2, %reg3	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_59	

1
	subl %edi, %reg1	
	movq 0(%reg2), %r13	

1
	.quad Baz.main	
	.text 	

1
	movq 248(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	je .Main.main_2	
	movq $113, %rsi	

1
	movq -40(%rbp), %reg1	
	movq -24(%rbp), %reg3	

1
	jg .Main.main_37	
	movq $61139, %reg0	

1
	movq %rdi, 440(%rax)	
	movq $0, %rdi	

1
	movq $.string15, %rax	
	movq 0(%rbx), %reg2	

1
	movq $.string13, %r12	
	movq 0(%rbx), %rax	

1
	movq $8, %rcx	
	movq %rdi, %reg2	

1
	addl %reg0, %reg1	
	cmpl $0, %r13d	

1
	call *%rax	
	movq 664(%reg1), %rax	

1
	movq %reg0, 192(%rax)	
	movq %reg0, %rax	

1
	movq %rsi, %rbx	
	movq %rbx, %rdi	

1
	testq $1, %rcx	
	je .Main.main_77	

1
	movq -168(%rbp), %reg1	
	movq -104(%rbp), %rdi	

1
	negl %reg0	
	movq $17979, %rbx	

1
	idivl %reg0	
	movq $17815, %reg1	

1
	movq %reg0, -24(%rbp)	
	movq $4, %reg0	

1
	jmp .Razz.new_17	
.Razz.new_17:	

1
	movq $7, %r12	
	movq 0(%rax), %reg2	

1
	movq %reg0, 488(%rax)	
	movq $0, %reg0	

1
	movq $2234, %reg0	
	movq 0(%rbx), %r12	

1
.Main.main_1:	
	movq %rsi, %reg1	

1
	movq $53595, %reg0	
	imull %esi	

1
	je .CellularAutomaton.evolve_2	
	movq 0(%rbx), %reg1	

1
	movq $80, %rsi	
	movq $.string4_l, %rdi	

1
	testq $1, %reg0	
	je .Dictionary.insert_1	

1
	call *%reg0	
	movq 680(%rbx), %reg2	

1
.Main.main_160:	
	cdq	

1
	movq %rdi, 416(%rax)	
	movq $0, %rdi	

1
	je .Main.main_186	
	movq $151, %reg0	

1
	movq %rax, 8(%rbx)	
	jmp .Main.main_4	

1
.Dictionary.insert_1:	
	cmpl $0, 8(%rbx)	

1
	movq 576(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq $1, %reg0	
.Main.new_8:	

1
.Razz.new_12:	
	movq 32(%reg0), %reg1	

1
	movq %reg0, %r12	
	movq %reg0, %reg2	

1
	popq %reg0	
	cmpl $0, %r15d	

1
.Main.main_54:	
	movq 0(%reg0), %rax	

1
	call *%r12	
	movq 336(%rbx), %rax	

1
	movq %reg0, -16(%rbp)	
	movq $604, -24(%rbp)	

1
	je .Main.main_74	
	movq $19, %rsi	

1
	movq $4, %reg0	
	movq $1, %reg1	

1
	imull %r8d	
	movq -32(%rbp), %r8	

1
	.quad Nil.print_list	
Int_vtable:	

1
	movq 8(%reg0), %rdi	
	call *%rbx	

1
	movq $226, %reg0	
	movq $.string5_l, %reg1	

1
	movq $0, %rdi	
	movq %rdi, 408(%reg1)	

1
	movq $3000, %rdi	
	movq %rdi, 400(%reg1)	

1
	.size List.insert, .-List.insert	
	.globl ListNode.init	

1
	subl %reg0, %edi	
	movq %rdi, -32(%rbp)	

1
	call *%reg0	
	jmp .Main.funcifb_2	

1
	addl %reg0, %eax	
	movq %r14, %rsi	

1
.Main.main_2:	
	movq 0(%r12), %r14	

1
	movq $33636, %rdi	
	imull %reg1	

1
	movq 8(%r12), %r13	
	movq 0(%rbx), %rax	

1
	movq 688(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	jne .Matrix.set_45	
	movq %rdi, 144(%reg1)	

1
	movq %reg0, 32(%rax)	
	movq $3000, %reg0	

1
.Main.main_12:	
	movq %rbx, %rax	

1
	je .Main.main_108	
	movq $67, %rsi	

1
	jne .Main.main_42	
	movq $1, %reg0	

1
	call *%reg0	
	movq 96(%reg1), %reg2	

1
	cmpq $Razz_vtable, 0(%rbx)	
	je .Bar.new_8	

1
	movq -128(%rbp), %rax	
	movq -32(%rbp), %rsi	

1
	sete %reg0b	
	jne .Matrix.get_1	

1
	addl %esi, %reg1	
	movq -64(%rbp), %rcx	

1
	movq %reg0, %rax	
.Main.main_159:	

1
	movq -184(%rbp), %rcx	
	subl %ecx, %r8d	

1
	movq %rbx, %reg1	
	movq %rsi, %rcx	

1
	movq $40813, %reg0	
	addl %edi, %esi	

1
	sete %reg0b	
	jne .Matrix.set_30	

1
.Matrix.set_13:	
	leave	

1
.Main.main_6:	
	movq 0(%reg0), %r15	

1
	call *%reg0	
	movq 240(%rbx), %reg0	

1
	movq %rbx, %reg1	
	movq %r9, %reg3	

1
	sete %reg0l	
	jne .Main.main_134	

1
.Main.main_51:	
	movq %reg0, %reg1	

1
	movq -72(%rbp), %rsi	
	subl %reg2, %reg3	

1
	movq $Complex_vtable, 0(%reg0)	
	movq $0, %reg1	

1
	movq %rdi, %reg1	
.Main.func_2:	

1
	movq -32(%rbp), %reg1	
	addl %ecx, %eax	

1
	movq $12, %r8	
	movq -160(%rbp), %reg2	

1
	jmp .Main.iota_1	
.Main.iota_2:	

1
	movq $19892, %r11	
	imull %r11d	

1
	movq $17107, %reg0	
	movq 0(%reg1), %r12	

1
	je .Main.new_1	
	movq $12, %rsi	

1
	addl %edi, %reg1	
	movq %reg2, 56(%rbx)	

1
.Main.main_121:	
	movq %reg0, %reg1	

1
	call String.length	
	movq $1, %rdi	

1
	movq $3000, %reg0	
	movq %reg0, 248(%rax)	

1
	testq $1, %reg0	
	je .Main.out_whatever_1	

1
	movq $51816, %rax	
	movq 0(%reg1), %r12	

1
	movq -24(%rbp), %rax	
	movq -64(%rbp), %rsi	

1
	movq $15079, %reg0	
	negl %reg1	

1
	movq $47353, %rax	
	negl %eax	

1
	jg .Main.main_31	
	movq $.string7, %reg0	

1
	movq %reg0, %reg1	
	subq $168, %reg0	

1
	movq -88(%rbp), %reg1	
	movq $0, %rcx	

1
.Main.main_2:	
	movq $2, %r12	

1
	call *%reg0	
	cmpl $0, 16(%rbx)	

1
	jmp .Main.main_171	
.Main.main_72:	

1
	movq %reg0, 272(%rax)	
	movq $0, %reg0	

1
.Main.main_142:	
	movq %reg0, %rax	

1
	testq $1, %r8	
	je .Main.main_121	

1
	movq $name_Bool, %rax	
	cmpl $0, 8(%rbx)	

1
	.quad Bar.setI	
	.quad Bar.getI	

1
	movq 104(%r12), %r12	
	movq %rbx, %reg2	

1
	movq %r13, %reg1	
	movq %r15, %reg3	

1
	addl %reg0, %reg1d	
	movq $15079, %rax	

1
	movq %rdi, 208(%rax)	
	movq $0, %rdi	

1
	movq %rdi, %reg1	
	jmp .Main.main_32	

1
	jmp .Matrix.set_11	
.Matrix.set_10:	

1
	movq %r13, %r12	
	addl %r12d, %eax	

1
	movq $.string7, %rbx	
	movq %reg1, %rdi	

1
	movq 8(%rdi), %rdi	
	imull %reg1	

1
	movq -64(%rbp), %reg1	
	movq -56(%rbp), %reg3	

1
	movq %reg0, %rax	
	movq $.string7, %reg2	

1
	movq %reg0, 40(%reg1)	
	movq $1, %reg0	

1
	jge .Main.main_80	
	movq %r13, %reg1	

1
	movq %rsi, %reg1	
	call ListNode.new	

1
	cmpq $Main_vtable, 0(%reg0)	
	je .Main.new_3	

1
	movq -184(%rbp), %r8	
	movq -48(%rbp), %reg3	

1
	movq %reg0, %reg1	
	cmpl %reg1d, %reg2	

1
	call *%reg0	
	movq $28968, %rax	

1
	movq %reg0, %reg1	
	movq $0, -24(%rbp)	

1
	movq %reg0, %rax	
	jmp .Main.main_89	

1
	movq %rdi, %reg1	
	movq %reg1, %rbx	

1
	movq %rax, %rsi	
	movq %r12, %reg3	

1
	movq %rax, %reg1	
	movq -16(%rbp), %rsi	

1
	movq %reg0, 288(%reg1)	
	movq $3000, %reg0	

1
	movq %rsi, 64(%rbx)	
	movq 32(%rbx), %reg2	

1
	idivl %reg0d	
	movq %reg1, %r10	

1
	movq %rsi, %reg1	
	subl %eax, %reg3	

1
	jmp .Main.funcifi_2	
.Main.funcifi_1:	

1
.Main.main_121:	
	cdq	

1
	jmp .Matrix.set_37	
.Matrix.set_36:	

1
.Matrix.get_17:	
	movq $3, %reg0	

1
	movq -64(%rbp), %rsi	
	imull %reg2	

1
	movq 0(%r14), %rax	
	movq 80(%rax), %rax	

1
	movq $.string9, %rbx	
	movq 0(%rax), %r12	

1
	movq 336(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq -128(%rbp), %rax	
	addl %reg2, %edi	

1
	movq $29773, %rax	
	movq 0(%rbx), %r12	

1
	movq %reg0, %rsi	
	subl %reg2, %edi	

1
	sete %dil	
	jne .Main.main_6	

1
	movq 16(%rax), %reg1	
	subl %esi, %reg3	

1
	je .Bar.new_2	
.Bar.new_2:	

1
	.quad .string4_l	
	.quad 3	

1
	movq $12, %rsi	
	movq -72(%rbp), %rax	

1
	movq $3, %reg0	
	movq %reg0, %r13	

1
	movq 576(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
.Matrix.set_57:	
.Matrix.set_55:	

1
	movq %rdi, %rax	
	jmp .Matrix.set_18	

1
	call *%reg0	
	movq 96(%rbx), %reg2	

1
	ret	
	.size DicNode.decr, .-DicNode.decr	

1
	movq %reg0, 8(%reg1)	
	jmp .List.insert_3	

1
	movq $3453, %r12	
	movq 0(%rbx), %reg2	

1
.Matrix.set_38:	
	cdq	

1
	call *%reg0	
	movq 272(%reg1), %reg2	

1
	je .Matrix.set_25	
	movq $98, %rsi	

1
	call *%rax	
	movq -128(%rbp), %rdx	

1
	jne .Main.main_2	
	movq %reg0, %rdx	

1
	movq $.string10, %rbx	
	movq 0(%rax), %reg2	

1
.Main.main_49:	
	cmpl $0, %r13d	

1
	je .Main.main_5	
	movq $0, %rax	

1
	setl %reg0	
	movq $2, %rdi	

1
	movq %reg0, %rbx	
	call List.new	

1
	movq $5, %rcx	
	cmpl %reg1, %reg2d	

1
	call out_error	
.Main.main_118:	

1
	movq $58652, %rdi	
	movq $0, %rsi	

1
	movq $15714, %r9	
	movq $0, %r10	

1
	subl %reg0, %reg1	
	movq $17376, %reg2	

1
	movq -160(%rbp), %reg1	
	movq -168(%rbp), %reg3	

1
	imull %r10d	
	movq %reg1, %r10	

1
Complex.new:	
	pushq %rbp	

1
.Main.main_162:	
	cdq	

1
.Razz.new_4:	
	call Razz.new	

1
	movq 56(%r15), %r15	
	movq %r12, %rdi	

1
	movq %reg0, %reg1	
	movq $46509, %rax	

1
	je .Main.main_9	
	movq $11, %rsi	

1
	addl %reg0, %reg1d	
	movq -144(%rbp), %reg3	

1
	movq %r14, %rdi	
	movq %reg2, %rax	

1
	movq -16(%rbp), %reg1	
	movq -40(%rbp), %rax	

1
	movq -176(%rbp), %rax	
	addl %eax, %reg3	

1
	movq -88(%rbp), %rsi	
	addl %esi, %eax	

1
.Matrix.set_53:	
	movq $1, %rax	

1
	movq -128(%rbp), %rax	
	imull %ecx	

1
	ret	
	.size Nil.isNil, .-Nil.isNil	

1
	movq %rbx, %rax	
	movq $18422, %rbx	

1
	movq $0, %rdi	
	movq %rdi, 448(%rax)	

1
	movq %r15, 8(%rax)	
	jmp .Main.main_65	

1
	movq -104(%rbp), %rsi	
	subl %esi, %eax	

1
.Main.funccase_6:	
	movq 0(%reg0), %reg1	

1
	movq %rdi, %rax	
	movq -88(%rbp), %rax	

1
	.size Nil.insert, .-Nil.insert	
	.globl Nil.rcons	

1
	movq %r8, %rax	
	movq %r14, %r8	

1
	jne .Matrix.get_14	
	movq $1, %rcx	

1
	movq -24(%rbp), %rax	
	subl %reg2, %edi	

1
	movq $13131, %reg0	
	addl %eax, %reg2	

1
	jmp .Main.main_143	
.Main.main_142:	

1
.Main.main_86:	
	movq %reg0, %rsi	

1
	movq 144(%reg0), %reg0	
	movq %rax, %rdi	

1
Baz.main:	
	pushq %rbp	

1
	movq %reg0, 296(%reg1)	
	movq $3000, %reg0	

1
	movq $47988, %rcx	
	movq %rcx, %reg1	

1
	movq %rax, %reg1	
.Matrix.mul_3:	

1
	je .Main.main_55	
	movq $17, %rsi	

1
	movq $28379, %rsi	
	movq $0, %reg1	

1
	movq 8(%r12), %rax	
	movq 0(%rbx), %reg3	

1
	movq -32(%rbp), %reg1	
	movq -16(%rbp), %reg3	

1
.Main.main_147:	
	cdq	

1
	movq %rdi, %rax	
	jmp .Matrix.set_55	

1
	jne .Matrix.get_40	
	movq $1, %reg0	

1
	movq $48672, %rax	
	movq $3326, %reg1	

1
	movq $3000, %rdi	
	movq %rdi, 480(%reg1)	

1
	movq $1357, %reg0	
	movq $9886, %reg1	

1
	.type DicNode.init, @function	
DicNode.init:	

1
	movq %rbx, %rsi	
	movq -88(%rbp), %reg3	

1
	ret	
	.size Main.funcwhilei, .-Main.funcwhilei	

1
	call Foo.getX	
	movq -8(%rbp), %reg1	

1
	.type Cons.sort, @function	
Cons.sort:	

1
	movq $53587, %rax	
	movq $6934, %reg1	

1
	cmpq $String_vtable, 0(%rax)	
	je .Main.main_7	

1
	setl %dil	
	jge .Main.main_14	

1
	movq $29789, %rsi	
	movq %rsi, %rcx	

1
	movq $46404, %reg0	
	movq 0(%reg1), %reg2	

1
	call *%reg0	
	jmp .Cons.insert_3	

1
	testq $1, %reg0	
	je .Cons.insert_4	

1
	movq $43177, %reg0	
	subl %reg1, %reg2	

1
.Complex.equal_3:	
	movq 0(%reg0), %rax	

1
	je .Main.main_47	
	movq %reg0, %rax	

1
	movq %rax, %rdi	
	movq $0, %rsi	

1
	movq %rdi, %reg1	
	movq %reg1, -160(%rbp)	

1
	addl %reg0, %edi	
	movq %rdi, 16(%reg3)	

1
	movq 688(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	testq $1, %rdi	
	je .Cons.insert_5	

1
.Main.main_68:	
	movq -16(%rbp), %rsi	

1
	idivl %ecx	
	movq $36212, %reg1	

1
	movq %rdi, 224(%rax)	
	movq $3000, %rdi	

1
	movq 272(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	idivl %r11d	
	movq $28227, %r11	

1
	movq %rax, %rdi	
	movq $8423, %rax	

1
	movq $1, %reg0	
	movq 24(%reg1), %reg2	

1
	testq $1, %rsi	
	je .Main.main_116	

1
	movq $3000, %rdi	
	movq %rdi, 184(%rax)	

1
.Dictionary.insert_2:	
	movq 0(%reg0), %reg1	

1
	subl %reg0, %eax	
	subl %eax, %edi	

1
	je .Main.main_11	
.Main.main_10:	

1
	call getmem	
	movq $CellularAutomaton_vtable, 0(%reg0)	

1
	subl %eax, %reg1	
	movq $34320, %reg2	

1
.Main.main_7:	
	movq %r13, %reg1	

1
	movq -152(%rbp), %rax	
	addl %esi, %reg3	

1
	movq %rax, %r14	
.Matrix.mul_3:	

1
	.quad 50	
.string4_l:	

1
	je .Main.funccase_2	
	cmpq $String_vtable, 0(%rdi)	

1
	movq $.string9, %r15	
	movq %r15, %reg1	

1
.Matrix.get_16:	
	jmp .Matrix.get_26	

1
	movq $.string7, %rax	
	movq 0(%reg1), %r13	

1
	movq %rax, %reg1	
	movq 24(%rbx), %rax	

1
	je .Main.main_160	
	movq $142, %reg0	

1
	imull %edi	
	movq %rax, %r12	

1
	imull %ecx	
	movq -72(%rbp), %rcx	

1
	call *%rax	
	movq -144(%rbp), %reg2	

1
.Bar.new_12:	
	movq 32(%reg0), %rdx	

1
.Main.main_31:	
.Main.main_26:	

1
	testq $1, %reg0	
	jne .Main.main_64	

1
	movq $2, %reg0	
	movq 8(%rax), %reg2	

1
	je .Main.main_1	
	movq $112, %reg0	

1
	movq $9569, %rsi	
	imull %reg1	

1
	movq $0, %reg0	
	movq %reg0, 440(%reg1)	

1
	movq $3000, %rdi	
	movq %rdi, 656(%reg1)	

1
	jmp .Matrix.get_57	
.Matrix.get_56:	

1
	movq %rax, %reg1	
.A2I.a2i_aux_1:	

1
	call *%reg0	
	jmp .Dictionary.get_3	

1
	je .Main.main_9	
	movq $168, %reg0	

1
	negl %reg0	
	movq -72(%rbp), %rax	

1
.Main.main_17:	
	movq -144(%rbp), %rsi	

1
.Main.new_1:	
	cmpq $IO_vtable, 0(%rax)	

1
	call ListNode.new	
	movq %rax, 8(%reg1)	

1
	je .Main.main_170	
	movq $145, %reg0	

1
	call *%rax	
	movq 16(%rbx), %rdi	

1
	subl %reg0, %reg1	
	movq $17376, %rax	

1
	movq 32(%rax), %rax	
	movq %r13, %reg2	

1
	movq %rdi, %reg1	
	jmp .Main.main_135	

1
	je .List.cons_1	
	movq $50, %reg0	

1
.Matrix.set_19:	
	movq $4, %reg0	

1
	call *%r15	
	movq -8(%rbp), %rdx	

1
	.globl DicNode.decr	
	.type DicNode.decr, @function	

1
	ret	
	.size Cons.head, .-Cons.head	

1
	movq %rdi, %reg1	
	jmp .Main.main_52	

1
	movq $2, %rsi	
	imull %esi	

1
.DicNode.get_1:	
	movq 24(%reg0), %reg1	

1
	subl %reg0, %eax	
	movq %reg2, -176(%rbp)	

1
	movq %r12, %rax	
	movq %rbx, %rdi	

1
	jmp .Main.main_128	
.Main.main_127:	

1
.Bar.getX_1:	
	movq 8(%rax), %rdx	

1
CellularAutomaton.cell_right_neighbor:	
	pushq %rbp	

1
	movq 64(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	call *%reg0	
.A2I.a2i_6:	

1
.A2I.i2c_3:	
	movq $2, %reg0	

1
	call *%rax	
	negl %reg1	

1
	movq $25316, %rax	
	movq $8214, %r8	

1
	.type Nil.isNil, @function	
Nil.isNil:	

1
	testq $1, %reg0	
	je .Razz.new_20	

1
	call *%reg0	
	negl %eax	

1
	idivl %r9d	
	movq -72(%rbp), %r8	

1
	movq -72(%rbp), %rax	
	movq -40(%rbp), %reg3	

1
	movq $3000, %rdi	
	movq %rdi, 496(%rax)	

1
	call Object.new	
	movq %rax, %r14	

1
	movq $30, %rsi	
	movq $.string3_l, %reg1	

1
	movq $.string13, %reg0	
	jmp .A2I.i2c_14	

1
	.quad A2I.a2i_aux	
	.quad A2I.i2a	

1
	movq %reg0, 576(%reg1)	
	movq $3000, %reg0	

1
	jmp .Main.main_60	
.Main.main_59:	

1
	.globl Main.funcwhileb	
	.type Main.funcwhileb, @function	

1
.Main.main_24:	
	movq -16(%rbp), %reg1	

1
	movq $.string8, %r13	
	movq %rax, %reg2	

1
	call *%rax	
	movq $.string7, %rax	

1
	movq %rdi, 368(%rax)	
	movq $0, %rdi	

1
	movq $1, %reg0	
	movq %reg1, %rdx	

1
	call *%reg0	
	movq 56(%reg1), %reg0	

1
	movq $0, %rdi	
	movq %rdi, 528(%rax)	

1
	movq $18189, %r11	
	movq $0, %reg1	

1
	subl %reg0, %eax	
	movq %rax, -112(%rbp)	

1
	idivl %reg0	
	movq %reg1, -104(%rbp)	

1
.Main.main_45:	
	jmp .Main.main_49	

1
	call out_error	
.Matrix.get_51:	

1
	jmp .Matrix.get_35	
.Matrix.get_34:	

1
	movq %reg0, 544(%rax)	
	movq $0, %reg0	

1
	movq %reg0, %rdi	
	movq -16(%rbp), %rdi	

1
	movq %rdi, %rax	
	cmpl %esi, %eax	

1
	movq %rdx, %reg1	
	movq %reg2, %r13	

1
	movq %reg0, 432(%reg1)	
	movq $0, %reg0	

1
	sete %cl	
	jne .Matrix.get_2	

1
	movq 432(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
.Main.iota_1:	
	movq %reg0, %reg1	

1
	movq 16(%rax), %reg1	
	cmpl %esi, %edi	

1
	testq $1, %rax	
	je .Main.main_54	

1
.Main.main_42:	
	movq $8800, %reg0	

1
.Main.main_5:	
	movq 0(%reg0), %r14	

1
	jge .Main.main_10	
	movq %r12, %reg1	

1
	.size Main.main, .-Main.main	
	.globl Foo.set	

1
	call *%rax	
	movq 152(%rbx), %reg2	

1
	movq %rax, %r14	
	movq %rbx, %rdi	

1
	movq %rsi, %rax	
	subl %reg2, %reg3	

1
	movq $59714, %reg0	
	movq %reg0, %rcx	

1
	testq $1, %rax	
	je .Razz.new_12	

1
.Main.main_5:	
	cmpq $Int_vtable, 0(%rax)	

1
.Main.new_11:	
	movq 32(%rbx), %rax	

1
	imull %reg0	
	movq -136(%rbp), %reg2	

1
	movq %rbx, %rdi	
	testq $1, %rdi	

1
	movq %reg0, %r9	
	movq %r13, %reg0	

1
	movq $.string6, %rbx	
	movq 0(%rax), %r12	

1
	movq $63252, %rax	
	subl %reg1, %reg2d	

1
	addl %eax, %reg1d	
	movq $7429, %reg2	

1
	movq %reg0, 8(%rax)	
	movq 8(%rbx), %reg0	

1
	movq %rax, %reg1	
	movq $25351, %rax	

1
	movq 168(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	movq $15079, %rax	
	negl %reg1	

1
	sete %reg0l	
	jne .CellularAutomaton.cell_right_neighbor_1	

1
	jne .Main.main_9	
	movq $53748, %rax	

1
	movq %rax, 16(%reg1)	
	movq $.string7, %rax	

1
	movq %reg0, %reg1	
	movq $53642, %reg0	

1
	movq -96(%rbp), %reg1	
	movq -16(%rbp), %r8	

1
	movq -72(%rbp), %reg1	
	movq -48(%rbp), %rax	

1
	sete %reg0l	
	jne .Main.main_27	

1
	movq 56(%r14), %r14	
	movq %rbx, %rdi	

1
	movq $62420, %reg0	
	movq $31735, %rsi	

1
	movq -104(%rbp), %reg1	
	movq -160(%rbp), %rax	

1
	cmpq $Foo_vtable, 0(%reg0)	
	je .Razz.new_9	

1
.Matrix.set_34:	
	movq $5, %reg0	

1
	movq $27409, %reg0	
	movq $0, %r10	

1
	movq %rax, -40(%rbp)	
	call String.new	

1
	sete %reg0b	
	jne .Matrix.set_54	

1
	testq $1, %rax	
	je .Main.print_list_5	

1
.CellularAutomaton.cell_at_next_evolution_2:	
	movq 0(%rbx), %reg1	

1
.CellularAutomaton.cell_left_neighbor_2:	
	popq %r12	

1
	addl %eax, %reg1d	
	movq -144(%rbp), %reg3	

1
	movq 112(%reg0), %reg0	
	jmp .Matrix.get_35	

1
.string6_l:	
	.string "o"	

1
	movq $151, %rsi	
	movq $.string5_l, %reg1	

1
	je .Main.main_151	
	movq %reg0, %reg1	

1
.Main.main_59:	
	movq %reg0, %reg1	

1
.Main.main_94:	
	movq %reg0, %reg1	

1
	movq $18444, %rax	
	negl %eax	

1
	call Int.new	
	movq 0(%rbx), %reg1	

1
	idivl %reg0	
	movq %rax, %r14	

1
.Main.new_7:	
	movq $1, %reg0	

1
	je .Main.main_19	
	movq $24, %rsi	

1
	movq 184(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	subl %eax, %ecx	
	movq -96(%rbp), %rax	

1
.Main.main_6:	
	movq %r12, %rax	

1
	movq $55626, %reg0	
	imull %edi	

1
	movq %reg0, 200(%reg1)	
	movq $3000, %reg0	

1
	negl %esi	
	movq -16(%rbp), %rax	

1
	movq -16(%rbp), %rax	
	addl %eax, %edi	

1
	movq $name_Object, %reg0	
	movq 0(%rbx), %reg2	

1
.Main.main_30:	
	movq -16(%rbp), %rax	

1
	movq -32(%rbp), %rax	
	movq %r15, %rdi	

1
	movq $3828, %reg0	
	movq $0, %reg1	

1
	movq %rdi, 616(%rax)	
	movq $0, %rdi	

1
	movq -64(%rbp), %rsi	
	imull %esi	

1
	je .Main.main_151	
	movq %reg0, %rax	

1
	movq %rbx, %reg1	
	movq -40(%rbp), %reg3	

1
	testq $1, %r8	
	je .Main.main_102	

1
	movq %rax, %rdi	
	movq -184(%rbp), %rsi	

1
	movq -64(%rbp), %rax	
	movq %r14, %rsi	

1
.Main.main_20:	
	movq $.string9, %rbx	

1
	je .Main.funccase_4	
	cmpq $Object_vtable, 0(%reg0)	

1
	subl %reg0, %esi	
	movq -104(%rbp), %rax	

1
	movq %reg0, 56(%rbx)	
	movq 0(%rbx), %reg0	

1
	movq $15469, %rdi	
	movq %rdi, %rsi	

1
	movq -168(%rbp), %rsi	
	movq -88(%rbp), %rax	

1
	.quad .string2	
	.quad 3	

1
	subl %eax, %edi	
	movq %r14, %reg3	

1
	movq %rax, %r13	
	movq $3, %rax	

1
	movq -16(%rbp), %reg1	
	subl %reg1d, %eax	

1
	subl %edi, %eax	
	movq $33866, %rdi	

1
	movq %rsi, %rbx	
	movq 8(%reg2), %rdi	

1
	subq $184, %reg0	
	pushq %reg1	

1
.Main.out_whatever_4:	
	movq %reg0, %reg1	

1
	movq -152(%rbp), %rax	
	movq -104(%rbp), %rdi	

1
	je .Main.main_136	
	movq $103, %rsi	

1
	movq %rdi, %reg1	
	movq $4, %r12	

1
	movq %rdi, 424(%rax)	
	movq $3000, %rdi	

1
	movq $0, %r15	
	cmpl %r15d, %reg1d	

1
	call *%rax	
.Dictionary.insert_3:	

1
	.string "ERROR: %lld: Exception: case without matching branch\n"	
.string8:	

1
	movq %reg0, %rbp	
	movq 16(%reg2), %rax	

1
	call *%rax	
	movq 728(%reg1), %rax	

1
	je .Main.main_54	
	movq $204, %reg0	

1
	movq $3000, %rdi	
	movq %rdi, 200(%reg1)	

1
.Matrix.set_36:	
	movq $1, %rax	

1
	testq $1, %rax	
	je .Main.print_list_1	

1
	sete %reg0l	
	jne .Complex.equal_2	

1
	movq 32(%rbx), %reg1	
	pushq %reg2	

1
	movq %reg0, 8(%rbx)	
	movq $1, %rdi	

1
	je .Main.main_23	
	cmpq $Bool_vtable, 0(%rbx)	

1
	.string "\\n\\t"	
.string8:	

1
	movq -56(%rbp), %reg1	
	movq -16(%rbp), %reg3	

1
	addl %reg0, %edi	
	movq $28260, %rax	

1
	call *%r12	
.Main.main_18:	

1
.Main.main_80:	
	movq %reg0, %rsi	

1
	call out_error	
.Main.main_102:	

1
	movq $13257, %rsi	
	imull %reg1	

1
	movq %reg0, %reg1	
	imull %r9d	

1
	movq $5456, %reg0	
	subl %eax, %edi	

1
	testq $1, %rax	
	jne .Main.funcwhileb_2	

1
	movq %rbx, %reg1	
	jmp .DicNode.insert_2	

1
	movq $59714, %rsi	
	movq %rsi, %rcx	

1
	je .Main.main_95	
	movq $64, %reg0	

1
	movq 392(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	movq %rdi, 192(%rax)	
	movq %rdi, %rax	

1
	movq -80(%rbp), %reg1	
	movq -24(%rbp), %rax	

1
	movq %reg0, 72(%rax)	
	movq %reg0, %rax	

1
.Foo.new_6:	
	movq %reg0, 16(%rbx)	

1
.Main.main_1:	
	movq -144(%rbp), %reg1	

1
	call *%reg0	
	movq $16210, %reg1	

1
	je .Main.main_16	
	cmpq $Bool_vtable, 0(%reg0)	

1
	movq %rdi, %rax	
	jmp .Matrix.set_37	

1
	movq %r14, %rdi	
	movq -56(%rbp), %reg3	

1
	movq -88(%rbp), %rax	
	imull %edi	

1
	testq $1, %rdi	
	je .Main.main_59	

1
.Matrix.set_23:	
	movq $1, %rax	

1
.Main.main_34:	
	movq 0(%r13), %rax	

1
	setle %dil	
	jg .Main.main_42	

1
	call getmem	
	movq $A2I_vtable, 0(%reg0)	

1
	subl %reg0d, %reg1	
	movq $5411, %reg0	

1
	movq $3000, %reg0	
	movq %reg0, 216(%reg1)	

1
	movq -80(%rbp), %rax	
	subl %reg2, %ecx	

1
	movq -88(%rbp), %rax	
	movq %r13, %rsi	

1
	jne .A2I.i2c_11	
	movq $.string12, %rax	

1
	movq $0, %reg0	
	movq $0, %rbx	

1
	call *%reg0	
	jmp .Main.print_list_3	

1
	subl %reg0, %r8d	
	movq $12, %r9	

1
	movq $.string8, %reg0	
	movq $.string9, %r15	

1
	testq $1, %rax	
	je .Main.main_119	

1
	call *%rax	
	movq -40(%rbp), %rdi	

1
	movq $2, %rbx	
	movq 0(%rax), %r12	

1
	addl %reg0, %reg1	
	movq -152(%rbp), %rdi	

1
.Main.func_7:	
	popq %reg0	

1
	movq $9, %reg0	
	cmpl %reg1, %edi	

1
	call *%r14	
	movq %r12, %reg2	

1
	idivl %r12d	
	movq $25834, %r12	

1
	movq -48(%rbp), %rax	
	addl %reg2, %edi	

1
	jne .Matrix.get_4	
	movq 16(%reg0), %reg0	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_37	

1
	je .Main.main_136	
	movq $103, %reg0	

1
	movq 48(%rbx), %rax	
	movq 0(%rbx), %r12	

1
.Matrix.set_49:	
	movq $1, %reg0	

1
	movq %rbx, %reg1	
	jmp .Razz.new_17	

1
	.globl Cons.rev	
	.type Cons.rev, @function	

1
	negl %reg0	
	movq $33788, %reg1	

1
	movq -56(%rbp), %reg1	
	movq %r13, %reg3	

1
	negl -24(%rbp)	
	movq $3306, -32(%rbp)	

1
	movq $1, %r9	
	movq %reg1, %reg2	

1
Complex.reflect_Y:	
	pushq %reg0	

1
.Main.new_6:	
	cdq	

1
	movq %r14, %reg1	
	subl %eax, %esi	

1
	je .Main.main_176	
	movq $308, %rsi	

1
	.quad 52	
percentd_string_l:	

1
	.globl Matrix.get	
	.type Matrix.get, @function	

1
	call Main.new	
	cmpl $0, %reg0d	

1
	movq %rbx, %rsi	
	cmpl %esi, %reg3	

1
	.quad 3	
.string10_l:	

1
	movq %reg0, %r12	
	addl %r12d, %eax	

1
	.quad 6	
.string17_l:	

1
	movq %r13, %reg1	
	movq -128(%rbp), %rax	

1
	movq $64464, %reg0	
	movq $0, %reg1	

1
.DicNode.insert_4:	
	movq 0(%reg0), %r14	

1
	.size Complex.print, .-Complex.print	
	.globl Complex.reflect_0	

1
	ret	
	.size ListNode.setVal, .-ListNode.setVal	

1
	je .Main.func_1	
	movq $37, %reg0	

1
	movq %rax, %reg1	
	movq $45807, %rax	

1
.Main.main_4:	
	cmpl $0, 8(%reg0)	

1
	movq $46154, %reg0	
	imull %esi	

1
	call *%reg0	
.Main.main_31:	

1
	addl %r8d, %eax	
	movq -128(%rbp), %r8	

1
	call *%rax	
	movq $3966, %reg1	

1
	subl %reg0, %reg1d	
	movq %rcx, %rax	

1
	je .Main.func_1	
	cmpq $Object_vtable, 0(%rax)	

1
	jne .A2I.c2i_5	
	movq $2, %rax	

1
	movq $50691, %reg0	
	imull %reg0d	

1
	movq %rdi, %rbx	
	movq $4, %reg2	

1
	movq %reg0, %rax	
	jmp .Main.main_106	

1
	movq -128(%rbp), %reg1	
	negl %ecx	

1
	movq %rdi, %reg1	
	jmp .Main.main_153	

1
	movq 16(%rbx), %reg1	
	addl %reg2, %reg3	

1
	movq $3966, %rdi	
	cmpl %edi, %reg2	

1
	movq -184(%rbp), %reg1	
	subl %reg2, %ecx	

1
	movq %reg0, %rax	
	jmp .Main.main_139	

1
	imull %esi	
	movq $53667, %rsi	

1
	call *%reg0	
	movq -144(%rbp), %reg2	

1
	jne .A2I.c2i_13	
	movq $6, %reg0	

1
	negl %reg0	
	jmp .A2I.a2i_4	

1
	movq 144(%rbx), %rbx	
	movq %reg1, %reg2	

1
	je .Main.main_22	
	movq $13, %rsi	

1
	movq $28227, %reg0	
	movq %reg0, %rbx	

1
	movq %rdi, 56(%reg1)	
	movq $3000, %rdi	

1
	movq 136(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	subq $168, %rsp	
	pushq %reg1	

1
	cmpl %r14d, %reg1d	
	sete %r14b	

1
	movq -152(%rbp), %rax	
	imull %r8d	

1
	jmp .Main.main_108	
.Main.main_107:	

1
	movq 48(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
.Main.main_103:	
	movq %r14, %rax	

1
	movq 576(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq $34, %rax	
	movq 0(%rbx), %reg2	

1
	movq -56(%rbp), %rax	
	cmpl %edi, %eax	

1
	movq $List_vtable, 0(%rax)	
	movq $0, %rdi	

1
	jne .A2I.i2c_5	
	movq $.string9, %reg0	

1
	movq $45807, %rax	
	subl %reg1, %edi	

1
	movq -40(%rbp), %rax	
	imull %ecx	

1
	movq -40(%rbp), %reg1	
	movq -104(%rbp), %reg3	

1
	movq $7, %r12	
	movq 0(%reg1), %reg2	

1
	sete %reg0b	
	jne .Matrix.get_14	

1
.Main.print_list_4:	
	movq 0(%r12), %rax	

1
	movq $3000, %rdi	
	movq %rdi, 344(%reg1)	

1
	movq %reg0, 8(%reg1)	
	movq 0(%reg1), %reg2	

1
	jmp .Matrix.set_39	
.Matrix.set_27:	

1
	movq 128(%r12), %r12	
	movq %reg1, %rdi	

1
	movq %rax, %reg1	
	movq 0(%rbx), %r13	

1
	idivl %esi	
	movq $47308, %reg1	

1
	movq $0, %reg0	
	movq %reg0, 384(%rax)	

1
	movq %rax, %r12	
	movq $63252, %rax	

1
	negl %reg0	
	movq $3828, %reg1	

1
	.size Bar.setI, .-Bar.setI	
	.globl Bar.getI	

1
	sete %reg0	
	jne .Matrix.get_43	

1
.Main.main_29:	
	movq %reg0, %rsi	

1
	movq %reg0, %rbx	
	addl %ebx, %eax	

1
	movq -152(%rbp), %rsi	
	cmpl %reg2, %eax	

1
	movq %rsi, %reg1	
	movq -80(%rbp), %reg1	

1
	movq %reg0, 8(%rbx)	
	movq 8(%rbx), %rdi	

1
	jmp .Main.main_33	
.Main.main_18:	

1
	movq $5, %reg0	
	movq $.string1_l, %reg1	

1
	call *%r13	
	movq $.string8, %reg1	

1
	movq $39, %reg0	
	movq %reg0, 8(%reg1)	

1
	movq -24(%rbp), %rax	
	movq -88(%rbp), %reg3	

1
	movq $3000, %reg0	
	movq %reg0, 88(%rax)	

1
	movq $18, %rsi	
	movq $.string3_l, %reg1	

1
	movq %rdi, %reg1	
	movq %reg2, %rsi	

1
	.string "do nothing"	
.string11:	

1
.Main.main_16:	
	movq 0(%reg0), %r14	

1
	movq %reg0, %reg1	
	movq 8(%reg2), %rdx	

1
	movq %rax, %r13	
	jmp .Main.main_61	

1
	movq -8(%rbp), %reg1	
	movq -88(%rbp), %reg3	

1
	movq 528(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq %rax, 56(%reg1)	
	movq 0(%reg1), %rax	

1
	movq %reg0, %rcx	
	movq -128(%rbp), %reg3	

1
	movq %r12, 8(%reg1)	
	movq %reg1, 16(%rbx)	

1
	movq %reg0, %reg1	
	movq %rsi, %rdi	

1
	jne .Main.main_23	
	cmpl $0, %reg0d	

1
	movq %reg0, %reg1	
	movq %reg1, 56(%reg2)	

1
	movq 48(%rax), %rax	
	jmp .Matrix.get_16	

1
	call *%rax	
	movq %r12, %r14	

1
	idivl %r11d	
	movq %reg1, %r10	

1
	movq %r13, %rax	
	movq %r14, %r13	

1
.Matrix.get_8:	
	movq $5, %rsi	

1
	movq $11440, %rdi	
	imull %edi	

1
	je .Main.main_4	
	movq $9, %rsi	

1
	je .Main.main_2	
	movq $84, %reg0	

1
	jg .Main.main_126	
	movq -56(%rbp), %reg1	

1
	movq -32(%rbp), %reg1	
	movq -56(%rbp), %rdi	

1
	movq 424(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq %reg0, %reg1	
	jmp .Bazz.new_6	

1
	jmp .Main.main_28	
.Main.main_21:	

1
	movq $15798, %reg0	
	subl %eax, %r10d	

1
	movq $106, %reg0	
	movq $.string2_l, %rdi	

1
	addl %edi, %reg1	
	movq %rax, 24(%reg3)	

1
	movq $.string7, %reg0	
	movq 8(%rbx), %reg2	

1
.Main.main_52:	
	movq 0(%reg0), %r14	

1
	movq %rdi, %reg1	
	jmp .Main.main_24	

1
	je .Main.main_64	
	movq %reg0, %rax	

1
	movq $.string7, %reg0	
	movq 0(%reg1), %r13	

1
	movq %rdx, %rsi	
	movq %rcx, %rdi	

1
	idivl %reg0	
	movq $27231, %rsi	

1
.Main.main_80:	
	movq %reg0, %reg1	

1
	je .Main.main_51	
	movq %reg0, %reg1	

1
	je .Razz.new_12	
	movq $10, %rsi	

1
	jne .Main.main_1	
	movq %reg0, %r14	

1
	movq $15487, %rdi	
	subl %reg1, %reg2	

1
	movq 0(%rdx), %rax	
	movq 128(%rax), %rax	

1
	movq %rdi, 176(%reg1)	
	movq $3000, %rdi	

1
	je .Main.main_27	
	movq $13, %reg0	

1
	addl %edi, %reg1	
	movq $36010, %reg2	

1
	jmp .Main.func_3	
.Main.func_2:	

1
	movq %reg0, %rdx	
	movq %rdx, -152(%rbp)	

1
	movq $.string7, %reg0	
	movq %reg0, 24(%rbx)	

1
	testq $1, %rax	
	je .Main.main_66	

1
	jge .Main.main_72	
	movq -32(%rbp), %reg1	

1
	call *%r12	
	movq 448(%rbx), %reg2	

1
	idivl %r11d	
	addl %reg1, %r10d	

1
	movq -128(%rbp), %rsi	
	movq %rbx, %reg3	

1
	call *%reg0	
	movq $.string7, %reg1	

1
	call *%reg0	
	movq 576(%reg1), %rax	

1
	.quad Main.funcwhilei	
	.quad Main.funcwhileb	

1
	testq $1, %rcx	
	je .Main.main_27	

1
	movq $51549, %rax	
	movq -8(%rbp), %rdx	

1
	movq -96(%rbp), %rax	
	movq -128(%rbp), %reg3	

1
.Main.main_106:	
	cdq	

1
	movq %rdi, 176(%rax)	
	movq %rdi, %rax	

1
	movq %r8, %reg1	
	movq -144(%rbp), %r8	

1
	movq $1202, %rax	
	movq $51824, %r8	

1
	movq 488(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq 208(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	movq -16(%rbp), %rdx	
	movq 0(%rdx), %r14	

1
	je .Main.main_11	
	movq $20, %reg0	

1
	je .Main.main_148	
	movq $115, %reg0	

1
	jg .Main.main_94	
	movq -24(%rbp), %rsi	

1
	movq $0, %reg0	
.A2I.c2i_20:	

1
	imull %esi	
	movq $53085, %reg1	

1
	movq %rax, %rdi	
	movq $48608, %rax	

1
	movq %r15, %rax	
	movq %r12, %rdi	

1
	movq %rdi, 680(%rax)	
	movq $0, %rdi	

1
	pushq %rax	
	movq %rbx, %reg2	

1
	movq $38801, %rax	
	cmpl %reg1, %edi	

1
	.type Main.funcwhilei, @function	
Main.funcwhilei:	

1
	imull %edi	
	movq $17975, %reg1	

1
	movq %rax, %r12	
	movq $.string11, %rax	

1
	movq %reg0, 592(%rax)	
	movq $3000, %reg0	

1
	jg .Main.funcifi_1	
	movq $1, %r12	

1
	movq $3000, %reg0	
	movq %reg0, 304(%rax)	

1
	movq 8(%reg0), %reg1	
	movq 24(%reg0), %rax	

1
	subl %eax, %r8d	
	movq %rcx, %rax	

1
	movq $98, %rsi	
	movq $.string3_l, %rdi	

1
	testq $1, %rax	
	je .Bar.new_13	

1
	subl %eax, %ecx	
	movq -168(%rbp), %reg3	

1
	movq %reg0, 432(%rax)	
	movq $3000, %reg0	

1
	jne .Matrix.set_2	
	movq %rdi, 8(%rax)	

1
	movq %rdi, %rax	
.Main.main_163:	

1
	movq %rax, 16(%rbx)	
	call Razz.new	

1
	movq $3000, %rdi	
	movq %rdi, 664(%rax)	

1
	movq $48985, %rax	
	movq 0(%reg1), %reg2	

1
	movq %reg0, 704(%reg1)	
	movq $0, %reg0	

1
	movq $89, %rsi	
	movq $.string2_l, %rdi	

1
	movq %reg0, %rdi	
	call Foo.getX	

1
	idivl %esi	
	movq $32704, %reg1	

1
	sete %reg0b	
	jne .A2I.c2i_11	

1
	movq $35237, %r8	
	subl %r8d, %reg1	

1
	movq $34, %reg0	
	movq $.string3_l, %rdi	

1
	idivl %r8d	
	movq -72(%rbp), %r8	

1
	movq 120(%rbx), %rbx	
	movq %reg1, %rdi	

1
	movq -8(%rbp), %rax	
	popq %reg2	

1
	movq $.string10, %rax	
	movq 0(%r12), %reg2	

1
	movq $.string10, %reg0	
	movq -8(%rbp), %rdx	

1
	testq $1, %rsi	
	je .Main.main_133	

1
	movq $130, %reg0	
	movq %reg1, %reg2	

1
	je .Main.main_42	
	movq $34, %rsi	

1
	movq $10, %reg0	
	movq %r12, %reg2	

1
	call *%r12	
	movq 192(%rbx), %rax	

1
	movq -96(%rbp), %reg1	
	addl %reg2, %esi	

1
	addl %esi, %reg1	
	movq -104(%rbp), %reg3	

1
	movq $8423, %reg0	
	movq $34498, %rsi	

1
	movq 712(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq %rdi, %reg1	
	movq $13, %reg2	

1
	subl %esi, %edi	
	cmpl %edi, %eax	

1
	idivl %edi	
	movq -16(%rbp), %rdi	

1
.Main.main_23:	
	movq -104(%rbp), %reg1	

1
	movq $30797, %reg0	
	movq $3233, %r9	

1
	movq $0, %rdi	
	movq %rdi, 624(%rax)	

1
	movq $1, %reg0	
	movq $3, %r13	

1
	call out_error	
.Main.main_105:	

1
	call out_error	
.Main.main_111:	

1
	movq %r14, %reg1	
	movq -160(%rbp), %rdi	

1
	movq 16(%rbx), %rdi	
	cmpl %reg2, %edi	

1
	movq $25895, %rax	
	cmpl %eax, %reg2	

1
	movq %reg0, %reg1	
	movq $20, %rax	

1
	movq %reg0, %rbx	
	addl %ebx, %reg3	

1
	movq %reg0, 248(%reg1)	
	movq $0, %reg0	

1
.Main.main_37:	
	movq %reg0, %reg1	

1
	.string "A"	
.string6:	

1
.Main.main_17:	
	movq $0, %rax	

1
	movq $53667, %reg0	
	movq $0, %reg1	

1
	movq %rax, %rsi	
	movq $41455, %rax	

1
	movq %r12, %rax	
	popq %r13	

1
	movq %rdi, 144(%rax)	
	movq $3000, %rdi	

1
	movq %rdi, %rax	
	jmp .Main.main_79	

1
	jmp .Main.main_50	
.Main.main_13:	

1
	call *%rax	
	movq $13765, %rax	

1
	movq $102, %reg0	
	movq $.string3_l, %rdi	

1
	movq -40(%rbp), %reg1	
	cmpl %reg2, %esi	

1
	movq $1, %reg0	
	movq $.string7, %r12	

1
CellularAutomaton.cell:	
	pushq %rbp	

1
	movq -72(%rbp), %reg1	
	subl %esi, %eax	

1
	movq -96(%rbp), %rcx	
	movq -144(%rbp), %reg3	

1
	je .Main.main_1	
	movq $12, %rsi	

1
	movq $1, %reg0	
	addl %edi, %esi	

1
	movq -184(%rbp), %rax	
	movq -136(%rbp), %reg3	

1
	addl %ebx, %eax	
	movq %rax, %rbx	

1
	je .Main.main_102	
	movq -160(%rbp), %reg1	

1
	negl %eax	
	movq $17979, %reg1	

1
	movq -48(%rbp), %rax	
	movq %rbx, %rdi	

1
.Main.main_151:	
	movq -56(%rbp), %reg1	

1
.Main.main_39:	
.Main.main_31:	

1
.Main.main_116:	
.Main.main_114:	

1
	cmpq $Bazz_vtable, 0(%reg0)	
	je .Foo.new_2	

1
	call *%reg0	
	movq 496(%rbx), %rax	

1
.Main.main_15:	
	movq 0(%rax), %r12	

1
	subl %reg0, %reg1	
	movq $43604, %rax	

1
	jne .Main.main_71	
	movq $.string11, %reg0	

1
	movq $.string8, %reg0	
	movq %rbx, %r12	

1
.Razz.new_16:	
	movq %reg0, %rax	

1
	movq $.string12, %rax	
	movq 0(%rbx), %r12	

1
	movq $19322, %rax	
	movq $38661, %reg1	

1
	ret	
	.size Foo.doh, .-Foo.doh	

1
.A2I.a2i_3:	
	movq $0, %reg0	

1
	negl %r8d	
	subl %r8d, %reg1	

1
	addl %edi, %eax	
	movq %reg2, 56(%rbx)	

1
	testq $1, %rdi	
	je .Main.iota_3	

1
	addl %reg0, %edi	
	movq $38737, %reg2	

1
	imull %reg0	
	movq %rax, %rbx	

1
	cmpq $String_vtable, 0(%reg0)	
	je .Main.func_2	

1
	ret	
	.size List.getHead, .-List.getHead	

1
	movq %rax, %r12	
	jmp .Main.main_1	

1
	subq $136, %rsp	
	pushq %reg1	

1
	setl %r13b	
	jge .Main.main_2	

1
	movq $10280, %reg0	
	movq 0(%reg1), %rax	

1
	movq $3000, %rdi	
	movq %rdi, 600(%reg1)	

1
.Main.main_32:	
	movq $.string9, %rax	

1
	subl %eax, %edi	
	movq %reg2, %r13	

1
	movq $25351, %reg0	
	subl %eax, %ecx	

1
	movq $3000, %reg0	
	movq %reg0, 688(%rax)	

1
	je .Main.main_72	
	movq $19, %reg0	

1
	sete %sil	
	jne .Matrix.get_10	

1
	addl %eax, %reg1	
	movq -112(%rbp), %reg3	

1
	movq 8(%reg0), %reg0	
	addl %edi, %eax	

1
	movq $30018, %rax	
	subl %eax, %reg2	

1
	call IO.new	
	movq %rax, %r12	

1
.Main.main_21:	
	movq $0, %reg0	

1
	movq $12, %rsi	
	movq -88(%rbp), %reg2	

1
	movq 336(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	je .Main.main_156	
	movq $118, %reg0	

1
	testq $1, %reg0	
	je .Main.print_list_2	

1
.CellularAutomaton.cell_at_next_evolution_4:	
	movq %r13, %rax	

1
	movq $100, %rsi	
	movq $.string2_l, %rdi	

1
	movq -176(%rbp), %reg1	
	movq -48(%rbp), %reg3	

1
	.string "O"	
.string10:	

1
	movq %reg0, %rax	
	movq %rax, -160(%rbp)	

1
	movq 512(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	je .Main.main_122	
	movq $70, %reg0	

1
	movq $4, %r9	
	movq %r8, %reg2	

1
	call *%rax	
	movq 400(%rbx), %rax	

1
.Main.new_2:	
	movq 0(%rbx), %reg1	

1
.Main.main_4:	
	movq 8(%rbx), %reg1	

1
.A2I.a2i_1:	
	movq $0, %rax	

1
	movq 8(%reg0), %reg1	
	movq $1, %reg2	

1
	movq 136(%rax), %rax	
	movq 8(%rbx), %reg2	

1
	call *%rbx	
	jmp .Main.main_26	

1
	addl %reg0, %reg1	
	movq %reg2, 16(%rax)	

1
	movq $22130, %rax	
	movq $60913, %reg1	

1
	movq $2730, %reg0	
	movq -8(%rbp), %rdx	

1
	movq $12, %r10	
	movq %rbx, %reg2	

1
	call *%reg0	
	movq 568(%reg1), %reg0	

1
	movq %rdi, 672(%rax)	
	movq $0, %rdi	

1
	movq $2469, %reg0	
	movq $0, %r9	

1
	movq $24092, %reg0	
	movq 0(%reg1), %r12	

1
.Main.main_69:	
	movq %reg0, %reg1	

1
	movq -152(%rbp), %rsi	
	addl %esi, %reg3	

1
	movq -104(%rbp), %rax	
	movq %rsi, %rcx	

1
	addl %reg0, %eax	
	movq %reg2, 56(%reg3)	

1
	movq %reg0, %rax	
.Main.main_170:	

1
	movq -96(%rbp), %rdi	
	subl %edi, %reg3	

1
	movq $18781, %reg0	
	imull %reg1	

1
	movq %reg0, %reg1	
.Main.main_158:	

1
	movq %reg0, 360(%rax)	
	movq $3000, %reg0	

1
Cons.print_list:	
	pushq %rbp	

1
	movq 248(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq $27399, %rdi	
	imull %edi	

1
	negl %eax	
	movq -176(%rbp), %rsi	

1
	jmp .Main.out_whatever_5	
.Main.out_whatever_4:	

1
.Main.main_1:	
	movq $100, %reg0	

1
.Main.main_59:	
	movq -128(%rbp), %reg1	

1
	movq %reg0, -96(%rbp)	
	movq $17, %reg0	

1
	movq 56(%r14), %r14	
	movq %rbx, %reg2	

1
	jmp .Main.main_54	
.Main.main_53:	

1
	movq $97, %reg0	
	movq $.string2_l, %reg1	

1
	call CellularAutomaton.new	
	cmpl $0, %reg0	

1
	jmp .Main.main_23	
.Main.main_22:	

1
	cmpq $IO_vtable, 0(%rsi)	
	je .Main.func_6	

1
	movq -96(%rbp), %rax	
	movq %reg2, %rsi	

1
	movq $11513, %rdi	
	movq %rdi, %rsi	

1
Dictionary_vtable:	
	.quad .string1	

1
	movq 16(%rbx), %rax	
	movq 24(%rbx), %reg2	

1
	movq -168(%rbp), %rax	
	movq %rsi, %rcx	

1
	idivl %reg0	
	movq -152(%rbp), %reg2	

1
	.globl Complex.equal	
	.type Complex.equal, @function	

1
	movq -96(%rbp), %reg1	
	movq -88(%rbp), %rdi	

1
	cmpq $Bar_vtable, 0(%rbx)	
	je .Main.main_22	

1
	movq %rax, %rdi	
	testq $1, %rdi	

1
	movq $.string12, %reg0	
	movq 0(%reg1), %r12	

1
	movq $.string9, %rax	
	movq 0(%reg1), %r13	

1
	call *%r12	
	movq 424(%rbx), %reg2	

1
	movq $.string9, %reg0	
	cmpl $0, %ebx	

1
.Bar.getX_1:	
	movq 8(%rax), %reg1	

1
	movq $14356, %rbx	
	subl %reg1, %reg2	

1
	movq $46404, %r12	
	movq 0(%reg1), %rax	

1
	subl %reg0, %esi	
	movq $48457, %rax	

1
	je .Main.main_59	
	movq $208, %reg0	

1
	movq %reg0, %rcx	
	subl %reg2, %reg3d	

1
	movq $3000, %reg0	
	movq %reg0, 488(%rax)	

1
	movq -64(%rbp), %rax	
	movq %rsi, %reg3	

1
	negl %reg0	
	movq -104(%rbp), %rcx	

1
	movq 16(%rbx), %rax	
	movq %rax, 8(%rbx)	

1
	movq 8(%reg0), %reg1	
	movq 0(%reg2), %r12	

1
.Main.main_126:	
	cdq	

1
	movq %rax, -112(%rbp)	
	movq $19, %rax	

1
.Main.main_61:	
	movq $12, %reg0	

1
	call *%r14	
	movq %r12, %rdi	

1
	je .Main.main_73	
	movq $229, %rsi	

1
	movq $51549, %reg0	
	movq -8(%rbp), %rdx	

1
	movq 48(%reg0), %reg0	
	jmp .Matrix.get_16	

1
	movq 552(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq $215, %reg0	
	movq $.string5_l, %reg1	

1
	movq 176(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	jne .Matrix.set_60	
	movq %rdi, 192(%rax)	

1
	movq $.string7, %r14	
	movq %r12, %reg2	

1
	movq %rdi, 624(%rax)	
	movq $3000, %rdi	

1
	movq 488(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq -184(%rbp), %reg1	
	movq -48(%rbp), %rax	

1
	movq $24, %rsi	
	movq $.string3_l, %reg1	

1
	call *%reg0	
	movq 608(%rbx), %reg0	

1
	movq $8800, %reg0	
	movq 0(%rbx), %reg2	

1
	sete %reg0l	
	jne .Main.main_152	

1
	movq %reg0, 24(%reg1)	
	movq $3000, %reg0	

1
	movq 56(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
.Main.print_list_1:	
	movq 0(%reg0), %rax	

1
	movq 120(%r12), %r12	
	movq %rax, %reg2	

1
	movq -56(%rbp), %rax	
	movq -64(%rbp), %reg3	

1
	movq %reg0, %reg1	
	jmp .Main.main_14	

1
	je .Main.main_38	
	movq $13, %rsi	

1
	movq %reg0, 8(%rbx)	
	movq 0(%rbx), %r12	

1
	je .Main.main_189	
	movq $151, %rsi	

1
.Main.main_6:	
	movq $0, %rax	

1
	addl %reg0, %eax	
	movq %reg2, -16(%rbp)	

1
	movq %reg0, %rsi	
	movq -152(%rbp), %reg0	

1
	movq %reg0, %r14	
	movq $1, %reg2	

1
	je .Main.main_2	
	cmpq $Int_vtable, 0(%reg0)	

1
	movq 456(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	movq %r12, 8(%reg1)	
	movq 0(%reg2), %reg3	

1
	imull %reg0	
	movq %reg1, -152(%rbp)	

1
	addl %edi, %reg1	
	movq -152(%rbp), %rdi	

1
	je .Main.main_55	
	movq -168(%rbp), %reg1	

1
	movq $4844, %reg0	
	movq $42968, %reg1	

1
	call *%reg0	
	movq $1, %rbx	

1
	movq -56(%rbp), %reg1	
	movq -40(%rbp), %rsi	

1
	movq -56(%rbp), %rax	
	movq %rdi, %rsi	

1
	call *%reg0	
	movq 720(%reg1), %reg0	

1
	ret	
	.size CellularAutomaton.cell_left_neighbor, .-CellularAutomaton.cell_left_neighbor	

1
	call *%reg0	
	movq 736(%reg1), %reg2	

1
	movq -64(%rbp), %reg1	
	movq %r8, %r9	

1
	.string "."	
.string9:	

1
	movq %rax, %reg1	
	movq $22802, %rax	

1
	movq $3000, %reg0	
	movq %reg0, 584(%rax)	

1
	movq $15, %reg0	
	movq $.string5_l, %reg1	

1
	.globl Main.out_whatever	
	.type Main.out_whatever, @function	

1
	call *%r12	
	movq 608(%reg1), %r12	

1
	call *%reg0	
	movq 248(%rbx), %rax	

1
	cmpq $Main_vtable, 0(%reg0)	
	je .Main.out_whatever_2	

1
	setle %reg0l	
	jg .Main.main_149	

1
	movq $3, %rbx	
	movq 0(%rax), %reg2	

1
	movq $47279, %rdi	
	movq $47879, %reg1	

1
	movq -48(%rbp), %rax	
	subl %reg2, %reg3d	

1
	movq %reg0, %rdi	
	movq %reg0, %rax	

1
	testq $1, %rdi	
	je .Main.main_32	

1
	movq $25185, %reg0	
	addl %eax, %reg2	

1
	movq $53642, %rax	
	movq $21521, %r9	

1
	call Int.new	
	movq %r14, 8(%reg1)	

1
	movq $16210, %reg0	
	movq $23599, %rax	

1
	movq 256(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq %rbx, %reg1	
	movq %r12, %r13	

1
	sete %reg0l	
	jne .Matrix.get_23	

1
	movq %rax, %reg1	
	jmp .Main.main_43	

1
	call *%rax	
	movq %rax, 64(%rbx)	

1
	movq -96(%rbp), %rcx	
	movq %reg2, %reg3	

1
	call List.new	
	movq %rax, -24(%rbp)	

1
	movq 464(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq 0(%rax), %r14	
	movq 64(%r14), %r14	

1
	subl %reg0, %reg1	
	movq $14802, %rax	

1
	movq $47041, %rax	
	negl %eax	

1
	testq $1, %rsi	
	je .Main.main_13	

1
	ret	
	.size Main.print_list, .-Main.print_list	

1
	movq %reg0, 672(%rax)	
	movq $0, %reg0	

1
	setl %sil	
	jge .Main.main_90	

1
	movq %reg0, %rax	
	jmp .Main.main_6	

1
	movq %r15, %rsi	
	call *%r14	

1
	negl %r8d	
	movq -64(%rbp), %reg2	

1
	je .Main.main_16	
	cmpq $Int_vtable, 0(%reg0)	

1
.Main.funccase_3:	
	movq %rdi, %reg1	

1
	movq 24(%reg0), %rdi	
	movq %r12, %reg3	

1
	movq -48(%rbp), %reg1	
	addl %eax, %edi	

1
.Main.main_95:	
	movq -32(%rbp), %reg1	

1
	movq $9556, %reg0	
	cmpl %reg1, %reg2	

1
	movq 8(%reg0), %r12	
	movq 24(%reg0), %rax	

1
.Main.new_5:	
	movq 0(%rax), %r12	

1
.Matrix.set_15:	
	movq $2, %r8	

1
	.type Nil.print_list, @function	
Nil.print_list:	

1
	testq $1, %rax	
	je .Main.main_36	

1
.Main.new_4:	
	movq 16(%rbx), %rax	

1
	jmp .Matrix.get_5	
.Matrix.get_4:	

1
	addl %eax, %reg1d	
	movq $15079, %rax	

1
	movq %rdi, 208(%reg1)	
	movq $0, %rdi	

1
	movq -24(%rbp), %reg1	
	subl %edi, %eax	

1
	movq %rax, -16(%rbp)	
	call Bar.new	

1
.CellularAutomaton.cell_left_neighbor_2:	
	popq %reg0	

1
	idivl %esi	
.Matrix.set_11:	

1
	call *%rax	
	movq $12, %rax	

1
	movq $43604, %rax	
	addl %reg1, %ecx	

1
	movq -168(%rbp), %rdx	
	movq %rdx, -184(%rbp)	

1
.Matrix.get_15:	
	movq $2, %reg0	

1
	setl %reg0l	
	jge .Main.main_13	

1
.Main.main_11:	
	movq $.string13, %reg0	

1
	movq %reg0, %rdi	
	movq $52486, %reg0	

1
	call *%rax	
	movq 656(%reg1), %reg2	

1
	jmp .Main.main_32	
.Main.main_19:	

1
	movq $17594, %r10	
	subl %r10d, %reg1	

1
	movq 16(%reg0), %reg1	
	movq 0(%reg1), %r13	

1
.Main.main_28:	
	cmpl $0, %reg0d	

1
	addl %reg0, %esi	
	movq -24(%rbp), %reg3	

1
	movq %rax, -16(%rbp)	
	movq $64947, %rax	

1
	movq %rdx, -176(%rbp)	
	movq -8(%rbp), %rdx	

1
	je .Main.main_136	
	movq -128(%rbp), %reg1	

1
	movq $26355, %reg0	
	movq 0(%reg1), %reg2	

1
	movq 8(%rbx), %rdi	
	cmpl %edi, %eax	

1
	movq $18046, %rdi	
	movq $29790, %rsi	

1
.Main.main_3:	
	movq %rdi, %r12	

1
	je .Main.main_30	
	movq $175, %reg0	

1
.Main.main_41:	
	movq %reg0, %reg1	

1
	movq $90, %rdi	
	subl %edi, %esi	

1
	movq %r14, %rsi	
	imull %reg2	

1
	movq 16(%rbx), %reg1	
	movq 24(%rbx), %reg2	

1
	movq $21613, %r12	
	movq 0(%reg1), %rax	

1
.Complex.equal_2:	
	movq $0, %reg0	

1
	movq $2, %rax	
	movq %rax, %r13	

1
	idivl %ecx	
	movq -64(%rbp), %reg2	

1
Bar.setI:	
	pushq %reg0	

1
	movq $4, %r9	
	movq %r8, %rcx	

1
	movq $58, %rsi	
	movq $.string5_l, %rdi	

1
	je .Bazz.new_2	
.Bazz.new_2:	

1
	jmp .Main.main_13	
.Main.main_10:	

1
	ret	
	.size Nil.new, .-Nil.new	

1
	.quad Foo.func	
String_vtable:	

1
	cmpl $0, 24(%rax)	
	movq 24(%rax), %rdi	

1
	jne .A2I.i2c_3	
	movq $.string8, %rax	

1
	negl %reg0	
	movq -56(%rbp), %rcx	

1
	.quad String_vtable	
	.quad .string21_l	

1
	movq %reg0, 528(%reg1)	
	movq $3000, %reg0	

1
	subl %eax, %edi	
	movq $34422, %reg2	

1
	call *%r12	
	movq 184(%rbx), %reg2	

1
.Main.main_42:	
.Main.main_40:	

1
	subq $40, %reg0	
	pushq %rbx	

1
	movq $25316, %reg0	
	movq $8214, %reg1	

1
	subl %reg0, %reg1	
	movq $20509, %rax	

1
	movq %reg0, %reg1	
	jmp .Main.main_128	

1
	jne .CellularAutomaton.cell_at_next_evolution_1	
	movq $1, %rax	

1
	movq -96(%rbp), %rax	
	cmpl %reg2, %reg3	

1
	je .Main.main_14	
	movq $23, %rsi	

1
	call *%rbx	
.Main.func_2:	

1
	negl %esi	
	movq $62150, %rax	

1
	movq %reg0, 184(%rax)	
	movq %reg0, %rax	

1
	movq %rdi, 32(%reg1)	
	movq %rdi, %reg1	

1
	movq $1, %reg0	
	call Complex.new	

1
	movq $13131, %rax	
	addl %reg1, %reg2	

1
	je .Main.main_19	
	movq 0(%reg0), %reg1	

1
	movq -24(%rbp), %rax	
	subl %reg2, %esi	

1
	sete %cl	
	jne .Matrix.get_17	

1
	call *%reg0	
	movq -64(%rbp), %rdi	

1
	movq 72(%rbx), %reg1	
	testq $1, %reg1	

1
	call Bool.new	
	movq %r14, 8(%rax)	

1
	.quad Object.type_name	
	.quad List.getHead	

1
.Main.out_whatever_2:	
	movq %reg0, %reg1	

1
	movq $58921, %reg0	
	cmpl %edi, %eax	

1
.Main.main_3:	
	movq $.string8, %reg0	

1
	call *%r12	
	movq $12, %reg1	

1
	movq 656(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	movq %reg0, 56(%reg1)	
	movq $1, %reg0	

1
	movq $1, %rax	
	movq 8(%rdi), %rdi	

1
List.sort:	
	pushq %rbp	

1
	call *%reg0	
	movq 512(%rbx), %reg2	

1
	je .Main.main_55	
	movq $49, %rsi	

1
	.type Dictionary.new, @function	
Dictionary.new:	

1
	movq %rax, 56(%reg1)	
	movq $1, %rax	

1
	movq %rdx, %rdi	
	movq $1, %reg2	

1
	testq $1, %rsi	
	je .Main.main_27	

1
	je .Main.main_41	
	movq $192, %rsi	

1
.Main.main_12:	
	movq $2, %rax	

1
	movq $10464, %r9	
	movq $32716, %r10	

1
	.type Cons.rev, @function	
Cons.rev:	

1
	.globl Complex.y_value	
	.type Complex.y_value, @function	

1
.Main.main_1:	
	movq %rbx, %reg1	

1
	.quad Foo.foo	
String_vtable:	

1
	movq %reg0, %rax	
	jmp .Matrix.set_44	

1
	movq %rbx, %reg1	
	jmp .Bar.new_11	

1
	negl %reg0	
	movq $33636, %reg1	

1
	movq -136(%rbp), %rsi	
	movq -104(%rbp), %reg3	

1
	.string "H"	
.string9:	

1
	movq $60606, %rax	
	cmpl %reg1, %reg2	

1
	movq %reg0, %rax	
	movq -144(%rbp), %rsi	

1
	movq $197, %rsi	
	movq $.string5_l, %reg1	

1
	movq %reg0, -72(%rbp)	
	movq %r13, %reg0	

1
	movq -64(%rbp), %rax	
	movq %r8, %reg3	

1
	.string "O\\n"	
.string6:	

1
	movq $.string14, %r12	
	movq 0(%reg1), %rax	

1
	movq -40(%rbp), %rsi	
	negl %reg2	

1
	movq -184(%rbp), %reg1	
	imull %esi	

1
	movq $.string12, %rdi	
	movq %reg1, %reg2	

1
	call out_error	
.Main.main_148:	

1
	movq %reg0, %reg1	
	jmp .Bar.new_17	

1
	movq $57963, %reg0	
	subl %edi, %eax	

1
	movq 8(%reg0), %reg1	
	movq 0(%rax), %r12	

1
.Matrix.get_7:	
.Matrix.get_5:	

1
	movq -136(%rbp), %rax	
	movq %rcx, %reg3	

1
	movq $ListNode_vtable, 0(%rax)	
	movq %rax, %reg1	

1
	movq %reg0, %rax	
.Main.main_167:	

1
	sete %r8b	
	jne .Matrix.set_2	

1
	movq %reg0, %rax	
	movq $.string6, %reg0	

1
	.string "X"	
.string8:	

1
	movq -80(%rbp), %reg1	
	subl %eax, %ecx	

1
	movq %r12, %rbx	
	pushq %rax	

1
	negl %eax	
	movq $33788, %r11	

1
	movq 8(%rbx), %rax	
	movq %r12, %reg3	

1
	call *%reg0	
	movq %reg1, 24(%reg2)	

1
	movq $46874, %reg0	
	addl %reg1, %reg2	

1
	movq -80(%rbp), %rax	
	movq -40(%rbp), %reg3	

1
	call *%rbx	
	jmp .Main.main_18	

1
	movq -72(%rbp), %reg1	
	movq %rsi, %reg3	

1
	ret	
	.size List.cdr, .-List.cdr	

1
	movq -128(%rbp), %reg1	
	addl %reg2, %edi	

1
	movq %rax, %reg1	
	jmp .Matrix.elMul_1	

1
	call *%r15	
	movq -8(%rbp), %reg2	

1
	.quad CellularAutomaton.evolve	
Main_vtable:	

1
	subl %reg0, %reg1d	
	movq %r8, %rax	

1
	movq %rbx, %reg1	
	popq %r14	

1
	movq $12, %r9	
	movq -72(%rbp), %reg2	

1
	movq %rbx, %rdi	
	movq 8(%rbx), %rsi	

1
	movq -120(%rbp), %reg1	
	addl %esi, %reg3	

1
	movq 16(%rax), %reg1	
	subl %reg2, %edi	

1
	movq -48(%rbp), %reg1	
	call *%rax	

1
.DicNode.get_3:	
	cmpl $0, 24(%rax)	

1
	movq %rax, %reg1	
	call List.new	

1
	call Foo.new	
	movq %reg0, %r13	

1
	movq %rdi, 648(%rax)	
	movq $0, %rdi	

1
	call *%rax	
.Main.main_3:	

1
	movq %rax, %r13	
	call String.new	

1
	movq %rdi, %rax	
.Main.main_183:	

1
	movq %rax, 56(%rbx)	
	movq $0, %rax	

1
.Matrix.set_18:	
.Matrix.set_16:	

1
.Main.main_126:	
	movq %reg0, %reg1	

1
	movq 152(%r12), %r12	
	movq %reg1, %reg2	

1
	movq -32(%rbp), %reg1	
	movq %r15, %rdi	

1
	movq %reg0, %reg1	
	movq -32(%rbp), %r8	

1
	subl %eax, %edi	
	movq -104(%rbp), %rax	

1
	movq $28968, %reg0	
	movq $32079, %reg1	

1
	movq 24(%reg0), %reg1	
	sete %reg2	

1
.Main.main_4:	
	movq $.string13, %rax	

1
	testq $1, %r13	
	je .Main.main_55	

1
.Main.main_68:	
	movq -8(%rbp), %reg1	

1
	cmpq $Bool_vtable, 0(%reg0)	
	je .Main.new_2	

1
	jne .Main.main_2	
	movq -8(%rbp), %reg1	

1
	movq 296(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq %reg0, 496(%rax)	
	movq $3000, %reg0	

1
	je .Main.main_6	
	cmpq $Bool_vtable, 0(%reg0)	

1
	movq %reg0, 448(%reg1)	
	movq $3000, %reg0	

1
	je .Main.main_93	
	movq $64, %rsi	

1
	movq %rdi, %reg1	
	movq %rbx, %rdi	

1
	movq $8738, %reg0	
	imull %reg0d	

1
Matrix.set:	
	pushq %rbp	

1
	movq %rax, %rdi	
	movq -88(%rbp), %rsi	

1
	movq %reg0, 8(%reg1)	
	movq 16(%reg1), %reg0	

1
	call Bar.new	
	movq %reg0, 32(%reg1)	

1
	subl %edi, %reg1	
	movq %rax, -112(%rbp)	

1
	je .Main.main_189	
	movq $151, %reg0	

1
	movq $.string8, %reg0	
	movq 0(%reg1), %rbx	

1
	movq $11435, %reg0	
	movq 0(%rbx), %rax	

1
	movq 624(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	imull %edi	
	movq -24(%rbp), %reg2	

1
	jge .Main.funcwhilei_2	
	movq $1, %reg0	

1
	movq %reg0, %r12	
.Main.main_10:	

1
	movq $21514, %rdi	
	imull %edi	

1
	movq $46167, %reg0	
	addl %edi, %eax	

1
	movq -128(%rbp), %reg1	
	movq %rdi, %reg3	

1
.Matrix.set_36:	
	movq $1, %reg0	

1
	movq %rdi, 160(%rax)	
	movq $3000, %rdi	

1
	movq $19369, %rdi	
	addl %reg1, %reg2	

1
	movq -32(%rbp), %reg1	
	movq %r13, %reg3	

1
	je .Main.main_112	
	movq $67, %rsi	

1
	movq -72(%rbp), %reg1	
	subl %reg2, %reg3	

1
	.type DicNode.decr, @function	
DicNode.decr:	

1
	movq %rdi, 48(%rax)	
	movq $3000, %rdi	

1
	movq $3, %rax	
	movq 0(%rbx), %r12	

1
.Main.main_45:	
	movq -72(%rbp), %rsi	

1
	movq 8(%reg0), %rdi	
	cmpl %reg2, %eax	

1
.Main.main_4:	
	movq %rbx, %reg1	

1
	testq $1, %r9	
	je .Main.main_125	

1
	.quad 7	
	.quad Razz.new	

1
	subl %reg0d, %reg1	
	movq -112(%rbp), %reg0	

1
	movq %reg0, %rcx	
	movq %rbx, %reg0	

1
	call *%reg0	
	jmp .CellularAutomaton.cell_right_neighbor_2	

1
	addl %r8d, %reg1	
	movq -168(%rbp), %r8	

1
	je .Main.func_1	
	cmpq $Object_vtable, 0(%reg0)	

1
	movq %reg0, %reg1	
	movq $50347, %reg0	

1
	movq %rbx, %r11	
	subl %r11d, %eax	

1
	call *%r12	
	jmp .Main.main_1	

1
	movq $6821, %reg0	
	movq $45379, %rax	

1
	sete %reg0b	
	jne .Matrix.set_32	

1
	call *%rax	
	movq 120(%reg1), %reg2	

1
	movq $5137, %rdi	
	imull %edi	

1
	jmp .Main.main_89	
.Main.main_88:	

1
	movq -48(%rbp), %reg1	
	subl %eax, %reg3d	

1
	testq $1, %r8	
	je .Main.main_131	

1
	pushq %r12	
	movq $32, %rdi	

1
	testq $1, %reg0	
	je .Complex.equal_4	

1
	addl %reg0, %edi	
	movq $18119, %rax	

1
	movq $2143, %reg0	
	addl %reg1, %reg2	

1
	movq %rdi, %reg1	
	jmp .Main.main_20	

1
	addl %eax, %reg1	
	movq -176(%rbp), %reg3	

1
	call *%rax	
	movq 152(%reg1), %reg2	

1
	movq $0, %reg0	
	movq %reg0, 248(%reg1)	

1
	jmp .DicNode.get_2	
.DicNode.get_1:	

1
	je .Main.main_7	
	movq 0(%rbx), %rax	

1
	jmp .Main.main_183	
.Main.main_61:	

1
	movq -160(%rbp), %reg1	
	movq %r15, %reg3	

1
	movq %reg0, %r13	
.Main.main_19:	

1
	sete %reg0l	
	jne .CellularAutomaton.cell_left_neighbor_1	

1
	movq 448(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	call *%r14	
	call Object.new	

1
	cmpq $IO_vtable, 0(%reg0)	
	je .Main.func_2	

1
	call *%reg0	
	movq 424(%rbx), %rax	

1
	testq $1, %reg0	
	je .Bar.new_19	

1
.Main.out_whatever_2:	
	movq %reg0, %rax	

1
	movq %reg0, %rax	
	jmp .Main.main_99	

1
	testq $1, %reg0	
	je .Razz.new_12	

1
	movq 352(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
List.print_list:	
	pushq %rbp	

1
	movq $0, %rax	
	jmp .A2I.c2i_2	

1
	call Foo.new	
	movq %reg0, 16(%rbx)	

1
	jge .Main.main_2	
	movq $.string7, %r14	

1
	movq $17975, %reg0	
	movq %reg0, %rsi	

1
.Main.main_156:	
	movq -136(%rbp), %rax	

1
	je .Matrix.get_38	
	movq $58, %rsi	

1
	movq 32(%rbx), %r12	
	pushq %reg2	

1
	movq $130, %reg0	
	movq %reg1, %rax	

1
	movq 112(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq 8(%rbx), %rdi	
	cmpl %edi, %reg3	

1
	movq %reg0, 16(%rax)	
	movq 24(%rax), %reg2	

1
	movq 568(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	subl %eax, %reg1	
	movq -184(%rbp), %rax	

1
	movq $3000, %rdi	
	movq %rdi, 456(%rax)	

1
	movq $0, %rdi	
	movq %rdi, 504(%reg1)	

1
	je .Main.main_103	
	movq -16(%rbp), %reg1	

1
	movq -120(%rbp), %rax	
	movq -64(%rbp), %reg3	

1
	movq $Nil_vtable, 0(%reg0)	
	leave	

1
	movq -104(%rbp), %reg1	
	movq -152(%rbp), %rdi	

1
	.string "S\\n"	
.string9:	

1
	movq 8(%rbx), %r12	
	movq 16(%rbx), %rax	

1
	call *%rax	
.Main.main_28:	

1
	movq $169, %reg0	
	movq $.string5_l, %rdi	

1
	movq $11282, %reg0	
	movq $39523, %rsi	

1
	movq 8(%rbx), %reg1	
	movq %rdi, %r12	

1
	movq %reg0, %r10	
	subl %r10d, %eax	

1
	je .Main.main_65	
	movq $17, %rsi	

1
	testq $1, %reg0	
	je .Dictionary.get_4	

1
	movq -24(%rbp), %rdi	
	sete %dil	

1
	movq 16(%reg0), %reg1	
	addl %esi, %edi	

1
	movq 312(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq $.string6, %r14	
	movq 0(%rbx), %reg2	

1
.string18:	
	.quad String_vtable	

1
	movq -176(%rbp), %reg1	
	addl %esi, %reg3	

1
	movq -176(%rbp), %rax	
	movq %reg2, %rsi	

1
	movq %r13, %rdi	
	movq $0, %rsi	

1
.Main.main_1:	
	movq $5, %rsi	

1
	movq $5, %rax	
	movq %rax, -56(%rbp)	

1
	movq %rbx, %rax	
	movq %r9, %r10	

1
	movq $2, %reg0	
	negl %esi	

1
	movq $24923, %reg0	
	imull %reg1	

1
	movq %reg0, %rax	
	jmp .Razz.new_11	

1
	testq $1, %rdi	
	je .Main.main_51	

1
.string11_l:	
	.string "\\\\n"	

1
	movq -40(%rbp), %rax	
	movq $0, %r9	

1
	movq %rbx, %rsi	
	movq -88(%rbp), %rax	

1
	testq $1, %reg0	
	je .Main.main_105	

1
	.quad 2	
	.quad Complex.new	

1
	idivl %ecx	
	movq %reg1, %r8	

1
	movq -112(%rbp), %rsi	
	cmpl %esi, %eax	

1
	subl %reg0, %reg1	
	movq -16(%rbp), %rcx	

1
	call *%reg0	
	movq 528(%reg1), %reg0	

1
List_vtable:	
	.quad .string2	

1
	call *%reg0	
	movq 392(%reg1), %reg2	

1
	movq 480(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	.size CellularAutomaton.evolve, .-CellularAutomaton.evolve	
	.globl Main.main	

1
	jg .Main.main_46	
	movq $55166, %reg0	

1
	negl %eax	
	movq $15469, %reg1	

1
	movq %rax, %r14	
	movq %r13, %rax	

1
	movq $8800, %reg0	
	movq 0(%rbx), %rax	

1
	movq 32(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
.Main.main_134:	
	movq -32(%rbp), %rsi	

1
	movq 8(%reg0), %r12	
	movq 24(%reg0), %reg2	

1
	movq $61456, %rdi	
	cmpl %reg1, %reg2	

1
	subl %reg0, %reg1	
	movq $54460, %rax	

1
	movq -24(%rbp), %rax	
	subl %eax, %esi	

1
	movq $11, %rax	
	movq %rax, %r12	

1
	movq %rdi, 736(%reg1)	
	leave	

1
	imull %reg0	
	movq $11513, %reg1	

1
	call out_error	
.Complex.equal_1:	

1
	call out_error	
.Main.main_109:	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_48	

1
	movq $0, %rax	
.Main.main_2:	

1
	movq $60913, %rcx	
	movq $0, %r8	

1
	movq -128(%rbp), %rax	
	addl %reg2, %eax	

1
	movq %rax, %r13	
.Matrix.mul_1:	

1
	je .Main.main_3	
	movq $138, %rsi	

1
	movq 16(%rax), %rdx	
	movq 0(%rdx), %r13	

1
	movq $2730, %reg0	
	movq %reg1, %reg2	

1
	movq 712(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq %rdx, -144(%rbp)	
	movq %reg2, %rdx	

1
	movq %rdi, %reg1	
	movq %r14, %rdi	

1
	movq %reg0, 8(%rbx)	
	movq $2, %r12	

1
	jne .Main.main_22	
	movq %reg0, %reg1	

1
	movq -184(%rbp), %reg1	
	subl %ecx, %reg3d	

1
	movq %reg0, 8(%rbx)	
	movq $5, %reg2	

1
	movq %rax, %rdi	
	movq $38511, %rax	

1
	negl %reg0	
	movq $58419, %rcx	

1
Main.iota:	
	pushq %rbp	

1
	movq -72(%rbp), %rsi	
	cmpl %esi, %reg3	

1
	movq %reg0, %reg1	
	addl %ebx, %reg3	

1
	call *%rax	
	movq -64(%rbp), %rdi	

1
	je .Main.main_192	
	movq $151, %rsi	

1
	je .Main.main_141	
	movq $112, %rsi	

1
	movq $.string7, %reg0	
	movq %rax, %rdi	

1
	movq %reg0, 352(%rax)	
	movq $3000, %reg0	

1
	movq $41765, %rax	
	subl %eax, %edi	

1
	movq $2147483647, %reg0	
	movq $2, %rdi	

1
.Bazz.new_6:	
	movq %reg0, 16(%rbx)	

1
	movq 64(%r12), %r12	
	movq 8(%rbx), %rdi	

1
	call out_error	
.Main.main_113:	

1
	movq -160(%rbp), %reg1	
	movq $0, %reg2	

1
	subl %reg0, %edi	
	movq %rbx, %rax	

1
	je .Main.main_66	
	movq $17, %reg0	

1
	je .Main.main_81	
	movq $61, %rsi	

1
	movq %reg0, 24(%reg1)	
	movq 8(%reg1), %reg0	

1
	movq %rbx, %reg1	
	movq -160(%rbp), %rax	

1
	movq %reg0, 480(%reg1)	
	movq $3000, %reg0	

1
	movq %reg0, %rdi	
	movq $11282, %reg0	

1
	movq %reg0, -64(%rbp)	
	movq $7, %reg0	

1
	ret	
	.size Foo.y, .-Foo.y	

1
	negl %esi	
	movq -96(%rbp), %rax	

1
	movq 0(%rax), %r12	
	movq 128(%r12), %r12	

1
	imull %esi	
	movq $2438, %reg1	

1
.A2I.i2a_aux_2:	
	popq %r13	

1
.Main.main_13:	
	movq 0(%r12), %reg1	

1
	movq %rdi, %rax	
	movq 48(%rbx), %reg3	

1
	je .Main.main_5	
	movq $88, %rsi	

1
.Matrix.get_6:	
	movq $4, %reg0	

1
	movq %rax, -80(%rbp)	
	movq $12, %rax	

1
	je .Main.out_whatever_3	
	cmpq $Object_vtable, 0(%reg0)	

1
	movq $49695, %rdi	
	movq $13131, %reg1	

1
	.quad 8	
	.quad Main.new	

1
	movq $162, %rsi	
	movq $.string2_l, %rdi	

1
	movq -32(%rbp), %rsi	
	cmpl %esi, %eax	

1
	addl %esi, %eax	
	movq %rbx, %reg3	

1
	call Foo.new	
	jmp .Bar.new_6	

1
.Matrix.set_8:	
	movq $5, %reg0	

1
	movq %rsi, %r12	
.Main.funcwhilei_1:	

1
	je .Main.main_18	
	movq $23, %rsi	

1
	movq 8(%reg0), %reg0	
	addl %reg1, %edi	

1
	testq $1, %rsi	
	je .Main.main_175	

1
	call Bar.new	
	movq %reg0, 8(%rbx)	

1
	je .Main.main_25	
	movq $13, %reg0	

1
	movq -64(%rbp), %rax	
	addl %ecx, %eax	

1
	idivl %ecx	
	movq -80(%rbp), %reg2	

1
	movq %rdi, %reg1	
	movq -32(%rbp), %rdi	

1
	movq %reg0, 24(%rbx)	
.Main.new_3:	

1
	movq %rdi, 64(%rax)	
	leave	

1
	movq $0, %rdi	
	movq %rdi, 656(%rax)	

1
	call out_error	
.Cons.insert_4:	

1
	movq %rsp, %rbp	
	subq $168, %rsp	

1
	movq %reg0, %reg1	
	movq $4, %r13	

1
	testq $1, %rax	
	je .Main.main_44	

1
.Main.main_36:	
	jmp .Main.main_39	

1
.Main.main_54:	
.Main.main_52:	

1
.Main.main_22:	
	movq $2, %rax	

1
.Main.main_17:	
	movq -144(%rbp), %reg1	

1
	movq $5, %reg0	
	cmpl %edi, %reg2	

1
	movq %rax, %reg1	
	movq -128(%rbp), %r8	

1
	.globl Cons.rcons	
	.type Cons.rcons, @function	

1
	cmpq $Int_vtable, 0(%reg0)	
	je .Main.out_whatever_3	

1
	addl %reg0, %reg1	
	movq $1, %rax	

1
	movq -48(%rbp), %rax	
	subl %eax, %esi	

1
	addl %eax, %edi	
	movq -152(%rbp), %rax	

1
	subl %edi, %eax	
	movq 0(%rbx), %r13	

1
	call Int.new	
	movq 0(%reg0), %r12	

1
	movq %reg0, 416(%rax)	
	movq $3000, %reg0	

1
	movq %rax, %r13	
.Main.main_61:	

1
	subl %edi, %eax	
	movq -88(%rbp), %reg3	

1
	movq -80(%rbp), %reg1	
	movq %rbx, %reg3	

1
	movq %r14, %reg1	
	movq -160(%rbp), %reg3	

1
	movq %reg0, %r13	
	movq $12, %rdi	

1
	movq %r12, %rcx	
	imull %ecx	

1
	sete %dil	
	jne .Main.main_42	

1
	movq 16(%rbx), %reg1	
	movq %reg1, 8(%rbx)	

1
	subl %eax, %edi	
	movq %rbx, %rax	

1
.Main.main_159:	
.Main.main_145:	

1
	movq -120(%rbp), %rax	
	subl %eax, %edi	

1
	idivl %reg0	
	movq -72(%rbp), %rsi	

1
	movq %reg0, %rax	
	jmp .Matrix.set_63	

1
	movq %rdi, %reg1	
	jmp .Main.main_101	

1
	negl %ebx	
	subl %ebx, %reg1	

1
	movq $50929, %reg0	
	addl %reg0d, %eax	

1
	movq %reg0, %reg1	
	movq $744, %rdi	

1
	movq $Yaz_vtable, 0(%reg0)	
	leave	

1
	call out_error	
.Main.main_97:	

1
	call *%r12	
	movq 208(%rbx), %r12	

1
	setle %dil	
	cmpl %reg1, %reg2	

1
	movq -80(%rbp), %reg1	
	movq -96(%rbp), %rdi	

1
	.string "testtesttesttesttesttesttesttesttesttesttesttesttest"	
.string6:	

1
	movq -24(%rbp), %reg1	
	imull %ecx	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_35	

1
	jne .Matrix.get_15	
	movq 48(%reg0), %reg0	

1
	movq -40(%rbp), %rax	
	subl %eax, %edi	

1
	call Foo.getX	
	movq %reg0, %reg1	

1
	addl %eax, %edi	
	movq $53587, %reg2	

1
.Main.main_43:	
	movq $49656, %reg0	

1
	movq -144(%rbp), %rdx	
	movq %rdx, -128(%rbp)	

1
	movq %rax, %r12	
	negl %r12d	

1
	movq $38600, %reg0	
	movq $0, %r13	

1
	movq %reg0, %reg1	
	movq $18, %reg0	

1
	testq $1, %r8	
	je .Main.main_28	

1
	call *%r12	
	movq 312(%reg1), %reg2	

1
	movq $178, %reg0	
	movq $.string5_l, %rdi	

1
	movq -72(%rbp), %rsi	
	cmpl %reg2, %eax	

1
	movq %reg0, 560(%rax)	
	movq $3000, %reg0	

1
	testq $1, %r8	
	je .Main.main_184	

1
	movq %r12, %reg1	
	addl %esi, %eax	

1
	jge .Main.main_2	
	movq $.string7, %reg0	

1
.CellularAutomaton.cell_at_next_evolution_1:	
	movq $0, %reg0	

1
	movq %rdi, 584(%reg1)	
	movq $0, %rdi	

1
	movq %rax, %r14	
	movq %r12, %rax	

1
	movq %rdi, 664(%rax)	
	movq $3000, %rdi	

1
	sete %r8b	
	jne .Matrix.set_30	

1
	sete %cl	
	jne .A2I.i2c_7	

1
.CellularAutomaton.cell_at_next_evolution_4:	
	movq %r13, %reg1	

1
	movq %r12, 8(%rax)	
.Main.new_11:	

1
.Cons.insert_4:	
	movq 16(%reg0), %reg1	

1
	movq -104(%rbp), %rax	
	movq -96(%rbp), %reg3	

1
	movq -64(%rbp), %rax	
	addl %reg2, %esi	

1
	movq %reg0, %reg1	
.Main.func_1:	

1
	movq $name_Object, %reg0	
	movq 0(%reg1), %r12	

1
	testq $1, %r8	
	je .Main.main_79	

1
	je .Main.main_133	
	movq $88, %reg0	

1
	movq %rax, 32(%reg1)	
	call Bazz.new	

1
	negl %eax	
	movq $3828, %reg1	

1
	movq -40(%rbp), %reg1	
	movq %rsi, %rcx	

1
	movq 384(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
.Main.main_13:	
	movq $0, %r12	

1
	movq $0, %rax	
	movq %rax, %rbx	

1
	movq 16(%rax), %rdi	
	addl %esi, %reg3	

1
.Main.iota_3:	
	movq 0(%reg0), %reg1	

1
	movq $48027, %r12	
	movq 0(%reg1), %rax	

1
	movq $4, %rsi	
	movq $.string6_l, %rdi	

1
	movq $.string6_l, %reg0	
	call out_error	

1
	movq -112(%rbp), %rcx	
	negl %ecx	

1
	movq $28227, %reg0	
	movq %reg0, %reg1	

1
	movq $13, %rax	
	movq %rax, -136(%rbp)	

1
.List.insert_3:	
	popq %r13	

1
	movq %reg0, -88(%rbp)	
	movq $20, %reg0	

1
	subl %edi, %reg1	
	movq -16(%rbp), %rdi	

1
	je .Main.main_172	
	movq $308, %rsi	

1
	movq -32(%rbp), %rdi	
	subl %edi, %reg3	

1
	testq $1, %rcx	
	je .Main.main_182	

1
	movq $30, %reg0	
	movq $.string5_l, %rdi	

1
	movq %reg0, 8(%rax)	
	movq $39, %reg0	

1
	jg .Main.main_49	
	movq %reg0, %reg1	

1
	movq 16(%rbx), %reg1	
	addl %edi, %reg3	

1
Cons.tail:	
	pushq %reg0	

1
	movq %rax, %reg1	
	movq -88(%rbp), %reg3	

1
	je .Main.main_33	
	movq $13, %reg0	

1
.Bar.new_18:	
	movq 32(%rbx), %reg1	

1
	jne .Main.main_3	
	movq -128(%rbp), %reg1	

1
	movq $38511, %reg0	
	subl %eax, %reg2	

1
	.string "7"	
.string14:	

1
	movq %r14, %reg1	
	movq %rsi, %reg3	

1
	je .Main.main_88	
	movq %rbx, %reg1	

1
	call Bar.new	
	movq %rax, %r14	

1
.Main.main_18:	
	movq -16(%rbp), %rax	

1
	addl %edi, %reg1	
	movq %reg2, 40(%rbx)	

1
.DicNode.insert_5:	
.DicNode.insert_2:	

1
	je .Main.main_42	
	movq $15, %reg0	

1
	movq -176(%rbp), %rsi	
	addl %reg2, %edi	

1
	call *%reg0	
	movq 112(%rbx), %r12	

1
	movq %rdi, 640(%reg1)	
	movq $0, %rdi	

1
	movq %reg0, %r13	
	movq $.string6, %reg0	

1
	call *%r12	
	jmp .Main.func2_2	

1
	movq %r13, %reg1	
.Main.main_3:	

1
.Main.main_117:	
	movq -104(%rbp), %rsi	

1
	subl %eax, %edi	
	movq $54460, %rax	

1
.Main.main_29:	
	movq 0(%reg0), %reg1	

1
	movq %rsi, %r12	
	movq 16(%rbx), %reg3	

1
	movq %r13, 8(%rax)	
	movq 0(%rbx), %r14	

1
.Main.main_19:	
	movq %reg0, %reg1	

1
	call *%reg0	
	movq -176(%rbp), %rdi	

1
.Main.main_2:	
	cmpl %edi, %esi	

1
	movq $5, %rax	
	movq $0, %rdi	

1
	movq $12757, %reg0	
	imull %esi	

1
	movq $17107, %reg0	
	movq 0(%reg1), %reg2	

1
	je .Main.main_49	
	movq $34, %reg0	

1
	movq 448(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	je .Main.func_6	
	cmpq $Bool_vtable, 0(%reg0)	

1
.string9_l:	
	.string "."	

1
	je .Main.main_188	
	movq $316, %rsi	

1
	subl %edi, %reg1	
	movq $43177, %reg2	

1
.Main.func_5:	
	movq $.string9, %rbx	

1
	movq $.string14, %reg0	
	movq 0(%reg1), %rax	

1
	movq -72(%rbp), %rcx	
	addl %reg2, %eax	

1
	movq $40813, %reg0	
	addl %reg1, %esi	

1
	movq %rdi, %reg1	
	movq $12591, %rdi	

1
	movq $2, %rsi	
	movq $.string3_l, %rdi	

1
	negl %eax	
	movq %rax, -136(%rbp)	

1
	movq %rsi, %r12	
	movq $1, %rbx	

1
.A2I.a2i_5:	
	movq 0(%reg0), %rax	

1
	.quad Cons.sort	
	.quad Cons.insert	

1
	movq $52, %reg0	
	movq 0(%reg1), %reg2	

1
	jne .A2I.i2c_17	
	movq $.string15, %rax	

1
.Cons.rev_2:	
	movq 0(%reg0), %r12	

1
.string9_l:	
	.string "F"	

1
	movq $51816, %rax	
	movq 0(%reg1), %reg2	

1
	call *%r12	
	movq %rax, %rdi	

1
	movq %r10, %rax	
	movq $17594, %r10	

1
	call Foo.new	
	movq %rax, 16(%rbx)	

1
	movq $48608, %rax	
	negl %reg1	

1
	ret	
	.size A2I.c2i, .-A2I.c2i	

1
	movq $26, %rsi	
	movq $.string3_l, %reg1	

1
	cmpq $Bool_vtable, 0(%rdi)	
	je .Main.main_16	

1
	sete %reg0b	
	jne .A2I.c2i_19	

1
	movq -48(%rbp), %reg1	
	movq %rdi, %reg3	

1
	movq $.string9, %reg0	
	movq 0(%reg1), %r13	

1
	movq -144(%rbp), %rdi	
	negl %edi	

1
	je .Main.main_54	
	movq $17, %reg0	

1
	movq %rax, 40(%reg1)	
	movq $.string6, %rax	

1
	movq $6, %rsi	
	movq $.string1_l, %reg1	

1
	movq $3000, %rdi	
	movq %rdi, 736(%rax)	

1
	movq $0, %rsi	
	movq $44, %reg1	

1
	movq $10, %reg0	
	movq %reg0, %r13	

1
	movq $55166, %rax	
	negl %reg1	

1
	movq 16(%reg0), %rdx	
	movq 0(%rdx), %r13	

1
	movq -96(%rbp), %rsi	
	movq %r15, %reg3	

1
	testq $1, %rax	
	je .Main.main_96	

1
	movq $25036, %reg0	
	subl %reg1, %reg2	

1
	movq $20384, %reg0	
	imull %edi	

1
	sete %reg0	
	jne .Matrix.get_17	

1
	movq %rax, 8(%reg1)	
	movq $5, %r12	

1
	movq $3000, %rdi	
	movq %rdi, 568(%rax)	

1
	subl %reg0, %eax	
	movq %rax, %r13	

1
	movq $89, %reg0	
	movq $.string3_l, %rdi	

1
	subl %reg0, %reg1	
	movq %reg2, -96(%rbp)	

1
	movq 688(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	subl %reg0, %eax	
	movq -24(%rbp), %reg3	

1
	cmpq $Int_vtable, 0(%reg0)	
	je .Main.main_23	

1
	movq %reg0, 72(%rax)	
	movq $3000, %reg0	

1
	movq 8(%reg0), %rax	
	movq 0(%reg2), %reg3	

1
	call *%rax	
	jmp .CellularAutomaton.cell_left_neighbor_2	

1
	testq $1, %reg0	
	je .Main.main_167	

1
	.quad .string8_l	
	.quad 6	

1
	movq $52290, %reg0	
	imull %reg1	

1
	testq $1, %reg0	
	je .Nil.rcons_1	

1
	movq $.string11, %rax	
	movq 0(%rbx), %r12	

1
	movq $34498, %rsi	
	imull %reg1	

1
	movq 8(%reg0), %reg0	
	jmp .Main.main_4	

1
	movq 88(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq %reg0, %r13	
.A2I.a2i_aux_1:	

1
	movq %reg0, 360(%reg1)	
	movq $3000, %reg0	

1
	movq %rax, %reg1	
	movq -64(%rbp), %rsi	

1
.Foo.new_3:	
	call Razz.new	

1
.A2I.i2c_14:	
.A2I.i2c_12:	

1
	movq 64(%reg0), %reg0	
	movq 24(%rbx), %rdi	

1
	movq $22, %reg0	
	movq $.string3_l, %rdi	

1
	call *%reg0	
	jmp .Main.funcwhilei_1	

1
	movq -16(%rbp), %rdi	
	subl %reg2, %esi	

1
	movq -56(%rbp), %rax	
	movq %rdi, %reg3	

1
	je .Main.main_6	
	cmpq $IO_vtable, 0(%reg0)	

1
	call *%r13	
	movq $12, %rdi	

1
	movq %rdi, 16(%reg1)	
	movq $1, %rdi	

1
	.quad 3	
	.quad DicNode.new	

1
	movq 488(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	jne .Main.main_17	
	movq $1, %reg0	

1
	movq %rcx, %reg1	
	movq %r14, %reg1	

1
	movq -32(%rbp), %rsi	
	call *%rax	

1
	movq $78, %rsi	
	movq $.string3_l, %rdi	

1
	movq $0, %rdi	
	movq %rdi, 352(%reg1)	

1
	addl %reg0, %reg1	
	movq %r14, %rsi	

1
.Main.main_115:	
	movq %reg0, %rsi	

1
	movq $2143, %reg0	
	addl %reg1, %eax	

1
	call *%reg0	
	movq 216(%reg1), %r12	

1
	movq %reg0, 344(%rax)	
	movq $0, %reg0	

1
.Main.main_115:	
	movq %reg0, %reg1	

1
.Main.main_70:	
	cmpl $0, %ebx	

1
	call *%reg0	
	movq 544(%reg1), %reg0	

1
	movq $61208, %rbx	
	negl %reg1	

1
	movq -56(%rbp), %rax	
	addl %esi, %eax	

1
	movq %r13, %reg1	
	subl %ecx, %eax	

1
	je .Main.main_46	
	movq $15, %reg0	

1
.Main.main_164:	
	cdq	

1
.CellularAutomaton.cell_at_next_evolution_7:	
	movq $.string9, %rax	

1
	movq %reg0, 328(%reg1)	
	movq $0, %reg0	

1
	testq $1, %reg0	
	je .Cons.sort_1	

1
	.type Bar.getJ, @function	
Bar.getJ:	

1
	movq -104(%rbp), %rax	
	movq -96(%rbp), %rcx	

1
	testq $1, %r8	
	je .Main.main_40	

1
.Main.main_19:	
	cmpl $0, %reg0d	

1
	testq $1, %rcx	
	je .Main.main_13	

1
	call *%reg0	
	movq 336(%rbx), %rax	

1
	movq 0(%rax), %reg1	
	movq 144(%reg1), %reg1	

1
.A2I.a2i_1:	
	movq $0, %reg0	

1
	.globl Nil.print_list	
	.type Nil.print_list, @function	

1
	movq -152(%rbp), %rax	
	movq -160(%rbp), %rdi	

1
	negl %reg0	
	movq %rax, -136(%rbp)	

1
	movq $76, %rsi	
	movq $.string2_l, %reg1	

1
	.quad .string11_l	
	.quad 10	

1
	.globl ListNode.insert	
	.type ListNode.insert, @function	

1
	movq -80(%rbp), %rdi	
	negl %reg2	

1
.string7_l:	
	.string "hi"	

1
	movq $.string10, %reg0	
	movq 0(%rbx), %r12	

1
	movq $20509, %rax	
	subl %reg1, %reg2	

1
	testq $1, %rax	
	je .Main.main_109	

1
	movq %reg0, 216(%reg1)	
	movq $3000, %reg0	

1
.Main.main_6:	
	jmp .Main.main_9	

1
	movq 120(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	movq $name_IO, %reg0	
	movq 0(%rbx), %reg2	

1
	movq %rcx, %reg1	
	movq %rbx, %reg1	

1
	jne .Main.new_7	
	movq $0, %reg0	

1
	.quad CellularAutomaton.cell	
	.quad CellularAutomaton.cell_left_neighbor	

1
	movq 144(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
.Main.out_whatever_4:	
	movq %rdi, %reg1	

1
	.type ListNode.next, @function	
ListNode.next:	

1
	je .Main.main_59	
	movq $49, %rsi	

1
.Matrix.elMul_3:	
	movq -16(%rbp), %reg1	

1
.Main.main_11:	
	movq $.string8, %rax	

1
.string9_l:	
	.string "S\\n"	

1
	subl %reg0, %reg1d	
	movq $10464, %r9	

1
	movq 24(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	addl %eax, %reg1	
	movq $25947, %reg2	

1
	movq %reg0, %rdi	
	movq %r15, %reg0	

1
	movq $60575, %rsi	
	negl %reg1	

1
	movq %r12, %rdi	
	call Foo.getX	

1
	movq 72(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	testq $1, %rdi	
	je .Cons.rcons_2	

1
	movq %reg0, %rdi	
	movq $48608, %reg0	

1
	subl %reg0, %edi	
	movq -32(%rbp), %rax	

1
	movq $0, %reg0	
	movq $.string4_l, %rdi	

1
	movq %rdi, 568(%rax)	
	movq $3000, %rdi	

1
	movq -112(%rbp), %rax	
	movq %r13, %r8	

1
	.string "Hello, world"	
.string6:	

1
	subl %reg0, %edi	
	movq %reg2, 16(%reg3)	

1
	.quad .string7_l	
	.quad 40	

1
.Main.main_24:	
	movq 0(%r13), %reg1	

1
	.quad A2I.i2c	
	.quad A2I.a2i	

1
.Complex.print_1:	
	movq $.string9, %reg0	

1
	movq -120(%rbp), %rsi	
	movq %reg2, %rax	

1
	call *%r13	
	movq $.string8, %r13	

1
.Main.main_119:	
	cdq	

1
.A2I.c2i_19:	
	movq 0(%reg0), %reg1	

1
	movq -80(%rbp), %rsi	
	cmpl %esi, %eax	

1
	je .Main.main_82	
	movq $61, %rsi	

1
	je .Main.main_7	
	movq $2, %r12	

1
	movq -112(%rbp), %rsi	
	imull %esi	

1
	call *%reg0	
	movq 368(%reg1), %reg2	

1
	testq $1, %reg0	
	je .CellularAutomaton.evolve_2	

1
	call *%reg0	
	movq %r12, %r15	

1
	movq $.string13, %rdi	
	movq %reg1, %r12	

1
	movq -16(%rbp), %rsi	
	movq %r14, %reg3	

1
	movq 24(%rbx), %rdx	
	movq 0(%rdx), %reg2	

1
	imull %reg0d	
	movq $2985, %reg0	

1
	movq 288(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	movq $24923, %reg0	
	imull %esi	

1
	imull %esi	
	movq -24(%rbp), %rsi	

1
	movq 8(%reg0), %rax	
	movq %rdi, %reg3	

1
	movq -120(%rbp), %rsi	
	movq %reg2, %reg3	

1
A2I.new:	
	pushq %rbp	

1
	movq -96(%rbp), %reg1	
	subl %reg1d, %reg2	

1
	movq $0, %reg0	
	movq %reg0, 504(%reg1)	

1
	subl %reg0, %eax	
	movq -152(%rbp), %rsi	

1
	addl %edi, %reg1	
	movq %reg2, 24(%reg3)	

1
	movq $.string8, %r12	
	movq 0(%rax), %reg2	

1
	movq %reg0, %rcx	
	movq %reg2, %rax	

1
	subl %edi, %reg1	
	movq %reg2, -112(%rbp)	

1
	movq $65097, %reg0	
	imull %reg0d	

1
	movq -24(%rbp), %rcx	
	imull %ecx	

1
	movq 16(%rdi), %reg1	
	negl %eax	

1
	movq %rax, %r9	
	movq -152(%rbp), %rax	

1
	movq $4, %reg0	
	movq $1, %r14	

1
.Matrix.set_10:	
	movq $1, %rax	

1
	call *%reg0	
	movq $5, %r14	

1
	je .Main.main_142	
	movq $112, %reg0	

1
	movq $36, %rsi	
	movq $.string2_l, %rdi	

1
	call *%rax	
	movq 176(%rbx), %rax	

1
	call *%reg0	
	movq 664(%reg1), %reg0	

1
	movq $63133, %rax	
	movq $31786, %reg1	

1
	movq %r14, %rcx	
	addl %reg2, %reg3	

1
	movq %reg0, %r12	
	movq $.string6, %reg0	

1
.Complex.print_2:	
	popq %r15	

1
	jne .Main.main_8	
	cmpl $0, %reg0	

1
	movq 16(%reg0), %reg1	
	cmpl $0, %eax	

1
.Main.main_14:	
	movq $.string9, %reg0	

1
	movq $3, %rax	
	cmpl $0, %reg1	

1
	movq %rsi, %r12	
	movq 8(%rax), %reg3	

1
	movq $0, %r13	
	movq 0(%rbx), %rax	

1
	.string "\\t"	
.string12:	

1
	movq 88(%rbx), %rbx	
	movq %r12, %rdi	

1
	idivl %esi	
.Matrix.get_63:	

1
	movq 8(%rbx), %rax	
	movq %rdi, %r12	

1
	idivl %esi	
	movq $12618, %reg1	

1
.Main.main_162:	
	movq -48(%rbp), %reg1	

1
	movq -40(%rbp), %reg1	
	negl %esi	

1
	movq $2147483647, %rax	
	movq $4, %rdi	

1
	movq $0, %reg0	
	movq %reg0, 352(%reg1)	

1
	je .Main.main_56	
	movq $17, %rsi	

1
	movq $.string11, %reg0	
	movq 0(%reg1), %r12	

1
	call *%r13	
	movq -128(%rbp), %rdi	

1
	.globl Main.funcifb	
	.type Main.funcifb, @function	

1
	.quad .string15_l	
	.quad 1	

1
	movq %r14, %reg1	
	movq %rsi, %rcx	

1
	call String.length	
	movq $name_Int, %rax	

1
	subl %reg0, %edi	
	movq %rdi, -16(%rbp)	

1
	.quad Matrix.new	
	.quad Object.abort	

1
	movq -104(%rbp), %rsi	
	movq %r15, %reg3	

1
	sete %reg0b	
	jne .Matrix.set_19	

1
.Main.funccase_3:	
	movq %reg0, %rax	

1
	movq -160(%rbp), %rax	
	movq -80(%rbp), %rdi	

1
	movq $60127, %r10	
	addl %r10d, %reg1	

1
	movq %rax, -120(%rbp)	
	movq $18, %rax	

1
	movq -152(%rbp), %rsi	
	cmpl %esi, %reg3	

1
	idivl %edi	
	movq %rax, %r12	

1
	movq %rax, -72(%rbp)	
	movq $8, %rax	

1
	movq 0(%reg0), %r12	
	movq 128(%r12), %r12	

1
	call *%reg0	
	movq $61456, %rdi	

1
	addl %reg0, %r10d	
	movq $60159, %rax	

1
	pushq %reg0	
	movq %rbx, %reg2	

1
	movq %rdi, %rax	
	jmp .Main.main_42	

1
.Main.main_113:	
	movq %reg0, %rsi	

1
	imull %reg0	
	movq -48(%rbp), %rsi	

1
	movq %reg0, 600(%reg1)	
	movq $3000, %reg0	

1
.Main.main_96:	
	movq %reg0, %rax	

1
	movq $34422, %reg0	
	subl %eax, %edi	

1
	movq %rdi, 24(%reg1)	
	movq $3000, %rdi	

1
	movq $3, %r14	
	cmpl $0, %reg1d	

1
	je .Main.main_14	
	movq $173, %rsi	

1
.Main.main_47:	
	movq 0(%reg0), %r13	

1
	movq $1, %reg0	
	movq %r8, %reg2	

1
	addl %esi, %reg1	
	movq %rbx, %reg3	

1
	subl %reg0, %edi	
	movq -80(%rbp), %rax	

1
	jne .A2I.i2c_1	
	movq $.string7, %rax	

1
	movq $3000, %rdi	
	movq %rdi, 176(%reg1)	

1
	movq -112(%rbp), %reg1	
	movq %r13, %r8	

1
	movq %r8, %reg1	
	movq $35237, %r8	

1
	jge .A2I.i2a_3	
	movq 0(%rbx), %r12	

1
	movq 504(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	movq %rdi, %reg1	
	jmp .Main.main_63	

1
	movq -184(%rbp), %reg1	
	addl %reg2, %eax	

1
	je .Main.main_59	
	movq -160(%rbp), %reg1	

1
	subl %reg0, %edi	
	movq %r12, %rax	

1
	movq %reg0, %rax	
.Main.main_165:	

1
	subl %reg0, %reg1	
	movq $25241, %reg2	

1
	call List.new	
	movq %rax, 8(%reg1)	

1
	je .Main.main_8	
	movq $6, %reg0	

1
.Bar.new_5:	
	movq %reg0, %reg1	

1
	movq %rbx, %reg1	
	movq -48(%rbp), %rax	

1
	movq $0, %reg0	
	movq $6, %r13	

1
	movq %rdi, %reg1	
	jmp .Main.main_122	

1
.A2I.i2c_19:	
	movq 0(%reg0), %reg1	

1
	movq $0, %rdi	
	movq %rdi, 288(%rax)	

1
	addl %reg0, %eax	
	movq $4, %rdi	

1
	movq 24(%reg0), %reg1	
	movq %reg2, %rdi	

1
	addl %reg0, %reg1	
	movq %r14, %rdi	

1
	movq %rbx, 8(%rax)	
.Main.main_38:	

1
	movq 136(%r13), %r13	
	movq 16(%rax), %rdi	

1
	movq %reg0, 440(%rax)	
	movq $0, %reg0	

1
	jmp .Main.main_10	
.Main.main_11:	

1
	movq $3000, %rdi	
	movq %rdi, 176(%rax)	

1
	je .Main.main_3	
	movq $138, %reg0	

1
	movq $4, %reg0	
	movq %r12, %rdi	

1
	je .Bar.new_20	
	movq $31, %reg0	

1
	movq %reg0, %reg1	
	jmp .Main.main_85	

1
	movq %reg0, 352(%rax)	
	movq $0, %reg0	

1
	movq $7, %reg0	
	movq 0(%rax), %rbx	

1
	movq %rax, %reg1	
	movq $24320, %rax	

1
	movq -160(%rbp), %rax	
	movq %reg2, %r8	

1
	call *%rax	
	movq 512(%reg1), %reg2	

1
.Main.main_134:	
	movq %reg0, %rsi	

1
	idivl %reg0	
	movq -80(%rbp), %rcx	

1
.Main.main_10:	
	movq $.string8, %reg0	

1
	.quad CellularAutomaton.init	
	.quad CellularAutomaton.print	

1
	call *%r15	
	movq %r14, %reg2	

1
	subl %reg0, %reg1	
	movq $48118, %rax	

1
	movq %reg0, %rax	
	movq 8(%rbx), %rdi	

1
	movq $1, %rax	
	jmp .Main.fib_2	

1
	movq %reg0, -96(%rbp)	
	movq $10, %reg0	

1
	movq %r12, %reg1	
	movq $2, %rax	

1
.Main.funccaseb_3:	
	popq %reg0	

1
	movq 136(%rax), %rax	
	movq %rbx, %reg2	

1
	addl %eax, %reg1	
	movq $28260, %reg2	

1
	movq -112(%rbp), %rax	
	subl %esi, %eax	

1
	call *%reg0	
	movq 432(%rbx), %reg2	

1
.Dictionary.get_3:	
	popq %reg0	

1
	negl %reg0	
	movq $64582, %reg1	

1
	sete %reg0	
	jne .A2I.i2c_17	

1
	movq %r12, %rdi	
	subl %reg2, %edi	

1
	movq %r12, %rax	
	imull %r8d	

1
	movq $1, %rax	
	jmp .A2I.c2i_4	

1
	movq -128(%rbp), %reg1	
	movq $0, %r11	

1
	cmpq $Bool_vtable, 0(%rax)	
	je .Main.main_11	

1
	.size Cons.init, .-Cons.init	
	.globl Main.print_list	

1
	movq -136(%rbp), %rax	
	movq $0, %rcx	

1
	je .Bar.new_9	
.Bar.new_8:	

1
	call out_error	
.Main.main_123:	

1
	addl %eax, %edi	
	movq $1, %rax	

1
	movq $1357, %reg0	
	movq $9886, %rbx	

1
	testq $1, %rcx	
	je .Main.main_48	

1
	movq %reg0, %rax	
	movq $49411, %reg0	

1
	movq $3520, %reg0	
	negl %reg0d	

1
	addl %edi, %reg1	
	movq %reg2, -24(%rbp)	

1
	movq -56(%rbp), %reg1	
	subl %edi, %reg3	

1
	movq $3000, %reg0	
	movq %reg0, 648(%reg1)	

1
	subl %reg0, %edi	
	movq $50998, %reg2	

1
	movq $30605, %rax	
	movq $35043, %rsi	

1
	movq 328(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	negl %ecx	
	movq -40(%rbp), %reg2	

1
	movq $3, %rbx	
	movq 0(%reg1), %r12	

1
	pushq %r12	
	movq %rsi, %rbx	

1
	movq $18046, %reg0	
	movq $29790, %reg1	

1
	movq -8(%rbp), %rdi	
	movq -88(%rbp), %reg3	

1
	movq %reg0, %reg1	
	movq $40488, %reg0	

1
	movq $48457, %rax	
	movq $18781, %rcx	

1
	movq %reg0, 8(%rbx)	
	movq %rbx, %reg2	

1
	je .Cons.rev_1	
	movq $74, %reg0	

1
	movq -48(%rbp), %rax	
	movq -88(%rbp), %reg3	

1
	movq $3000, %rdi	
	movq %rdi, 464(%rax)	

1
	movq %rdi, 312(%reg1)	
	movq $3000, %rdi	

1
	setle %sil	
	jg .Main.main_126	

1
	cmpq $Bool_vtable, 0(%reg0)	
	je .Main.main_11	

1
	movq %rbx, %rax	
	jmp .Bazz.new_6	

1
	movq -24(%rbp), %rdi	
	movq %rax, %rsi	

1
	movq -152(%rbp), %reg1	
	movq -64(%rbp), %reg3	

1
	movq 624(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq %reg0, %reg1	
	movq $name_Int, %r12	

1
	testq $1, %r8	
	je .Main.main_88	

1
	je .Cons.insert_4	
	movq $82, %rsi	

1
.Main.main_19:	
	movq %reg0, %rax	

1
	movq $DicNode_vtable, 0(%reg0)	
	movq %reg0, %rbx	

1
	movq %rdi, %rax	
.Main.main_166:	

1
	idivl %reg0	
	movq $46154, %rsi	

1
	movq $5, %rdi	
	cmpl %edi, %reg2	

1
	call *%reg0	
	movq %r12, %r14	

1
	movq %reg0, 8(%rax)	
	movq $2, %reg2	

1
	movq $0, %rdi	
	movq %rdi, 336(%reg1)	

1
	movq $3000, %rdi	
	movq %rdi, 72(%reg1)	

1
.Main.main_13:	
.Main.main_9:	

1
	je .Main.main_47	
	movq -152(%rbp), %rax	

1
	jg .Main.main_147	
	movq %reg0, %rdi	

1
	negl %reg0d	
	movq %rcx, %reg2	

1
	movq $12, %reg0	
	movq 0(%rbx), %reg2	

1
	movq 8(%rbx), %reg1	
	movq %reg1, 48(%rbx)	

1
	movq $52290, %reg0	
	imull %esi	

1
	movq 24(%reg0), %rax	
	addl %reg2, %reg3	

1
	movq 64(%r14), %r14	
	movq %reg1, %rdi	

1
	movq $11435, %r12	
	movq 0(%rbx), %rax	

1
	movq -160(%rbp), %rax	
	addl %reg2, %reg3d	

1
	movq $58921, %reg0	
	cmpl %reg1, %eax	

1
	je .Main.main_53	
	movq $17, %reg0	

1
.DicNode.get_1:	
	movq 24(%rax), %reg1	

1
	.quad .string13_l	
	.quad 1	

1
	movq $6765, %reg0	
	subl %edi, %eax	

1
	movq -64(%rbp), %reg1	
	movq -56(%rbp), %rax	

1
	call *%reg0	
.ListNode.insert_3:	

1
	jmp .Main.main_26	
.Main.main_23:	

1
	movq $173, %rsi	
	movq $.string2_l, %reg1	

1
	negl %reg0	
	movq %rax, 8(%rdi)	

1
	movq $5, %rsi	
	movq $.string1_l, %rdi	

1
	je .Main.main_165	
	movq $142, %reg0	

1
.Main.main_19:	
	movq $48985, %reg0	

1
	movq %reg0, -152(%rbp)	
	movq %reg2, %reg0	

1
	ret	
	.size CellularAutomaton.cell_right_neighbor, .-CellularAutomaton.cell_right_neighbor	

1
	addl %edi, %eax	
	movq %rax, -16(%rbp)	

1
	je .Razz.new_1	
	movq $39, %rsi	

1
	je .Main.main_96	
	movq -64(%rbp), %reg1	

1
	movq -160(%rbp), %rax	
	movq -24(%rbp), %reg3	

1
	movq 16(%rax), %rdi	
	cmpl %esi, %reg3	

1
Complex.reflect_0:	
	pushq %rbp	

1
	movq %reg0, -120(%rbp)	
	movq $7, %reg0	

1
	testq $1, %rcx	
	je .Main.main_81	

1
	negl %reg0	
	movq %reg1, -40(%rbp)	

1
DicNode.init:	
	pushq %reg0	

1
	movq $3000, %reg0	
	movq %reg0, 384(%reg1)	

1
	call *%reg0	
	movq 336(%reg1), %reg2	

1
	je .Main.main_102	
	movq $64, %rsi	

1
	setle %reg0l	
	cmpl %reg1, %eax	

1
	cmpq $String_vtable, 0(%reg0)	
	je .Main.out_whatever_4	

1
	movq 176(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	call *%r12	
	movq 72(%reg1), %rax	

1
	movq 560(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	addl %eax, %r8d	
	movq -144(%rbp), %rax	

1
	subl %reg0, %edi	
	movq $14802, %rax	

1
.A2I.c2i_9:	
	movq $.string12, %reg0	

1
	movq $0, %reg0	
	movq %reg1, %rdx	

1
	movq %reg0, 624(%reg1)	
	movq $0, %reg0	

1
	movq $2, %reg0	
	call Bar.new	

1
	movq $0, %rdi	
	movq %rdi, 320(%rax)	

1
.Foo.new_11:	
	movq %reg0, 32(%rbx)	

1
	movq %rsi, %reg1	
	movq %r12, %rsi	

1
	je .ListNode.push_1	
	movq $20, %rsi	

1
	idivl %r14d	
	movq %reg1, %reg2	

1
	je .Razz.new_19	
	movq $31, %reg0	

1
	negl %r8d	
	movq %rcx, %reg2	

1
.Main.main_40:	
	cmpl $0, %r13d	

1
	call *%reg0	
	movq 360(%rbx), %reg0	

1
	movq %reg0, %rbx	
	call Cons.new	

1
	movq -72(%rbp), %rsi	
	movq %rdi, %rax	

1
	call Nil.new	
	movq %reg0, 8(%rbx)	

1
	call ListNode.new	
	movq %reg0, 8(%rbx)	

1
	movq %reg0, 328(%reg1)	
	movq $3000, %reg0	

1
	je .Main.main_6	
	cmpq $Main_vtable, 0(%rax)	

1
Cons.rcons:	
	pushq %rbp	

1
	cmpq $Object_vtable, 0(%reg0)	
	je .Main.new_2	

1
	movq $44, %rcx	
	movq $22, %rax	

1
	movq %r12, 8(%reg1)	
	movq $2, %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 360(%rax)	

1
	testq $1, %rsi	
	je .Main.main_142	

1
	movq %rdi, 120(%reg1)	
	movq %rdi, %reg1	

1
	movq -24(%rbp), %reg1	
	movq %rbx, %reg3	

1
	movq $12, %r8	
	movq -24(%rbp), %rax	

1
	setle %dil	
	jg .Main.main_51	

1
	movq 72(%rbx), %rbx	
	movq %r12, %reg2	

1
	.type Dictionary.insert, @function	
Dictionary.insert:	

1
	call out_error	
.Razz.new_12:	

1
	call *%r15	
	cmpl $0, %ebx	

1
	movq 56(%reg0), %reg0	
	movq 8(%rbx), %rdi	

1
	movq 32(%rax), %rax	
	movq %rbx, %reg2	

1
	je .Cons.rcons_2	
	movq $87, %reg0	

1
	call Bool.new	
	movq %r13, 8(%reg1)	

1
	je .Main.main_144	
	movq %reg0, %reg1	

1
.Main.main_27:	
	movq 0(%reg0), %rax	

1
	movq -24(%rbp), %rdi	
	movq %reg2, %reg3	

1
	movq %rax, %rdi	
	movq 24(%reg2), %rax	

1
	movq -136(%rbp), %rax	
	movq -104(%rbp), %rsi	

1
	subl %edi, %reg1	
	movq $33866, %reg2	

1
.Main.func2_1:	
	movq $5, %r13	

1
	movq %rdi, %rax	
	jmp .Main.main_99	

1
	movq 64(%rax), %rax	
	movq 24(%reg1), %rdi	

1
	movq %rdi, %reg1	
	movq $100, %reg2	

1
	movq %r15, %rax	
	imull %edi	

1
	movq %reg0, %r14	
	movq -32(%rbp), %reg0	

1
	jne .Matrix.get_34	
	movq 112(%rax), %rax	

1
	subl %reg0, %reg1d	
	movq $12, %r10	

1
	movq %rax, %reg1	
	movq $.string11, %r15	

1
	movq %rax, %rsi	
	movq %r12, %rdx	

1
	movq %rsi, %r12	
	call Bool.new	

1
.Main.funcwhileb_2:	
	movq 0(%reg0), %reg1	

1
	movq $4, %reg0	
	movq %r8, %reg2	

1
	call *%r12	
	movq 24(%reg1), %r12	

1
	je .Main.main_93	
	movq $64, %reg0	

1
.Matrix.set_22:	
.Matrix.set_20:	

1
	movq $6, %rsi	
	movq $.string1_l, %rdi	

1
	movq 48(%rax), %rax	
	movq 8(%rbx), %rdi	

1
	subl %reg0, %eax	
	movq -24(%rbp), %rsi	

1
	movq -112(%rbp), %rax	
	addl %reg2, %edi	

1
	movq -160(%rbp), %reg1	
	subl %esi, %reg3	

1
	movq %reg0, %reg1	
	movq -96(%rbp), %r8	

1
	movq %rdi, %reg1	
	movq $6765, %rdi	

1
	movq -40(%rbp), %rdi	
	movq -176(%rbp), %reg3	

1
	je .Main.main_41	
	movq $34, %reg0	

1
	movq %rdi, 168(%reg1)	
	movq $3000, %rdi	

1
	je .Main.main_136	
	movq %reg0, %reg1	

1
	imull %reg0	
	movq %rax, -128(%rbp)	

1
	movq $34, %reg0	
	movq $.string3_l, %reg1	

1
	movq %rdi, %reg1	
	movq $4, %reg2	

1
	movq -96(%rbp), %rax	
	addl %eax, %esi	

1
	movq -168(%rbp), %reg1	
	movq %reg2, %r8	

1
	movq $3000, %reg0	
	movq %reg0, 304(%reg1)	

1
	movq $23599, %rax	
	subl %eax, %reg2	

1
	je .Foo.new_4	
	cmpq $Foo_vtable, 0(%reg0)	

1
	movq $0, %rdi	
	movq %rdi, 664(%rax)	

1
	movq %reg0, %reg1	
	movq $62420, %reg0	

1
	movq %rsi, %reg1	
	movq 16(%reg2), %rax	

1
	movq %rdi, 608(%reg1)	
	movq $3000, %rdi	

1
	je .Foo.new_4	
	cmpq $Foo_vtable, 0(%rbx)	

1
	movq 152(%r12), %r12	
	movq %rax, %rdi	

1
	movq $25241, %rax	
	movq $13257, %rsi	

1
	movq 104(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	movq %reg0, %rsi	
	subl %esi, %edi	

1
	movq 48(%rbx), %rsi	
	movq %rsi, 64(%rbx)	

1
	subl %reg0, %edi	
	movq $20509, %rax	

1
	.size Dictionary.setHead, .-Dictionary.setHead	
	.globl DicNode.init	

1
	movq $3000, %reg0	
	movq %reg0, 424(%reg1)	

1
	sete %r8b	
	jne .Matrix.set_34	

1
	jne .A2I.i2a_aux_1	
	movq $empty_string, %reg0	

1
	movq %r13, %rsi	
	negl %reg2	

1
	subl %reg0, %reg1	
	movq $18310, %reg2	

1
	movq %rdi, %rbx	
	movq $.string6, %r12	

1
.Main.main_2:	
	movq 16(%reg0), %reg1	

1
	movq $10174, %rax	
	movq $22520, %reg1	

1
	negl %reg0	
	movq -80(%rbp), %reg2	

1
	movq 408(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq $1, %rbx	
	movq -8(%rbp), %reg2	

1
	ret	
	.size Main.funcifb, .-Main.funcifb	

1
	movq %rdi, 488(%reg1)	
	movq $3000, %rdi	

1
	movq $.string6, %rax	
	movq %rbx, %reg2	

1
	movq $5, %rax	
	addl %reg1, %edi	

1
	movq %r13, %reg1	
	addl %reg1d, %reg2	

1
	ret	
	.size Matrix.get, .-Matrix.get	

1
	movq -56(%rbp), %reg1	
	subl %esi, %eax	

1
	je .DicNode.insert_6	
	movq $59, %rsi	

1
	movq -184(%rbp), %reg1	
	movq %reg2, %rsi	

1
	je .Main.main_11	
	cmpq $IO_vtable, 0(%reg0)	

1
	subl %esi, %reg1	
	movq -104(%rbp), %rsi	

1
	jne .Main.main_152	
	movq -72(%rbp), %reg1	

1
.Main.main_147:	
	movq %reg0, %reg1	

1
	movq 288(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
.Bar.new_13:	
	movq 16(%reg0), %reg1	

1
	movq $9556, %reg0	
	cmpl %edi, %reg2	

1
	call *%reg0	
	movq 704(%reg1), %r12	

1
	.size Baz.new, .-Baz.new	
	.globl Main.new	

1
	movq -168(%rbp), %rdi	
	addl %edi, %eax	

1
	movq $116, %rsi	
	movq $.string3_l, %reg1	

1
	addl %esi, %eax	
	movq -104(%rbp), %rsi	

1
	subl %reg0, %edi	
	movq -88(%rbp), %rax	

1
	movq -64(%rbp), %reg1	
	subl %reg1d, %reg2	

1
	movq $12, %r9	
	movq %rbx, %rax	

1
	movq %reg0, -152(%rbp)	
	movq -8(%rbp), %reg0	

1
	movq 80(%reg0), %rax	
	testq $1, %rax	

1
	movq %reg0, %rax	
	movq $39037, %reg0	

1
	movq $47, %rsi	
	movq $.string5_l, %reg1	

1
	movq %reg0, %rax	
	cmpl $0, 8(%rax)	

1
	addl %edi, %eax	
	movq %rax, 56(%reg3)	

1
	movq $13765, %reg0	
	movq $5137, %reg1	

1
	movq 184(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq %rsi, 64(%reg1)	
	movq 32(%reg1), %reg2	

1
	call *%rax	
	movq 648(%rbx), %r12	

1
	subl %ecx, %eax	
	movq $12, %rcx	

1
	movq -72(%rbp), %reg1	
	movq $0, %r10	

1
	.globl DicNode.incr	
	.type DicNode.incr, @function	

1
	je .Main.main_39	
	movq $15, %reg0	

1
	movq %reg0, 672(%reg1)	
	movq $3000, %reg0	

1
	movq $5606, %reg0	
	imull %reg0d	

1
	movq 8(%reg0), %reg1	
	pushq %reg0	

1
	movq $2, %rsi	
	negl %esi	

1
	movq $0, %reg0	
	movq %reg0, 568(%rax)	

1
	idivl %esi	
	movq -16(%rbp), %rsi	

1
.string9_l:	
	.string "false\\n"	

1
	movq -32(%rbp), %rax	
	movq -56(%rbp), %reg3	

1
.Main.main_123:	
	movq -152(%rbp), %reg1	

1
	addl %reg0, %r12d	
	movq $15079, %reg2	

1
	movq 648(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
.Main.main_24:	
	movq 0(%reg0), %rax	

1
	call out_error	
.Main.func_3:	

1
	movq %rbx, %reg1	
	movq %r12, %rdi	

1
	.quad IO.out_string	
	.quad CellularAutomaton.init	

1
.Main.main_70:	
	movq -112(%rbp), %reg1	

1
	movq $2, %rax	
	movq %r13, %rdi	

1
	testq $1, %reg0	
	je .Main.main_121	

1
	movq 544(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	movq $.string8, %reg0	
	cmpl $0, %ebx	

1
	movq $16, %reg0	
	movq %reg0, -96(%rbp)	

1
	movq %reg0, -112(%rbp)	
	movq $19, %reg0	

1
	call out_error	
.Cons.rev_2:	

1
	movq $15487, %reg0	
	subl %edi, %reg2	

1
	movq %rsp, %rbp	
	movq %reg2, %rdi	

1
	movq 8(%reg0), %reg1	
	movq 16(%reg0), %reg2	

1
	movq 8(%reg0), %r13	
	pushq %reg0	

1
	jmp .Main.main_135	
.Main.main_134:	

1
	movq $1, %r15	
	movq %r15, %reg1	

1
	je .Main.main_9	
	movq -168(%rbp), %rax	

1
	movq $16280, %reg0	
	imull %reg1	

1
	subl %eax, %reg1	
	movq $43604, %reg2	

1
	movq $1, %reg0	
	popq %reg1	

1
	negl %eax	
	movq $33788, %reg1	

1
.Main.main_8:	
	movq $.string9, %rax	

1
	movq $.string14, %reg0	
	movq %reg1, %r12	

1
	call *%reg0	
	movq 504(%reg1), %reg0	

1
	movq -32(%rbp), %reg1	
	movq %r15, %reg3	

1
.Main.new_2:	
	movq $0, %rax	

1
.Main.main_2:	
	cmpl $0, -24(%rbp)	

1
	je .Main.new_2	
	cmpq $Int_vtable, 0(%reg0)	

1
	je .List.insert_2	
	movq $103, %reg0	

1
	movq $0, %reg0	
	movq %reg0, 648(%reg1)	

1
	movq 400(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	.quad 8	
.string9_l:	

1
	movq $33866, %rdi	
	subl %reg1, %eax	

1
	movq -32(%rbp), %rax	
	movq %rdi, %rsi	

1
	movq 16(%rax), %reg1	
	movq 24(%rax), %reg2	

1
	movq %r9, %rax	
	movq $0, %r9	

1
.Main.main_98:	
	movq %reg0, %rsi	

1
	call out_error	
.Main.main_93:	

1
	movq $58210, %reg0	
	negl %esi	

1
	movq $3000, %rdi	
	movq %rdi, 96(%rax)	

1
	ret	
	.size List.head, .-List.head	

1
	movq 8(%rax), %reg1	
	movq %rbx, %rsi	

1
	ret	
	.size Main.fib, .-Main.fib	

1
	movq %rsi, %rcx	
	movq %rdi, %reg3	

1
	movq %rax, 8(%rbx)	
	movq $2, %r12	

1
	movq -32(%rbp), %rsi	
	cmpl %esi, %reg3	

1
	jne .Matrix.get_53	
	movq $1, %reg0	

1
	je .Main.main_50	
	movq $34, %reg0	

1
	movq -64(%rbp), %r9	
	addl %r9d, %reg2	

1
	movq %reg0, %reg1	
	movq $1, %r8	

1
	movq %reg0, %reg1	
	movq $20384, %reg0	

1
	addl %ecx, %reg1	
	movq %rbx, %reg3	

1
	movq 584(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	call *%reg0	
	movq 0(%reg0), %r13	

1
	movq -120(%rbp), %reg1	
	imull %reg1d	

1
	movq -56(%rbp), %rdi	
	movq %reg2, %rax	

1
	movq $5, %rax	
	movq $4, %r13	

1
	movq 64(%r14), %r14	
	movq %rax, %reg2	

1
	.globl DicNode.get	
	.type DicNode.get, @function	

1
	movq %rdi, %reg1	
	movq %reg2, %r13	

1
.Main.main_70:	
	movq -112(%rbp), %rax	

1
	movq %rdx, -96(%rbp)	
	movq -8(%rbp), %rdx	

1
	je .Main.main_18	
	movq $10, %reg0	

1
	testq $1, %rdi	
	je .Dictionary.insert_2	

1
.Matrix.get_57:	
.Matrix.get_55:	

1
	movq %rdi, 544(%reg1)	
	movq $3000, %rdi	

1
	addl %reg0, %eax	
	movq -56(%rbp), %rsi	

1
	movq %rdi, 280(%rax)	
	movq $0, %rdi	

1
	movq $2, %rax	
	movq %rbx, %reg2	

1
	movq -168(%rbp), %reg1	
	cmpl %eax, %edi	

1
	ret	
	.size A2I.i2c, .-A2I.i2c	

1
	movq %reg0, %r12	
.Main.main_5:	

1
	movq %rdi, %rax	
.Main.main_161:	

1
	testq $1, %rax	
	je .Main.main_144	

1
	movq $64582, %reg0	
	movq %reg0, %reg1	

1
	movq %r14, %reg1	
	movq -96(%rbp), %rsi	

1
	call *%r12	
	movq -8(%rbp), %rdx	

1
	movq -72(%rbp), %reg1	
	movq %rsi, %rcx	

1
	movq $11282, %rax	
	movq $39523, %reg1	

1
	movq %rbx, %rax	
	movq %r12, %r13	

1
	movq %rsi, %reg1	
	movq -32(%rbp), %rsi	

1
	movq 624(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	.globl CellularAutomaton.num_cells	
	.type CellularAutomaton.num_cells, @function	

1
	subl %esi, %eax	
	movq -24(%rbp), %rsi	

1
	movq %rsp, %rbp	
	movq $744, %reg2	

1
	movq %rax, -16(%rbp)	
	movq %reg2, %rax	

1
	.quad 17	
substrerr_string_l:	

1
	movq $22, %reg0	
	imull %esi	

1
	movq -16(%rbp), %reg1	
	movq %r14, %reg3	

1
	movq $13131, %rax	
	addl %eax, %edi	

1
	movq $3000, %rdi	
	movq %rdi, 528(%rax)	

1
	jne .CellularAutomaton.cell_left_neighbor_1	
	movq 0(%rbx), %reg1	

1
	movq %r14, %rax	
	movq %rsi, %rcx	

1
	movq %reg0, 504(%rax)	
	movq $3000, %reg0	

1
Foo.doh:	
	pushq %reg0	

1
	movq 96(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	subl %eax, %edi	
	movq $25241, %rax	

1
	movq $.string18, %rdi	
	movq %rdi, %r13	

1
	je .Main.main_7	
	cmpq $Main_vtable, 0(%rax)	

1
	movq -96(%rbp), %rax	
	movq %reg2, %rcx	

1
.Cons.insert_5:	
	movq 0(%reg0), %r12	

1
	movq $0, %r14	
	movq %reg1, %rdi	

1
	.string "CellularAutomaton"	
.string0:	

1
	.size DicNode.decr, .-DicNode.decr	
	.globl DicNode.next	

1
	idivl %esi	
	movq $12618, %rdi	

1
	movq $40, %reg0	
	movq $.string3_l, %rdi	

1
	movq %reg0, %reg1	
	movq -40(%rbp), %rcx	

1
	testq $1, %reg0	
	je .DicNode.get_3	

1
	movq $3000, %reg0	
	movq %reg0, 152(%rax)	

1
	movq $39037, %reg0	
	negl %reg1	

1
	movq $52033, %reg0	
	subl %eax, %reg2	

1
	movq 16(%reg0), %rax	
	movq %reg2, %reg3	

1
	subl %reg0, %reg1	
	movq -168(%rbp), %rax	

1
	subl %edi, %eax	
	movq 0(%reg2), %r13	

1
	idivl %r9d	
	movq -16(%rbp), %reg2	

1
	testq $1, %rax	
	jne .Main.main_123	

1
	testq $1, %reg0	
	je .DicNode.insert_6	

1
	movq %rdx, %reg1	
	movq %reg2, %rdi	

1
	jg .Matrix.mul_4	
	movq %reg0, %reg1	

1
	movq %r14, %reg1	
	movq -96(%rbp), %reg3	

1
	movq %reg0, 520(%reg1)	
	movq $3000, %reg0	

1
	movq $104, %reg0	
	movq $.string5_l, %rdi	

1
	testq $1, %rcx	
	je .Main.main_99	

1
	movq -8(%rbp), %reg1	
	movq -48(%rbp), %rsi	

1
	movq -152(%rbp), %rax	
	movq -160(%rbp), %reg3	

1
	je .Main.main_3	
	movq $132, %rsi	

1
	movq 24(%reg0), %rax	
	sete %al	

1
	movq %reg0, -48(%rbp)	
	movq $16, %reg0	

1
	movq $.string6, %r14	
	movq 0(%rbx), %rax	

1
	movq $12843, %r12	
	movq $0, %r13	

1
	movq 256(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	jne .A2I.c2i_1	
	movq $0, %reg0	

1
	movq $name_Object, %rax	
	movq 0(%reg1), %r12	

1
	movq %rbx, %rdi	
	subl %reg2, %eax	

1
.Main.print_list_2:	
	cmpl $0, %r12d	

1
.Main.main_3:	
	movq 0(%rax), %rbx	

1
	movq 728(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	call *%r12	
	movq 432(%reg1), %rax	

1
.A2I.i2c_12:	
.A2I.i2c_10:	

1
	movq -160(%rbp), %reg1	
	movq -16(%rbp), %rdi	

1
	jmp .Main.main_110	
.Main.main_109:	

1
	addl %reg0, %edi	
	movq -128(%rbp), %reg3	

1
	movq %reg0, 208(%reg1)	
	movq $3000, %reg0	

1
	movq -160(%rbp), %rax	
	addl %eax, %r9d	

1
	movq %reg0, 456(%reg1)	
	movq $3000, %reg0	

1
	movq $51925, %reg0	
	movq 0(%rbx), %r12	

1
	movq 8(%reg0), %rdi	
	movq %rbx, %rsi	

1
	movq $16, %reg0	
	movq %reg0, -40(%rbp)	

1
	subl %reg0, %edi	
	movq $50998, %rax	

1
.Main.main_122:	
	cdq	

1
	addl %eax, %edi	
	movq $28260, %rax	

1
	negl %reg0	
	movq -40(%rbp), %rax	

1
	movq $.string7, %reg0	
	jmp .A2I.i2a_2	

1
	movq %rax, 24(%rbx)	
	jmp .DicNode.insert_5	

1
	movq $54460, %reg0	
	addl %reg1, %reg2	

1
	testq $1, %rsi	
	je .Main.main_158	

1
.Matrix.mul_5:	
	movq 0(%r12), %r15	

1
.Main.main_22:	
.Main.main_20:	

1
	movq %reg0, 552(%rax)	
	movq $0, %reg0	

1
	movq %rdi, %rax	
	jmp .Main.main_81	

1
	subl %ecx, %reg1	
	movq -88(%rbp), %rcx	

1
	jne .Main.main_23	
	movq $1, %rax	

1
	movq $29773, %reg0	
	movq 0(%reg1), %reg2	

1
	movq $12, %rax	
	movq %r13, %rdi	

1
	movq -120(%rbp), %r8	
	subl %r8d, %reg2	

1
	movq %rcx, %reg1	
	movq -40(%rbp), %rcx	

1
	.string "\\n"	
.string10:	

1
	imull %reg0	
	movq $14356, %reg1	

1
	jmp .A2I.i2a_4	
.A2I.i2a_3:	

1
	movq 32(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	je .Razz.new_13	
	movq $10, %reg0	

1
	movq $64, %rdi	
	call getmem	

1
	call *%reg0	
	movq 448(%reg1), %rax	

1
	imull %ebx	
	movq %reg1, %rbx	

1
	addl %eax, %esi	
	movq -32(%rbp), %reg3	

1
	movq $0, %reg0	
	movq %reg0, 496(%reg1)	

1
	movq 632(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	subl %eax, %reg1	
	movq -32(%rbp), %reg3	

1
	movq $27399, %reg0	
	imull %reg1	

1
	movq $59, %rsi	
	movq $.string5_l, %reg1	

1
CellularAutomaton.num_cells:	
	pushq %reg0	

1
	call *%reg0	
	movq 440(%rbx), %rax	

1
	movq %rdi, %rax	
	jmp .Main.main_128	

1
	movq $55318, %reg0	
	subl %edi, %reg2	

1
	addl %eax, %reg1	
	movq -80(%rbp), %rax	

1
	movq $12660, %rsi	
	negl %esi	

1
	movq %rax, %reg1	
	movq $48608, %rax	

1
	movq 8(%rbx), %rdi	
	cmpl %reg2, %eax	

1
	movq $Dictionary_vtable, 0(%rax)	
	movq $0, %rdi	

1
.Matrix.set_41:	
	movq $2, %reg0	

1
	jne .Main.main_142	
	movq %rbx, %rdi	

1
	movq -128(%rbp), %rax	
	movq -152(%rbp), %rcx	

1
	movq %rdi, 256(%reg1)	
	movq $3000, %rdi	

1
	call *%reg0	
	movq 96(%rbx), %rax	

1
	movq %r13, %rax	
	cmpl %eax, %edi	

1
	movq $0, %rdi	
	movq %rdi, 240(%rax)	

1
	movq -80(%rbp), %reg1	
	movq %reg2, %rsi	

1
	movq $12, %r12	
	movq 0(%rbx), %reg2	

1
	movq 416(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	je .Main.main_22	
	movq $10, %reg0	

1
	movq $2, %r9	
	movq %reg1, %rcx	

1
	movq $32079, %rdi	
	movq $0, %reg1	

1
	.globl CellularAutomaton.init	
	.type CellularAutomaton.init, @function	

1
	subl %reg0, %edi	
	movq -56(%rbp), %rax	

1
	subl %reg0, %reg1	
	movq $23915, %rax	

1
	negl %eax	
	movq -176(%rbp), %r9	

1
	movq %rax, %reg1	
	jmp .Main.main_7	

1
.Main.main_40:	
	cmpl $0, %reg0d	

1
	jne .Complex.print_1	
	movq 8(%rax), %rbx	

1
	movq %rax, %reg1	
	movq $62420, %rax	

1
	jne .Matrix.set_60	
	movq %rdi, 192(%reg1)	

1
	call *%rax	
	jmp .Main.funccaseb_3	

1
.Bar.new_20:	
	movq 48(%reg0), %rdx	

1
	movq %r14, %reg1	
	movq %r12, %rsi	

1
.Foo.new_11:	
	movq %reg0, 32(%reg1)	

1
	negl %edi	
	movq %reg1, 16(%rax)	

1
	movq $0, %reg0	
	movq %reg0, 592(%rax)	

1
	movq 408(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	movq -32(%rbp), %rax	
	movq -144(%rbp), %rdi	

1
	movq $4844, %rax	
	movq $42968, %rdi	

1
.Main.main_93:	
	movq -72(%rbp), %reg1	

1
	movq $1, %r12	
	movq $3, %r13	

1
	addl %ecx, %reg1	
	imull %reg1	

1
.Main.main_146:	
	movq %reg0, %reg1	

1
.Main.main_161:	
	cdq	

1
	addl %eax, %ecx	
	movq -88(%rbp), %rax	

1
	addl %eax, %reg1	
	movq $1, %reg2	

1
	movq -40(%rbp), %reg1	
	movq %reg1, -144(%rbp)	

1
	movq $5411, %r10	
	addl %r10d, %reg1	

1
	ret	
	.size List.car, .-List.car	

1
	negl %reg0d	
	movq %r12, %rax	

1
	movq $15079, %reg0	
	negl %eax	

1
	movq -136(%rbp), %rax	
	movq -80(%rbp), %reg3	

1
	movq 0(%reg0), %r13	
	movq 136(%r13), %r13	

1
	ret	
	.size Cons.tail, .-Cons.tail	

1
	movq %rax, %reg1	
	movq %rax, %rbx	

1
	movq %rsi, %reg1	
	movq %rdx, %rbx	

1
	movq 40(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq $0, %rdi	
	movq %rdi, 696(%reg1)	

1
	subl %edi, %eax	
	movq -96(%rbp), %reg3	

1
	call *%reg0	
	movq 520(%rbx), %r12	

1
	negl %reg0d	
	movq -64(%rbp), %reg2	

1
	movq 208(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	movq %reg0, %rax	
	movq $17594, %reg0	

1
	call *%rax	
	movq $name_Bool, %rax	

1
.Foo.new_13:	
	movq 16(%reg0), %rdx	

1
	movq %rsp, %rbp	
	movq $744, %rdi	

1
	setl %reg0b	
	jge .Main.main_3	

1
	movq %reg0, 184(%reg1)	
	movq $3000, %reg0	

1
	movq %reg0, 224(%reg1)	
	movq $3000, %reg0	

1
	cmpq $Bool_vtable, 0(%rdi)	
	je .Main.out_whatever_2	

1
.Main.main_13:	
	movq $0, %reg0	

1
	movq $38511, %rax	
	subl %reg1, %edi	

1
	movq $5137, %rdi	
	imull %reg1	

1
	movq -152(%rbp), %reg1	
	movq -152(%rbp), %rax	

1
	movq $DicNode_vtable, 0(%rax)	
	movq %rax, %rbx	

1
	call *%r12	
	movq 624(%rbx), %r12	

1
	je .Main.main_51	
	movq $15, %reg0	

1
	movq %rbx, %rax	
	movq -152(%rbp), %rdi	

1
.Main.main_62:	
	movq %reg0, %reg1	

1
	movq %rdi, %reg1	
	jmp .Main.main_12	

1
	addl %eax, %edi	
	movq %rdi, %r13	

1
	call *%rax	
	movq 512(%rbx), %reg2	

1
	call *%reg0	
	movq 288(%rbx), %reg2	

1
	movq -80(%rbp), %reg1	
	subl %reg2, %ecx	

1
	movq $0, %rax	
.Complex.equal_6:	

1
	testq $1, %reg0	
	je .Main.main_85	

1
	je .Main.main_57	
	movq $17, %reg0	

1
	movq $2147483647, %reg0	
	movq $2, %reg1	

1
	movq -24(%rbp), %reg1	
	movq -128(%rbp), %reg3	

1
	movq -112(%rbp), %reg1	
	addl %reg1d, %eax	

1
	movq %rax, %r8	
	movq $15735, %rax	

1
	movq $60750, %reg0	
	movq 0(%rbx), %reg2	

1
	movq %reg0, %reg1	
	jmp .Main.main_56	

1
	movq 16(%reg0), %rax	
	subl %reg2, %eax	

1
	movq $2469, %r8	
	movq $0, %reg1	

1
	call *%r12	
	movq $12, %rdi	

1
	movq %r13, %reg1	
	movq -128(%rbp), %reg3	

1
	jge .Main.main_2	
	movq 0(%rbx), %reg1	

1
	movq 16(%reg0), %reg1	
	addl %esi, %reg3	

1
	movq %rax, %r12	
	movq 0(%rbx), %reg3	

1
.DicNode.insert_4:	
	movq 0(%rax), %reg1	

1
	movq -64(%rbp), %reg1	
	addl %ecx, %eax	

1
.Matrix.get_1:	
	movq $2, %reg0	

1
.Main.main_120:	
	cdq	

1
	movq $Main_vtable, 0(%rax)	
	movq %rax, %rdi	

1
	jmp .Main.main_49	
.Main.main_40:	

1
	movq %rdi, 592(%reg1)	
	movq $3000, %rdi	

1
	jne .Matrix.set_56	
	movq %rdi, 176(%reg1)	

1
	movq -144(%rbp), %rax	
	imull %reg2	

1
	movq $8800, %r12	
	movq 0(%reg1), %reg2	

1
	jne .Matrix.get_32	
	movq 104(%rax), %rax	

1
	je .Main.main_7	
	cmpq $String_vtable, 0(%reg0)	

1
	movq $name_IO, %reg0	
	movq 0(%reg1), %reg2	

1
	je .Main.main_9	
	cmpl %reg0, %reg1	

1
	movq %rax, %reg1	
	call IO.out_string	

1
.Matrix.get_53:	
	movq $1, %rax	

1
	je .Foo.new_7	
	movq $4, %rsi	

1
	imull %edi	
	movq -152(%rbp), %reg2	

1
	movq 472(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq $0, %rsi	
	movq 16(%reg1), %reg2	

1
.Main.main_1:	
	movq 8(%reg0), %reg1	

1
	movq $1, %rbx	
	movq %reg1, %reg2	

1
	movq -152(%rbp), %rcx	
	negl %reg2	

1
	movq 704(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	movq %reg0, %r14	
	movq $13, %reg2	

1
	movq %reg0, %rbx	
	movq $3, %reg2	

1
	movq $0, %rdi	
	movq %rdi, 560(%reg1)	

1
	movq -112(%rbp), %reg1	
	movq -128(%rbp), %rax	

1
	movq -112(%rbp), %reg1	
	addl %eax, %edi	

1
	movq $3000, %rdi	
	movq %rdi, 504(%rax)	

1
.CellularAutomaton.cell_at_next_evolution_5:	
	movq $0, %rax	

1
	call *%rax	
	movq $.string21, %r12	

1
	.size Foo.getX, .-Foo.getX	
	.globl Foo.func	

1
	idivl %reg0	
	movq $32704, %rsi	

1
	call out_error	
.Main.main_131:	

1
	movq 16(%reg0), %rax	
	movq %r12, %rdi	

1
	movq %reg0, %reg1	
	jmp .Main.main_4	

1
	testq $1, %rdi	
	je .Main.main_78	

1
.Matrix.elMul_2:	
	movq %reg0, %rax	

1
	movq $1, %r13	
	call Bool.new	

1
	testq $1, %rdi	
	je .ListNode.insert_2	

1
	movq -16(%rbp), %rax	
	movq %r12, %reg3	

1
	idivl %r12d	
	movq %rax, %r12	

1
	.size List.rev, .-List.rev	
	.globl List.sort	

1
	movq $2, %rcx	
	movq 8(%rax), %reg2	

1
	movq %r15, %rsi	
	movq %r14, %rax	

1
	movq %reg0, %reg1	
	movq -16(%rbp), %r8	

1
	.globl Dictionary.insert	
	.type Dictionary.insert, @function	

1
	movq -40(%rbp), %rax	
	movq %reg2, %rcx	

1
	.quad .string6_l	
	.quad 12	

1
	addl %reg0, %edi	
	movq %rdi, %r13	

1
	idivl %ecx	
	movq -120(%rbp), %reg2	

1
	movq -88(%rbp), %rax	
	movq %rbx, %reg3	

1
	je .Main.funccase_1	
	movq $22, %rsi	

1
	jg .Main.main_49	
	movq -144(%rbp), %reg1	

1
	subl %reg0, %r9d	
	movq %r8, %rax	

1
List.print_list:	
	pushq %reg0	

1
	negl %reg0	
	movq %reg1, %rdx	

1
	jne .Matrix.get_28	
	movq 88(%reg0), %reg0	

1
	movq %r13, %r12	
	pushq %rax	

1
	movq %rax, %reg1	
	movq $26972, %rax	

1
	movq %rdi, %rax	
	movq -80(%rbp), %rax	

1
	movq %rax, %rdi	
	movq $1823, %rax	

1
	movq $43177, %reg0	
	subl %reg1, %eax	

1
	movq -80(%rbp), %rax	
	movq -80(%rbp), %rdi	

1
	movq %r14, %reg1	
	imull %reg1d	

1
	movq %reg0, 48(%rax)	
	movq %reg0, %rax	

1
	movq -168(%rbp), %reg1	
	movq %rsi, %rcx	

1
	jmp .Main.main_166	
.Main.main_95:	

1
	.quad IO.out_string	
	.quad Complex.init	

1
	.quad Complex.reflect_Y	
	.quad Complex.equal	

1
	movq $28147, %rax	
	negl %eax	

1
.Main.main_6:	
	movq -24(%rbp), %rdx	

1
	call *%reg0	
	movq $48557, %rax	

1
	movq -112(%rbp), %rax	
	movq $0, %r11	

1
.Main.main_1:	
	movq $name_Object, %reg0	

1
	movq %reg0, 232(%rax)	
	movq $0, %reg0	

1
	testq $1, %reg0	
	je .Matrix.set_51	

1
.Main.main_6:	
	jmp .Main.main_1	

1
DicNode.name:	
	pushq %rbp	

1
	movq $0, %rax	
	movq -8(%rbp), %rdx	

1
	negl %r13d	
	movq $1, %reg1	

1
	movq %rbx, %r13	
	movq %r12, %reg3	

1
	testq $1, %r8	
	je .Main.main_97	

1
	call *%r12	
	movq 80(%reg1), %rax	

1
	testq $1, %rsi	
	je .Matrix.get_25	

1
	movq $12, %rax	
	movq %r13, %reg2	

1
.Main.new_3:	
	movq 24(%reg0), %rax	

1
.Main.main_119:	
	movq %reg0, %rax	

1
	movq %rax, %reg1	
	movq $0, %rsi	

1
	movq -160(%rbp), %rsi	
	cmpl %esi, %eax	

1
	movq $59495, %reg0	
	movq %reg0, %reg1	

1
	jmp .Matrix.get_52	
.Matrix.get_40:	

1
	movq -96(%rbp), %rax	
	movq -88(%rbp), %rdi	

1
	jne .Main.main_7	
	movq -32(%rbp), %rax	

1
	movq -160(%rbp), %reg1	
	subl %esi, %eax	

1
	movq %reg0, %rbx	
	jmp .Main.main_7	

1
.Matrix.set_30:	
	movq $3, %reg0	

1
	call *%rbx	
	movq $16210, %rdi	

1
	negl %eax	
	movq $15714, %r9	

1
	.globl CellularAutomaton.new	
	.type CellularAutomaton.new, @function	

1
	subl %eax, %reg1	
	movq $14379, %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 712(%reg1)	

1
	call out_error	
.Nil.rcons_1:	

1
	movq %reg0, %reg1	
	movq 16(%rbx), %reg3	

1
	setl %dil	
	jge .Main.main_30	

1
	movq 96(%rax), %rax	
	jmp .Matrix.get_31	

1
	movq 16(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq $3306, %reg0	
	movq $61695, %rax	

1
.Complex.equal_5:	
	jmp .Complex.equal_6	

1
	movq $55318, %reg0	
	subl %reg1, %reg2	

1
	movq %reg0, %rax	
	movq %r10, %reg0	

1
	testq $1, %rax	
	je .A2I.a2i_1	

1
	movq %reg0, %rsi	
	movq 8(%reg2), %reg3	

1
.Main.main_5:	
	movq $.string9, %reg0	

1
	.quad ListNode.next	
	.quad ListNode.insert	

1
	movq $17376, %rax	
	negl %reg1	

1
	movq $0, %reg0	
	movq %reg0, 736(%reg1)	

1
	movq %rdi, 616(%rax)	
	movq $3000, %rdi	

1
	movq 696(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	testq $1, %reg0	
	jne .Main.main_111	

1
	movq -72(%rbp), %rax	
	movq %reg2, %r8	

1
	movq 0(%reg0), %rbx	
	movq 120(%rbx), %rbx	

1
	je .Main.funccase_7	
	movq $1, %rax	

1
	subl %eax, %edi	
	movq $48672, %rax	

1
	movq $46167, %rdi	
	addl %edi, %reg2	

1
	movq $31786, %rdi	
	movq %rdi, %rsi	

1
.CellularAutomaton.cell_at_next_evolution_7:	
	movq $.string9, %reg0	

1
	movq $47218, %reg0	
	movq %reg0, %r8	

1
	movq 16(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq $0, %rax	
	movq %rbx, %rdi	

1
	movq -80(%rbp), %rax	
	movq $0, %reg2	

1
	movq -128(%rbp), %reg1	
	movq -24(%rbp), %reg3	

1
	.quad 42	
.string8_l:	

1
Complex.reflect_Y:	
	pushq %rbp	

1
	movq -160(%rbp), %reg1	
	imull %reg1d	

1
	cmpl $0, %r15d	
	setl %r15b	

1
	subl %esi, %reg1	
	movq %r12, %reg3	

1
	je .Main.main_145	
	movq $112, %rsi	

1
	movq $2469, %r8	
	movq $0, %r9	

1
	movq %reg0, 400(%rax)	
	movq $0, %reg0	

1
	movq %rdi, 504(%reg1)	
	movq $0, %rdi	

1
	call *%reg0	
	movq 696(%reg1), %r12	

1
.Main.main_7:	
	movq $.string13, %rax	

1
.Main.main_73:	
	movq 0(%rbx), %reg1	

1
	movq 16(%reg0), %r12	
	movq 8(%reg0), %rax	

1
	movq 528(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq $58210, %rsi	
	negl %esi	

1
	movq -56(%rbp), %rsi	
	movq %reg2, %rax	

1
	call *%r12	
	movq 336(%reg1), %reg2	

1
	setle %bl	
	jg .Main.main_31	

1
	movq $3000, %rdi	
	movq %rdi, 152(%rax)	

1
.Main.funccase_4:	
	movq %rdi, %reg1	

1
	movq $48608, %reg0	
	negl %reg1	

1
	movq 520(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	call *%rbx	
	movq $2730, %reg1	

1
	movq -128(%rbp), %rax	
	movq -48(%rbp), %reg3	

1
	movq $18422, %reg0	
	subl %ebx, %eax	

1
.List.insert_4:	
	movq 8(%reg0), %reg1	

1
	.quad .string0	
	.quad 25	

1
	subl %reg0, %edi	
	movq %reg2, -32(%rbp)	

1
	imull %esi	
	movq $23071, %reg1	

1
.Main.iota_1:	
	movq %r13, %rdi	

1
	movq %r13, %reg1	
	pushq %rax	

1
	movq 16(%rbx), %reg1	
	subl %edi, %eax	

1
	movq $29790, %rsi	
	subl %reg1, %reg2	

1
	imull %esi	
	movq $16280, %reg1	

1
.CellularAutomaton.cell_at_next_evolution_2:	
	movq 0(%reg0), %rax	

1
	movq %rax, %r12	
	jmp .Main.main_38	

1
.Main.main_7:	
	popq %r12	

1
	movq -160(%rbp), %rsi	
	subl %reg2, %reg3	

1
	movq %reg0, %reg1	
	movq $18444, %reg0	

1
	movq $.string10, %reg0	
	call CellularAutomaton.new	

1
.Main.main_24:	
	movq 0(%reg0), %reg1	

1
	movq %reg0, 16(%rax)	
	movq $1, %reg0	

1
	subl %reg0, %edi	
	movq %r14, %reg3	

1
	jg .Main.main_40	
	movq $9042, %reg0	

1
.Dictionary.insert_3:	
	popq %r14	

1
	call out_error	
.Main.main_146:	

1
	movq %reg0, %reg1	
	movq %rsi, %r8	

1
	movq %rdi, 48(%rbx)	
	cmpl %reg2, %eax	

1
	movq -24(%rbp), %rax	
	movq -16(%rbp), %rsi	

1
Main.funcifb:	
	pushq %rbp	

1
	movq %reg0, %r13	
	call String.new	

1
	movq $0, %reg0	
	movq %reg0, 344(%reg1)	

1
	call *%r12	
	popq %r15	

1
	movq %r12, %rdi	
	subl %eax, %edi	

1
	movq %reg0, -8(%rbp)	
	movq %rsi, -16(%rbp)	

1
	movq %reg0, %rcx	
	addl %ecx, %esi	

1
	movq $53587, %reg0	
	movq $6934, %rsi	

1
	idivl %esi	
	movq -120(%rbp), %reg2	

1
	movq %rax, %reg1	
	movq $63899, %rax	

1
	subl %eax, %edi	
	movq $17376, %rax	

1
	addl %eax, %edi	
	movq %r12, %reg3	

1
	cmpq $Object_vtable, 0(%reg0)	
	je .Main.main_6	

1
	.size Complex.equal, .-Complex.equal	
	.globl Complex.x_value	

1
	movq %reg0, %reg1	
	jmp .Main.main_76	

1
	addl %reg0, %reg1	
	movq $25036, %rdi	

1
.Main.main_5:	
	movq $.string8, %r15	

1
	movq -56(%rbp), %rax	
	subl %reg2, %eax	

1
	movq $17975, %rdi	
	movq %rdi, %reg1	

1
	movq %reg0, 664(%reg1)	
	movq $3000, %reg0	

1
	movq $0, %reg0	
	movq %reg0, 408(%rax)	

1
	movq $17155, %reg0	
	movq $30215, %rax	

1
	je .Main.new_2	
	cmpq $Object_vtable, 0(%reg0)	

1
	movq $21613, %reg0	
	movq 0(%rbx), %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 56(%reg1)	

1
.Main.func_2:	
	popq %reg0	

1
	movq $0, %rax	
	popq %r13	

1
	je .Main.main_6	
	movq $6, %reg0	

1
.Main.main_45:	
	movq -72(%rbp), %reg1	

1
.Main.main_29:	
	movq -120(%rbp), %rsi	

1
	movq %reg0, 16(%rbx)	
	call Razz.new	

1
	negl %r9d	
	movq $0, %reg1	

1
	movq $12757, %rsi	
	imull %esi	

1
.Main.main_13:	
	movq $7, %rax	

1
	movq $47879, %reg0	
	cmpl %reg1, %edi	

1
	movq $135, %reg0	
	movq $.string3_l, %reg1	

1
	movq %reg0, %rax	
	jmp .Main.main_4	

1
.Main.main_7:	
	movq 0(%reg0), %r13	

1
	movq %rdi, %rax	
	jmp .Main.main_32	

1
.Main.new_2:	
	movq $0, %reg0	

1
	call *%reg0	
	movq 632(%reg1), %r12	

1
	movq %reg0, %reg1	
	subq $184, %reg0	

1
	movq 8(%rbx), %r12	
	call Int.new	

1
	movq $90, %rdi	
	subl %reg1, %reg2	

1
	movq $2143, %rdi	
	addl %edi, %eax	

1
	movq $43856, %rdi	
	movq $0, %rsi	

1
	movq %rdi, 648(%rax)	
	movq $3000, %rdi	

1
.string7_l:	
	.string " is prime.\\n"	

1
	movq -136(%rbp), %reg1	
	movq -104(%rbp), %rax	

1
	imull %esi	
	movq $60575, %rsi	

1
	xorq $1, %reg0	
	movq %reg0, %reg1	

1
	movq $12591, %rdi	
	movq $38801, %rax	

1
	movq $5, %r14	
	movq 0(%reg1), %rax	

1
	je .Main.main_46	
	movq $200, %reg0	

1
	movq %rax, %reg1	
	jmp .Main.main_38	

1
	addl %r10d, %eax	
	movq $60127, %r10	

1
	movq %reg0, %rax	
	movq -184(%rbp), %reg0	

1
	movq %reg0, %r12	
	movq 0(%rbx), %r13	

1
	addl %esi, %eax	
	movq %r14, %reg3	

1
	addl %esi, %reg1	
	movq %rbx, %rsi	

1
	movq $2234, %reg0	
	movq 0(%reg1), %r12	

1
	call *%reg0	
	movq $.string21, %r12	

1
.Main.main_6:	
	movq 0(%r12), %reg1	

1
	movq $29011, %reg0	
	subl %eax, %ecx	

1
	movq $DicNode_vtable, 0(%rax)	
	movq %rax, %reg1	

1
	movq 0(%r13), %rax	
	movq 32(%rax), %rax	

1
.Main.new_5:	
	testq $1, %reg0	

1
	subl %reg0, %esi	
	movq $34320, %reg2	

1
	addl %reg0, %reg1	
	movq $4, %rdi	

1
	call *%rbx	
	movq $9856, %reg1	

1
	movq -144(%rbp), %rax	
	addl %esi, %eax	

1
.A2I.c2i_19:	
	movq 0(%rax), %reg1	

1
	idivl %r14d	
	movq $7741, %reg1	

1
	je .Main.main_34	
	movq $24092, %rax	

1
	call String.substr	
	movq $.string17, %rdi	

1
	call *%r12	
	movq $.string10, %reg1	

1
	movq %rax, %reg1	
	movq $.string8, %r13	

1
	movq -48(%rbp), %rax	
	movq $0, %r9	

1
	movq %r15, 8(%reg1)	
	jmp .Main.main_26	

1
	movq %reg0, 16(%rbx)	
	movq %rbx, %reg0	

1
	movq %reg0, -32(%rbp)	
	movq -16(%rbp), %reg3	

1
	movq -64(%rbp), %reg1	
	movq $0, %reg2	

1
.Main.main_1:	
	movq 0(%rax), %r15	

1
	movq 8(%reg0), %r15	
	movq 0(%reg0), %reg2	

1
	movq %rax, %rbx	
	movq $.string8, %r13	

1
	movq %reg0, %reg1	
	movq %rax, %rdi	

1
	movq -136(%rbp), %rax	
	movq -72(%rbp), %rsi	

1
CellularAutomaton.cell_right_neighbor:	
	pushq %reg0	

1
	movq $30, %rsi	
	movq $.string3_l, %rdi	

1
	sete %reg0	
	jne .Matrix.get_21	

1
	.string "Matrix"	
.string0:	

1
	call *%rbx	
	movq $9856, %rax	

1
	imull %r9d	
	movq $12, %r9	

1
	movq %rdi, 456(%rax)	
	movq $3000, %rdi	

1
	idivl %reg0d	
	movq -16(%rbp), %reg2	

1
	movq -32(%rbp), %rsi	
	negl %reg2	

1
	movq -32(%rbp), %reg1	
	movq -56(%rbp), %reg3	

1
	movq %r13, 8(%reg1)	
	movq 0(%reg2), %reg3	

1
	movq %rsi, %reg1	
	movq $1, %rbx	

1
CellularAutomaton_vtable:	
	.quad .string0	

1
	subl %ebx, %eax	
	movq $61208, %rbx	

1
.Main.main_17:	
	popq %r13	

1
	movq $13076, %reg0	
	imull %reg1	

1
	addl %reg0, %eax	
	movq %rax, 56(%rbx)	

1
	movq $604, %reg0	
	movq $21813, %rdi	

1
.Bar.new_18:	
	movq 32(%reg0), %rdi	

1
	je .Main.main_43	
	movq $34, %rsi	

1
	.quad List.cdr	
	.quad Nil.rev	

1
	call *%r12	
	movq $.string10, %rax	

1
	movq %reg0, %reg1	
	movq $60606, %reg0	

1
	jne .Main.main_21	
	movq 0(%reg0), %rax	

1
	movq %reg0, %reg1	
	movq %r10, %reg3	

1
	addl %eax, %ebx	
	movq $47041, %rax	

1
	negl %eax	
	movq $65097, %r12	

1
	movq %r12, 8(%rax)	
	movq %rax, 32(%rbx)	

1
	jne .Main.main_19	
	movq $1, %reg0	

1
	movq $1, %reg0	
	movq %r8, %rcx	

1
	movq %rax, %reg1	
	movq $13, %reg2	

1
	movq -32(%rbp), %rax	
	movq -64(%rbp), %rdi	

1
	movq -184(%rbp), %rcx	
	imull %ecx	

1
	.type Main.funcifi, @function	
Main.funcifi:	

1
	call *%r13	
	movq $.string9, %rax	

1
	movq %rsp, %rbp	
	movq 16(%rdi), %rax	

1
	movq $5, %rdi	
	cmpl %reg1, %eax	

1
	movq $48027, %r12	
	movq 0(%rbx), %reg2	

1
	movq -112(%rbp), %reg1	
	movq %r13, %rsi	

1
.Main.new_3:	
	movq $0, %reg0	

1
	movq %reg0, 496(%reg1)	
	movq $3000, %reg0	

1
	addl %reg0, %ecx	
	movq -88(%rbp), %reg3	

1
	cmpq $IO_vtable, 0(%rdi)	
	je .Main.main_15	

1
	cmpl $0, -24(%rbp)	
	movq -24(%rbp), %rdi	

1
	subq $184, %rsp	
	pushq %rbx	

1
	subl %eax, %edi	
	movq $20509, %reg2	

1
Main.myInt:	
	pushq %reg0	

1
.Main.main_28:	
	jmp .Main.main_29	

1
	movq -136(%rbp), %rcx	
	negl %reg2	

1
	movq 48(%r14), %r14	
	movq -16(%rbp), %reg2	

1
	movq 0(%r13), %reg1	
	movq 32(%reg1), %reg1	

1
	movq $.string7, %r14	
	movq $.string8, %rax	

1
	movq $3000, %reg0	
	movq %reg0, 80(%reg1)	

1
	movq $35043, %reg0	
	movq %reg0, %rcx	

1
.Main.funccase_3:	
	movq %rdi, %rax	

1
	movq $5, %rax	
	movq 0(%reg1), %r12	

1
	movq $3000, %rdi	
	movq %rdi, 104(%reg1)	

1
	cmpq $Bool_vtable, 0(%reg0)	
	je .Main.func_4	

1
	.globl Bazz.printh	
	.type Bazz.printh, @function	

1
	.quad Bar.getX	
	.quad Foo.setX	

1
	call *%reg0	
	movq 616(%rbx), %reg0	

1
	movq $34, %reg0	
	movq 0(%rbx), %reg2	

1
	call *%r15	
	movq -120(%rbp), %rax	

1
	movq $47308, %reg0	
	negl %reg1	

1
	movq $76, %reg0	
	movq $.string3_l, %reg1	

1
	sete %cl	
	jne .Matrix.get_28	

1
	movq $.string6, %r13	
	movq %r13, %rdi	

1
.Main.main_24:	
	movq %reg0, %rax	

1
	call *%r12	
	jmp .Main.main_20	

1
	call *%reg0	
	movq 192(%reg1), %reg2	

1
	movq %rdi, %reg1	
	jmp .Main.main_6	

1
	movq 32(%rbx), %r12	
	pushq %rax	

1
.A2I.c2i_1:	
	movq $.string8, %reg0	

1
	movq $0, %rbx	
	movq $0, %rax	

1
.Main.main_7:	
	movq 8(%rax), %r12	

1
	movq %reg0, %rsi	
	movq $1317, %reg0	

1
	movq $1170, %rdi	
	movq $33472, %rax	

1
	jge .Main.main_3	
	movq %reg0, %reg1	

1
	movq %r14, %rcx	
	subl %ecx, %eax	

1
Bar.getI:	
	pushq %rbp	

1
	call out_error	
.Main.new_6:	

1
	call Matrix.new	
	movq %reg0, %r12	

1
	movq $3000, %rdi	
	movq %rdi, 16(%rax)	

1
	movq 8(%rdi), %reg1	
	movq 0(%reg2), %r12	

1
	movq %reg0, %r13	
.Main.main_61:	

1
	testq $1, %r8	
	je .Main.main_72	

1
	movq %rcx, %reg1	
	negl %eax	

1
	movq %r13, 8(%rax)	
	movq 0(%rbx), %reg3	

1
	jge .Main.main_80	
	movq %r13, %rax	

1
	idivl %r10d	
	movq $47963, %reg1	

1
.Main.main_132:	
	movq -104(%rbp), %reg1	

1
	movq $17376, %reg0	
	negl %eax	

1
	movq -152(%rbp), %reg1	
	addl %ecx, %eax	

1
	call *%r12	
	movq 672(%rbx), %reg2	

1
	movq $0, %rdi	
	cmpl %edi, %eax	

1
	movq $.string8, %reg0	
	movq %reg1, %rdi	

1
	testq $1, %rsi	
	je .Main.main_45	

1
	movq $.string10, %reg0	
	movq 8(%rax), %r15	

1
	movq $12855, %reg0	
	addl %reg1, %reg2	

1
	movq %rdi, %reg1	
	movq %reg1, -144(%rbp)	

1
	movq $41765, %rax	
	subl %reg1, %reg2	

1
	.globl DicNode.init	
	.type DicNode.init, @function	

1
	movq %rdi, 624(%reg1)	
	movq $3000, %rdi	

1
	movq $0, %reg0	
	movq %reg0, 584(%reg1)	

1
	subl %ecx, %reg1	
	movq $12, %reg2	

1
	movq -176(%rbp), %rax	
	subl %esi, %reg3	

1
	movq -64(%rbp), %rax	
	addl %ecx, %reg3	

1
	movq %reg0, %rax	
	movq %rax, -144(%rbp)	

1
	movq $1, %rax	
	movq -16(%rbp), %reg2	

1
	movq %reg0, 448(%reg1)	
	movq $0, %reg0	

1
	.type Complex.init, @function	
Complex.init:	

1
	movq $.string15, %reg0	
	movq %reg1, %r12	

1
	movq -40(%rbp), %rax	
	cmpl %eax, %reg3	

1
.Main.main_6:	
	movq 0(%r13), %reg1	

1
	subl %ebx, %reg1	
	movq $61208, %rbx	

1
	movq %rdi, %reg1	
	movq -136(%rbp), %reg1	

1
	movq -88(%rbp), %reg1	
	subl %esi, %eax	

1
	movq -144(%rbp), %rsi	
	movq -80(%rbp), %reg3	

1
.Main.main_128:	
	cdq	

1
	movq $0, %rdi	
	movq %rdi, 440(%rax)	

1
	xorq $1, %reg0	
	jmp .Main.main_130	

1
	.string "false"	
.string7:	

1
	movq $51549, %reg0	
	movq -8(%rbp), %reg2	

1
.Main.main_12:	
	movq 0(%rbx), %reg1	

1
	movq $29773, %reg0	
	movq 0(%rbx), %reg2	

1
	.globl Matrix.set	
	.type Matrix.set, @function	

1
	movq 8(%reg0), %rsi	
	call IO.out_string	

1
	jne .Matrix.get_15	
	movq 48(%rax), %rax	

1
	movq %rsi, %reg1	
	movq 8(%reg2), %rbx	

1
	movq 376(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq %r11, %reg1	
	imull %reg1d	

1
	.quad Main.main	
Matrix_vtable:	

1
	jmp .Matrix.set_9	
.Matrix.set_8:	

1
.Main.main_8:	
	call List.new	

1
	movq $1, %rdi	
	movq $0, %reg1	

1
	subl %reg0, %r8d	
	movq -96(%rbp), %reg3	

1
	movq $0, %rdi	
	movq %rdi, 448(%reg1)	

1
	movq $.string7, %r14	
	movq $0, %reg1	

1
	movq -144(%rbp), %rax	
	cmpl %reg2, %reg3	

1
	movq -136(%rbp), %reg1	
	addl %eax, %edi	

1
	movq %reg0, %reg1	
	movq $100, %reg2	

1
	movq -96(%rbp), %rax	
	addl %edi, %reg3	

1
	movq $61456, %rdi	
	cmpl %edi, %eax	

1
	jmp .Matrix.set_3	
.Matrix.set_2:	

1
	addl %eax, %ecx	
	movq -88(%rbp), %reg3	

1
	jg .Main.main_35	
	movq -160(%rbp), %rax	

1
	call *%r12	
.Main.funcifi_2:	

1
	je .Main.main_10	
	movq $153, %reg0	

1
	movq $9886, %reg0	
	imull %reg1	

1
	negl %reg0	
	movq -48(%rbp), %rax	

1
	movq -128(%rbp), %reg1	
	movq -88(%rbp), %reg3	

1
	addl %edi, %eax	
	movq -136(%rbp), %rdi	

1
	jne .Matrix.get_19	
	movq 64(%rax), %rax	

1
	movq %reg0, 264(%reg1)	
	movq $3000, %reg0	

1
	movq %reg0, 8(%rbx)	
	movq $3, %reg0	

1
	movq 0(%rdx), %rax	
	movq 40(%rax), %rax	

1
.Main.main_51:	
	movq %reg0, %rsi	

1
	movq $59, %reg0	
	movq $.string5_l, %rdi	

1
	movq $10, %rax	
	cmpl $0, %reg1d	

1
	jmp .Matrix.set_7	
.Matrix.set_6:	

1
	.quad Razz.new	
	.quad Object.abort	

1
	movq $25, %reg0	
	movq 0(%rbx), %r12	

1
	addl %esi, %edi	
	movq %reg2, 16(%rax)	

1
	movq $55348, %reg0	
	movq %reg0, %reg1	

1
	.size Main.funcifb, .-Main.funcifb	
	.globl Main.funcwhilei	

1
	cmpq $Bar_vtable, 0(%rbx)	
	je .Razz.new_10	

1
	movq %reg0, %reg1	
	subq $128, %reg0	

1
	negl %reg0	
	movq %rax, 16(%rdi)	

1
.Main.main_49:	
.Main.main_39:	

1
	movq -144(%rbp), %rsi	
	movq %rdi, %rax	

1
	subl %eax, %reg1	
	movq $8997, %rax	

1
	movq $60606, %rax	
	cmpl %eax, %edi	

1
	call *%r12	
	movq 360(%reg1), %r12	

1
	subl %eax, %edi	
	movq $8997, %rax	

1
	call *%r13	
	movq %r12, %reg2	

1
	call Bar.new	
	movq %reg0, %r12	

1
	movq -136(%rbp), %rax	
	movq %rsi, %reg3	

1
	movq %rdi, %rax	
	jmp .Main.main_30	

1
	setl %dil	
	jge .Cons.insert_1	

1
Main.fib:	
	pushq %reg0	

1
	jne .Matrix.set_32	
	movq %reg0, 104(%reg1)	

1
	subl %reg0, %edi	
	movq $25241, %reg2	

1
	movq $48391, %reg0	
	negl %reg1	

1
	movq -152(%rbp), %reg1	
	movq %rsi, %rcx	

1
	addl %reg0, %reg1d	
	movq $60159, %rax	

1
	jmp .CellularAutomaton.cell_at_next_evolution_8	
.CellularAutomaton.cell_at_next_evolution_7:	

1
.string9_l:	
	.string "\\\\"	

1
	subl %eax, %edi	
	movq -80(%rbp), %rax	

1
	movq %rdi, %rax	
	jmp .Matrix.set_3	

1
	movq %rax, 8(%reg1)	
	movq $2, %reg2	

1
	setl %r12b	
	jge .Main.main_5	

1
	movq 8(%reg0), %reg1	
	movq 16(%reg0), %rax	

1
	call Bar.new	
	jmp .Razz.new_17	

1
	call Object.type_name	
	movq %rax, %r12	

1
.Main.main_20:	
	movq 0(%reg0), %rax	

1
	movq %r13, 8(%reg1)	
	movq 0(%rbx), %reg1	

1
	addl %edi, %reg1	
	movq %rax, 24(%rbx)	

1
	movq %reg0, 712(%reg1)	
	movq $3000, %reg0	

1
	negl -24(%rbp)	
	movq $38220, -32(%rbp)	

1
	movq 0(%rdx), %reg1	
	movq 40(%reg1), %reg1	

1
	movq %rax, %rsi	
	cmpl %esi, %edi	

1
	subl %reg0, %esi	
	movq -24(%rbp), %reg3	

1
	movq $43856, %reg0	
	movq $0, %reg1	

1
	movq 400(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	subl %edi, %eax	
	movq $4, %rdi	

1
	movq %reg0, %reg1	
	jmp .Main.main_48	

1
Main.funccase:	
	pushq %rbp	

1
	call *%rax	
	movq 376(%rbx), %rax	

1
	je .Main.out_whatever_3	
	cmpq $Object_vtable, 0(%rdi)	

1
	jmp .Main.main_145	
.Main.main_144:	

1
	jne .Main.main_152	
	movq %reg0, %rax	

1
	movq $47879, %rax	
	cmpl %reg1, %edi	

1
	sete %reg0	
	jne .Matrix.get_58	

1
	movq $0, %reg0	
	movq %reg0, 488(%rax)	

1
	negl %eax	
	movq $35, %reg1	

1
	movq -160(%rbp), %reg1	
	movq %r13, %rdi	

1
	movq $89, %rsi	
	movq $.string3_l, %reg1	

1
	addl %ecx, %eax	
	movq -64(%rbp), %reg3	

1
	movq $6195, %reg0	
	imull %reg1	

1
.Main.main_144:	
	movq -80(%rbp), %rax	

1
	movq $3000, %reg0	
	movq %reg0, 704(%reg1)	

1
	movq 656(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	je .Main.main_17	
	movq $23, %reg0	

1
	movq -176(%rbp), %reg1	
	movq %rdi, %reg3	

1
	movq %r14, %reg1	
	subl %ecx, %reg3	

1
	movq $63252, %rax	
	subl %eax, %reg2d	

1
	imull %esi	
	movq $56453, %rsi	

1
	movq $3, %reg0	
	movq %reg0, -24(%rbp)	

1
.Main.main_87:	
.Main.main_85:	

1
.Matrix.get_43:	
	movq $3, %reg0	

1
	movq $52820, %reg0	
	movq $38686, %r10	

1
	movq -16(%rbp), %rsi	
	movq -96(%rbp), %rax	

1
	je .Main.main_66	
	movq $218, %rsi	

1
	movq %rax, %reg1	
	movq $11282, %rax	

1
	call Bool.new	
	movq %r14, 8(%reg1)	

1
	sete %r8b	
	jne .Matrix.set_41	

1
	movq $58688, %rbx	
	movq %rbx, %r12	

1
	movq $31515, %reg0	
	negl %reg1	

1
	movq %rdi, 200(%reg1)	
	movq %rdi, %reg1	

1
	movq 496(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	call *%rax	
	movq $18391, %reg1	

1
	movq $5, %reg0	
	movq $.string4_l, %reg1	

1
	subl %reg0, %reg1	
	movq %reg2, -16(%rbp)	

1
	movq $.string7, %rax	
	movq 0(%rbx), %r13	

1
	movq $18422, %rbx	
	subl %reg1, %eax	

1
.A2I.i2c_2:	
	popq %rbx	

1
	.quad .string4_l	
	.quad 4	

1
	je .Cons.insert_2	
	movq $80, %reg0	

1
	call *%r12	
.DicNode.get_5:	

1
	call *%reg0	
	movq 664(%rbx), %reg0	

1
.Main.main_41:	
	movq %reg0, %rsi	

1
	.quad List.rcons	
	.quad List.print_list	

1
	movq $0, %rdi	
	movq %rdi, 488(%reg1)	

1
	movq %reg0, 8(%rax)	
	movq $3000, %reg0	

1
	subl %edi, %reg1	
	movq $0, %rdi	

1
	movq %rdi, %rax	
	jmp .Matrix.set_44	

1
	pushq %rbx	
	movq $40, %reg1	

1
	idivl %reg0	
	movq $12618, %rdi	

1
	negl %edi	
	movq -96(%rbp), %reg2	

1
	movq %reg0, %rdi	
	movq 24(%reg2), %reg0	

1
	imull %r10d	
	addl %reg1, %reg2d	

1
	movq -16(%rbp), %reg1	
	movq %reg1, %reg2	

1
	movq %rax, 24(%reg1)	
.Main.new_3:	

1
	testq $1, %rcx	
	je .Main.main_56	

1
	movq $0, %reg0	
	movq %reg0, 392(%reg1)	

1
	movq 8(%rbx), %reg1	
	movq %reg2, %r12	

1
	movq $5, %reg0	
	movq %rax, %rdi	

1
	movq 544(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq $6, %reg0	
	movq $.string6, %reg1	

1
	idivl %reg0	
	movq -128(%rbp), %rcx	

1
	movq $15234, %r12	
	movq 0(%rbx), %rax	

1
.Main.main_18:	
	movq %reg0, %rax	

1
	jg .Main.main_131	
	movq %reg0, %rax	

1
	call *%r12	
	movq 448(%reg1), %rax	

1
	movq -96(%rbp), %r8	
	subl %r8d, %eax	

1
	movq %reg0, 8(%rbx)	
	movq %reg0, 16(%rbx)	

1
	movq %r14, 8(%reg1)	
	movq %reg1, %rax	

1
	movq $22, %rsi	
	movq $.string2_l, %rdi	

1
.string7_l:	
	.string "z"	

1
	movq $.string15, %reg0	
	movq 0(%reg1), %reg2	

1
	je .Main.main_15	
	cmpq $Object_vtable, 0(%reg0)	

1
	.size CellularAutomaton.cell_left_neighbor, .-CellularAutomaton.cell_left_neighbor	
	.globl CellularAutomaton.cell_right_neighbor	

1
	movq %r13, %rax	
	subl %ecx, %eax	

1
	movq %rax, %reg1	
	movq $0, %rbx	

1
	movq 136(%rax), %rax	
	movq %r12, %reg2	

1
	movq 232(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	setle %sil	
	jg .Main.main_77	

1
	movq $20384, %reg0	
	imull %reg1	

1
	movq 192(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	call *%rax	
	movq 464(%reg1), %rax	

1
	movq -40(%rbp), %rax	
	movq %r13, %r8	

1
	call *%rax	
	movq $1073741824, %rax	

1
	call *%rax	
	movq 216(%rbx), %reg2	

1
	call String.concat	
	movq %r12, %reg1	

1
	movq -96(%rbp), %rsi	
	movq -168(%rbp), %rax	

1
	addl %reg0, %r10d	
	movq %r10, %reg2	

1
	movq $12, %rsi	
	movq -32(%rbp), %reg2	

1
	movq -16(%rbp), %reg1	
	movq $0, %r8	

1
	movq %reg0, 200(%rax)	
	movq $0, %reg0	

1
	je .Main.main_140	
	movq -152(%rbp), %rax	

1
	movq 352(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	imull %edi	
	movq -80(%rbp), %rdi	

1
	movq -112(%rbp), %rax	
	movq -104(%rbp), %rdi	

1
	movq -168(%rbp), %rdx	
	movq %rdx, %reg2	

1
	movq %rdi, 560(%reg1)	
	movq $0, %rdi	

1
.Main.main_90:	
	cdq	

1
.Main.main_31:	
	movq -40(%rbp), %rsi	

1
	movq %rdi, %rax	
	jmp .Main.main_74	

1
	movq 32(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	movq %rdi, %rbx	
	movq $20, %reg2	

1
	movq $4, %r12	
	movq 0(%rax), %reg2	

1
	movq %rax, %rbx	
	movq %r12, %reg3	

1
.Main.main_10:	
	movq %r12, %rax	

1
	movq 64(%rax), %rax	
	jmp .Matrix.get_20	

1
.Matrix.mul_5:	
	movq 0(%reg0), %reg1	

1
	movq 648(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	testq $1, %reg0	
	je .Bar.new_14	

1
.CellularAutomaton.cell_at_next_evolution_6:	
	movq %r13, %reg1	

1
	movq -144(%rbp), %rax	
	cmpl %eax, %esi	

1
	movq -16(%rbp), %rdi	
	movq -120(%rbp), %rax	

1
	movq %rax, %reg1	
	movq $55049, %rax	

1
	call Bar.new	
	movq %rax, -32(%rbp)	

1
	movq %reg0, %reg1	
.Main.main_12:	

1
	movq $1, %r12	
	movq %r12, %rbx	

1
	call out_error	
.Main.func_2:	

1
	movq %r13, %rsi	
	negl %esi	

1
	movq $0, %rdi	
	movq %rdi, 616(%rax)	

1
	movq 136(%rax), %rax	
	movq 8(%reg1), %reg2	

1
	subl %reg0, %eax	
	movq %r12, %reg3	

1
	movq 736(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	testq $1, %r9	
	je .Main.main_90	

1
	movq 16(%rax), %rdi	
	cmpl %esi, %edi	

1
	movq $.string8, %r13	
	movq 0(%reg1), %reg2	

1
	movq $4, %r13	
	movq $1, %reg1	

1
	movq %rbx, %rax	
	addl %reg2, %edi	

1
	call *%r12	
	movq 248(%reg1), %rax	

1
	movq $2143, %reg0	
	addl %edi, %eax	

1
	.quad Cons.rev	
	.quad Cons.sort	

1
	subl %esi, %edi	
	movq %rdi, 16(%reg3)	

1
	imull %reg0	
	movq -176(%rbp), %rsi	

1
	je .Main.main_99	
	movq $64, %rsi	

1
.Main.main_23:	
	jmp .Main.main_28	

1
	movq %reg0, %rcx	
	movq -72(%rbp), %reg0	

1
.Main.new_12:	
.Main.new_13:	

1
	movq $46404, %reg0	
	movq 0(%rbx), %reg2	

1
.Main.main_5:	
	movq 0(%rax), %r15	

1
	movq %reg0, 256(%rax)	
	movq $3000, %reg0	

1
	jmp .Matrix.get_24	
.Matrix.get_23:	

1
	call *%r15	
	movq -40(%rbp), %reg2	

1
	je .Main.main_6	
	cmpq $String_vtable, 0(%rax)	

1
	movq %rax, 8(%rbx)	
	movq $2, %reg2	

1
	call out_error	
.Main.main_164:	

1
	movq %r9, %reg1	
	imull %reg1d	

1
	je .Main.main_9	
	movq $7, %reg0	

1
	movq %r14, %reg1	
	sete %reg2	

1
	movq -48(%rbp), %rsi	
	movq -56(%rbp), %reg3	

1
	movq 488(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq $.string6, %reg0	
	movq %reg0, %rbx	

1
	movq $.string9, %rbx	
	movq 16(%reg1), %r12	

1
.Main.main_20:	
	movq $2, %reg0	

1
	movq %reg0, %rdi	
	subl %reg2, %esi	

1
	movq %rdi, %rax	
	jmp .Main.main_54	

1
	movq %reg0, %rax	
	movq -24(%rbp), %r8	

1
	movq $0, %reg0	
	movq %rax, %rsi	

1
	movq %reg0, 64(%reg1)	
	movq 32(%reg1), %rdi	

1
	movq %rax, %reg1	
	movq $604, %reg2	

1
	movq %reg0, %rax	
	addl %eax, %r9d	

1
	movq $0, %reg0	
	movq %reg0, 704(%reg1)	

1
	jmp .Matrix.get_9	
.Matrix.get_8:	

1
	je .Main.main_131	
	movq $76, %reg0	

1
	movq $empty_string, %reg0	
	jmp .A2I.i2a_aux_2	

1
.Main.main_27:	
	movq $.string8, %rbx	

1
	movq %rax, %r8	
	movq -40(%rbp), %rax	

1
	movq -40(%rbp), %reg1	
	cmpl %eax, %reg3	

1
	movq 488(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq 32(%reg0), %reg0	
	movq %rbx, %rdi	

1
	call *%rax	
	jmp .Main.main_14	

1
	movq 8(%reg0), %rax	
	movq 0(%rbx), %r13	

1
	movq -176(%rbp), %reg1	
	movq %reg2, %rdi	

1
	movq -32(%rbp), %rdi	
	movq %r12, %reg3	

1
	movq $46404, %r12	
	movq 0(%reg1), %reg2	

1
	movq %rdi, 536(%reg1)	
	movq $3000, %rdi	

1
	movq %reg0, %rax	
	jmp .Matrix.set_18	

1
	movq %reg0, %reg1	
.Main.main_168:	

1
	addl %esi, %reg1	
	movq -96(%rbp), %reg3	

1
	call out_error	
.Main.out_whatever_6:	

1
	movq $32151, %reg0	
	movq 0(%rbx), %r12	

1
	movq %rdi, %rax	
	jmp .Main.main_89	

1
	.string "string"	
.string15:	

1
	movq $.string10, %rax	
	movq %rax, %rbx	

1
	movq $132, %reg0	
	movq $.string3_l, %rdi	

1
	call *%rax	
	movq 648(%rbx), %reg2	

1
	movq %rax, %r14	
	movq 0(%r14), %rax	

1
	movq %rsi, %rdi	
	movq %rdi, 72(%reg2)	

1
	call *%reg0	
	jmp .Main.main_28	

1
	movq 728(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq 112(%rbx), %rbx	
	movq %rax, %rdi	

1
	call *%reg0	
	movq %rax, 24(%rbx)	

1
	movq $15234, %reg0	
	movq 0(%rbx), %rax	

1
.Main.main_65:	
.Main.main_63:	

1
	movq $46167, %rdi	
	addl %reg1, %reg2	

1
	testq $1, %rcx	
	je .Main.main_8	

1
	movq $38600, %r12	
	movq $0, %reg1	

1
	movq %rax, %r10	
	movq $15798, %rax	

1
	movq %rdi, %rax	
	movq $empty_string, %rdi	

1
	testq $1, %rax	
	jne .Main.main_1	

1
.Main.main_5:	
	movq 8(%rax), %r12	

1
	movq %rdx, %reg1	
	movq %rcx, %r13	

1
	movq 624(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	jg .Main.main_49	
	movq %reg0, %rax	

1
	call IO.new	
	movq %reg0, %reg1	

1
	jne .CellularAutomaton.cell_left_neighbor_1	
	movq 0(%reg0), %reg1	

1
	movq $.string9, %rdi	
	movq %reg1, %r12	

1
	je .Main.main_6	
	movq $5, %reg0	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_63	

1
	.globl CellularAutomaton.cell	
	.type CellularAutomaton.cell, @function	

1
.string0_l:	
	.string "CellularAutomaton"	

1
	testq $1, %r10	
	je .Main.main_128	

1
	call Bazz.new	
	movq %reg0, 8(%reg1)	

1
	movq %reg0, -16(%rbp)	
.Main.main_1:	

1
	je .Main.main_124	
	movq $70, %reg0	

1
	movq %rsi, %r12	
	movq %rdx, %rax	

1
	je .Foo.new_10	
	cmpq $Razz_vtable, 0(%rbx)	

1
	jge .Main.main_2	
	movq %reg0, %reg1	

1
	movq $8340, %reg0	
	negl %edi	

1
	call *%rax	
	movq 656(%reg1), %r12	

1
	movq -120(%rbp), %rax	
	movq -168(%rbp), %reg3	

1
.Main.main_3:	
	movq 80(%reg0), %reg1	

1
	movq %rax, 72(%reg1)	
	movq %reg1, %rax	

1
.Main.main_32:	
	movq 0(%r13), %reg1	

1
	movq %rdi, %reg1	
	movq $10, %r12	

1
	je .DicNode.insert_6	
	movq $59, %reg0	

1
	jne .A2I.i2c_9	
	movq $.string11, %reg0	

1
	movq 72(%rax), %rax	
	movq 16(%rbx), %reg2	

1
	subl %eax, %reg1	
	movq $48457, %rax	

1
.Main.main_37:	
	movq 0(%reg0), %reg1	

1
	movq %reg0, 24(%rbx)	
	movq $1, %reg0	

1
	movq 616(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq -128(%rbp), %reg1	
	subl %reg2, %edi	

1
	je .Main.main_107	
	movq $67, %reg0	

1
	je .Main.main_7	
	movq $7, %rsi	

1
	movq %r12, %reg1	
	addl %ebx, %reg3	

1
	negl %eax	
	movq -24(%rbp), %rsi	

1
	movq %rdi, %reg1	
.Main.main_183:	

1
	movq $1, %r12	
	movq $.string6, %r13	

1
	ret	
	.size Cons.print_list, .-Cons.print_list	

1
.Main.main_8:	
	movq 0(%reg0), %r15	

1
	cmpq $Foo_vtable, 0(%rbx)	
	je .Razz.new_9	

1
	movq -112(%rbp), %rax	
	subl %reg2, %edi	

1
	movq 88(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq $58, %reg0	
	movq $.string5_l, %reg1	

1
	.string " "	
.string9:	

1
	movq $8800, %r12	
	movq 0(%reg1), %rax	

1
	movq $0, %rdi	
	movq %rdi, 512(%reg1)	

1
	movq %rdi, 512(%rax)	
	movq $3000, %rdi	

1
	call *%reg0	
	movq $5, %reg1	

1
.Main.main_51:	
	movq -168(%rbp), %reg1	

1
	movq %r12, 8(%reg1)	
	movq 0(%rbx), %r14	

1
	movq $62420, %rax	
	movq $31735, %rsi	

1
.A2I.c2i_11:	
	movq $.string13, %reg0	

1
	subl %eax, %edi	
	movq -64(%rbp), %rax	

1
	movq %reg0, %rsi	
	movq -160(%rbp), %reg0	

1
	movq $112, %reg0	
	movq $.string3_l, %reg1	

1
	movq 464(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq -16(%rbp), %rax	
	movq %reg2, %r9	

1
	subl %ecx, %reg1	
	movq -88(%rbp), %reg3	

1
	movq %r12, 8(%rax)	
	movq 8(%rbx), %r12	

1
.Main.main_146:	
	movq -168(%rbp), %reg1	

1
	movq %rdi, 600(%reg1)	
	movq $0, %rdi	

1
	movq $30605, %reg0	
	movq $35043, %reg1	

1
	negl %edi	
	movq %reg1, 16(%reg2)	

1
	movq %rsi, -16(%rbp)	
	movq %reg2, %rbx	

1
	movq %rbx, %rax	
	addl %reg2, %reg3	

1
	movq -112(%rbp), %rsi	
	cmpl %reg2, %eax	

1
	movq %rdi, 32(%reg1)	
	movq $3000, %rdi	

1
	movq 24(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
.A2I.c2i_4:	
.A2I.c2i_2:	

1
	movq $78, %reg0	
	movq $.string3_l, %rdi	

1
	movq 24(%rbx), %reg1	
	addl %edi, %eax	

1
Bar.setX:	
	pushq %rbp	

1
	setl %reg0l	
	jge .Cons.insert_1	

1
	movq %reg0, %reg1	
	movq %reg1, -160(%rbp)	

1
	call *%reg0	
	movq 200(%rbx), %reg2	

1
	.string "ya"	
.string11:	

1
	movq -40(%rbp), %reg1	
	movq -24(%rbp), %rax	

1
	movq -72(%rbp), %reg1	
	movq %rcx, %r8	

1
	subl %eax, %reg1	
	movq $34320, %rcx	

1
	movq -32(%rbp), %reg1	
	negl %ecx	

1
	subl %reg0, %reg1	
	movq %r13, %reg3	

1
	je .Main.main_23	
	movq $10, %reg0	

1
	sete %reg0b	
	jne .Matrix.set_28	

1
	movq $14, %reg0	
	movq $.string5_l, %reg1	

1
	movq -64(%rbp), %reg1	
	cmpl %edi, %reg3	

1
	addl %reg0, %eax	
	movq %reg2, -64(%rbp)	

1
	movq %r13, 8(%reg1)	
	movq 0(%rbx), %r14	

1
.Matrix.get_64:	
	cdq	

1
	movq %rdi, %reg1	
.Main.main_167:	

1
	imull %reg0	
	movq %rax, -56(%rbp)	

1
	movq -40(%rbp), %rax	
	subl %edi, %reg3	

1
	testq $1, %r8	
	je .Main.main_167	

1
	movq 704(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	je .Bar.new_16	
	cmpq $Razz_vtable, 0(%reg0)	

1
	jge .Main.main_72	
	movq -32(%rbp), %rax	

1
	subl %reg0, %edi	
	movq $48672, %reg2	

1
	je .Main.main_32	
	movq $178, %reg0	

1
.Main.main_17:	
	movq $10174, %reg0	

1
	call *%r12	
	movq 336(%reg1), %rax	

1
	movq %rax, 16(%rbx)	
	movq $.string7, %rax	

1
	movq %reg0, %rsi	
	movq -40(%rbp), %rax	

1
.Main.main_192:	
	cdq	

1
	movq %reg0, 16(%reg1)	
	movq $1000, %reg0	

1
	negl %eax	
	movq $65097, %reg1	

1
	je .Main.main_21	
	movq $.string7, %reg0	

1
	idivl %reg0	
	movq $3175, %rsi	

1
	movq %rdi, 376(%reg1)	
	movq $0, %rdi	

1
	subl %reg0, %reg1d	
	movq %rcx, %reg3	

1
	movq $62331, %reg0	
	subl %reg1, %edi	

1
	movq %reg0, %reg1	
	jmp .Main.main_69	

1
.Dictionary.insert_4:	
	movq 8(%reg0), %rdx	

1
	.type DicNode.setNext, @function	
DicNode.setNext:	

1
	testq $1, %rcx	
	je .Main.main_174	

1
	movq $25351, %reg0	
	subl %reg1, %reg2	

1
	call *%rbx	
	movq $28968, %reg1	

1
	movq -16(%rbp), %rax	
	movq $0, %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 232(%rax)	

1
	imull %esi	
	movq $63080, %reg1	

1
	.quad Object.type_name	
	.quad Cons.isNil	

1
	subq $136, %reg0	
	pushq %reg1	

1
	addl %reg0, %reg1d	
	movq $60159, %reg2	

1
	movq $15735, %reg0	
	movq $932, %reg1	

1
	movq 600(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq %rax, 8(%reg1)	
	movq $1, %rdi	

1
	subl %reg0, %reg1	
	movq -88(%rbp), %rdi	

1
	jge .Main.main_2	
	movq %reg0, %rdi	

1
.Main.main_30:	
	movq 0(%reg0), %reg1	

1
	movq %r13, %rax	
	movq %reg2, %rsi	

1
	movq -120(%rbp), %rsi	
	cmpl %reg2, %reg3	

1
	movq $29011, %rax	
	subl %eax, %ecx	

1
	movq 384(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq $1, %r13	
	movq $.string6, %rax	

1
	call Object.abort	
	jmp .Main.new_13	

1
	movq 504(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	call *%reg0	
	movq $324, %reg0	

1
	movq $0, %rdi	
	movq %rdi, 264(%reg1)	

1
	movq -144(%rbp), %reg1	
	cmpl %eax, %reg3	

1
	sete %r8b	
	jne .Matrix.set_60	

1
.DicNode.get_4:	
	movq 0(%rax), %reg1	

1
	movq 608(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	movq $132, %reg0	
	movq $.string3_l, %reg1	

1
	call *%reg0	
	movq 728(%rbx), %reg0	

1
	movq $2, %reg0	
	movq %r13, %reg2	

1
	movq $13257, %reg0	
	imull %esi	

1
	movq %rdi, %rbx	
	movq $name_Bool, %reg2	

1
	addl %reg0, %reg1	
	movq -152(%rbp), %rax	

1
	.type Cons.print_list, @function	
Cons.print_list:	

1
	movq $1, %rax	
	movq $.string6, %r12	

1
	movq %rdi, 736(%rax)	
	leave	

1
	movq $0, %reg0	
	movq %reg0, 416(%rax)	

1
	movq -16(%rbp), %reg1	
	movq 0(%reg1), %r14	

1
	jg .Main.new_12	
	movq $.string8, %reg0	

1
	movq $DicNode_vtable, 0(%reg0)	
	movq %reg0, %reg1	

1
	cmpq $Bazz_vtable, 0(%rbx)	
	je .Foo.new_2	

1
	movq -80(%rbp), %reg1	
	cmpl %reg2, %esi	

1
	movq -72(%rbp), %reg1	
	cmpl %esi, %eax	

1
	movq $46167, %reg0	
	addl %edi, %reg2	

1
	movq 608(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq %rdi, %rax	
	jmp .Main.main_4	

1
	movq $58652, %rdi	
	movq $0, %reg1	

1
.Main.main_54:	
	movq 0(%reg0), %reg1	

1
.Main.main_9:	
	movq $0, %reg0	

1
	movq %reg0, %reg1	
	jmp .Main.main_2	

1
	movq %rax, 8(%reg1)	
	jmp .List.insert_3	

1
	movq $7429, %reg0	
	negl %eax	

1
	je .Main.main_34	
	movq $179, %rsi	

1
	movq $5, %rcx	
	cmpl %reg1, %r8d	

1
	imull %reg0	
	movq -128(%rbp), %reg2	

1
Dictionary.getHead:	
	pushq %reg0	

1
.Main.main_10:	
	movq $1, %reg0	

1
	je .Foo.new_7	
	movq $4, %reg0	

1
	call out_error	
.Main.main_96:	

1
	je .Main.out_whatever_1	
	movq $10, %reg0	

1
	ret	
	.size A2I.new, .-A2I.new	

1
	je .Main.main_1	
	movq $.string6, %reg0	

1
	movq %reg0, 624(%rax)	
	movq $0, %reg0	

1
	.size Complex.reflect_X, .-Complex.reflect_X	
	.globl Complex.reflect_Y	

1
	movq $63133, %rax	
	movq $31786, %rdi	

1
.Main.main_3:	
	jmp .Main.main_4	

1
	jne .Main.main_6	
	movq 0(%reg0), %rax	

1
	movq $42968, %reg0	
	imull %edi	

1
	call String.concat	
.A2I.i2a_4:	

1
	movq -72(%rbp), %reg1	
	movq -72(%rbp), %rdi	

1
	call *%reg0	
	movq 264(%rbx), %r12	

1
	movq $55049, %rax	
	negl %eax	

1
	subl %reg0, %edi	
	movq $14379, %rax	

1
	subl %eax, %reg1	
	movq $48672, %reg2	

1
	movq 16(%rbx), %reg1	
	cmpl %reg2, %edi	

1
	movq -72(%rbp), %reg1	
	movq -48(%rbp), %rsi	

1
	movq $29011, %rax	
	subl %reg1, %reg2	

1
	movq $25, %rax	
	movq 0(%reg1), %r12	

1
	call *%reg0	
	movq %reg1, %r15	

1
	movq $50, %rsi	
	movq $.string3_l, %rdi	

1
	movq $29789, %reg0	
	movq %reg0, %rcx	

1
	call *%r12	
.Main.main_28:	

1
	movq 280(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
.Main.main_35:	
	movq %reg0, %reg1	

1
	.quad .string6_l	
	.quad 23	

1
	movq -16(%rbp), %rax	
	negl %eax	

1
Main.funcifb:	
	pushq %reg0	

1
	movq 560(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	movq %reg0, %reg1	
	movq 8(%rax), %r13	

1
	movq 8(%rbx), %r13	
	cmpl $0, 16(%rbx)	

1
	call *%r12	
	movq 248(%rbx), %reg2	

1
	call out_error	
.Main.main_136:	

1
	negl %r9d	
	addl %r9d, %reg1	

1
.Main.funccase_6:	
	movq 0(%reg0), %r12	

1
	subl %reg0, %eax	
	movq -152(%rbp), %rcx	

1
	addl %reg0, %edi	
	movq %rdi, 16(%rax)	

1
	negl %reg0	
	movq $20470, %rcx	

1
	movq $40813, %rdi	
	addl %reg1, %esi	

1
	call out_error	
.Main.main_98:	

1
	movq $26083, %rax	
	movq $56556, %reg1	

1
.Main.func_1:	
	movq $.string7, %reg0	

1
	negl %r8d	
	movq %r8, %r9	

1
	movq %reg0, 8(%rbx)	
	jmp .Main.main_4	

1
.Main.main_92:	
	movq -80(%rbp), %rax	

1
.Foo.new_7:	
	cmpq $Bar_vtable, 0(%reg0)	

1
	je .Main.main_61	
	movq $17, %rsi	

1
.Main.main_1:	
	movq 8(%reg0), %rdx	

1
	movq %rdi, 40(%rbx)	
	cmpl %edi, %reg3	

1
	movq $3966, %reg0	
	cmpl %reg1, %eax	

1
	movq $3000, %reg0	
	movq %reg0, 320(%rax)	

1
.Main.main_56:	
	movq 0(%rax), %reg1	

1
	movq %r13, %rdx	
	call *%rax	

1
	jmp .Main.fib_2	
.Main.fib_1:	

1
.Main.main_5:	
	movq %reg0, %rax	

1
	je .Cons.rcons_1	
	movq $87, %reg0	

1
.Main.print_list_5:	
	movq 0(%reg0), %rax	

1
	movq %reg0, %reg1	
	jmp .Main.main_133	

1
	movq 104(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	testq $1, %reg0	
	je .Main.main_168	

1
	subl %eax, %ecx	
	movq $43604, %reg2	

1
	addl %reg0, %reg1	
	movq $222, %reg2	

1
	movq 240(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq 696(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	.type Foo.setS, @function	
Foo.setS:	

1
	movq -80(%rbp), %reg1	
	movq -168(%rbp), %rax	

1
	negl %reg0	
	movq %rax, 16(%reg2)	

1
	negl %reg0	
	movq $62150, %reg1	

1
	movq $0, %rdi	
	movq %rdi, 704(%rax)	

1
	testq $1, %reg0	
	je .Main.main_135	

1
	movq %rbx, %reg1	
	jmp .Bazz.new_6	

1
	movq $12, %r12	
	movq 0(%rbx), %rax	

1
	movq -72(%rbp), %rax	
	movq $0, %r8	

1
	movq -88(%rbp), %rax	
	subl %eax, %reg3	

1
	je .Main.main_144	
	movq $112, %rsi	

1
	movq -24(%rbp), %rax	
	movq -128(%rbp), %reg3	

1
	movq %reg0, %r13	
	movq $2, %rax	

1
	movq %rdi, 448(%rax)	
	movq $0, %rdi	

1
	je .Main.main_9	
	movq $13, %reg0	

1
	movq $.string14, %r12	
	movq 0(%rbx), %reg2	

1
.Main.funccaseb_2:	
	movq $0, %reg0	

1
	cmpq $IO_vtable, 0(%reg0)	
	je .Main.new_2	

1
	movq $8, %reg0	
	movq %rdi, %rsi	

1
.A2I.i2c_1:	
	movq $1, %reg0	

1
.Main.main_92:	
	movq -80(%rbp), %reg1	

1
.Foo.new_12:	
	movq 32(%reg0), %reg1	

1
	movq $name_Int, %r12	
	movq 0(%rbx), %rax	

1
	movq %r15, %rax	
	movq %r12, %reg3	

1
	movq $9569, %reg0	
	imull %esi	

1
	idivl %reg0d	
	movq $27409, %reg0	

1
	movq $38801, %rax	
	cmpl %reg1, %reg2	

1
	movq 24(%reg0), %rax	
	addl %edi, %eax	

1
	movq %reg0, %rax	
	jmp .Matrix.set_57	

1
	movq $19, %reg0	
	movq %reg0, -88(%rbp)	

1
	call *%rax	
	movq 136(%reg1), %rax	

1
	movq $38600, %r12	
	movq $0, %r13	

1
	movq %rsi, %reg1	
	movq 8(%reg1), %reg2	

1
	movq -184(%rbp), %reg1	
	movq %reg2, %rcx	

1
	je .Main.main_71	
	movq $52, %reg0	

1
	.quad 12	
name_Object_l:	

1
	call *%r12	
	movq 24(%rbx), %reg2	

1
.Main.main_8:	
	movq $.string9, %reg0	

1
	movq %rdi, %rax	
	movq -16(%rbp), %rax	

1
	movq $7493, %reg0	
	addl %edi, %eax	

1
	movq $14379, %rax	
	movq $61731, %reg1	

1
	movq %rdi, %reg1	
	movq -80(%rbp), %reg3	

1
	movq %r12, %reg1	
	subl %reg2, %edi	

1
	movq %r9, %reg1	
	movq -184(%rbp), %r9	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_9	

1
	movq %rdi, %reg1	
.Main.fib_2:	

1
	call *%r12	
	movq 536(%rbx), %reg2	

1
	je .Main.main_135	
	movq $100, %reg0	

1
	movq $110, %rsi	
	movq $.string3_l, %rdi	

1
	movq $22, %reg0	
	movq $.string2_l, %reg1	

1
	movq $23599, %reg0	
	subl %reg1, %edi	

1
.Main.main_169:	
	cdq	

1
	addl %edi, %reg1	
	movq %rax, 16(%reg3)	

1
	movq $54759, %rsi	
	movq %rsi, %reg1	

1
.Main.main_88:	
	movq %reg0, %reg1	

1
	subl %eax, %reg1d	
	movq $12, %r10	

1
	movq $23599, %reg0	
	subl %eax, %reg2	

1
	movq $78, %reg0	
	movq $.string2_l, %reg1	

1
	call *%reg0	
	movq 0(%rax), %r12	

1
	negl %eax	
	movq %reg1, %rdx	

1
	addl %eax, %reg1	
	movq -48(%rbp), %rax	

1
	movq $36010, %rdi	
	negl %edi	

1
	movq $43177, %rdi	
	subl %reg1, %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 56(%reg1)	

1
.DicNode.get_1:	
	movq 24(%rax), %rdi	

1
	negl %ecx	
	movq $1202, %rax	

1
	movq %reg0, %rbp	
	movq $208, %rdi	

1
	call Razz.new	
	jmp .Foo.new_11	

1
	movq %reg0, 56(%rbx)	
	movq $1, %reg0	

1
	movq %reg0, %reg1	
	movq -56(%rbp), %reg1	

1
	movq 112(%reg0), %reg0	
	movq 16(%rax), %rdi	

1
	movq %reg0, %rcx	
	movq -184(%rbp), %r8	

1
	movq $3326, %rsi	
	movq %rsi, %rcx	

1
	call *%reg0	
	movq 536(%reg1), %reg2	

1
	movq $0, %reg0	
	movq %reg0, 464(%rax)	

1
	movq %r14, %rax	
	movq %rsi, %reg3	

1
	movq $3000, %rdi	
	movq %rdi, 424(%rax)	

1
List.car:	
	pushq %reg0	

1
	addl %eax, %r10d	
	movq %r10, %reg2	

1
	movq %reg0, %r14	
.CellularAutomaton.evolve_1:	

1
	movq -40(%rbp), %reg1	
	addl %eax, %edi	

1
	movq -32(%rbp), %rax	
	subl %reg2, %ecx	

1
	jne .A2I.c2i_3	
	movq $1, %reg0	

1
.Main.main_53:	
	movq -136(%rbp), %reg1	

1
	addl %reg0, %eax	
	movq %rax, 16(%reg3)	

1
	movq %rax, -16(%rbp)	
	jmp .Main.main_1	

1
.Bazz.new_2:	
	call Foo.new	

1
	movq -184(%rbp), %rcx	
	subl %ecx, %reg3d	

1
	movq -64(%rbp), %rdi	
	subl %reg2, %reg3	

1
.Razz.new_19:	
	movq 16(%reg0), %reg1	

1
	movq %rax, 8(%reg1)	
	call IO.new	

1
	cmpq $Object_vtable, 0(%rax)	
	je .Main.main_6	

1
	imull %edi	
	movq -40(%rbp), %rdi	

1
	movq %reg0, %rbx	
	movq 8(%rax), %rdi	

1
	movq %rsi, %rax	
	movq %r13, %rsi	

1
	jg .Main.main_149	
	movq -56(%rbp), %reg1	

1
	movq -16(%rbp), %reg1	
	subl %reg1d, %reg2	

1
	movq %rax, %reg1	
	movq %reg2, %rdi	

1
	movq 520(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
.Main.main_6:	
	movq %r13, %reg1	

1
	movq $1, %reg0	
	jmp .CellularAutomaton.cell_at_next_evolution_6	

1
	movq $28260, %rax	
	subl %eax, %reg2	

1
	movq -64(%rbp), %rax	
	movq %reg2, %rsi	

1
	movq %r15, %reg1	
	imull %reg2	

1
	movq $1, %rbx	
	movq 8(%reg1), %rdi	

1
	movq $33866, %rdi	
	subl %reg1, %reg2	

1
	movq %rdi, 296(%reg1)	
	movq $0, %rdi	

1
	movq $13257, %rsi	
	imull %esi	

1
	movq $1, %rax	
	jmp .Complex.equal_5	

1
	movq $31515, %reg0	
	negl %eax	

1
	movq %r12, 8(%rax)	
	movq %rax, 16(%reg2)	

1
	movq %rax, %r14	
	movq %rbx, %reg3	

1
	movq -88(%rbp), %rax	
	subl %ecx, %reg3	

1
	movq -152(%rbp), %reg1	
	movq %reg2, %rcx	

1
	movq -48(%rbp), %reg1	
	movq %rcx, %reg3	

1
	setl %reg0l	
	jge .Main.main_132	

1
	movq %reg0, 8(%reg1)	
	movq 8(%rbx), %reg0	

1
	negl %reg0	
	movq $62150, %rax	

1
	movq $3, %reg0	
	movq 0(%rbx), %r12	

1
	addl %reg0, %reg1	
	movq %rax, 24(%rbx)	

1
	movq %reg0, 144(%reg1)	
	movq %reg0, %reg1	

1
Foo.getY:	
	pushq %reg0	

1
	call *%rbx	
	movq $1, %reg1	

1
.DicNode.insert_4:	
	movq 0(%rax), %r14	

1
	movq -32(%rbp), %rax	
	movq $0, %rcx	

1
	movq %reg0, %reg1	
	movq $8022, %reg0	

1
	movq 8(%reg0), %reg1	
	call *%rbx	

1
	movq %rdi, %reg1	
	movq $.string7, %rbx	

1
	movq $61139, %rax	
	movq 0(%reg1), %r12	

1
.Main.main_4:	
	jmp .Main.main_1	

1
	movq -96(%rbp), %rax	
	subl %eax, %reg3	

1
	jmp .Razz.new_6	
.Razz.new_5:	

1
	movq $7, %rax	
	movq %rax, -72(%rbp)	

1
	movq -32(%rbp), %reg1	
	subl %esi, %eax	

1
	movq -72(%rbp), %rsi	
	subl %esi, %reg3	

1
	movq $3000, %reg0	
	movq %reg0, 160(%reg1)	

1
	jne .A2I.i2c_19	
	movq $.string16, %rax	

1
	movq %reg0, 8(%reg1)	
	jmp .Main.main_65	

1
	je .Main.main_6	
	movq $6, %rsi	

1
Main.funcwhilei:	
	pushq %rbp	

1
	jne .A2I.i2a_aux_1	
	movq $empty_string, %rax	

1
	negl %reg0	
	movq $50691, %reg1	

1
.Main.main_18:	
	movq $1, %reg0	

1
	idivl %ecx	
	movq -96(%rbp), %rcx	

1
.Main.main_35:	
	movq %reg0, %rsi	

1
	movq %rdi, %rsi	
	cmpl $0, %reg2	

1
	addl %eax, %reg1	
	movq %r12, %rax	

1
	call *%reg0	
	movq 536(%rbx), %reg2	

1
	movq %rbx, %r12	
	movq 8(%rax), %reg3	

1
	movq -56(%rbp), %reg1	
	movq -136(%rbp), %rdi	

1
	movq %reg0, %r12	
	movq $12, %reg0	

1
	movq %reg0, %rax	
	movq -96(%rbp), %r8	

1
	je .Main.main_10	
	movq $19, %rsi	

1
	movq %reg0, 632(%reg1)	
	movq $3000, %reg0	

1
	movq %reg0, %r12	
	call ListNode.new	

1
	movq $5, %r13	
	movq 0(%rax), %r12	

1
	movq %rax, %r8	
	movq $28147, %rax	

1
	movq -16(%rbp), %rsi	
	cmpl %reg2, %reg3	

1
.Main.new_2:	
	movq 0(%reg0), %reg1	

1
	movq $17107, %rax	
	movq 0(%rbx), %reg2	

1
	movq $57963, %rdi	
	subl %reg1, %eax	

1
	movq %rax, %reg1	
	call IO.out_int	

1
	call *%reg0	
	movq 280(%rbx), %r12	

1
	call *%reg0	
	movq 696(%reg1), %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 632(%rax)	

1
	sete %dil	
	jne .Main.main_1	

1
	movq -80(%rbp), %reg1	
	movq -40(%rbp), %rsi	

1
	movq $47041, %rax	
	negl %reg1	

1
	movq $30018, %reg0	
	subl %eax, %reg2	

1
	movq %reg0, %rax	
	jmp .Main.main_24	

1
	addl %esi, %reg1	
	movq -96(%rbp), %rsi	

1
	movq -56(%rbp), %rax	
	movq -56(%rbp), %reg2	

1
	movq %rax, %reg1	
	movq $4, %r13	

1
	setle %dil	
	jg .Main.main_3	

1
	movq $12, %r9	
	movq $0, %r10	

1
	jge .Main.main_29	
	movq $.string7, %rax	

1
	movq $63133, %reg0	
	movq $31786, %reg1	

1
	call *%r12	
	movq 680(%rbx), %reg2	

1
	je .Main.main_9	
	movq %reg0, %reg1	

1
.Matrix.set_60:	
	movq $5, %reg0	

1
	call *%r12	
	movq 88(%reg1), %reg2	

1
	pushq %r12	
	movq $64, %reg1	

1
	movq -144(%rbp), %reg1	
	movq -168(%rbp), %rdi	

1
	movq -72(%rbp), %reg1	
	movq -40(%rbp), %reg3	

1
	call *%rax	
	movq 368(%reg1), %reg2	

1
	.type Main.fib, @function	
Main.fib:	

1
	call *%reg0	
	movq 448(%reg1), %reg2	

1
	movq $31735, %rsi	
	imull %reg1	

1
	movq $179, %reg0	
	movq $.string5_l, %rdi	

1
.Main.main_130:	
.Main.main_128:	

1
	movq %rdi, 360(%rax)	
	movq $0, %rdi	

1
	movq 8(%rdi), %rbx	
	movq 0(%reg2), %reg3	

1
	call *%r13	
	movq 0(%rax), %r12	

1
	movq %rbx, %r11	
	movq $0, %rbx	

1
	movq %reg0, 344(%reg1)	
	movq $3000, %reg0	

1
	movq %reg0, %r8	
	movq -40(%rbp), %reg0	

1
	je .Main.main_34	
	movq $31, %reg0	

1
	jmp .Foo.new_11	
.Foo.new_9:	

1
	movq %reg0, %r13	
	cmpl $0, %r13d	

1
	movq %rax, %r15	
	cmpl $0, %reg2	

1
	movq %rdi, -8(%rbp)	
	movq $34533, %reg2	

1
	movq $.string7, %reg0	
	jmp .A2I.i2c_2	

1
	movq -136(%rbp), %reg1	
	movq -8(%rbp), %rdx	

1
	movq -112(%rbp), %reg1	
	movq -104(%rbp), %rdi	

1
.Main.new_4:	
	movq %rdi, 80(%rax)	

1
	je .Complex.equal_3	
	movq $64, %rsi	

1
	movq -104(%rbp), %rax	
	subl %reg2, %esi	

1
	addl %reg0d, %reg1	
	movq $53181, %reg0	

1
	movq $0, %rdi	
	movq %rdi, 456(%reg1)	

1
.Cons.insert_1:	
	movq 8(%rbx), %reg1	

1
	jmp .Razz.new_17	
.Razz.new_16:	

1
	call out_error	
.Complex.equal_3:	

1
	movq $125, %reg0	
	movq $.string3_l, %reg1	

1
	movq -96(%rbp), %rsi	
	subl %esi, %reg3	

1
	call *%rax	
.Main.funccase_8:	

1
Main.myInt:	
	pushq %rbp	

1
	movq -136(%rbp), %reg1	
	movq -128(%rbp), %rdi	

1
	.quad 0	
	.quad A2I.new	

1
	testq $1, %rax	
	je .Main.main_48	

1
	je .Main.main_45	
	movq $15, %rsi	

1
.Main.main_71:	
.Main.main_68:	

1
	pushq %r12	
	movq $40, %reg1	

1
	imull %esi	
	movq -176(%rbp), %rsi	

1
	movq $29773, %rax	
	movq 0(%reg1), %r12	

1
	movq -16(%rbp), %rdi	
	movq %r12, %rsi	

1
	je .Main.main_8	
	movq 0(%reg0), %reg1	

1
	movq $0, %rdi	
	movq %rdi, 240(%reg1)	

1
	movq $.string11, %reg0	
	movq 0(%rbx), %reg2	

1
	movq 0(%r14), %reg1	
	movq 56(%reg1), %reg1	

1
	sete %cl	
	jne .Matrix.get_53	

1
	movq %reg0, 160(%rax)	
	movq $3000, %reg0	

1
	movq %rbx, %rax	
	jmp .Foo.new_6	

1
	pushq %rbx	
	movq $24, %reg1	

1
	call *%r12	
	movq 208(%reg1), %r12	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_57	

1
List.getHead:	
	pushq %reg0	

1
	je .Main.main_25	
	movq $13, %rsi	

1
	movq $45379, %reg0	
	subl %eax, %esi	

1
	movq -112(%rbp), %reg1	
	movq -48(%rbp), %reg3	

1
	movq %rax, %r12	
	call String.new	

1
	call out_error	
.Bar.new_13:	

1
.Main.new_10:	
	movq $0, %reg0	

1
	je .Main.main_3	
	cmpq $Object_vtable, 0(%rax)	

1
	movq %reg0, 720(%rax)	
	movq $0, %reg0	

1
	movq $0, %rdi	
	movq %rdi, 280(%reg1)	

1
.Main.new_9:	
	movq 24(%rbx), %rax	

1
Bar.setX:	
	pushq %reg0	

1
	call *%reg0	
	movq 648(%rbx), %r12	

1
	movq 136(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	idivl %reg0	
	movq %reg1, %r11	

1
	movq 392(%rbx), %r12	
	movq 0(%rbx), %rax	

1
.A2I.i2c_19:	
	movq 0(%rax), %rbx	

1
	movq $29790, %reg0	
	subl %reg1, %reg2	

1
	movq -32(%rbp), %reg1	
	movq %r13, %rsi	

1
	movq $48985, %reg0	
	movq 0(%reg1), %reg2	

1
	je .Main.main_33	
	movq $13, %rsi	

1
	movq %r14, %reg1	
	sete %reg2l	

1
	call *%rax	
	movq 64(%reg1), %rax	

1
	je .Main.main_27	
	movq $173, %rsi	

1
	movq -56(%rbp), %rsi	
	cmpl %esi, %eax	

1
	movq $3000, %reg0	
	movq %reg0, 240(%reg1)	

1
	idivl %r10d	
	movq %rax, %r10	

1
	je .Main.main_88	
	movq %reg0, %reg1	

1
	movq -104(%rbp), %reg1	
	movq -56(%rbp), %rdi	

1
	cmpq $Foo_vtable, 0(%rbx)	
	je .Foo.new_3	

1
	.quad .string0	
	.quad 5	

1
	call *%rbx	
	movq $28968, %rax	

1
	movq -136(%rbp), %rcx	
	subl %ecx, %eax	

1
	call out_error	
.Main.main_168:	

1
	idivl %reg0d	
	movq %rax, %rbx	

1
	sete %r13b	
	jne .A2I.c2i_7	

1
	call *%r12	
	movq %rax, %reg2	

1
.Main.main_150:	
.Main.main_148:	

1
	movq -80(%rbp), %rax	
	movq -40(%rbp), %rsi	

1
	movq %reg0, 704(%rax)	
	movq $0, %reg0	

1
	movq %rax, 56(%rbx)	
	movq 0(%rbx), %rax	

1
	jne .A2I.i2c_13	
	movq $.string13, %rax	

1
	movq $.string13, %reg0	
	movq %reg1, %r12	

1
	movq -104(%rbp), %rax	
	cmpl %eax, %esi	

1
	call *%rax	
	movq $empty_string, %rax	

1
	movq 0(%rax), %rax	
	movq 16(%rax), %rax	

1
	movq 48(%rbx), %rbx	
	movq 8(%rax), %reg2	

1
	cmpq $Bar_vtable, 0(%reg0)	
	je .Razz.new_5	

1
	movq %reg0, 136(%rax)	
	movq %reg0, %rax	

1
	sete %reg0b	
	jne .Main.main_2	

1
	movq %reg0, %reg1	
	jmp .Main.main_110	

1
	je .Main.main_92	
	movq -56(%rbp), %rsi	

1
.Razz.new_5:	
	movq %rbx, %rax	

1
	je .Dictionary.get_2	
	movq $6, %reg0	

1
	call out_error	
.Cons.insert_2:	

1
	movq -24(%rbp), %r8	
	imull %r8d	

1
	movq %rdi, 72(%reg1)	
	movq %reg1, %rdi	

1
.Main.main_37:	
	movq %reg0, %rax	

1
	jne .Matrix.set_6	
	movq %reg0, 24(%rax)	

1
	movq 128(%rax), %rax	
	jmp .Matrix.get_42	

1
	movq $53748, %rax	
	movq 0(%reg1), %r12	

1
	.string "How many numbers to sort? "	
.string10:	

1
	movq -8(%rbp), %reg1	
	movq -168(%rbp), %rsi	

1
	movq 592(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq $12, %reg0	
	movq %reg0, %rbx	

1
.Main.main_17:	
	movq 0(%reg0), %r13	

1
	movq %reg0, %reg1	
	movq -16(%rbp), %rbx	

1
	movq %rdi, 512(%reg1)	
	movq $3000, %rdi	

1
.Main.main_1:	
	movq $name_Object, %rax	

1
	movq $3000, %reg0	
	movq %reg0, 456(%rax)	

1
	movq $46509, %rax	
	movq %rax, %reg1	

1
	movq $.string14, %rdi	
	movq %rbx, %r12	

1
	imull %edi	
	movq -120(%rbp), %rdi	

1
	call *%rax	
	movq 296(%reg1), %r12	

1
	movq %r14, %rax	
	imull %reg2	

1
	movq %r14, %reg1	
	movq %reg2, %rax	

1
	movq 312(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	call out_error	
.Main.main_166:	

1
	sete %reg0b	
	jne .A2I.c2i_5	

1
	movq %rax, %r8	
	movq $18429, %reg2	

1
	movq %rdi, 536(%reg1)	
	movq $0, %rdi	

1
	testq $1, %rcx	
	je .Main.main_113	

1
	call *%reg0	
	movq 280(%rbx), %reg2	

1
	movq %reg0, %rbx	
	movq $.string19, %r12	

1
	movq $53667, %reg0	
	movq $0, %rcx	

1
	movq -16(%rbp), %reg1	
	subl %reg2, %ecx	

1
	jne .Matrix.set_60	
	movq %reg0, 192(%reg1)	

1
.Matrix.set_62:	
	movq $1, %reg0	

1
	movq $3000, %rdi	
	movq %rdi, 304(%rax)	

1
	call IO.new	
	movq %rax, 8(%rbx)	

1
	movq %reg0, 472(%reg1)	
	movq $0, %reg0	

1
	movq %rdi, %rax	
	jmp .Main.main_38	

1
.Foo.new_13:	
	movq 16(%reg0), %reg1	

1
	movq $3000, %rdi	
	movq %rdi, 488(%reg1)	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_22	

1
	movq $25, %reg0	
	movq $.string2_l, %rdi	

1
	movq %reg0, %rsi	
	movq %r14, %reg0	

1
	movq $102, %rsi	
	movq $.string3_l, %rdi	

1
	movq %reg0, %reg1	
	jmp .Main.main_40	

1
	movq -184(%rbp), %reg1	
	movq %rsi, %rcx	

1
	movq $0, %rdi	
	movq %rdi, 576(%reg1)	

1
.Main.main_15:	
	movq $.string8, %rax	

1
	movq %rax, %reg1	
	movq $62331, %rax	

1
	testq $1, %rax	
	je .Main.funccase_1	

1
	movq %rax, %rsi	
	movq -136(%rbp), %rcx	

1
	je .Main.main_68	
	movq $49, %rsi	

1
	movq %r9, %r8	
	imull %r8d	

1
	call *%reg0	
	movq 8(%reg1), %rax	

1
	ret	
	.size DicNode.new, .-DicNode.new	

1
	cmpq $Int_vtable, 0(%reg0)	
	je .Main.funccase_3	

1
	addl %eax, %edi	
	movq %rbx, %reg3	

1
.Main.funcwhileb_1:	
	movq %r12, %reg1	

1
	call *%reg0	
	movq 672(%reg1), %reg2	

1
	je .Main.main_11	
	movq $17, %reg0	

1
	cmpq $Foo_vtable, 0(%reg0)	
	je .Bar.new_9	

1
	movq %rdi, 72(%rax)	
	movq %rdi, %rax	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_7	

1
	movq $2739, %reg0	
	movq $0, %rcx	

1
	movq 16(%reg0), %rdi	
	cmpl %eax, %edi	

1
	movq 488(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq %rax, %r14	
.CellularAutomaton.evolve_1:	

1
	movq %rbx, %r11	
	imull %r11d	

1
	addl %r8d, %eax	
	movq -168(%rbp), %r8	

1
	addl %edi, %reg1	
	cmpl $0, %r13d	

1
	movq $17975, %reg0	
	movq %reg0, %reg1	

1
	jmp .A2I.c2i_14	
.A2I.c2i_13:	

1
.A2I.a2i_aux_1:	
	movq %r13, %rax	

1
	movq 16(%rbx), %rax	
	addl %reg2, %eax	

1
	subl %eax, %esi	
	movq -104(%rbp), %rax	

1
.Main.main_51:	
	movq 0(%r13), %rax	

1
	testq $1, %reg0	
	je .Bazz.new_1	

1
	movq $48672, %rax	
	movq $3326, %rsi	

1
	movq %reg0, 120(%rax)	
	movq $3000, %reg0	

1
	movq %r14, %rax	
	sete %reg2	

1
.Matrix.get_18:	
.Matrix.get_16:	

1
	movq %rdi, %rbx	
	movq %r12, %reg3	

1
	jg .Main.main_73	
	movq %reg0, %rax	

1
	movq $12855, %rdi	
	addl %reg1, %reg2	

1
	je .Main.main_43	
	movq $15, %reg0	

1
	movq $1, %rdi	
	movq 16(%reg1), %rax	

1
	movq -24(%rbp), %reg1	
	movq -16(%rbp), %rax	

1
.Main.main_137:	
	cdq	

1
	setl %al	
	jmp .Main.main_137	

1
	movq $52, %rax	
	movq 0(%reg1), %reg2	

1
	movq %reg0, %rax	
	movq -120(%rbp), %r9	

1
	subl %esi, %reg1	
	movq %rdi, 16(%rax)	

1
	subl %eax, %ebx	
	movq $47353, %reg2	

1
	movq %r14, %rax	
	addl %eax, %reg3	

1
.Main.main_63:	
	movq 0(%reg0), %rax	

1
	subl %r11d, %eax	
	movq %reg2, %r11	

1
	idivl %r12d	
	movq %reg1, %reg2	

1
	subl %reg0, %reg1	
	movq -88(%rbp), %rax	

1
	call *%rax	
	movq $31515, %rax	

1
	je .Main.main_48	
	movq $15, %rsi	

1
	movq $0, %reg0	
	cmpl %reg0d, %r13d	

1
	movq %r13, %reg1	
.Main.main_5:	

1
.Main.main_133:	
	cdq	

1
	movq $6821, %reg0	
	movq $45379, %reg1	

1
	movq $.string13, %rdi	
	movq %rbx, %r12	

1
	movq %reg0, %reg1	
	movq -168(%rbp), %r9	

1
	movq %r14, %rdx	
	call *%reg2	

1
.Main.main_3:	
	movq $.string9, %r12	

1
	je .Main.iota_3	
	movq $126, %rsi	

1
	movq %r13, %rax	
	movq %rdi, %reg3	

1
.Main.main_13:	
	movq $7, %r12	

1
.ListNode.insert_2:	
	movq 0(%rax), %reg1	

1
	jg .Main.main_42	
	movq 0(%reg0), %reg1	

1
	call *%rax	
	movq 464(%rbx), %rax	

1
	je .Main.main_19	
	movq 0(%rbx), %rax	

1
	call *%r14	
	movq %reg1, %r12	

1
	je .Main.main_25	
	movq $169, %rsi	

1
	movq %reg0, 680(%rax)	
	movq $3000, %reg0	

1
	movq %rdi, %reg1	
	movq $20, %rax	

1
	movq %reg0, %reg1	
	movq $.string10, %r14	

1
	movq 0(%r12), %r13	
	movq 72(%r13), %r13	

1
Bazz.doh:	
	pushq %rbp	

1
	movq $3, %rax	
	cmpl $0, %ebx	

1
	movq 8(%rbx), %rax	
	cmpl %reg2, %reg3	

1
	call List.new	
	movq %reg0, 8(%reg1)	

1
	movq %reg0, %r14	
	jmp .Main.main_5	

1
	call *%r12	
	movq 328(%rbx), %rax	

1
	movq %reg0, %r8	
	movq $15735, %reg0	

1
	movq -120(%rbp), %reg1	
	movq -64(%rbp), %reg3	

1
	movq $.string11, %r12	
	cmpl $0, %ebx	

1
	movq $4, %r13	
	movq %r12, %rdi	

1
	imull %reg0	
	movq $13, %reg1	

1
	movq %reg0, 584(%reg1)	
	movq $0, %reg0	

1
	je .Main.main_9	
	movq $8, %rsi	

1
.Main.main_16:	
	movq -16(%rbp), %rbx	

1
	je .Main.main_5	
	movq $147, %rsi	

1
Main.setFoo:	
	pushq %reg0	

1
	movq $.string15, %rdi	
	movq %reg1, %r12	

1
	je .Main.main_134	
	movq $97, %rsi	

1
	movq %reg0, 256(%reg1)	
	movq $0, %reg0	

1
	imull %reg0	
	movq -96(%rbp), %rsi	

1
	pushq %reg0	
	movq $80, %rdi	

1
	movq -32(%rbp), %rdi	
	imull %reg2	

1
	call *%reg0	
	movq $3, %r14	

1
	movq %rdi, 24(%reg1)	
	movq %rdi, %reg1	

1
	imull %esi	
	movq %rbx, %reg2	

1
	idivl %reg0	
	movq %rax, %r11	

1
	call *%r12	
	jmp .Main.main_6	

1
	movq $47308, %rsi	
	negl %reg1	

1
.Main.main_6:	
	movq 16(%reg0), %rax	

1
	cmpq $Foo_vtable, 0(%reg0)	
	je .Razz.new_4	

1
	movq $32151, %reg0	
	movq 0(%reg1), %reg2	

1
	movq $0, %reg0	
	movq %rbx, %rax	

1
.Main.main_7:	
	movq $.string13, %reg0	

1
	movq %rdi, %reg1	
	jmp .Main.main_110	

1
	movq $3453, %r12	
	movq 0(%reg1), %reg2	

1
	call *%rax	
	movq $58921, %rdi	

1
.DicNode.get_6:	
	movq 24(%rax), %rdx	

1
	call *%rbx	
	movq $51549, %rax	

1
	jne .Main.main_113	
	movq -48(%rbp), %reg1	

1
	movq -152(%rbp), %rcx	
	addl %reg2, %eax	

1
	setl %al	
	movq $2, %reg1	

1
	je .Cons.insert_4	
	movq $82, %reg0	

1
	call Razz.new	
	jmp .Bazz.new_6	

1
	movq $29011, %rax	
	subl %reg1, %ecx	

1
	movq 48(%reg0), %reg0	
	movq 8(%rbx), %reg2	

1
	call *%rax	
	movq 640(%rbx), %r12	

1
	movq $3000, %rdi	
	movq %rdi, 272(%reg1)	

1
	movq 288(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	movq -168(%rbp), %reg1	
	movq %reg1, -184(%rbp)	

1
	movq $name_Bool, %reg0	
	cmpl $0, 8(%reg1)	

1
	movq 8(%reg0), %reg1	
	movq 0(%reg0), %r14	

1
	je .Main.func_3	
	cmpq $IO_vtable, 0(%reg0)	

1
	jge .Main.main_98	
	movq -128(%rbp), %reg1	

1
	call getmem	
	movq $Razz_vtable, 0(%reg0)	

1
	movq %reg0, %reg1	
	jmp .Main.main_36	

1
	call *%reg0	
	movq 160(%reg1), %reg0	

1
	movq %rdi, 568(%reg1)	
	movq $3000, %rdi	

1
	movq $41765, %rax	
	subl %reg1, %edi	

1
	movq $0, %reg0	
	movq %reg0, 400(%reg1)	

1
	movq $0, %r14	
	call Bool.new	

1
	movq 24(%rbx), %reg1	
	addl %reg2, %reg3	

1
	movq %reg0, 512(%rax)	
	movq $3000, %reg0	

1
.Main.main_6:	
	movq %r13, %rax	

1
	imull %esi	
	movq $840, %reg1	

1
.string7_l:	
	.string "a"	

1
	subl %edi, %reg1	
	movq %r13, %reg3	

1
.Matrix.get_3:	
	jmp .Matrix.get_13	

1
	movq -16(%rbp), %rdi	
	subl %reg2, %eax	

1
.Bar.new_11:	
	movq %reg0, 32(%rbx)	

1
.Main.main_143:	
.Main.main_141:	

1
	movq %reg0, 24(%reg1)	
	call Bar.new	

1
	imull %esi	
	movq $55348, %reg1	

1
	movq $.string9, %r13	
	cmpl $0, %reg1	

1
	movq -16(%rbp), %rax	
	movq -128(%rbp), %reg3	

1
	pushq %reg0	
	movq %rdi, %r12	

1
	movq 592(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq %rbx, %reg1	
	movq -40(%rbp), %rsi	

1
	movq 384(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	testq $1, %reg0	
	je .Main.out_whatever_6	

1
	call *%rax	
	jmp .Main.new_11	

1
	addl %esi, %reg1	
	movq -160(%rbp), %rsi	

1
	movq $3000, %rdi	
	movq %rdi, 376(%rax)	

1
	movq %reg0, %r12	
	movq $4, %r13	

1
	movq $47279, %reg0	
	movq $47879, %reg1	

1
	movq $64582, %r13	
	movq %r13, %reg1	

1
	movq $0, %reg0	
	cmpl %edi, %eax	

1
	call out_error	
.Main.funccase_1:	

1
	movq 80(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq $34533, %rax	
	movq $48880, %reg1	

1
	je .Main.main_76	
	movq $52, %rsi	

1
	movq %reg0, %rdx	
	movq %rdx, -104(%rbp)	

1
	subl %reg0, %edi	
	movq %reg2, %r13	

1
	movq 136(%rax), %rax	
	movq %r12, %rdi	

1
	movq $56918, %reg0	
	movq $55662, %r14	

1
	movq %reg0, 232(%reg1)	
	movq $3000, %reg0	

1
	movq %reg0, %rbx	
	movq 24(%rbx), %reg2	

1
	subl %reg0, %esi	
	movq $48118, %rax	

1
	movq -24(%rbp), %rax	
	movq $0, %rcx	

1
	movq %rax, %r10	
	movq $55273, %r11	

1
	je .Main.main_46	
	movq $200, %rsi	

1
	movq $5, %reg0	
	movq %rax, %reg2	

1
	subl %eax, %reg1	
	movq %rdi, %r13	

1
	movq $14, %reg0	
	movq $.string5_l, %rdi	

1
	jge .Main.main_21	
	movq %reg0, %reg1	

1
	imull %reg0d	
	movq -64(%rbp), %reg0	

1
A2I.a2i:	
	pushq %rbp	

1
	movq $5, %r13	
	movq 0(%reg1), %r12	

1
	addl %esi, %reg1	
	movq %r14, %rsi	

1
	movq -88(%rbp), %reg1	
	movq %reg2, %rcx	

1
	movq %r14, %rcx	
	subl %reg2, %reg3	

1
	movq -32(%rbp), %reg1	
	movq %reg2, %r8	

1
	movq -112(%rbp), %reg1	
	movq -104(%rbp), %rax	

1
	movq %rdi, 728(%reg1)	
	movq $3000, %rdi	

1
	idivl %ecx	
	movq $63562, %reg1	

1
	addl %reg0, %esi	
	movq -128(%rbp), %reg3	

1
.Main.main_11:	
	movq %reg0, %reg1	

1
	movq $3, %reg0	
	cmpl $0, %reg1	

1
	jmp .Main.main_165	
.Main.main_102:	

1
	movq $41455, %reg0	
	movq $64464, %rcx	

1
	movq %rdi, %reg1	
	movq $34526, %rdi	

1
.Main.main_154:	
	movq %reg0, %reg1	

1
	movq %rsi, %rax	
	movq -144(%rbp), %rsi	

1
	.globl Complex.init	
	.type Complex.init, @function	

1
	movq 232(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	movq $18444, %rax	
	negl %reg1	

1
	movq $90, %rdi	
	subl %reg1, %esi	

1
	je .Main.main_102	
	movq %reg0, %reg1	

1
	movq 528(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq $0, %rdi	
	movq %rdi, 568(%rax)	

1
	movq $7, %reg0	
	movq %rdi, %rsi	

1
	.quad 3	
name_Int_l:	

1
	movq $53587, %reg0	
	movq $6934, %reg1	

1
	jne .Matrix.set_56	
	movq %reg0, 176(%rax)	

1
	movq %rdi, %r13	
	movq %r13, %reg2	

1
	movq -56(%rbp), %rax	
	addl %eax, %edi	

1
	movq %rcx, %rax	
	movq %r13, %rax	

1
	movq $26, %reg0	
	movq $.string3_l, %rdi	

1
	idivl %ebx	
	movq %reg1, %r11	

1
	movq $19322, %reg0	
	movq $38661, %rdi	

1
	subl %r9d, %eax	
	movq -64(%rbp), %r9	

1
	movq %rbx, %rax	
	movq %r10, %reg3	

1
	call Main.func	
	movq %rax, %reg1	

1
.A2I.c2i_7:	
	movq $.string11, %reg0	

1
	jmp .Matrix.get_59	
.Matrix.get_58:	

1
	je .Main.main_10	
	movq $.string7, %rax	

1
	movq $20, %reg0	
	movq $.string2_l, %reg1	

1
.A2I.i2a_1:	
	movq $0, %reg0	

1
	movq %rax, %rdi	
	movq $0, %reg2	

1
	movq $4, %reg0	
	movq 0(%rax), %rbx	

1
	movq $.string9, %rdi	
	movq %reg1, %reg2	

1
	addl %reg0, %eax	
	movq %reg2, -112(%rbp)	

1
	imull %reg0	
	movq %r13, %reg2	

1
	je .Main.main_44	
	movq $197, %rsi	

1
	imull %edi	
	movq %rax, -16(%rbp)	

1
	movq 8(%rdi), %rbx	
	movq 0(%rax), %r12	

1
	movq -176(%rbp), %rax	
	movq -136(%rbp), %reg3	

1
	movq $1, %reg0	
	popq %rbx	

1
	movq $10, %rax	
	cmpl $0, %r14d	

1
	je .Main.main_2	
	jmp .Main.main_1	

1
	je .Main.main_43	
	movq -88(%rbp), %rax	

1
	jge .Main.main_39	
	movq %reg0, %reg1	

1
	movq $35043, %rsi	
	movq %rsi, %reg1	

1
	movq %reg0, %reg1	
	movq 48(%rbx), %reg3	

1
.string8_l:	
	.string "False"	

1
.Main.main_29:	
	jmp .Main.main_32	

1
	je .Main.out_whatever_2	
.Main.out_whatever_2:	

1
	movq %rdi, 40(%rbx)	
	cmpl %edi, %esi	

1
	call *%r14	
	movq 0(%rbx), %rax	

1
	je .CellularAutomaton.cell_at_next_evolution_7	
	movq $.string8, %reg0	

1
	sete %r15b	
	testq $1, %r15	

1
	movq $34533, %reg0	
	movq $48880, %rdi	

1
	subl %eax, %reg1d	
	movq $35037, %r13	

1
	idivl %esi	
	movq -120(%rbp), %rsi	

1
	je .Main.main_37	
	movq %reg0, %rax	

1
	call *%reg0	
	movq 280(%reg1), %reg2	

1
	movq $30102, %reg0	
	movq $25895, %reg1	

1
	movq 8(%rax), %reg1	
	movq $2, %reg2	

1
	imull %ecx	
	movq -64(%rbp), %rcx	

1
	movq $47127, %reg0	
	imull %esi	

1
	je .Main.main_128	
	movq $70, %rsi	

1
	movq %rdi, 384(%rax)	
	movq $0, %rdi	

1
	movq 56(%reg0), %reg0	
	movq 24(%rax), %rdi	

1
	movq 328(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq $126, %rsi	
	movq $.string4_l, %reg1	

1
	movq $3, %reg0	
	movq $0, %reg1	

1
	movq %rax, %r13	
	movq $2, %reg2	

1
.Main.main_31:	
	movq $.string8, %reg0	

1
	movq $177, %reg0	
	movq $0, %rcx	

1
	je .Main.main_28	
	movq $13, %reg0	

1
	addl %reg0, %esi	
	movq -32(%rbp), %rcx	

1
	movq %rax, %reg1	
	movq 24(%reg2), %rax	

1
	jne .A2I.c2i_1	
	movq $0, %rax	

1
	movq 16(%reg0), %rdi	
	cmpl %edi, %eax	

1
	movq $29011, %rax	
	subl %eax, %reg2	

1
	sete %reg0b	
	jne .A2I.a2i_5	

1
	movq %reg0, %reg1	
	addl %reg2, %reg3d	

1
	call out_error	
.Main.main_156:	

1
	movq %reg0, %r10	
	movq $63664, %reg0	

1
.Main.main_2:	
	movq 8(%rax), %reg1	

1
	jg .Main.main_7	
	movq $.string7, %r13	

1
	movq -56(%rbp), %reg1	
	movq -88(%rbp), %rdi	

1
	movq $0, %reg0	
	movq %reg0, 320(%reg1)	

1
	subl %edi, %eax	
	movq %reg2, -40(%rbp)	

1
	movq %reg0, 80(%rax)	
	leave	

1
Cons.sort:	
	pushq %reg0	

1
	movq $0, %r12	
	movq $6, %reg1	

1
	movq $226, %rsi	
	movq $.string5_l, %reg1	

1
	movq $1170, %reg0	
	movq $33472, %rax	

1
	movq %r12, 8(%rax)	
	movq %rax, 16(%rbx)	

1
	addl %edi, %reg1	
	movq $57963, %reg2	

1
	setle %reg0	
	xorq $1, %reg1	

1
.Main.main_6:	
	movq $1, %reg0	

1
	movq 424(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
.Main.main_105:	
	cdq	

1
.Matrix.mul_1:	
	movq $5, %reg0	

1
	movq %reg0, 336(%rax)	
	movq $3000, %reg0	

1
	movq %rdi, %rax	
	jmp .Main.main_22	

1
	testq $1, %rdi	
	je .Main.main_159	

1
	je .Matrix.set_51	
	movq $116, %rsi	

1
	movq %rdi, %r13	
	movq 0(%rbx), %rax	

1
	testq $1, %rax	
	jne .Main.main_111	

1
	movq %reg0, 88(%rax)	
	movq %reg0, %rax	

1
	movq %reg0, 64(%rax)	
	leave	

1
	movq $3000, %reg0	
	movq %reg0, 64(%reg1)	

1
	movq -136(%rbp), %rax	
	movq -64(%rbp), %rdi	

1
	movq %reg0, %r13	
	jmp .Matrix.elMul_1	

1
	movq $3000, %reg0	
	movq %reg0, 96(%reg1)	

1
Nil.insert:	
	pushq %rbp	

1
	jne .Main.main_2	
	movq 24(%reg0), %rax	

1
	.quad IO.out_string	
	.quad List.isNil	

1
	jne .Main.main_21	
	movq $1, %reg0	

1
	je .Cons.insert_2	
	movq $80, %rsi	

1
	movq %rdx, %rax	
	movq %rcx, %reg3	

1
	movq %reg0, %rax	
	jmp .Bazz.new_6	

1
	movq %rcx, %reg1	
	movq %reg2, %rdi	

1
	movq %rdi, %rax	
	jmp .Main.main_112	

1
	idivl %reg0	
.Matrix.get_37:	

1
	subl %reg0, %edi	
	movq -32(%rbp), %reg3	

1
	movq $100, %reg0	
	movq %reg0, %reg1	

1
	negl %r11d	
	movq $1357, %rax	

1
	addl %eax, %esi	
	movq -96(%rbp), %reg3	

1
	call *%reg0	
	movq 296(%reg1), %reg2	

1
.Main.main_105:	
	movq -112(%rbp), %reg1	

1
	movq 0(%r12), %rax	
	movq 128(%rax), %rax	

1
	cmpq $Bar_vtable, 0(%reg0)	
	je .Foo.new_10	

1
	movq %reg0, %reg1	
	call Nil.new	

1
	movq %rdi, %reg1	
	jmp .Main.main_74	

1
	movq %r13, %rax	
	subl %ecx, %reg3	

1
	call *%reg0	
	movq 112(%reg1), %reg2	

1
	subl %reg0, %reg1	
	movq -168(%rbp), %reg3	

1
	movq $.string7, %reg0	
	movq $.string7, %r14	

1
	movq $20908, %rsi	
	imull %reg1	

1
	testq $1, %reg0	
	je .List.insert_4	

1
	movq -128(%rbp), %rax	
	movq -64(%rbp), %rsi	

1
.Complex.equal_6:	
	popq %r12	

1
	jne .Matrix.set_21	
	movq %rdi, 72(%rax)	

1
	testq $1, %rdi	
	je .Matrix.set_12	

1
	jne .Main.main_1	
	movq $1, %rax	

1
	movq 16(%rax), %rdi	
	movq %reg2, %rsi	

1
	movq 64(%reg0), %reg0	
	movq 24(%reg1), %rdi	

1
	movq $4, %rax	
	movq 0(%rbx), %reg2	

1
	movq $name_IO, %r12	
	movq 0(%rbx), %reg2	

1
	movq %reg0, -128(%rbp)	
	movq $15, %reg0	

1
.Main.main_62:	
	jmp .Main.main_16	

1
	sete %sil	
	jne .Main.main_17	

1
	movq 128(%rax), %rax	
	movq %r12, %rdi	

1
	movq $3520, %r9	
	negl %r9d	

1
	sete %reg0	
	jne .Matrix.set_62	

1
	movq $.string10, %r13	
	movq 8(%rax), %r15	

1
	movq -88(%rbp), %reg1	
	movq -16(%rbp), %reg3	

1
	movq -16(%rbp), %reg1	
	movq %rbx, %rdi	

1
	movq $.string10, %r12	
	call CellularAutomaton.new	

1
	movq $50998, %rax	
	addl %reg1, %edi	

1
	call *%r12	
	movq 480(%reg1), %reg2	

1
	je .Razz.new_16	
	cmpq $Razz_vtable, 0(%reg0)	

1
	jne .Matrix.set_58	
	movq %reg0, 184(%reg1)	

1
	je .Main.main_47	
	movq $15, %rsi	

1
	idivl %esi	
	movq 0(%reg1), %r12	

1
	je .Complex.equal_4	
	movq $1, %rax	

1
	movq $0, %rbx	
	cmpl %reg1, %r12d	

1
	movq -144(%rbp), %rax	
	cmpl %eax, %reg3	

1
	movq 64(%reg0), %reg0	
	jmp .Matrix.get_20	

1
	testq $1, %rax	
	je .Main.main_63	

1
	movq $17, %reg0	
	movq %reg0, -120(%rbp)	

1
.Main.main_13:	
	movq %reg0, %rsi	

1
	movq 688(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	movq 56(%reg0), %reg0	
	movq -24(%rbp), %rdi	

1
	movq 272(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	movq -112(%rbp), %rax	
	addl %eax, %edi	

1
	movq -128(%rbp), %rax	
	movq -136(%rbp), %reg3	

1
	movq $3000, %reg0	
	movq %reg0, 536(%reg1)	

1
	movq -80(%rbp), %reg1	
	addl %esi, %reg3	

1
	movq $1, %r13	
	call Complex.new	

1
	movq -48(%rbp), %reg1	
	subl %reg2, %esi	

1
	movq 200(%reg0), %reg0	
	jmp .Matrix.get_63	

1
	testq $1, %rax	
	je .Bar.new_14	

1
	movq 392(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	movq $.string8, %reg0	
	jmp .A2I.i2c_4	

1
	movq %rax, %rbx	
	call Cons.new	

1
	jmp .Main.main_112	
.Main.main_111:	

1
	je .Main.main_183	
	movq $151, %rsi	

1
	testq $1, %reg0	
	jne .Main.main_1	

1
	je .Foo.new_1	
	movq $39, %reg0	

1
	movq 664(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq $53748, %reg0	
	movq 0(%reg1), %r12	

1
	movq %reg0, 112(%reg1)	
	movq $3000, %reg0	

1
	movq $1, %r12	
	movq $3, %reg1	

1
	je .Main.main_25	
	movq %reg0, %rax	

1
	movq $18, %rax	
	movq %rax, -112(%rbp)	

1
	movq $0, %reg0	
	movq %reg0, 208(%rax)	

1
	movq %reg0, %rax	
.Main.main_158:	

1
.A2I.a2i_aux_1:	
	movq %reg0, %rax	

1
	call *%r12	
	movq $.string8, %reg1	

1
	call *%r12	
	movq 232(%rbx), %r12	

1
	negl %reg0	
	movq $15469, %rdi	

1
	.globl Foo.getY	
	.type Foo.getY, @function	

1
	movq $0, %rax	
	movq -8(%rbp), %reg2	

1
	.type Nil.rev, @function	
Nil.rev:	

1
	.globl A2I.c2i	
	.type A2I.c2i, @function	

1
	movq 32(%reg0), %reg1	
	pushq %reg2	

1
	.globl Foo.x	
	.type Foo.x, @function	

1
	movq %rbx, %rdi	
	movq -48(%rbp), %reg3	

1
.Main.main_52:	
	movq 0(%rax), %reg1	

1
	movq -40(%rbp), %rsi	
	movq -96(%rbp), %rax	

1
.Main.main_109:	
	movq %reg0, %reg1	

1
	je .Main.main_53	
	movq $34, %reg0	

1
	movq -32(%rbp), %reg1	
	movq %r12, %reg3	

1
	movq $.string7, %reg0	
	movq $.string7, %reg1	

1
	jmp .Main.main_19	
.Main.main_20:	

1
	movq %rdi, %rax	
.Main.main_164:	

1
Matrix_vtable:	
	.quad .string0	

1
.Bar.new_6:	
	movq %rax, 16(%reg1)	

1
.Main.main_26:	
	jmp .Main.main_40	

1
	call *%reg0	
	movq -136(%rbp), %rbx	

1
	je .Razz.new_5	
	cmpq $Razz_vtable, 0(%rbx)	

1
	call *%rbx	
	movq $0, %rax	

1
	movq $7493, %reg0	
	addl %reg1, %eax	

1
	call *%rbx	
	movq -168(%rbp), %rdx	

1
	movq %rdi, 40(%reg1)	
	cmpl %reg2, %reg3	

1
.Main.main_140:	
	movq -168(%rbp), %reg1	

1
	movq %rdi, %r12	
	movq $.string6, %reg2	

1
Cons.sort:	
	pushq %rbp	

1
	movq %reg0, 120(%reg1)	
	movq $3000, %reg0	

1
	testq $1, %reg0	
	je .Main.main_160	

1
	addl %eax, %edi	
	movq -80(%rbp), %rax	

1
.Main.main_20:	
	movq $62649, %r12	

1
	call *%r12	
.Main.funccaseb_3:	

1
	.quad .string8_l	
	.quad 3	

1
.Matrix.get_45:	
	movq $4, %reg0	

1
	movq %reg0, %rbx	
	movq $.string19, %reg2	

1
	idivl %ecx	
	movq $8271, %rsi	

1
	jne .Matrix.set_34	
	movq %reg0, 112(%rax)	

1
	addl %reg0, %reg1	
	movq %rdi, 16(%rax)	

1
	testq $1, %rax	
	je .Main.main_29	

1
	movq -128(%rbp), %reg1	
	negl %reg1d	

1
	movq %rdi, 264(%rax)	
	movq $0, %rdi	

1
	call out_error	
.Main.main_138:	

1
	call out_error	
.Main.main_106:	

1
	jmp .Matrix.set_20	
.Matrix.set_19:	

1
	movq -104(%rbp), %rax	
	cmpl %reg2, %reg3	

1
	movq 72(%rax), %rax	
	movq %r12, %rdi	

1
	movq 56(%r13), %r13	
	movq %rbx, %reg2	

1
.Main.main_105:	
	movq %reg0, %rsi	

1
	movq $106, %reg0	
	movq $.string2_l, %reg1	

1
	movq $102, %rsi	
	movq $.string3_l, %reg1	

1
	movq 8(%rax), %reg1	
	call *%reg2	

1
	movq %rbx, %reg1	
	call Object.type_name	

1
	setle %reg0l	
	cmpl %edi, %reg2	

1
	je .Dictionary.insert_2	
	movq $14, %rsi	

1
	idivl %esi	
	movq -152(%rbp), %reg2	

1
	je .Main.main_149	
	movq $115, %rsi	

1
	je .Matrix.elMul_3	
	movq $133, %rsi	

1
	movq %rbx, %reg1	
	call String.length	

1
	movq %reg0, 144(%rax)	
	movq $3000, %reg0	

1
.DicNode.insert_2:	
	popq %reg0	

1
	.quad 2	
percentd_string_l:	

1
	movq %reg0, 576(%rax)	
	movq $3000, %reg0	

1
	je .Main.new_3	
	cmpq $Main_vtable, 0(%reg0)	

1
	testq $1, %rsi	
	je .Main.main_162	

1
	movq %rdi, 400(%rax)	
	movq $3000, %rdi	

1
	movq 24(%reg0), %rsi	
	movq $0, %reg2	

1
	testq $1, %rcx	
	je .Main.main_16	

1
	je .Main.main_156	
	movq -136(%rbp), %rdi	

1
	movq %rsp, %rbp	
	movq $72, %reg2	

1
	movq %rcx, %reg1	
	movq -136(%rbp), %reg1	

1
	.string "PASS"	
.string7:	

1
	movq 8(%rbx), %reg1	
	movq %r12, %rdi	

1
	addl %reg0, %reg1d	
	movq $7429, %rax	

1
.Foo.new_6:	
	movq %rax, 16(%rbx)	

1
	movq -48(%rbp), %reg1	
	movq -32(%rbp), %reg3	

1
	setle %sil	
	jg .Main.main_94	

1
	movq $10, %reg0	
	movq $1, %r13	

1
	je .Main.main_22	
	movq $13, %reg0	

1
	movq $61695, %rax	
	movq $50213, %reg1	

1
	testq $1, %rax	
	je .Main.main_17	

1
	movq -56(%rbp), %reg1	
	movq -48(%rbp), %reg3	

1
	movq %reg0, %reg1	
	movq $12591, %reg0	

1
	movq -16(%rbp), %rax	
	addl %reg2, %reg3	

1
	je .Main.main_142	
	movq $112, %rsi	

1
	movq $1, %reg0	
	movq 24(%rbx), %reg2	

1
.Main.main_116:	
	cdq	

1
	je .Bar.new_12	
	movq $10, %reg0	

1
	je .Main.main_87	
	movq $61, %reg0	

1
	movq %rsi, %reg1	
	movq 16(%rbx), %reg3	

1
	.globl Foo.setS	
	.type Foo.setS, @function	

1
	testq $1, %rdi	
	je .DicNode.get_6	

1
	jne .Matrix.set_8	
	movq %reg0, 32(%rax)	

1
	movq %reg0, -104(%rbp)	
	movq $9, %reg0	

1
	call String.concat	
	movq 8(%reg0), %reg1	

1
	testq $1, %rsi	
	je .Main.main_52	

1
	movq %rdi, %rax	
.Main.main_171:	

1
	testq $1, %reg0	
	je .Main.main_118	

1
	movq %reg0, %rbx	
	movq $12591, %reg0	

1
	movq -160(%rbp), %reg1	
	movq %r8, %r9	

1
	testq $1, %rax	
	je .Main.main_20	

1
	movq %reg0, %rax	
	jmp .Matrix.set_31	

1
	movq 384(%rbx), %r12	
	movq 0(%rbx), %rax	

1
.Main.main_7:	
	cmpl $0, %reg0	

1
	je .Main.main_162	
	movq -32(%rbp), %rax	

1
	imull %reg0	
	movq %reg1, %r14	

1
.Bar.new_20:	
	movq 48(%rbx), %rdx	

1
	movq $7, %reg0	
	movq %rdi, %reg2	

1
	movq %reg0, 72(%reg1)	
	movq $3000, %reg0	

1
	negl %reg0	
	movq -72(%rbp), %reg2	

1
	subl %esi, %eax	
	movq -104(%rbp), %reg3	

1
.Main.funcifb_2:	
	popq %reg0	

1
	movq $3000, %rdi	
	movq %rdi, 336(%reg1)	

1
Main_vtable:	
	.quad .string4	

1
	je .Main.main_51	
	movq $203, %reg0	

1
.Main.main_11:	
	movq %reg0, %rax	

1
	movq 16(%rax), %rax	
	jmp .Matrix.get_5	

1
	addl %edi, %eax	
	movq %rax, -64(%rbp)	

1
	movq -176(%rbp), %rsi	
	addl %esi, %reg3	

1
	movq 8(%reg0), %r13	
	cmpl $0, 16(%reg0)	

1
	movq %rdi, 304(%rax)	
	movq $3000, %rdi	

1
	movq $0, %rdi	
	movq %rdi, 656(%reg1)	

1
	movq %reg0, %rax	
	jmp .Foo.new_6	

1
	movq 680(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	cmpq $Razz_vtable, 0(%reg0)	
	je .Foo.new_4	

1
	movq %reg0, 648(%reg1)	
	movq $0, %reg0	

1
	jmp .Main.main_38	
.Main.main_35:	

1
	je .Main.main_2	
	movq $113, %reg0	

1
	movq %reg0, %rdi	
	movq $1, %r9	

1
	addl %reg0, %reg1	
	movq %rax, -112(%rbp)	

1
	movq %reg0, %reg1	
.Main.main_49:	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_11	

1
	movq 136(%r12), %r12	
	movq %rbx, %rdi	

1
	movq 56(%reg0), %reg0	
	movq 8(%rax), %reg2	

1
	movq 16(%reg0), %rdi	
	movq 24(%reg0), %rsi	

1
	addl %reg0, %reg1	
	movq $57963, %rdi	

1
	movq -32(%rbp), %reg1	
	addl %reg2, %edi	

1
	je .Main.main_13	
	movq $21, %reg0	

1
	movq -40(%rbp), %rax	
	movq %rsi, %rcx	

1
	movq %reg0, 568(%reg1)	
	movq $3000, %reg0	

1
	movq %reg0, -136(%rbp)	
	movq $14, %reg0	

1
.Main.main_34:	
	movq $29773, %rax	

1
	jmp .Main.out_whatever_5	
.Main.out_whatever_3:	

1
	je .Main.main_25	
	movq $169, %reg0	

1
	movq $28260, %rax	
	subl %reg1, %edi	

1
	cmpq $Bar_vtable, 0(%reg0)	
	je .Bar.new_10	

1
	subl %edi, %eax	
	movq %rax, -152(%rbp)	

1
	movq -32(%rbp), %rdi	
	call *%reg2	

1
	.quad 0	
.string2_l:	

1
.A2I.i2a_aux_3:	
	cdq	

1
.Main.main_141:	
	cdq	

1
	movq %rbx, %rsi	
	call String.concat	

1
	je .Main.main_1	
	movq $14, %rax	

1
	idivl %reg0d	
	addl %eax, %r10d	

1
	call out_error	
.Foo.new_12:	

1
	call *%reg0	
	movq 696(%rbx), %r12	

1
	movq $47879, %rax	
	cmpl %reg1, %reg2	

1
.CellularAutomaton.cell_left_neighbor_1:	
	movq $1, %reg0	

1
	movq $3000, %reg0	
	movq %reg0, 632(%reg1)	

1
	movq 8(%reg0), %rax	
	movq %r12, %reg3	

1
	movq %rax, %rsi	
	call IO.out_string	

1
	movq -184(%rbp), %rax	
	addl %reg2, %esi	

1
	subl %eax, %reg1	
	movq -88(%rbp), %reg3	

1
	movq $48391, %rax	
	negl %eax	

1
	negl %eax	
	movq $12, %r10	

1
	.quad 1	
.string8_l:	

1
.Matrix.set_45:	
	movq $4, %r8	

1
	movq 8(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
Bar.setJ:	
	pushq %reg0	

1
	movq -16(%rbp), %rax	
	cmpl %reg2, %edi	

1
	movq $60127, %r10	
	addl %r10d, %eax	

1
	movq $52, %rax	
	movq 0(%rbx), %r12	

1
	movq -120(%rbp), %reg1	
	movq -120(%rbp), %reg2	

1
	call *%r12	
	movq 32(%reg1), %r12	

1
	testq $1, %rdi	
	je .Dictionary.get_4	

1
.Main.main_123:	
	movq %reg0, %reg1	

1
	call Bool.new	
	movq 0(%reg0), %reg1	

1
	subl %reg0, %r8d	
	movq %rcx, %rax	

1
	movq 8(%reg0), %reg1	
	movq %rbx, %rsi	

1
	movq $55166, %rax	
	negl %eax	

1
	movq %reg0, %r14	
	movq $10, %reg0	

1
	.quad 19	
name_String_l:	

1
	je .Main.main_35	
	movq $13, %reg0	

1
	movq %rdi, %rsi	
	cmpl $0, %edi	

1
	je .Main.main_94	
	movq $64, %rsi	

1
	call *%reg0	
	jmp .Main.main_192	

1
	movq $18189, %r11	
	movq $0, %rbx	

1
	call *%rax	
	movq $61456, %reg1	

1
	movq $5, %reg0	
	movq $0, %reg1	

1
	movq $2211, %reg0	
	imull %reg1	

1
	jmp .Main.func_1	
.Main.func_2:	

1
	movq %rsi, %rax	
	movq -64(%rbp), %rax	

1
	movq %reg0, %rax	
	movq $18422, %reg0	

1
	movq %rsi, %reg1	
	imull %edi	

1
	movq $30773, %rdi	
	cmpl %edi, %eax	

1
	movq %reg0, 8(%rbx)	
	movq 8(%rbx), %reg2	

1
	movq %reg0, -16(%rbp)	
	movq $46509, %rax	

1
	movq 16(%reg0), %reg1	
	movq 8(%reg0), %reg2	

1
.Matrix.get_36:	
	movq $1, %reg0	

1
	movq 40(%reg0), %reg0	
	movq 8(%reg1), %reg2	

1
	je .Main.main_52	
	movq $203, %rsi	

1
.Main.main_105:	
	movq -112(%rbp), %rsi	

1
	movq %reg0, %rbp	
	subq $40, %reg0	

1
	imull %edi	
	movq %reg1, -16(%rbp)	

1
	movq -184(%rbp), %reg1	
	movq -48(%rbp), %reg3	

1
.Matrix.set_47:	
	movq $5, %rcx	

1
	movq %reg0, 712(%reg1)	
	movq $0, %reg0	

1
	movq 200(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	je .Main.main_5	
	movq $135, %rsi	

1
	addl %reg0, %eax	
	movq -152(%rbp), %reg3	

1
	movq 240(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq $4, %rsi	
	movq $.string6_l, %reg1	

1
	addl %eax, %ecx	
	movq %rsi, %reg3	

1
	movq %reg0, %reg1	
	movq $49411, %reg0	

1
	movq $35, %reg0	
	movq $.string2_l, %reg1	

1
	movq $.string11, %rax	
	movq %reg1, %rdi	

1
	movq 8(%reg0), %reg1	
	cmpl $0, %edi	

1
	movq 16(%rbx), %reg1	
	movq 24(%rbx), %rsi	

1
	movq %reg0, %reg1	
	jmp .Main.main_79	

1
	pushq %r12	
	movq $80, %rdi	

1
	movq $10, %reg0	
	movq $1, %reg1	

1
	call Int.new	
	movq %reg0, %reg1	

1
	idivl %edi	
	movq %rax, -16(%rbp)	

1
	movq %rdi, 408(%rax)	
	movq $3000, %rdi	

1
	je .Main.funcifb_1	
	movq $1, %rbx	

1
	addl %eax, %edi	
	movq %r12, %rax	

1
	idivl %reg0	
	movq $2739, %reg1	

1
	movq -40(%rbp), %rax	
	subl %edi, %eax	

1
	movq -24(%rbp), %rax	
	movq %r8, %reg3	

1
	addl %edi, %reg1	
	leave	

1
	idivl %esi	
.Matrix.set_37:	

1
	jge .Main.main_7	
	movq $.string8, %reg0	

1
	movq %reg0, 704(%reg1)	
	movq $3000, %reg0	

1
	movq $3000, %rdi	
	movq %rdi, 24(%reg1)	

1
	testq $1, %rcx	
	je .Main.main_155	

1
	movq %rdi, %reg1	
	movq -144(%rbp), %rdi	

1
	movq $1, %reg0	
	addl %reg1, %esi	

1
	subl %eax, %reg1	
	movq $48118, %reg2	

1
	movq 312(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq $.string12, %reg0	
	movq 0(%rbx), %r12	

1
	movq $62150, %reg0	
	movq %reg0, %reg1	

1
	movq $5880, %rax	
	movq $12843, %r12	

1
	movq $78, %reg0	
	movq $.string2_l, %rdi	

1
	call *%rax	
	movq 272(%reg1), %reg2	

1
	movq %reg0, 568(%rax)	
	movq $3000, %reg0	

1
	je .Main.main_52	
	movq $203, %reg0	

1
	call *%r12	
	movq -184(%rbp), %rax	

1
	.quad 6	
.string6_l:	

1
	movq $3000, %rdi	
	movq %rdi, 360(%reg1)	

1
	sete %dil	
	jne .Main.main_9	

1
	movq 224(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	call *%r12	
	movq -40(%rbp), %rdx	

1
	movq $10, %rsi	
	movq %r12, %rax	

1
	movq %rdi, 568(%reg1)	
	movq $0, %rdi	

1
	call out_error	
.Cons.sort_2:	

1
	movq $4, %rax	
	movq $22, %rsi	

1
	movq %rdi, %rax	
	movq %rax, 56(%reg2)	

1
	movq %reg0, %reg1	
	movq $.string19, %r12	

1
	jg .Main.main_73	
	movq -80(%rbp), %rax	

1
.Main.main_11:	
	movq 0(%rbx), %reg1	

1
	movq $name_IO, %r12	
	movq 0(%reg1), %rax	

1
	movq $53748, %rax	
	movq 0(%rbx), %reg2	

1
	movq 392(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	negl %reg0	
	movq %reg1, %r8	

1
	movq $.string12, %rax	
	jmp .A2I.i2c_12	

1
	.size List.head, .-List.head	
	.globl List.tail	

1
	movq $22520, %rsi	
	movq $40813, %reg1	

1
	movq $.string7, %rbx	
	movq %rax, %reg2	

1
	movq %rax, %rcx	
	movq -128(%rbp), %r8	

1
	movq %r13, %rsi	
	movq %reg2, %rax	

1
.Foo.new_5:	
	movq %reg0, %rax	

1
	je .Main.main_126	
	movq $70, %reg0	

1
	subl %eax, %reg1	
	movq -112(%rbp), %rcx	

1
	call Object.abort	
	movq $3, %reg0	

1
	movq $62420, %rax	
	movq $31735, %reg1	

1
	movq %rax, 24(%reg1)	
	movq $7, %reg2	

1
	movq %rsi, %rbx	
	movq $.string7, %rdi	

1
	movq %reg0, %rax	
	jmp .Main.main_79	

1
	subl %reg0, %eax	
	movq $43177, %reg2	

1
	movq 8(%rax), %rdi	
	movq %r12, %rsi	

1
	movq %rsp, %reg1	
	subq $136, %rsp	

1
	movq -160(%rbp), %rax	
	movq -104(%rbp), %rdi	

1
Complex.equal:	
	pushq %reg0	

1
	jne .A2I.c2i_19	
	movq $9, %reg0	

1
	imull %edi	
	movq $11513, %rdi	

1
	movq 40(%reg0), %reg0	
	movq 8(%reg1), %rdi	

1
	jne .Main.main_22	
	movq %r14, %reg1	

1
	call *%rax	
	movq $20, %rax	

1
.Matrix.get_41:	
	movq $2, %reg0	

1
	jmp .CellularAutomaton.cell_right_neighbor_2	
.CellularAutomaton.cell_right_neighbor_1:	

1
.A2I.i2c_13:	
	movq $7, %rcx	

1
	subq $136, %rsp	
	pushq %rbx	

1
	je .Main.main_95	
	movq %reg0, %rsi	

1
	negl %reg0	
	movq $30797, %r8	

1
	movq -40(%rbp), %rdx	
.Main.main_43:	

1
	movq $60606, %reg0	
	cmpl %reg1, %reg2	

1
	movq %reg0, %rax	
	jmp .Main.main_42	

1
	call String.concat	
	movq 0(%r12), %reg1	

1
.Matrix.mul_2:	
	movq %r12, %reg1	

1
	movq 80(%rax), %rax	
	movq %r14, %reg2	

1
	movq $3966, %reg0	
	cmpl %edi, %eax	

1
	movq -8(%rbp), %rdi	
	movq -32(%rbp), %rsi	

1
	sete %cl	
	jne .A2I.i2c_13	

1
	movq -152(%rbp), %reg1	
	movq -24(%rbp), %rdi	

1
	movq %reg0, 528(%rax)	
	movq $3000, %reg0	

1
	.string "0123456789"	
.string6:	

1
	movq %reg0, 16(%rbx)	
	movq $.string7, %reg0	

1
	movq -176(%rbp), %rdi	
	movq -48(%rbp), %rax	

1
.A2I.i2c_13:	
	movq $7, %reg0	

1
.Main.main_73:	
	movq %reg0, %reg1	

1
	jne .Complex.equal_2	
	cmpl $0, %reg0d	

1
	movq %rdi, 472(%reg1)	
	movq $0, %rdi	

1
	movq %rdi, 552(%reg1)	
	movq $0, %rdi	

1
	movq $30215, %rax	
	subl %reg1, %edi	

1
	movq 144(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	je .Main.main_116	
	movq $67, %reg0	

1
.Matrix.set_31:	
.Matrix.set_29:	

1
	call out_error	
.Matrix.set_51:	

1
	cmpq $Main_vtable, 0(%rax)	
	je .Main.main_6	

1
	je .Main.func_2	
	cmpq $Main_vtable, 0(%reg0)	

1
	movq $.string16, %reg0	
	jmp .A2I.i2c_20	

1
.Main.main_93:	
	movq -72(%rbp), %rax	

1
	movq %rdi, 336(%rax)	
	movq $0, %rdi	

1
	movq 8(%reg0), %rdx	
	movq 0(%rdx), %rbx	

1
	movq -88(%rbp), %rax	
	movq %rdi, %rsi	

1
	call ListNode.new	
	movq %rax, 8(%rbx)	

1
	jne .Matrix.get_17	
	movq 56(%rax), %rax	

1
Complex.init:	
	pushq %reg0	

1
	addl %eax, %ecx	
	movq %rsi, %rax	

1
	movq -32(%rbp), %rax	
	movq -24(%rbp), %reg3	

1
	jne .Matrix.get_23	
	movq 80(%reg0), %reg0	

1
	addl %reg0, %reg1	
	movq %reg2, 40(%rbx)	

1
	movq -16(%rbp), %rax	
	movq %r13, %rdi	

1
	call *%reg0	
	movq $58921, %rdi	

1
	addl %edi, %reg1	
	movq $4, %reg2	

1
	movq %r12, %reg1	
	movq -96(%rbp), %reg3	

1
	movq %rax, %rsi	
	movq -16(%rbp), %rax	

1
	movq 24(%reg0), %rax	
	sete %reg2	

1
	movq %rax, %reg1	
	movq 8(%rbx), %rsi	

1
	movq %rdi, 336(%reg1)	
	movq $3000, %rdi	

1
	.string "IO\\n"	
.string10:	

1
	call *%reg0	
	movq 432(%reg1), %reg2	

1
.Main.main_95:	
	movq %reg0, %rax	

1
	subl %reg0, %eax	
	movq -16(%rbp), %rdi	

1
	setle %sil	
	jg .Main.main_35	

1
	movq %reg0, 576(%rax)	
	movq $0, %reg0	

1
	movq 24(%rbx), %reg1	
	addl %edi, %reg3	

1
	call *%reg0	
	movq 0(%rax), %reg2	

1
	call *%r12	
	movq 24(%rbx), %rax	

1
	movq $229, %rsi	
	movq $.string5_l, %reg1	

1
	movq 24(%rbx), %rax	
	imull %reg2	

1
	movq -128(%rbp), %rax	
	subl %reg2, %esi	

1
	.size Complex.new, .-Complex.new	
	.globl _main	

1
	movq -88(%rbp), %rax	
	movq %rbx, %rdi	

1
Complex.print:	
	pushq %rbp	

1
	negl %eax	
	movq -64(%rbp), %rcx	

1
	negl %reg0	
	movq -96(%rbp), %rdi	

1
.Main.iota_1:	
	movq %r13, %reg1	

1
	movq 112(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	je .Main.main_124	
	movq %reg0, %reg1	

1
	movq %r13, %rdi	
	subl %eax, %edi	

1
.Main.main_4:	
	cmpl $0, 8(%rbx)	

1
	setl %reg0l	
	jge .Main.main_18	

1
	negl %reg0d	
	movq 0(%reg1), %reg2	

1
	movq %rcx, %r13	
	movq %rax, %reg3	

1
	movq $18119, %reg0	
	subl %eax, %reg2	

1
	addl %edi, %reg1	
	movq %rax, 40(%reg3)	

1
	movq -144(%rbp), %reg1	
	subl %eax, %esi	

1
	movq %r14, %reg1	
	call *%r13	

1
	cmpq $IO_vtable, 0(%reg0)	
	je .Main.main_7	

1
	movq $38208, %r11	
	imull %r11d	

1
	movq $127, %reg0	
	movq $.string5_l, %rdi	

1
	movq %reg0, %reg1	
.Main.main_10:	

1
	movq %reg0, %r10	
	movq $55273, %reg2	

1
	movq $27, %reg0	
	movq $.string2_l, %rdi	

1
	jmp .Matrix.get_50	
.Matrix.get_49:	

1
	testq $1, %reg0	
	je .Main.main_141	

1
	movq $21018, %rax	
	movq %reg1, %rdx	

1
	movq %reg0, %reg1	
	jmp .Main.main_118	

1
	movq 80(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	je .Main.main_156	
	movq %reg0, %rdi	

1
Bazz.printh:	
	pushq %reg0	

1
	je .Main.print_list_5	
	movq $112, %reg0	

1
	movq $12, %r8	
	movq -112(%rbp), %rax	

1
	movq %rax, -24(%rbp)	
	movq $0, %rax	

1
	movq %rax, %r12	
	movq %rax, %rbx	

1
	.string "Complex"	
.string0:	

1
	call *%reg0	
	movq 680(%reg1), %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 432(%reg1)	

1
	movq %rax, %reg1	
	movq $4, %reg2	

1
	call *%r15	
	movq -40(%rbp), %rax	

1
	movq $3000, %reg0	
	movq %reg0, 504(%reg1)	

1
	.type Bar.func2, @function	
Bar.func2:	

1
	jg .Main.main_13	
	movq $1, %r12	

1
	movq -8(%rbp), %rdi	
	movq -48(%rbp), %reg3	

1
	movq %reg0, %r12	
	call Nil.new	

1
	movq %rbx, %reg1	
	movq $18422, %rbx	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_55	

1
.Main.func_1:	
	movq $.string7, %r12	

1
	testq $1, %rsi	
	je .Main.main_22	

1
	movq $.string7, %rax	
	movq %r12, %reg2	

1
	addl %eax, %reg1	
	movq %reg2, %r13	

1
	addl %reg0, %reg1	
	movq -80(%rbp), %rax	

1
	subl %eax, %edi	
	movq %rdi, %r13	

1
	call *%rax	
	jmp .Main.main_192	

1
	movq -72(%rbp), %rcx	
	addl %ecx, %esi	

1
	call out_error	
.Bar.new_20:	

1
	movq 32(%rax), %rax	
	movq %r13, %rdi	

1
	.globl Nil.rev	
	.type Nil.rev, @function	

1
	je .Main.main_43	
	movq $34, %reg0	

1
	movq $11, %rsi	
	movq $.string1_l, %reg1	

1
	movq $100, %reg0	
	movq %reg0, -16(%rbp)	

1
	negl %eax	
	movq %rax, 16(%rdi)	

1
	movq -40(%rbp), %rdi	
	subl %eax, %edi	

1
	movq $53181, %r8	
	addl %r8d, %reg1	

1
	movq $0, %reg0	
	movq $1, %r14	

1
	movq -96(%rbp), %reg1	
	movq %reg2, %rsi	

1
	addl %eax, %r12d	
	movq $15079, %rax	

1
	movq $118, %reg0	
	movq $.string2_l, %rdi	

1
	movq %rdi, 104(%rax)	
	movq %rdi, %rax	

1
	movq 248(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq $1, %rdi	
	addl %reg1, %esi	

1
	movq -16(%rbp), %reg1	
	movq -136(%rbp), %reg3	

1
.A2I.a2i_2:	
	popq %reg0	

1
	movq %reg0, 392(%rax)	
	movq $3000, %reg0	

1
	movq $.string11, %rax	
	popq %r12	

1
	movq $2, %reg0	
	movq 0(%reg1), %rax	

1
.Main.main_104:	
	jmp .Main.main_165	

1
	movq 16(%rax), %rdi	
	movq 24(%rax), %rsi	

1
A2I.i2a_aux:	
	pushq %rbp	

1
	movq %reg0, 16(%reg1)	
	movq $2, %reg0	

1
	movq %reg0, %rsi	
	cmpl %reg2, %edi	

1
	subl %eax, %reg1	
	movq -168(%rbp), %reg3	

1
	call *%reg0	
	movq 24(%reg1), %reg0	

1
	call *%r12	
	movq 328(%reg1), %rax	

1
	movq %reg0, %rax	
	jmp .Matrix.set_29	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_63	

1
	movq %reg0, 32(%rax)	
	movq %reg0, %rax	

1
	movq -160(%rbp), %rax	
	movq -80(%rbp), %reg3	

1
	.size Bar.getJ, .-Bar.getJ	
	.globl Bar.setJ	

1
	.globl Main.print_list	
	.type Main.print_list, @function	

1
	je .Main.main_164	
	movq $142, %reg0	

1
	call out_error	
.Main.main_161:	

1
	movq $89, %rsi	
	movq $.string2_l, %reg1	

1
	movq %rax, -16(%rbp)	
	movq $57869, %reg2	

1
	subl %edi, %reg1	
	movq %reg2, -176(%rbp)	

1
	movq 16(%reg0), %rdi	
	addl %esi, %reg3	

1
	testq $1, %rax	
	je .Main.main_72	

1
	movq -16(%rbp), %rcx	
	imull %ecx	

1
	movq 16(%rbx), %rax	
	addl %edi, %reg3	

1
	addl %reg0, %reg1	
	movq %rbx, %rsi	

1
	call *%reg0	
	movq 560(%reg1), %reg0	

1
	movq $57963, %reg0	
	subl %reg1, %reg2	

1
	movq %reg0, %reg1	
	movq $9508, %reg0	

1
	je .Main.main_3	
	movq $4, %rsi	

1
	movq -168(%rbp), %reg1	
	movq -16(%rbp), %reg3	

1
	testq $1, %rdi	
	je .Main.out_whatever_6	

1
	movq $3000, %reg0	
	movq %reg0, 528(%rax)	

1
	imull %edi	
	movq $3850, %reg1	

1
	movq $3000, %reg0	
	movq %reg0, 736(%reg1)	

1
	call Object.type_name	
	cmpl $0, 8(%reg0)	

1
	testq $1, %r13	
	je .Main.main_61	

1
	movq $.string10, %reg0	
	movq %reg0, %r12	

1
.Main.main_61:	
	cmpl $0, %reg0d	

1
	je .Main.main_74	
	movq $19, %reg0	

1
	movq $0, %reg0	
	jmp .A2I.a2i_2	

1
	cmpq $IO_vtable, 0(%reg0)	
	je .Main.main_6	

1
	je .Main.main_29	
	movq $13, %reg0	

1
	movq %rdi, 528(%reg1)	
	movq $0, %rdi	

1
	je .Main.main_48	
	movq $201, %rsi	

1
	movq -128(%rbp), %rax	
	movq -144(%rbp), %reg3	

1
.Main.main_34:	
	movq $29773, %reg0	

1
	ret	
	.size Bar.setJ, .-Bar.setJ	

1
	movq %r13, %rax	
	movq -80(%rbp), %rdi	

1
	movq $Razz_vtable, 0(%rax)	
	movq %rax, %reg1	

1
	negl %reg0d	
	movq -152(%rbp), %reg2	

1
	movq %rax, %reg1	
	movq %r12, %r13	

1
	movq -144(%rbp), %r8	
	negl %r8d	

1
	je .Main.main_133	
	movq $88, %rsi	

1
	movq %rdi, %rax	
	movq -176(%rbp), %rdi	

1
	negl %r13d	
	movq $1, %rax	

1
	movq %rax, 8(%rbx)	
	jmp .List.insert_3	

1
	jne .Main.main_2	
	movq 24(%rbx), %rax	

1
	movq 440(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
.Main.main_145:	
	cdq	

1
	subl %reg0, %reg1	
	movq %rax, -40(%rbp)	

1
	je .Main.main_53	
	movq -136(%rbp), %reg1	

1
.Cons.sort_2:	
	movq 0(%rax), %reg1	

1
	movq $.string16, %rdi	
	movq %rdi, %reg1	

1
	movq $.string14, %rax	
	jmp .A2I.i2c_16	

1
.Main.main_73:	
	movq 0(%reg0), %rax	

1
	movq 152(%r14), %r14	
	movq %rax, %rdi	

1
	movq $12, %rcx	
	movq -96(%rbp), %reg2	

1
	movq $15, %rax	
	movq %rax, -48(%rbp)	

1
	subl %eax, %reg1	
	movq %reg2, %r13	

1
	je .Main.main_175	
	movq $308, %reg0	

1
	movq $46509, %rax	
	movq %rax, -24(%rbp)	

1
	movq 16(%rbx), %reg1	
	movq 8(%rbx), %rax	

1
	movq %rdi, 208(%reg1)	
	movq $3000, %rdi	

1
	movq %rdi, %reg1	
	jmp .Main.main_118	

1
	.size ListNode.next, .-ListNode.next	
	.globl ListNode.insert	

1
	movq $8, %rcx	
	movq %reg1, %reg2	

1
	je .Main.main_181	
	movq $151, %rsi	

1
	movq 536(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	negl %eax	
	movq -56(%rbp), %reg2	

1
	movq -64(%rbp), %reg1	
	addl %ecx, %reg3	

1
	.globl Cons.cdr	
	.type Cons.cdr, @function	

1
	movq %reg0, 176(%rax)	
	movq %reg0, %rax	

1
	movq %reg0, %rax	
	movq $46167, %reg0	

1
	movq 8(%rax), %reg1	
	cmpl $0, %edi	

1
	jne .Main.main_4	
	movq $.string7, %reg0	

1
.Complex.equal_1:	
	movq 0(%r12), %rax	

1
	movq -80(%rbp), %reg1	
	movq -152(%rbp), %reg3	

1
	movq -160(%rbp), %rax	
	movq -16(%rbp), %rdi	

1
	movq %rax, %rcx	
	movq $29011, %rax	

1
	movq %r15, 8(%reg1)	
	jmp .Main.main_65	

1
	call *%reg0	
	movq 128(%rbx), %reg2	

1
	movq $25, %reg0	
	movq $.string2_l, %reg1	

1
	jne .Matrix.set_23	
	movq %reg0, 80(%rax)	

1
	movq -8(%rbp), %reg1	
	movq -48(%rbp), %reg3	

1
	movq 216(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq %rax, %rcx	
	movq -168(%rbp), %rax	

1
	.size Complex.reflect_Y, .-Complex.reflect_Y	
	.globl Complex.equal	

1
	subl %eax, %ecx	
	movq -112(%rbp), %rax	

1
	movq $2730, %rax	
	movq %reg1, %reg2	

1
	jge .Main.main_45	
	movq %reg0, %rax	

1
	jne .Main.main_1	
	movq %rsi, %reg1	

1
	movq %reg0, %reg1	
	movq %reg1, -72(%rbp)	

1
	movq $.string21, %reg0	
	movq 0(%reg1), %reg2	

1
.Main.main_27:	
	movq %reg0, %reg1	

1
	movq %rdi, %reg1	
.Main.main_165:	

1
	pushq %reg0	
	movq %rsi, %reg2	

1
.Foo.new_4:	
	call Bar.new	

1
	movq $name_IO, %reg0	
	movq 0(%reg1), %rax	

1
	movq -16(%rbp), %rax	
	movq -160(%rbp), %rsi	

1
	movq -16(%rbp), %reg1	
	movq %r8, %r9	

1
	testq $1, %reg0	
	je .Razz.new_19	

1
	movq $9, %reg0	
	movq $.string2_l, %rdi	

1
	movq 40(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	addl %edi, %reg1	
	movq -168(%rbp), %rdi	

1
	movq $23915, %rax	
	movq $63399, %rsi	

1
.Main.main_107:	
	cdq	

1
	movq $12, %rsi	
	movq -16(%rbp), %rax	

1
.Main.func_2:	
	movq $.string6, %rax	

1
	movq $18422, %reg0	
	subl %ebx, %reg2	

1
	sete %sil	
	jne .Main.main_27	

1
	subl %eax, %esi	
	movq -96(%rbp), %reg3	

1
	jne .Main.main_1	
	movq %reg0, %rax	

1
	call *%reg0	
.Main.func_2:	

1
	movq 8(%reg0), %rdi	
	negl %reg2	

1
	addl %esi, %eax	
	movq %r14, %rsi	

1
	movq 464(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
.string6_l:	
	.string "Hello, world.\\n"	

1
	.string "\\\\\\\""	
.string10:	

1
	movq -152(%rbp), %rax	
	movq -80(%rbp), %reg3	

1
	jmp .Main.main_133	
.Main.main_132:	

1
	sete %cl	
	jne .Matrix.get_32	

1
	sete %r8b	
	jne .Matrix.set_19	

1
	movq %reg0, %rax	
	jmp .Main.main_32	

1
	cmpq $Int_vtable, 0(%reg0)	
	je .Main.new_2	

1
	movq %reg0, %rbp	
	movq %reg2, %rdi	

1
	setl %dil	
	jge .A2I.a2i_aux_2	

1
	movq %rdi, %reg1	
	movq $empty_string, %rdi	

1
	movq %r12, %reg1	
	call Object.copy	

1
	movq %rdi, %reg1	
	jmp .Main.main_85	

1
	movq %reg0, 232(%reg1)	
	movq $0, %reg0	

1
	addl %eax, %reg1	
	movq $46874, %reg2	

1
	movq $16029, %rax	
	movq $19302, %rsi	

1
	call *%r12	
	movq 536(%rbx), %rax	

1
	movq 392(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq 24(%rbx), %reg1	
	movq %r12, %rsi	

1
	movq %reg0, %reg1	
	movq 8(%rbx), %rdx	

1
	movq -24(%rbp), %reg1	
	movq -64(%rbp), %rsi	

1
	movq $35043, %reg0	
	movq %reg0, %reg1	

1
	movq -160(%rbp), %reg1	
	movq $0, %rcx	

1
	movq %r13, %reg1	
	movq %rdi, %rsi	

1
	movq $8, %reg0	
	movq %rdi, %reg2	

1
	call *%reg0	
	movq -112(%rbp), %rax	

1
	je .Main.main_11	
	movq $20, %rsi	

1
	movq -24(%rbp), %reg1	
	movq -120(%rbp), %r9	

1
	.size Matrix.get, .-Matrix.get	
	.globl Matrix.set	

1
	movq $49656, %rax	
	negl %reg1	

1
	testq $1, %rax	
	je .Main.main_30	

1
	jmp .A2I.i2c_6	
.A2I.i2c_5:	

1
	call *%r12	
	movq 48(%reg1), %reg2	

1
	jne .DicNode.insert_1	
	movq %rbx, %rax	

1
	movq %reg0, %rax	
	movq %rax, -96(%rbp)	

1
	.type DicNode.new, @function	
DicNode.new:	

1
	setl %sil	
	jge .Main.main_68	

1
	testq $1, %rsi	
	je .Main.main_79	

1
.Main.main_123:	
	movq -152(%rbp), %rax	

1
	movq %rax, 8(%rbx)	
	movq $1, %reg2	

1
	movq $7429, %reg0	
	negl %reg1	

1
	movq $25834, %reg0	
	imull %reg0d	

1
.Main.main_13:	
	movq 0(%rax), %r12	

1
.Bar.new_10:	
	movq %rbx, %rax	

1
	movq $0, %rdi	
	movq %rdi, 712(%rax)	

1
	movq $43856, %rdi	
	movq $0, %reg1	

1
	imull %ebx	
	movq %rax, %reg2	

1
	movq %reg0, 24(%rbx)	
	jmp .Main.new_3	

1
	jge .Main.main_21	
	movq -80(%rbp), %reg1	

1
	idivl %reg0d	
	movq -72(%rbp), %reg0	

1
	je .Main.main_14	
	movq $34, %reg0	

1
	movq %rdi, %rsi	
	movq %reg2, %reg3	

1
.Main.func_4:	
	movq $.string8, %reg0	

1
	subl %edi, %eax	
	movq %rax, -40(%rbp)	

1
	movq $32079, %reg0	
	movq $0, %rsi	

1
	jne .Main.main_62	
	movq %reg0, %rax	

1
	subl %edi, %reg1	
	movq %reg2, %r13	

1
	movq %reg0, %rdx	
	call *%r12	

1
	movq -136(%rbp), %rax	
	movq $0, %r8	

1
	movq $5, %reg0	
	movq %reg0, %r13	

1
	movq 16(%rbx), %reg1	
	subl %edi, %reg3	

1
	movq $89, %reg0	
	movq $.string3_l, %reg1	

1
	movq %reg0, %r12	
	call Bar.new	

1
	jmp .Main.main_130	
.Main.main_129:	

1
	call *%r13	
	movq -128(%rbp), %reg2	

1
	movq $24092, %rax	
	movq 0(%reg1), %reg2	

1
	movq 8(%rbx), %rax	
	movq %reg2, %rdi	

1
	je .Main.main_75	
	movq -128(%rbp), %reg1	

1
	movq %reg0, 48(%rbx)	
	cmpl %reg2, %reg3	

1
	call *%r12	
	movq $.string9, %rax	

1
.Main.main_3:	
	movq $.string9, %reg0	

1
	movq $55318, %reg0	
	subl %edi, %eax	

1
	call *%reg0	
	movq 704(%rbx), %reg2	

1
	movq -160(%rbp), %rdx	
	movq %rdx, -128(%rbp)	

1
	movq %rax, %r12	
	movq $10, %reg2	

1
	movq -184(%rbp), %reg1	
	movq -136(%rbp), %reg3	

1
	movq %rdi, 88(%reg1)	
	movq %rdi, %reg1	

1
	movq $12, %rdi	
	movq $0, %reg1	

1
	call *%reg0	
	movq $.string9, %reg0	

1
	call out_error	
.Main.main_134:	

1
.Main.out_whatever_6:	
	movq 0(%reg0), %r12	

1
	movq 8(%reg0), %rax	
	cmpl %edi, %reg3	

1
	movq %reg0, %reg1	
	movq $41765, %reg0	

1
	movq $215, %reg0	
	movq $.string5_l, %rdi	

1
.Matrix.get_11:	
.Matrix.get_9:	

1
	movq $63664, %rax	
	movq $60238, %r11	

1
	jne .Main.main_21	
	movq 0(%rbx), %rax	

1
	movq $0, %reg0	
	movq %reg0, 408(%reg1)	

1
	addl %eax, %edi	
	movq $18119, %reg2	

1
	movq %rax, %reg1	
	movq $18, %rax	

1
.Main.main_98:	
	movq -96(%rbp), %rsi	

1
	movq $.string12, %rdi	
	movq %reg1, %r12	

1
	movq $3000, %reg0	
	movq %reg0, 664(%reg1)	

1
	movq 736(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq $49288, %reg0	
	movq $5606, %r11	

1
	addl %edi, %eax	
	movq -168(%rbp), %rdi	

1
	call Int.new	
	movq %r14, 8(%rax)	

1
	sete %r8b	
	jne .Main.main_1	

1
	movq -32(%rbp), %rcx	
	negl %ecx	

1
	movq $90, %rdi	
	subl %edi, %reg2	

1
.Main.main_6:	
	cmpl $0, %reg0	

1
.Bar.new_5:	
	movq %rbx, %reg1	

1
	cmpq $Main_vtable, 0(%reg0)	
	je .Main.main_6	

1
	addl %edi, %eax	
	movq $25036, %rdi	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_7	

1
Bazz.doh:	
	pushq %reg0	

1
	jne .Main.main_123	
	movq %reg0, %rsi	

1
	movq -112(%rbp), %rcx	
	negl %reg2	

1
	movq -24(%rbp), %rax	
	imull %reg2	

1
	movq -160(%rbp), %reg1	
	addl %eax, %edi	

1
	movq 24(%reg0), %rax	
	movq %r12, %rdi	

1
.Main.main_8:	
	call String.new	

1
	call out_error	
.Main.main_104:	

1
Matrix.new:	
	pushq %reg0	

1
Dictionary.setHead:	
	pushq %rbp	

1
	addl %reg0, %eax	
	movq -168(%rbp), %rdi	

1
	jmp .Matrix.get_26	
.Matrix.get_14:	

1
	movq -144(%rbp), %rax	
	movq -96(%rbp), %rdi	

1
	movq %rdi, 40(%rax)	
	movq %rdi, %rax	

1
	subl %esi, %eax	
	subl %eax, %reg2	

1
	movq $9, %rsi	
	cmpl %esi, %reg2	

1
.Matrix.get_6:	
	movq $4, %rcx	

1
.Main.main_50:	
.Main.main_12:	

1
	negl %r11d	
	movq %r11, %rbx	

1
	movq %reg0, %rbx	
	movq $.string7, %rax	

1
	imull %reg0	
	movq $13, %rsi	

1
	movq $.string6, %r12	
	movq %r12, %rdi	

1
	movq %rax, %rbx	
	cmpl $0, %reg2	

1
	movq -72(%rbp), %reg1	
	subl %reg1d, %reg2	

1
.Main.main_17:	
	movq -40(%rbp), %reg1	

1
	movq $1, %reg0	
	movq 24(%reg1), %rax	

1
	movq $.string9, %rbx	
	movq 16(%reg1), %reg2	

1
	idivl %reg0	
	movq $52306, %rdi	

1
	movq %reg0, %reg1	
	movq $16693, %reg0	

1
	subl %eax, %reg1	
	movq $17376, %rax	

1
	je .Foo.new_1	
	movq $39, %rsi	

1
	je .Main.main_101	
	movq $64, %rsi	

1
	movq $1, %reg0	
	movq 8(%rdi), %rdi	

1
	movq %rdi, %rax	
	movq -160(%rbp), %rax	

1
	movq -160(%rbp), %rax	
	addl %reg2, %r9d	

1
CellularAutomaton.init:	
	pushq %reg0	

1
	call *%reg0	
	movq 640(%reg1), %r12	

1
	je .Main.main_31	
	movq %reg0, %rax	

1
	movq -32(%rbp), %reg1	
	negl %esi	

1
	idivl %reg0d	
	movq $7741, %reg1	

1
	movq %reg0, 656(%rax)	
	movq $0, %reg0	

1
	negl %reg0	
	movq $1202, %reg1	

1
	movq $29011, %reg0	
	subl %reg1, %ecx	

1
	movq %rdi, 496(%rax)	
	movq $3000, %rdi	

1
	movq -72(%rbp), %reg1	
	negl %edi	

1
	call out_error	
.Main.main_144:	

1
	movq 552(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	je .Main.main_1	
	movq $138, %rsi	

1
	movq %reg0, %rdi	
	movq $62420, %reg0	

1
	.quad String.substr	
Nil_vtable:	

1
	movq %reg0, 168(%rax)	
	movq %reg0, %rax	

1
	movq $3, %reg0	
	movq %r8, %reg2	

1
.Main.main_136:	
	cdq	

1
	idivl %reg0	
	movq $36212, %rsi	

1
	movq 16(%reg0), %rax	
	movq 32(%reg0), %r12	

1
	je .Main.main_52	
	movq $34, %reg0	

1
	movq -144(%rbp), %reg1	
	movq -120(%rbp), %rcx	

1
	movq 8(%reg0), %rax	
	movq %rbx, %reg3	

1
	call *%rax	
	movq 696(%reg1), %r12	

1
	movq $62331, %rax	
	subl %eax, %reg2	

1
	movq %rdi, 24(%rax)	
	movq 16(%rax), %rdi	

1
	movq $8738, %r11	
	imull %r11d	

1
	movq %rdi, %rax	
	jmp .Matrix.set_7	

1
	movq -184(%rbp), %rcx	
	subl %reg2, %reg3d	

1
	idivl %esi	
	movq $60858, %rsi	

1
	movq $20384, %rdi	
	imull %reg1	

1
	movq %reg0, -32(%rbp)	
	movq $0, -24(%rbp)	

1
	addl %reg0, %eax	
	movq $25036, %rdi	

1
DicNode.next:	
	pushq %rbp	

1
	imull %r10d	
	addl %eax, %r9d	

1
	movq %reg0, %reg1	
	subl %reg2d, %reg3	

1
	movq %rax, %r13	
	call Bar.new	

1
	movq -184(%rbp), %rax	
	subl %eax, %esi	

1
	jmp .Matrix.set_46	
.Matrix.set_45:	

1
	movq %reg0, 736(%rax)	
	movq $3000, %reg0	

1
Complex.x_value:	
	pushq %rbp	

1
.Main.funccase_7:	
	movq $0, %reg0	

1
List.rev:	
	pushq %rbp	

1
	jmp .ListNode.insert_3	
.ListNode.insert_1:	

1
	testq $1, %rdi	
	je .Main.func_3	

1
	movq -40(%rbp), %rax	
	subl %reg2, %eax	

1
	movq 8(%reg0), %reg1	
	call IO.out_string	

1
.Main.func_2:	
	popq %r12	

1
	movq $empty_string, %r12	
	movq %r12, %reg1	

1
	movq -88(%rbp), %rax	
	imull %reg2	

1
	movq $1, %r14	
	movq $.string7, %r13	

1
	call *%reg0	
	jmp .Main.main_27	

1
	negl %reg0	
	movq -176(%rbp), %rdi	

1
	movq %rdi, 336(%rax)	
	movq $3000, %rdi	

1
	movq 8(%rdi), %reg1	
	movq 0(%rax), %r12	

1
	je .Main.main_49	
	movq $15, %rsi	

1
	je .Main.main_21	
	movq $166, %reg0	

1
	.quad Main.setFoo	
	.quad Main.main	

1
	movq %r14, %rdi	
	sete %dil	

1
	je .Main.main_176	
	movq $145, %reg0	

1
	sete %sil	
	jne .Main.main_3	

1
	movq %reg0, %rax	
	jmp .Main.main_12	

1
	setl %reg0l	
	jge .Main.main_146	

1
	movq %r14, %reg1	
	movq -16(%rbp), %rdi	

1
	pushq %reg0	
	movq %rbx, %rdi	

1
	movq $12, %rdi	
	movq -16(%rbp), %reg2	

1
	movq $1, %rax	
	popq %rbx	

1
	je .Main.main_7	
	cmpq $String_vtable, 0(%rax)	

1
	call *%rax	
	movq 224(%rbx), %rax	

1
	movq $48298, %reg0	
	negl %reg1	

1
	.globl Foo.z	
	.type Foo.z, @function	

1
	movq %reg0, %rax	
	jmp .Main.main_69	

1
	idivl %edi	
	movq $13076, %rdi	

1
	movq -152(%rbp), %rax	
	addl %reg2, %eax	

1
	movq 176(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq %rbx, %reg1	
	cmpl %esi, %eax	

1
	movq -152(%rbp), %reg1	
	movq -144(%rbp), %reg3	

1
	jge .Main.main_29	
	movq -152(%rbp), %reg1	

1
	movq $38801, %rax	
	cmpl %eax, %reg2	

1
.Main.main_140:	
	movq %reg0, %reg1	

1
	movq $107, %reg0	
	movq $.string3_l, %rdi	

1
	call Matrix.new	
	movq %reg0, %rbx	

1
.string7_l:	
	.string "I\\n"	

1
.Main.main_11:	
	movq 0(%reg0), %r12	

1
	movq $3000, %reg0	
	movq %reg0, 520(%reg1)	

1
	movq 136(%r13), %r13	
	movq 16(%rax), %reg2	

1
	.quad Complex.equal	
	.quad Complex.x_value	

1
	testq $1, %reg0	
	je .ListNode.insert_2	

1
	idivl %esi	
.Matrix.get_11:	

1
	jne .Matrix.set_34	
	movq %rdi, 112(%reg1)	

1
.Main.main_42:	
	movq %reg0, %reg1	

1
	movq $10, %reg0	
	cmpl $0, %r14d	

1
	movq $12, %reg0	
	movq -184(%rbp), %rax	

1
	imull %ebx	
	movq $14356, %reg1	

1
.Main.main_58:	
	movq 0(%r13), %reg1	

1
	testq $1, %rax	
	je .Dictionary.insert_1	

1
	movq $40, %reg0	
	movq $.string3_l, %reg1	

1
.Complex.equal_1:	
	movq 0(%reg0), %rax	

1
	call *%rax	
	movq 416(%reg1), %rax	

1
	addl %reg0, %esi	
	imull %esi	

1
	call IO.new	
	movq %rax, 8(%reg1)	

1
	je .Main.main_174	
	movq $145, %rsi	

1
.Cons.rev_1:	
	movq 16(%reg0), %rdx	

1
.Main.main_109:	
	movq -88(%rbp), %rsi	

1
	movq %rdi, 576(%reg1)	
	movq $3000, %rdi	

1
	movq $0, %rax	
	movq $1, %r13	

1
	call *%rax	
	movq $5, %r14	

1
	call *%reg0	
	movq 312(%reg1), %rax	

1
	movq $5, %rsi	
	movq %reg1, %rdi	

1
	movq $3000, %reg0	
	movq %reg0, 440(%rax)	

1
	movq -120(%rbp), %reg1	
	addl %reg2, %esi	

1
	movq $9508, %rax	
	movq $60323, %rsi	

1
	subl %esi, %reg1	
	movq -24(%rbp), %rsi	

1
	movq $1, %reg0	
	jmp .Main.fib_2	

1
	.string "List"	
.string3:	

1
	movq $63252, %reg0	
	subl %reg1, %r12d	

1
	movq %r15, %rsi	
	movq %rbx, %rax	

1
	cmpq $Bool_vtable, 0(%rbx)	
	je .Main.new_3	

1
	movq $8, %rax	
	jmp .A2I.c2i_18	

1
	movq -24(%rbp), %rdi	
	movq %rax, %reg3	

1
	subl %reg0, %edi	
	movq -104(%rbp), %rax	

1
	movq %rsp, %reg1	
	movq %reg2, %rdi	

1
	movq %reg0, %reg1	
	jmp .Razz.new_17	

1
.Main.main_7:	
	movq $.string8, %rax	

1
	imull %reg0	
	movq $16280, %rsi	

1
	je .Main.main_79	
	movq $19, %rsi	

1
DicNode.decr:	
	pushq %reg0	

1
	je .Main.main_70	
	movq $52, %reg0	

1
	addl %eax, %r10d	
	movq $60159, %reg2	

1
	call *%r15	
	movq %rax, %rdi	

1
	movq %rdi, 240(%reg1)	
	movq $0, %rdi	

1
	movq 320(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	sete %r13b	
	jne .CellularAutomaton.cell_at_next_evolution_1	

1
	testq $1, %rax	
	je .List.insert_1	

1
	testq $1, %rdi	
	je .Main.func2_1	

1
	movq $48880, %reg0	
	imull %reg1	

1
.Main.main_66:	
	movq %reg0, %reg1	

1
.Main.main_7:	
	movq 0(%rax), %r13	

1
	movq 152(%r12), %r12	
	movq %reg1, %rdi	

1
	negl %eax	
	movq %rax, %r12	

1
	movq $30018, %reg0	
	subl %eax, %edi	

1
	testq $1, %reg0	
	jne .Main.main_23	

1
.Main.main_23:	
	cmpl $0, %reg0d	

1
	negl %eax	
	movq -160(%rbp), %rdi	

1
	movq 136(%reg0), %reg0	
	movq 16(%reg1), %reg2	

1
	subl %edi, %reg1	
	movq %rbx, %rdi	

1
	subl %edi, %eax	
	movq %reg2, -136(%rbp)	

1
	jmp .Main.main_56	
.Main.main_55:	

1
	movq %reg0, %rsi	
	movq $50347, %reg0	

1
	movq 432(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq -72(%rbp), %rax	
	movq %reg2, %rsi	

1
.Main.main_17:	
	movq %reg0, %rax	

1
	movq $.string7, %rax	
	movq %rax, 8(%rbx)	

1
	movq -144(%rbp), %rdi	
	movq %reg2, %rax	

1
	movq 32(%rbx), %reg1	
	movq %reg1, 40(%rbx)	

1
	je .Main.main_36	
	movq $34, %reg0	

1
	call *%rbx	
.Main.main_32:	

1
	je .Main.new_3	
	cmpq $Object_vtable, 0(%rax)	

1
	movq 600(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq %rdi, 600(%reg1)	
	movq $3000, %rdi	

1
	addl %eax, %ecx	
	movq $46874, %rax	

1
	movq $Dictionary_vtable, 0(%reg0)	
	movq $0, %rdi	

1
	.string "	\\they\\n\\t  \\n\\tlisten!\\r\\b\\0\\\\\\\""	
.string6:	

1
	movq $.string10, %reg0	
	jmp .A2I.i2c_8	

1
	movq $55318, %rdi	
	subl %edi, %eax	

1
.Main.main_148:	
	jmp .Main.main_159	

1
	call *%reg0	
	movq $61456, %reg1	

1
	subl %reg0, %eax	
	movq -96(%rbp), %reg3	

1
	movq $1, %rax	
	movq $1, %r13	

1
	movq %r12, 8(%rax)	
	movq 0(%rbx), %r14	

1
	call out_error	
.Bar.getX_1:	

1
	movq -112(%rbp), %rax	
	movq -48(%rbp), %r8	

1
	movq -40(%rbp), %rax	
	subl %reg2, %r8d	

1
	jmp .CellularAutomaton.cell_at_next_evolution_6	
.CellularAutomaton.cell_at_next_evolution_5:	

1
	je .Main.main_2	
	cmpl %reg0, %esi	

1
	movq $.string7, %rax	
	movq %rax, 8(%reg1)	

1
	movq %rdi, %reg1	
	jmp .Main.main_46	

1
	movq $12, %r8	
	movq %r12, %reg2	

1
	movq -56(%rbp), %reg1	
	movq -136(%rbp), %reg3	

1
	negl %reg0d	
	movq $48391, %reg1	

1
	addl %reg0, %reg1	
	movq -136(%rbp), %rdi	

1
	movq %rbx, %reg1	
	subl %eax, %ecx	

1
	subl %reg0, %edi	
	movq $17376, %rax	

1
	movq %rsi, %r12	
	movq 0(%reg2), %rbx	

1
	je .Foo.new_5	
	cmpq $Razz_vtable, 0(%reg0)	

1
	je .Main.main_13	
	movq $8, %rsi	

1
	addl %reg0, %eax	
	movq $36010, %rdi	

1
	movq %reg0, %reg1	
	movq $2, %rdi	

1
.Main.main_10:	
	movq $5, %rdi	

1
	idivl %r10d	
	movq $47963, %r9	

1
.Main.main_9:	
	movq 0(%rbx), %r12	

1
	call *%reg0	
	movq $empty_string, %rdi	

1
	movq 280(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	movq -64(%rbp), %reg1	
	cmpl %edi, %eax	

1
	movq $.string17, %rdi	
	movq %rdi, %r13	

1
	movq %rdi, 328(%rax)	
	movq $0, %rdi	

1
	jmp .Main.main_170	
.Main.main_77:	

1
	movq -72(%rbp), %rax	
	imull %reg2	

1
	movq $108, %reg0	
	movq $.string3_l, %rdi	

1
	negl %ecx	
	movq -72(%rbp), %reg2	

1
	movq %reg0, 8(%rax)	
.Main.new_11:	

1
	movq $.string7, %rax	
	movq 8(%reg1), %rdi	

1
	movq %r13, %rax	
	movq $0, %rcx	

1
	cmpq $Bool_vtable, 0(%reg0)	
	je .Main.out_whatever_2	

1
	movq %rax, %reg1	
	movq $604, -24(%rbp)	

1
	imull %r8d	
	movq -16(%rbp), %r8	

1
	jne .Main.main_1	
	movq -112(%rbp), %rax	

1
	imull %reg0	
	movq %r14, %rdi	

1
	movq 408(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	movq $76, %rsi	
	movq $.string3_l, %reg1	

1
	movq $20995, %rax	
	movq $47127, %rsi	

1
.string10_l:	
	.string "\\n"	

1
	movq $0, %reg0	
	movq %reg0, 520(%rax)	

1
	movq %rdi, 256(%rax)	
	movq $0, %rdi	

1
	je .Main.main_120	
	movq $70, %rsi	

1
	movq $93, %rsi	
	movq $.string4_l, %reg1	

1
	movq $21613, %r12	
	movq 0(%rbx), %rax	

1
	movq $0, %reg0	
	movq %reg0, 400(%rax)	

1
	.string "+"	
.string10:	

1
	addl %edi, %reg1	
	movq $36010, %rdi	

1
	jge .Main.main_45	
	movq -32(%rbp), %reg1	

1
	movq $0, %reg0	
	movq $5, %reg1	

1
	movq %rdi, %reg1	
	movq $29181, %rdi	

1
	setl %sil	
	jge .Main.main_72	

1
	testq $1, %r9	
	je .Main.main_19	

1
	addl %edi, %reg1	
	movq $222, %rdi	

1
	testq $1, %reg0	
	je .Main.main_110	

1
	movq %reg0, 56(%rbx)	
	movq %rbx, %reg0	

1
	subl %esi, %eax	
	movq %r12, %reg3	

1
	movq 544(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	movq %r12, %reg1	
	addl %ebx, %eax	

1
	movq %rdi, %rax	
	jmp .Matrix.set_59	

1
	call *%reg0	
	movq 88(%reg1), %reg2	

1
	movq $.string10, %r13	
	movq 8(%rax), %reg2	

1
	movq 16(%reg0), %reg1	
	subl %reg2, %edi	

1
	addl %edi, %eax	
	movq %reg2, -24(%rbp)	

1
	call *%reg0	
	movq $name_Bool, %reg0	

1
	movq %rax, -24(%rbp)	
	movq $4, %rax	

1
	cmpq $Bool_vtable, 0(%rdi)	
	je .Main.funccase_4	

1
	movq %reg0, %rdi	
	movq -16(%rbp), %rax	

1
	call out_error	
.Main.main_119:	

1
	movq 24(%reg0), %rdx	
	movq 0(%rdx), %r12	

1
	movq $.string20, %rax	
	movq 0(%reg1), %r12	

1
	movq %reg0, 272(%rax)	
	movq $3000, %reg0	

1
	testq $1, %rsi	
	je .Main.main_184	

1
	movq $4, %rax	
	movq 0(%reg1), %reg2	

1
	movq $21613, %r12	
	movq 0(%rbx), %reg2	

1
	movq 16(%rax), %reg1	
	addl %esi, %edi	

1
	movq $40570, %r8	
	subl %r8d, %eax	

1
	call *%r15	
	movq -168(%rbp), %rax	

1
	negl %reg0	
	movq $30797, %reg1	

1
.Main.main_90:	
	movq %reg0, %rsi	

1
	movq -104(%rbp), %rax	
	subl %eax, %esi	

1
	movq %rdi, %reg1	
	jmp .Main.main_145	

1
	movq $100, %reg0	
	movq %reg1, %rax	

1
	movq %reg0, %reg1	
	movq -152(%rbp), %rax	

1
	movq 24(%reg0), %rax	
	cmpl $0, %eax	

1
	movq %r14, %rsi	
	subl %esi, %eax	

1
	movq $1, %reg0	
	movq %reg0, -40(%rbp)	

1
	movq %rdi, %reg1	
	movq $20, %reg2	

1
.Main.main_35:	
.Main.main_33:	

1
.Matrix.mul_3:	
	movq $5, %reg0	

1
	.quad Main.myInt	
	.text 	

1
	je .Main.main_18	
	movq $7, %rsi	

1
	xorq $1, %rax	
	jmp .Main.main_150	

1
	movq $63664, %rax	
	movq $60238, %reg1	

1
.Main.main_69:	
	movq -32(%rbp), %rdx	

1
.Main.funccase_2:	
	movq %reg0, %rax	

1
	movq -64(%rbp), %rax	
	movq -72(%rbp), %reg3	

1
	subl %reg0, %eax	
	movq %rax, -96(%rbp)	

1
	movq $2730, %reg0	
	movq %reg1, %rdx	

1
.Main.new_5:	
	movq 0(%reg0), %r12	

1
	testq $1, %r8	
	je .Main.main_94	

1
	movq %rdi, %rax	
	movq $.string6, %reg2	

1
	setle %reg0l	
	jg .Main.main_51	

1
	movq 16(%rdi), %reg1	
	negl %reg2	

1
	movq $7258, %rsi	
	negl %esi	

1
.Main.main_1:	
	movq 0(%rbx), %r12	

1
	jne .Main.main_111	
	movq %reg0, %rax	

1
	movq %reg0, %reg1	
	movq $empty_string, %reg0	

1
Dictionary.insert:	
	pushq %reg0	

1
	movq %rax, %rdi	
	movq -64(%rbp), %reg3	

1
	movq $4, %rax	
	jmp .A2I.c2i_10	

1
.Main.main_126:	
	movq %reg0, %rax	

1
	movq %r14, %rax	
	movq %r12, %rsi	

1
	movq %reg0, 728(%rax)	
	movq $0, %reg0	

1
	movq -96(%rbp), %reg1	
	movq -128(%rbp), %r9	

1
	movq $173, %rsi	
	movq $.string5_l, %rdi	

1
.Main.func_1:	
	movq $0, %reg0	

1
	movq %reg0, %reg1	
	movq 16(%rdi), %reg3	

1
	negl %eax	
	movq -40(%rbp), %reg2	

1
	movq $8022, %rax	
	negl %reg1	

1
	movq $5880, %reg0	
	movq $12843, %r12	

1
	subl %reg0, %reg1	
	movq $18841, %reg2	

1
	movq %reg0, 672(%reg1)	
	movq $0, %reg0	

1
	je .Matrix.set_53	
	movq $1, %reg0	

1
	addl %eax, %reg1	
	movq $18119, %reg2	

1
	movq $2143, %rdi	
	addl %reg1, %eax	

1
	idivl %r12d	
	movq %rax, %reg2	

1
	movq %reg0, %r8	
	movq $18429, %r9	

1
	movq %r15, %rdi	
	addl %edi, %eax	

1
	je .Bar.new_3	
	cmpq $Foo_vtable, 0(%reg0)	

1
	movq -64(%rbp), %rax	
	movq %reg2, %rcx	

1
	movq %rax, %rdi	
	movq -184(%rbp), %reg3	

1
	setle %reg0l	
	jg .Matrix.mul_2	

1
.Razz.new_18:	
	movq 32(%rbx), %rdi	

1
Cons.car:	
	pushq %rbp	

1
	movq -176(%rbp), %rax	
	addl %eax, %edi	

1
	movq 168(%rax), %rax	
	jmp .Matrix.get_55	

1
	movq %rdi, 168(%rax)	
	movq %rdi, %rax	

1
	movq %reg0, 248(%rax)	
	movq $0, %reg0	

1
	call *%rax	
	movq %r13, %rdi	

1
	movq %r12, %reg1	
	movq -72(%rbp), %r8	

1
.DicNode.get_2:	
	popq %r13	

1
	movq %rax, %reg1	
.Main.main_49:	

1
	movq $58652, %reg0	
	movq $0, %reg1	

1
.Main.main_111:	
	movq %r14, %reg1	

1
	movq $2147483647, %reg0	
	movq $4, %rdi	

1
	je .Main.main_68	
	movq $49, %reg0	

1
	idivl %r11d	
	addl %eax, %r10d	

1
	movq $.string7, %rbx	
	movq 0(%rax), %r12	

1
	movq -96(%rbp), %rax	
	movq -128(%rbp), %r9	

1
	movq $29252, %rcx	
	negl %reg1	

1
	jge .Main.main_90	
	movq %reg0, %reg1	

1
	subl %edi, %eax	
	movq $15487, %rdi	

1
	movq -48(%rbp), %rax	
	addl %eax, %ecx	

1
	sete %r13b	
	jne .A2I.c2i_17	

1
	movq %rdi, 672(%rax)	
	movq $3000, %rdi	

1
	je .Main.main_107	
	movq %r12, %reg1	

1
	movq $0, %reg0	
	movq %reg0, 520(%reg1)	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_20	

1
	ret	
	.size A2I.a2i_aux, .-A2I.a2i_aux	

1
.Main.main_151:	
	movq %reg0, %rax	

1
	movq $29181, %reg0	
	negl %reg1	

1
	movq -96(%rbp), %rax	
	cmpl %eax, %esi	

1
	movq 344(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	.quad .string15_l	
	.quad 6	

1
	movq $3000, %reg0	
	movq %reg0, 408(%rax)	

1
	movq %reg0, 8(%reg1)	
	movq $2, %reg1	

1
	subl %ecx, %eax	
	movq -88(%rbp), %reg3	

1
	call *%reg0	
	movq 720(%rbx), %reg0	

1
	movq -136(%rbp), %rbx	
	movq %reg2, %rdx	

1
	movq $7, %rcx	
	movq %reg1, %reg2	

1
	je .Main.main_79	
	movq $19, %reg0	

1
	movq %rsi, %reg1	
	movq %r13, %rsi	

1
	movq $2, %rdi	
	movq $2, %rax	

1
	movq -136(%rbp), %rsi	
	cmpl %esi, %eax	

1
	subl %eax, %r8d	
	movq -96(%rbp), %rax	

1
	movq %rdi, %reg1	
	movq -112(%rbp), %reg1	

1
	movq -64(%rbp), %rax	
	imull %r8d	

1
	movq 72(%rax), %rax	
	movq %r14, %reg2	

1
.string7_l:	
	.string "0"	

1
	imull %edi	
	movq -80(%rbp), %reg2	

1
	movq $6, %reg0	
	movq $.string6, %rax	

1
	movq $10, %reg0	
	movq %r14, %rax	

1
	movq $26355, %rax	
	movq 0(%reg1), %reg2	

1
DicNode.name:	
	pushq %reg0	

1
.Main.main_12:	
.Main.main_4:	

1
	movq $61208, %reg0	
	negl %ebx	

1
	movq %rax, 24(%rbx)	
	call Bar.new	

1
	movq -120(%rbp), %rax	
	movq -168(%rbp), %rdi	

1
	call Bool.new	
	movq 0(%reg0), %r12	

1
	movq $213, %reg0	
	movq $.string5_l, %rdi	

1
	imull %reg0d	
	addl %eax, %r9d	

1
	movq $.string6, %rax	
	movq $empty_string, %reg1	

1
	movq %reg0, %reg1	
	jmp .Main.main_71	

1
	movq -104(%rbp), %rax	
	addl %eax, %reg3	

1
	jmp .Main.main_68	
.Main.main_67:	

1
	movq %reg0, %rsi	
	cmpl $0, %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 128(%rax)	

1
.Main.main_60:	
	movq %reg0, %reg1	

1
	idivl %esi	
.Matrix.set_65:	

1
	movq -40(%rbp), %rax	
	cmpl %eax, %esi	

1
	idivl %reg0d	
	movq -144(%rbp), %reg2	

1
	movq -40(%rbp), %reg1	
	movq -96(%rbp), %rdi	

1
	testq $1, %rcx	
	je .Main.main_70	

1
	.globl CellularAutomaton.cell_at_next_evolution	
	.type CellularAutomaton.cell_at_next_evolution, @function	

1
	movq %rsi, %r12	
	movq %r12, %rdi	

1
	movq %reg0, %reg1	
	movq $10478, %reg0	

1
.Main.func_1:	
	movq %reg0, %reg1	

1
	movq -16(%rbp), %rax	
	movq %rsi, %rcx	

1
	movq $113, %rsi	
	movq $.string2_l, %reg1	

1
	negl %reg0	
	movq %reg1, 8(%rdi)	

1
	movq -168(%rbp), %rax	
	movq -152(%rbp), %rdi	

1
	subl %reg0, %edi	
	movq %r14, %rax	

1
	subl %edi, %reg1	
	movq %reg2, -96(%rbp)	

1
	movq -32(%rbp), %rax	
	movq $0, %reg2	

1
	movq %reg0, %r12	
	negl %r12d	

1
	movq $10, %rax	
	movq %rax, -88(%rbp)	

1
.Matrix.get_62:	
	movq $1, %reg0	

1
Complex.init:	
	pushq %rbp	

1
	movq -32(%rbp), %rdi	
	subl %reg2, %reg3	

1
	imull %edi	
	movq -136(%rbp), %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 208(%reg1)	

1
	je .Foo.new_2	
.Foo.new_2:	

1
	movq $.string7, %rax	
	jmp .A2I.i2c_2	

1
	movq %rdi, %reg1	
	movq %reg1, 56(%reg2)	

1
	call *%r12	
	movq 584(%reg1), %r12	

1
	movq %reg0, %rax	
	jmp .Main.main_71	

1
	movq -56(%rbp), %reg1	
	movq -88(%rbp), %reg3	

1
	movq %reg0, 64(%rbx)	
	movq 32(%rbx), %rdi	

1
	movq 32(%reg0), %reg1	
	movq 16(%reg0), %rdi	

1
	movq $6550, %reg0	
	movq $0, %reg1	

1
	movq -128(%rbp), %reg1	
	movq $0, %reg2	

1
	movq -32(%rbp), %rax	
	movq %r15, %reg3	

1
	jne .Main.main_111	
	movq %r13, %rax	

1
	movq -128(%rbp), %reg1	
	movq -72(%rbp), %reg3	

1
	je .Main.main_74	
	movq $52, %reg0	

1
	movq $0, %rdi	
	movq %rdi, 648(%reg1)	

1
	movq -96(%rbp), %reg1	
	subl %ecx, %eax	

1
	je .Main.new_3	
	cmpq $String_vtable, 0(%rbx)	

1
	je .Main.main_1	
	movq $25, %rax	

1
	negl %eax	
	movq $57936, %rsi	

1
.Bazz.new_5:	
	movq %rbx, %reg1	

1
	addl %r12d, %eax	
	addl %eax, %reg2	

1
	je .Main.main_159	
	movq $133, %rsi	

1
	imull %esi	
	movq $56453, %reg1	

1
	movq -136(%rbp), %rax	
	movq -80(%rbp), %rsi	

1
.Main.main_6:	
	movq 8(%rbx), %reg1	

1
	je .Main.main_6	
	movq $3, %r12	

1
	movq %rsp, %reg1	
	subq $168, %rsp	

1
.Main.main_69:	
	movq -32(%rbp), %reg1	

1
	call *%r14	
	cmpl $0, %r12d	

1
	call *%rbx	
	movq -120(%rbp), %rax	

1
.Main.main_16:	
	movq $9, %rax	

1
.Matrix.set_1:	
	movq $2, %r9	

1
	movq 208(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	jne .Matrix.get_1	
	movq $1, %reg0	

1
	movq 336(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq 56(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq $130, %reg0	
	movq %r13, %reg2	

1
	movq -88(%rbp), %reg1	
	subl %reg2, %ecx	

1
	movq $12, %reg0	
	movq %r12, %rax	

1
	movq $89, %rsi	
	movq $.string3_l, %rdi	

1
	idivl %reg0	
	movq $58210, %rsi	

1
	movq %reg0, 48(%reg1)	
	movq $3000, %reg0	

1
	ret	
	.size Foo.getY, .-Foo.getY	

1
	sete %reg0	
	jne .Matrix.get_4	

1
	movq $47218, %rcx	
	movq %rcx, %r8	

1
	movq $19, %reg0	
	movq %reg0, -24(%rbp)	

1
	imull %esi	
	movq -48(%rbp), %rsi	

1
.Main.main_2:	
	movq 8(%rax), %r12	

1
	movq $1, %reg0	
	call Object.new	

1
	movq -136(%rbp), %r8	
	imull %r8d	

1
Dictionary.get:	
	pushq %reg0	

1
	subl %eax, %reg1d	
	movq -96(%rbp), %rax	

1
	movq -176(%rbp), %reg1	
	subl %reg1d, %eax	

1
	movq %reg0, %rsi	
	movq -72(%rbp), %reg3	

1
	movq $1202, %reg0	
	movq $51824, %reg1	

1
	movq $.string10, %rdi	
	movq %reg1, %r12	

1
	movq %rax, %rcx	
	movq -144(%rbp), %rax	

1
	cmpq $Bool_vtable, 0(%rbx)	
	je .Main.main_23	

1
	movq 8(%rax), %rdi	
	call *%reg2	

1
.Main.main_114:	
.Main.main_112:	

1
	movq -136(%rbp), %reg1	
	movq -24(%rbp), %rax	

1
	movq 496(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq %reg0, %reg1	
	addl %ebx, %eax	

1
.Main.main_66:	
	movq -136(%rbp), %rax	

1
	movq %reg0, %rax	
.Main.main_169:	

1
	call *%reg0	
	movq $.string10, %rax	

1
	movq $3000, %reg0	
	movq %reg0, 696(%reg1)	

1
	movq $.string14, %rdi	
	movq %reg1, %r12	

1
	movq -16(%rbp), %reg1	
	movq %r12, %rsi	

1
	imull %reg0	
	movq -152(%rbp), %reg2	

1
	je .Main.main_45	
	movq $34, %reg0	

1
	movq %reg0, 224(%rax)	
	movq $3000, %reg0	

1
	je .Main.main_16	
	movq $62343, %r12	

1
	negl %reg0	
	movq -104(%rbp), %rsi	

1
	movq $3000, %reg0	
	movq %reg0, 624(%rax)	

1
	movq $5, %r13	
	movq 0(%rax), %reg2	

1
	movq $168, %rsi	
	movq $.string5_l, %reg1	

1
	movq -168(%rbp), %rax	
	addl %r8d, %reg3	

1
	movq %r15, %reg1	
	call *%r14	

1
.Main.main_15:	
	movq $name_IO, %r12	

1
	movq 576(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	je .Main.main_23	
	cmpq $IO_vtable, 0(%rbx)	

1
	movq %r14, %rdi	
	sete %reg2l	

1
	movq $40813, %reg0	
	addl %edi, %reg2	

1
	movq $25351, %rax	
	subl %reg1, %reg2	

1
	movq -16(%rbp), %rax	
	cmpl %eax, %esi	

1
	movq $3000, %rdi	
	movq %rdi, 632(%reg1)	

1
	je .Main.main_35	
	movq $13, %rsi	

1
	movq $32151, %reg0	
	movq 0(%rbx), %reg2	

1
.A2I.i2a_aux_1:	
	movq $10, %rsi	

1
	je .Bar.new_3	
	cmpq $Foo_vtable, 0(%rbx)	

1
	movq 472(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	negl %eax	
	movq %reg1, %r12	

1
	movq $60606, %rax	
	cmpl %eax, %reg2	

1
	movq %rdi, %reg1	
	jmp .Main.main_34	

1
	movq -120(%rbp), %rsi	
	cmpl %esi, %reg3	

1
	je .Main.main_60	
	movq $17, %reg0	

1
	movq %r15, %reg1	
	call String.concat	

1
	je .Main.main_2	
	cmpl %edi, %reg1	

1
	movq %rax, %reg1	
	movq %rbx, %rdi	

1
	testq $1, %r8	
	je .Main.main_176	

1
	subl %eax, %r8d	
	movq $10464, %reg2	

1
	movq $43604, %reg0	
	addl %reg1, %ecx	

1
	movq %rax, %r12	
	movq $678987, %reg2	

1
	movq $14546, %rax	
	subl %eax, %esi	

1
	movq $3000, %rdi	
	movq %rdi, 112(%reg1)	

1
	movq $5, %rcx	
	movq %rdi, %reg2	

1
	call *%reg0	
	movq 72(%reg1), %rax	

1
	movq -72(%rbp), %rsi	
	subl %reg2, %eax	

1
	call *%rax	
	movq $22, %rax	

1
	imull %reg0	
	movq $60575, %rsi	

1
	testq $1, %reg0	
	je .Main.main_149	

1
	movq %reg0, %rax	
	jmp .Main.main_83	

1
	movq 8(%reg0), %reg1	
	movq %reg1, 48(%reg0)	

1
.Main.main_3:	
	movq $1170, %rdi	

1
	subl %r8d, %reg1	
	movq -64(%rbp), %r8	

1
	cmpq $IO_vtable, 0(%rbx)	
	je .Main.main_23	

1
	imull %esi	
	movq $29789, %reg1	

1
	movq $0, %rbx	
	movq %r12, %reg2	

1
	je .Main.main_16	
	movq $21, %rsi	

1
	imull %reg0	
	movq -32(%rbp), %reg2	

1
	movq $.string13, %reg0	
	movq %reg1, %reg2	

1
Main.fib:	
	pushq %rbp	

1
	jne .Main.main_62	
	movq -48(%rbp), %reg1	

1
.Main.main_27:	
	movq -128(%rbp), %reg1	

1
	movq -48(%rbp), %rax	
	movq -56(%rbp), %reg3	

1
.Main.main_8:	
	popq %r12	

1
	movq %rsi, %rax	
	cmpl %reg2, %reg3	

1
	movq $64947, %rax	
	movq %rax, -24(%rbp)	

1
.DicNode.get_1:	
	movq 24(%reg0), %rdi	

1
	movq $2, %reg0	
	movq %reg0, %r12	

1
.Bazz.new_5:	
	movq %reg0, %reg1	

1
	imull %esi	
	movq %r13, %rsi	

1
	.quad DicNode.insert	
	.quad DicNode.name	

1
	movq %reg0, %reg1	
.CellularAutomaton.cell_at_next_evolution_4:	

1
	movq $46167, %rdi	
	addl %edi, %eax	

1
	movq 8(%reg0), %reg1	
	movq %rdi, %r12	

1
	subl %reg0, %ebx	
	movq $47353, %reg2	

1
	movq $2985, %reg0	
	negl %reg0d	

1
	movq %r14, %rax	
	subl %reg2, %esi	

1
	movq 192(%reg0), %reg0	
	jmp .Matrix.get_61	

1
	movq $48887, %rax	
	negl %reg1	

1
.A2I.i2c_3:	
	movq $2, %rcx	

1
	movq -24(%rbp), %reg1	
	cmpl %reg2, %edi	

1
	jne .Main.main_3	
	movq 72(%rbx), %rax	

1
	.size Main.main, .-Main.main	
	.globl Bar.getX	

1
	movq %r13, %r12	
.Main.main_5:	

1
	movq %rdi, %rax	
	jmp .Main.main_104	

1
	movq $6195, %rsi	
	imull %reg1	

1
	idivl %reg0	
.Matrix.set_37:	

1
	movq -88(%rbp), %reg1	
	movq %r13, %rsi	

1
.Foo.new_13:	
	movq 16(%rbx), %rdx	

1
	je .Main.main_71	
	movq $52, %rsi	

1
.Main.main_1:	
	call Int.new	

1
	movq %rdi, %rax	
	jmp .Main.main_65	

1
	movq $25036, %reg0	
	subl %edi, %reg2	

1
.Main.main_23:	
	movq %reg0, %reg1	

1
	movq $.string20, %rax	
	movq 0(%reg1), %reg2	

1
	ret	
	.size Bazz.printh, .-Bazz.printh	

1
	je .Main.main_119	
	movq %rbx, %rax	

1
	movq -88(%rbp), %rsi	
	addl %esi, %reg3	

1
	movq %rax, 64(%rbx)	
	movq $0, %rax	

1
	movq %reg0, 376(%reg1)	
	movq $3000, %reg0	

1
	movq %reg0, 536(%reg1)	
	movq $3000, %reg0	

1
	movq -120(%rbp), %rax	
	movq -120(%rbp), %reg2	

1
	je .Main.main_105	
	movq $64, %rsi	

1
	movq $name_IO, %reg0	
	movq 0(%rbx), %rax	

1
	je .Main.main_95	
	movq %rdi, %rsi	

1
	addl %reg0, %eax	
	movq -136(%rbp), %rdi	

1
.Main.main_119:	
	movq -56(%rbp), %reg1	

1
	movq %reg0, %rax	
	addl %reg2d, %eax	

1
	je .Main.main_54	
	movq $49, %reg0	

1
	movq -56(%rbp), %reg1	
	addl %eax, %reg3	

1
	addl %reg0, %reg1	
	movq $53587, %rax	

1
	movq 8(%reg0), %reg1	
	movq 0(%rbx), %r13	

1
	movq %reg0, %reg1	
	movq $63899, %reg0	

1
	movq $0, %rdi	
	movq %rdi, 248(%rax)	

1
	call *%reg0	
	movq 16(%rbx), %rax	

1
	movq $25895, %rax	
	cmpl %reg1, %reg2	

1
	movq $215, %rsi	
	movq $.string5_l, %rdi	

1
	movq $11513, %reg0	
	movq %reg0, %reg1	

1
	movq -104(%rbp), %rax	
	movq -152(%rbp), %reg3	

1
	movq %reg0, %rdi	
	movq 8(%rbx), %rsi	

1
	jmp .Complex.equal_5	
.Complex.equal_4:	

1
	movq -40(%rbp), %reg1	
	addl %eax, %reg3	

1
	je .Main.main_55	
	movq $204, %rsi	

1
	je .Foo.new_12	
	movq $10, %rsi	

1
	jg .Main.main_127	
	movq -48(%rbp), %reg1	

1
.Main.main_109:	
	cdq	

1
	movq %rsi, %r12	
	movq 0(%rax), %reg3	

1
	movq %rax, %rdi	
	movq $60606, %rax	

1
	setl %reg0l	
	jge .Main.main_121	

1
	movq 80(%rbx), %reg1	
	testq $1, %reg1	

1
	je .Main.main_1	
	movq $1, %r12	

1
	call *%r12	
	movq 560(%reg1), %r12	

1
.Main.main_121:	
	movq %r15, %reg1	

1
	sete %reg0b	
	jne .Matrix.set_8	

1
	movq 24(%rbx), %reg1	
	movq %reg2, %rsi	

1
	movq $215, %rsi	
	movq $.string5_l, %reg1	

1
	negl %eax	
	movq %rbx, %rdi	

1
Cons.tail:	
	pushq %rbp	

1
	movq -56(%rbp), %rax	
	addl %esi, %reg3	

1
	je .Foo.new_10	
	cmpq $Razz_vtable, 0(%reg0)	

1
	movq %r12, %rax	
	movq 8(%reg2), %r13	

1
	movq %rdi, 16(%reg1)	
	movq 24(%reg1), %rsi	

1
	cmpl $0, %reg0	
	sete %bl	

1
	movq $4, %r12	
	movq 0(%rax), %rbx	

1
.Matrix.get_26:	
.Matrix.get_13:	

1
	movq $Razz_vtable, 0(%reg0)	
	movq %reg0, %rbx	

1
.Main.print_list_3:	
	popq %r13	

1
	movq 56(%r12), %r12	
	movq -24(%rbp), %rdi	

1
	je .Main.main_60	
	movq $213, %rsi	

1
	.quad Object.type_name	
Complex_vtable:	

1
	movq %rax, %r9	
	movq -160(%rbp), %rax	

1
	subl %reg0, %reg1	
	movq %rax, -176(%rbp)	

1
	movq $0, %rax	
	movq %rax, 64(%reg1)	

1
	movq %reg0, %reg1	
	movq %rdx, %rbx	

1
	je .Main.main_7	
	cmpq $Main_vtable, 0(%reg0)	

1
	movq $58652, %reg0	
	movq $0, %rsi	

1
.Matrix.set_56:	
	movq $3, %r8	

1
	movq %reg0, %rbx	
	addl %reg2, %reg3	

1
	movq $.string20, %reg0	
	movq 0(%reg1), %reg2	

1
	movq $0, %rsi	
	movq $.string4_l, %reg1	

1
	movq $3000, %reg0	
	movq %reg0, 392(%reg1)	

1
	testq $1, %rax	
	jne .Main.main_62	

1
	call *%r12	
	movq 24(%reg1), %reg2	

1
	movq %reg0, %rax	
	jmp .Main.main_116	

1
	movq -16(%rbp), %reg1	
	negl %reg1d	

1
	movq %rbx, %r13	
	movq %reg2, %reg3	

1
	movq 648(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	addl %reg0, %eax	
	movq -168(%rbp), %reg3	

1
	movq %r12, %r13	
	pushq %reg2	

1
	movq $47218, %reg0	
	movq %reg0, %reg1	

1
	movq -64(%rbp), %reg1	
	movq %reg2, %r9	

1
	movq $3000, %rdi	
	movq %rdi, 736(%reg1)	

1
	movq $3000, %rdi	
	movq %rdi, 512(%rax)	

1
	je .Matrix.get_64	
	movq $76, %rsi	

1
	movq $51925, %rax	
	movq 0(%rbx), %r12	

1
	je .Main.main_14	
	movq $173, %reg0	

1
	movq %r13, %rax	
	movq %r15, %rdi	

1
	movq %rdi, 128(%reg1)	
	movq $3000, %rdi	

1
	jne .Matrix.set_47	
	movq %reg0, 152(%reg1)	

1
	je .Main.main_118	
	movq $70, %reg0	

1
	movq %reg0, %rdi	
	movq 8(%rdi), %rbx	

1
	addl %eax, %edi	
	movq -128(%rbp), %reg3	

1
	movq $2, %rbx	
	movq 0(%reg1), %r12	

1
	je .Main.main_4	
	movq $4, %rsi	

1
	movq $11, %reg0	
	movq $.string1_l, %reg1	

1
	movq $226, %reg0	
	movq $.string5_l, %rdi	

1
	je .Main.main_2	
	movq $138, %reg0	

1
	movq %reg0, 272(%reg1)	
	movq $0, %reg0	

1
	movq $3, %rax	
	movq 0(%reg1), %r12	

1
	je .Main.main_2	
	movq $0, %reg0	

1
	movq -160(%rbp), %reg1	
	cmpl %esi, %eax	

1
	movq -168(%rbp), %rax	
	movq -24(%rbp), %reg3	

1
	movq %rdi, 240(%reg1)	
	movq $3000, %rdi	

1
	movq %rax, %reg1	
	movq $.string10, %r14	

1
	movq %reg0, 168(%reg1)	
	movq $3000, %reg0	

1
	movq %r9, %rax	
	movq -184(%rbp), %r9	

1
	subl %eax, %reg1d	
	movq $10464, %r9	

1
	movq $empty_string, %reg0	
	movq %reg1, %r12	

1
	imull %edi	
	movq %rax, %r14	

1
	imull %r9d	
	movq -128(%rbp), %r9	

1
.Main.main_36:	
	movq 0(%r13), %rax	

1
	movq $12, %r9	
	movq %rbx, %reg2	

1
	ret	
	.size Matrix.mul, .-Matrix.mul	

1
.Main.main_122:	
.Main.main_120:	

1
	movq %reg0, %reg1	
	subq $40, %reg0	

1
	je .Main.main_13	
	movq $20, %reg0	

1
	.quad String_vtable	
	.quad .string17_l	

1
	movq %reg0, %reg1	
	addl %reg2, %r9d	

1
	movq $48985, %reg0	
	movq 0(%rbx), %r12	

1
.Main.main_148:	
	cdq	

1
	call *%rax	
	movq $0, %r14	

1
	movq $32716, %r10	
	movq $49288, %rax	

1
	movq $.string6, %rdi	
	movq %rdi, %rbx	

1
	testq $1, %rcx	
	je .Main.main_118	

1
	subl %reg0, %edi	
	movq %rdi, 16(%reg3)	

1
	movq -128(%rbp), %rax	
	imull %reg2	

1
	movq %rdi, %reg1	
	jmp .Main.main_58	

1
	movq $46154, %rsi	
	imull %reg1	

1
	movq 624(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq %rbx, %reg1	
	movq -64(%rbp), %rsi	

1
	movq 136(%r12), %r12	
	movq %rbx, %reg2	

1
	jne .Matrix.set_54	
	movq %rdi, 168(%rax)	

1
.Complex.equal_3:	
	movq 0(%r12), %reg1	

1
	movq -24(%rbp), %reg1	
	subl %reg2, %eax	

1
	movq %rdi, %reg1	
	jmp .Main.main_133	

1
	.globl Nil.new	
	.type Nil.new, @function	

1
	testq $1, %rcx	
	je .Main.main_145	

1
	movq -128(%rbp), %reg1	
	movq -152(%rbp), %rcx	

1
	jmp .Main.main_116	
.Main.main_115:	

1
.A2I.c2i_8:	
.A2I.c2i_6:	

1
	movq 56(%r12), %r12	
	movq 8(%rax), %rdi	

1
	addl %reg0, %eax	
	subl %eax, %reg2	

1
	idivl %ecx	
	movq $53595, %rsi	

1
	movq %reg0, %rdi	
	jmp .CellularAutomaton.cell_at_next_evolution_4	

1
	subl %reg0, %reg1	
	movq $18841, %rax	

1
	movq 24(%rax), %reg1	
	movq %reg2, %rsi	

1
	movq $18119, %rax	
	subl %reg1, %edi	

1
	je .Main.main_71	
	movq $19, %reg0	

1
	movq 720(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	movq %rdi, 504(%rax)	
	movq $3000, %rdi	

1
	subl %reg0, %edi	
	movq $54460, %rax	

1
.Main.main_32:	
	movq 0(%reg0), %rax	

1
	addl %eax, %reg1d	
	movq $60159, %reg2	

1
.Bar.new_8:	
	call Bar.new	

1
.Main.main_72:	
	movq %reg0, %reg1	

1
	movq $12, %rcx	
	movq -16(%rbp), %reg2	

1
	movq %rdi, %reg1	
	movq -80(%rbp), %rsi	

1
.Main.main_19:	
	movq 0(%r12), %rax	

1
	movq %rax, %r13	
.Main.main_49:	

1
	call out_error	
.Cons.rev_1:	

1
	movq 8(%rbx), %reg1	
	popq %r14	

1
	movq $.string18, %reg0	
	movq %reg0, %reg1	

1
	movq $0, %reg0	
	movq %reg0, 368(%reg1)	

1
	movq %rbx, %rdi	
	movq 8(%rbx), %reg2	

1
	je .Main.main_25	
	movq $10, %reg0	

1
	movq %reg0, 400(%reg1)	
	movq $0, %reg0	

1
.Main.main_48:	
	movq %reg0, %reg1	

1
	movq %rax, %reg1	
	jmp .Main.main_70	

1
	movq %reg0, 464(%reg1)	
	movq $0, %reg0	

1
List.getHead:	
	pushq %rbp	

1
	movq %reg0, %reg1	
	jmp .Main.iota_1	

1
	movq $192, %reg0	
	movq $.string5_l, %reg1	

1
	call *%reg0	
	movq 264(%reg1), %reg2	

1
	jne .A2I.i2c_13	
	movq $.string13, %reg0	

1
	je .DicNode.insert_3	
	movq $0, %reg0	

1
	movq -48(%rbp), %rax	
	movq %rbx, %reg3	

1
	movq $5, %r13	
	movq 0(%reg1), %reg2	

1
	movq %rcx, %rax	
	movq -40(%rbp), %rcx	

1
	movq -176(%rbp), %rdi	
	subl %edi, %reg3	

1
	call *%reg0	
	movq $0, %r13	

1
.Main.main_183:	
	cdq	

1
	movq %rcx, %rax	
	negl %ecx	

1
	movq -128(%rbp), %rax	
	movq -88(%rbp), %rsi	

1
	movq $.string11, %rax	
	popq %reg1	

1
	movq -24(%rbp), %rax	
	movq $0, %rsi	

1
	movq $48608, %rax	
	negl %eax	

1
	movq %reg0, %reg1	
	movq $6821, %reg2	

1
	movq %reg0, 8(%rbx)	
	movq 0(%rbx), %reg2	

1
	call *%r12	
	movq 16(%reg1), %rax	

1
	movq $4, %rax	
	cmpl %reg1, %edi	

1
	movq -160(%rbp), %reg1	
	addl %esi, %reg3	

1
	movq $.string14, %reg0	
	jmp .A2I.i2c_16	

1
	movq $.string7, %r14	
	movq $.string8, %reg1	

1
	call *%rax	
	jmp .Main.main_27	

1
.Main.main_44:	
.Main.main_42:	

1
	movq %rdi, 80(%reg1)	
	movq $3000, %rdi	

1
	call out_error	
.Main.main_94:	

1
	movq %reg0, %reg1	
	movq $64947, %reg0	

1
	movq %rdx, -176(%rbp)	
	movq %reg2, %rdx	

1
	idivl %reg0	
	movq $37473, %reg1	

1
	movq 8(%rdi), %reg1	
	movq 0(%rax), %reg3	

1
	call *%r12	
	movq 576(%rbx), %reg2	

1
	.type Foo.x, @function	
Foo.x:	

1
	movq %rdi, %reg1	
.Main.main_170:	

1
	je .Main.main_95	
	movq %rdi, %reg1	

1
	addl %eax, %edi	
	movq $30018, %reg2	

1
	movq %rax, %reg1	
	movq $29011, %rax	

1
	subl %eax, %edi	
	movq $14802, %reg2	

1
	addl %reg0, %edi	
	movq $25947, %rsi	

1
	movq %reg0, 736(%reg1)	
	movq $3000, %reg0	

1
	je .Main.main_65	
	movq $49, %rsi	

1
	movq %reg0, %reg1	
	movq 8(%reg2), %rbx	

1
	setl %reg0b	
	jge .Main.main_35	

1
	movq $3000, %rdi	
	movq %rdi, 32(%reg1)	

1
	movq %rdi, 480(%rax)	
	movq $0, %rdi	

1
	movq -8(%rbp), %rdi	
	movq -32(%rbp), %reg3	

1
	.type List.rcons, @function	
List.rcons:	

1
	negl %reg0	
	movq -144(%rbp), %rax	

1
	call out_error	
.Matrix.set_64:	

1
	addl %edi, %eax	
	movq %reg2, -16(%rbp)	

1
.Matrix.get_56:	
	movq $3, %reg0	

1
.Main.main_14:	
	movq 0(%reg0), %r15	

1
	movq -24(%rbp), %rdi	
	addl %reg2, %edi	

1
	movq %rax, %r10	
	movq $55273, %reg2	

1
	call String.concat	
	movq %rax, %rbx	

1
	call *%rbx	
.Main.main_30:	

1
	.globl Complex.x_value	
	.type Complex.x_value, @function	

1
	movq %reg0, %rcx	
	movq $25351, %reg0	

1
	je .Main.main_56	
	movq $49, %reg0	

1
	call *%rax	
	movq -184(%rbp), %rax	

1
	movq %reg0, %rax	
	movq %rax, 56(%reg2)	

1
	movq -136(%rbp), %reg1	
	movq -72(%rbp), %rsi	

1
	movq %rax, -16(%rbp)	
	movq %r14, %rax	

1
	.type A2I.i2a_aux, @function	
A2I.i2a_aux:	

1
	movq %reg0, %reg1	
	movq 8(%reg0), %rsi	

1
	movq $3000, %reg0	
	movq %reg0, 104(%rax)	

1
	movq 24(%reg0), %reg1	
	addl %edi, %reg3	

1
.Main.main_60:	
	movq -16(%rbp), %reg1	

1
	movq -160(%rbp), %rax	
	imull %r8d	

1
	movq $3000, %reg0	
	movq %reg0, 136(%rax)	

1
	call *%reg0	
.CellularAutomaton.cell_right_neighbor_2:	

1
	testq $1, %r10	
	je .Main.main_46	

1
	setle %reg0l	
	jg .Main.main_94	

1
	call *%r15	
.Main.main_4:	

1
	movq %rax, %rcx	
	movq $49119, %rax	

1
	movq $21813, %reg0	
	movq $25099, %reg1	

1
	movq $18422, %reg0	
	subl %reg1, %reg2	

1
	movq %reg0, %rax	
	jmp .Main.main_97	

1
	movq -40(%rbp), %reg1	
	movq -56(%rbp), %rax	

1
.Main.main_1:	
	movq -16(%rbp), %rdx	

1
.Bazz.new_5:	
	movq %rbx, %rax	

1
	movq %rdi, 384(%rax)	
	movq $3000, %rdi	

1
	movq $.string7, %reg0	
	movq $.string8, %reg1	

1
	movq 24(%reg0), %rax	
	imull %edi	

1
	movq 8(%rax), %rax	
	jmp .Matrix.get_3	

1
	movq %rax, %reg1	
	jmp .A2I.a2i_aux_1	

1
	call *%r12	
	movq 496(%rbx), %reg2	

1
	call *%r13	
	movq $.string9, %reg1	

1
	movq %rdi, %reg1	
	call Dictionary.new	

1
	movq $54460, %rax	
	addl %eax, %reg2	

1
	subl %eax, %edi	
	movq $20509, %rax	

1
.Main.print_list_1:	
	movq 0(%r12), %rax	

1
	call Bool.new	
	movq 0(%rbx), %r12	

1
.Main.main_57:	
	movq %reg0, %reg1	

1
	movq %rsi, %r12	
	call Nil.new	

1
	subl %reg0, %esi	
	movq -112(%rbp), %reg3	

1
	addl %edi, %eax	
	movq $8340, %rdi	

1
Complex.y_value:	
	pushq %reg0	

1
	movq $60159, %rax	
	movq %rax, %r11	

1
	movq %rax, %rdi	
	movq $45332, %rax	

1
	movq -88(%rbp), %rsi	
	call *%rax	

1
	movq $.string10, %reg0	
	movq 0(%r12), %reg2	

1
	movq -16(%rbp), %rax	
	imull %reg2	

1
	call out_error	
.Main.main_183:	

1
	movq -152(%rbp), %reg1	
	movq -112(%rbp), %rsi	

1
	movq -56(%rbp), %rsi	
	subl %reg2, %reg3	

1
	sete %reg0	
	jne .A2I.i2c_7	

1
	movq 448(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	call *%reg0	
	movq 264(%rbx), %reg2	

1
	.size Cons.init, .-Cons.init	
	.globl Cons.car	

1
	movq %rdi, %r12	
	movq $13, %rbx	

1
	movq 272(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	movq $46404, %r12	
	movq 0(%rbx), %rax	

1
	movq %reg0, 184(%rax)	
	movq $3000, %reg0	

1
	je .Main.main_51	
	movq -56(%rbp), %reg1	

1
	je .Main.main_82	
	movq %r15, %reg1	

1
	movq %rdi, %rbx	
	movq 24(%rbx), %rax	

1
	movq %rdi, %rbx	
	movq 8(%rbx), %rdx	

1
	je .Main.main_6	
	movq $14, %rsi	

1
	testq $1, %rax	
	je .Main.new_2	

1
	movq 120(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	negl %reg0	
	movq %reg1, 16(%rdi)	

1
	je .Main.main_4	
	movq $.string7, %reg0	

1
	movq $3, %rbx	
	movq 0(%rax), %r12	

1
	jne .Matrix.set_36	
	movq %rdi, 120(%reg1)	

1
	movq %rdi, 256(%reg1)	
	movq $0, %rdi	

1
	.quad CellularAutomaton.cell_right_neighbor	
	.quad CellularAutomaton.cell_at_next_evolution	

1
	movq $5, %reg0	
	movq $.string4_l, %rdi	

1
	movq -56(%rbp), %rax	
	movq -88(%rbp), %reg3	

1
Nil.rcons:	
	pushq %reg0	

1
	addl %reg0, %edi	
	movq %reg2, 16(%rax)	

1
	je .Main.main_179	
	movq $308, %reg0	

1
	imull %edi	
	movq -120(%rbp), %reg2	

1
	movq 432(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq %reg0, 392(%reg1)	
	movq $3000, %reg0	

1
	movq -32(%rbp), %rax	
	movq -128(%rbp), %reg3	

1
	movq %reg0, %rbx	
	movq $25185, %reg0	

1
.Matrix.set_64:	
	cdq	

1
	movq %reg0, 8(%rax)	
	movq %rax, 16(%rbx)	

1
	call *%reg0	
	movq 232(%rbx), %reg0	

1
	movq $14546, %reg0	
	subl %reg1, %esi	

1
	movq %rsi, %rdi	
	movq -16(%rbp), %rdi	

1
	movq -64(%rbp), %rax	
	imull %reg2d	

1
	testq $1, %reg0	
	je .Matrix.get_25	

1
	jg .Main.main_15	
	movq $1, %rax	

1
	movq -64(%rbp), %reg1	
	addl %eax, %esi	

1
	movq %rax, %r8	
	movq $24320, %rax	

1
.Main.main_4:	
	movq $.string8, %reg0	

1
	movq -72(%rbp), %reg1	
	subl %esi, %reg3	

1
	movq -112(%rbp), %r8	
	addl %r8d, %eax	

1
	movq -160(%rbp), %rax	
	subl %eax, %reg3	

1
	movq %reg0, 216(%rax)	
	movq $3000, %reg0	

1
	movq 336(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	call *%r13	
	movq %rbx, %r13	

1
	testq $1, %r9	
	je .Main.main_2	

1
	negl %ecx	
	movq -80(%rbp), %reg2	

1
.A2I.a2i_4:	
.A2I.a2i_2:	

1
	je .Main.main_4	
	cmpl $0, 8(%reg0)	

1
.Cons.rcons_1:	
	movq 16(%rax), %rdx	

1
	call *%reg0	
	jmp .A2I.a2i_6	

1
	movq %rbx, %rax	
	movq -64(%rbp), %rsi	

1
.Main.main_68:	
	movq %reg0, %rax	

1
	.size List.insert, .-List.insert	
	.globl List.rcons	

1
	call *%rax	
	jmp .CellularAutomaton.cell_right_neighbor_2	

1
	addl %reg0, %edi	
	movq %r12, %rax	

1
	addl %eax, %esi	
	movq -24(%rbp), %reg3	

1
.DicNode.get_4:	
	movq 0(%reg0), %reg1	

1
	testq $1, %rax	
	je .Main.main_117	

1
	movq %rdi, %reg1	
	movq $33976, %rdi	

1
	setle %reg0l	
	jg .Main.main_20	

1
	movq $52033, %rax	
	subl %eax, %reg2	

1
	.type List.cdr, @function	
List.cdr:	

1
	movq %rdi, 96(%rax)	
	movq $3000, %rdi	

1
	movq -80(%rbp), %reg1	
	movq -168(%rbp), %reg3	

1
	jmp .Matrix.get_61	
.Matrix.get_60:	

1
.Main.main_43:	
	movq -160(%rbp), %reg1	

1
	je .Main.main_132	
	movq $88, %rsi	

1
	je .Main.main_33	
	movq $22, %rsi	

1
.Main.main_118:	
	cdq	

1
.Matrix.set_62:	
	movq $1, %rax	

1
	movq $0, %rdi	
	movq %rdi, 648(%rax)	

1
	movq %reg0, %rax	
	jmp .Main.main_50	

1
	movq 16(%rbx), %reg1	
	cmpl %eax, %reg3	

1
	movq -56(%rbp), %reg1	
	movq -56(%rbp), %rax	

1
	movq %rdi, %rax	
	movq -80(%rbp), %reg3	

1
	idivl %reg0d	
	movq $7741, %r13	

1
	negl -24(%rbp)	
	movq $3306, %reg1	

1
	movq 32(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	.quad Nil.isNil	
	.quad List.cons	

1
	movq 24(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	subl %edi, %eax	
	movq %reg2, %rbx	

1
	jmp .Main.out_whatever_5	
.Main.out_whatever_5:	

1
	movq -32(%rbp), %rax	
	addl %eax, %edi	

1
	movq $9, %reg0	
	movq $.string2_l, %reg1	

1
	idivl %reg0d	
	movq $47963, %r9	

1
	je .Main.main_70	
	movq %reg0, %rax	

1
	movq -184(%rbp), %reg1	
	addl %ecx, %reg3	

1
	movq %rdx, %rax	
	movq %reg2, %r13	

1
	movq -184(%rbp), %reg1	
	imull %ecx	

1
	movq -40(%rbp), %reg1	
	movq -96(%rbp), %rax	

1
	movq $11, %reg0	
	movq $.string3_l, %reg1	

1
	movq $37473, %reg0	
	movq $0, %rcx	

1
	addl %eax, %edi	
	movq -48(%rbp), %rax	

1
	movq $0, %rdi	
	movq %rdi, 544(%reg1)	

1
	subl %eax, %edi	
	movq $18310, %rax	

1
	movq -56(%rbp), %rax	
	addl %reg2, %eax	

1
	movq %rax, %reg1	
	movq $1, %r15	

1
	movq %r13, %rax	
	addl %reg2, %ecx	

1
	movq 584(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	movq %reg0, %reg1	
	movq $.string11, %r15	

1
	je .Complex.equal_4	
	movq $1, %reg0	

1
	je .Main.main_14	
	movq $34, %rsi	

1
	negl %eax	
	movq $57936, %reg1	

1
	movq %reg0, %reg1	
	movq 8(%rbx), %r13	

1
	movq -168(%rbp), %reg1	
	movq -160(%rbp), %rax	

1
	movq -40(%rbp), %reg1	
	movq %rsi, %reg3	

1
	movq %reg0, %rdi	
	movq -168(%rbp), %rsi	

1
	movq $0, %rdi	
	movq %rdi, 344(%reg1)	

1
.Main.main_7:	
	movq $.string9, %r12	

1
	movq $.string6, %reg0	
	movq $.string7, %rbx	

1
	je .Main.main_6	
	cmpq $Object_vtable, 0(%rax)	

1
	movq -40(%rbp), %reg1	
	subl %reg2, %reg3d	

1
	movq $7741, %r13	
	movq %r13, %r14	

1
	imull %esi	
	movq -176(%rbp), %reg2	

1
	movq -136(%rbp), %reg1	
	movq -160(%rbp), %reg3	

1
.Main.main_3:	
	movq -80(%rbp), %rsi	

1
	movq $33976, %rdi	
	addl %edi, %reg2	

1
	call *%r15	
	movq $12, %r14	

1
.string6_l:	
	.string "testtesttesttesttesttesttesttesttesttesttesttesttest"	

1
	movq $0, %rdi	
	movq %rdi, 304(%rax)	

1
	movq -112(%rbp), %reg1	
	movq %r9, %reg3	

1
	movq $.string11, %reg0	
	movq 0(%rbx), %r12	

1
	movq 8(%rdi), %rax	
	negl %reg2	

1
	movq 8(%rdi), %rdi	
	addl %edi, %reg2	

1
	je .Main.main_93	
	movq %rbx, %reg1	

1
	jne .Main.main_154	
	movq -144(%rbp), %reg1	

1
	movq 520(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	.quad Nil.rev	
	.quad Nil.sort	

1
	movq -144(%rbp), %reg1	
	subl %eax, %reg3	

1
	movq %rdi, 544(%reg1)	
	movq $0, %rdi	

1
	movq $173, %reg0	
	movq $.string2_l, %reg1	

1
	movq %rbx, %rdi	
	call Object.type_name	

1
	movq %reg0, %rax	
	jmp .Main.main_133	

1
	movq $19369, %reg0	
	addl %edi, %eax	

1
	movq 16(%reg0), %rax	
	subl %reg2, %reg3	

1
	movq 24(%rbx), %rax	
	addl %reg2, %reg3	

1
	movq $Baz_vtable, 0(%reg0)	
	movq $0, %reg1	

1
	movq $.string13, %r12	
	movq 0(%reg1), %reg2	

1
	cmpq $Bar_vtable, 0(%rbx)	
	je .Foo.new_5	

1
	movq -56(%rbp), %rdi	
	movq -16(%rbp), %reg3	

1
.ListNode.insert_2:	
	movq 0(%reg0), %r13	

1
	call *%reg0	
	movq -184(%rbp), %reg2	

1
	idivl %reg0	
	movq -184(%rbp), %reg2	

1
	movq $0, %reg0	
	jmp .Main.new_4	

1
	movq $12, %rsi	
	movq %r14, %reg2	

1
	movq %reg0, %rdi	
	movq $55049, %reg0	

1
	sete %dil	
	jne .Main.main_19	

1
	addl %eax, %reg1	
	movq %rdi, %r13	

1
	movq -144(%rbp), %rax	
	addl %esi, %reg3	

1
	movq 8(%reg0), %reg0	
	jmp .Matrix.get_3	

1
	movq $0, %reg0	
	movq %reg0, 608(%rax)	

1
	movq $34422, %reg0	
	subl %eax, %reg2	

1
	jne .Main.main_11	
	movq -144(%rbp), %rax	

1
	movq %reg0, 608(%rax)	
	movq $0, %reg0	

1
	movq $2, %reg0	
	movq $2, %rax	

1
	movq -176(%rbp), %reg1	
	movq -48(%rbp), %rax	

1
	je .Main.main_37	
	movq $13, %reg0	

1
	je .Main.main_70	
	movq $52, %rsi	

1
.Main.main_2:	
	movq 0(%rax), %rbx	

1
	movq 168(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq %reg0, 664(%reg1)	
	movq $0, %reg0	

1
	movq 160(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
.Matrix.get_59:	
.Matrix.get_57:	

1
	movq 48(%rbx), %rbx	
	movq 8(%reg1), %rdi	

1
	imull %reg0	
	movq -120(%rbp), %rdi	

1
	movq %rax, %rsi	
	movq -152(%rbp), %rax	

1
	call *%reg0	
	movq -40(%rbp), %rdi	

1
	movq $49695, %reg0	
	movq $13131, %reg1	

1
.Main.main_15:	
	movq 0(%rbx), %rax	

1
	call *%rax	
	movq 304(%reg1), %rax	

1
.A2I.i2c_9:	
	movq $5, %rcx	

1
	movq $39523, %rsi	
	imull %reg1	

1
	movq -128(%rbp), %reg1	
	movq %rbx, %rax	

1
	jmp .Bar.new_11	
.Bar.new_10:	

1
.Main.main_115:	
	cdq	

1
	testq $1, %r9	
	je .Main.main_151	

1
	movq 16(%rbx), %rax	
	addl %reg2, %reg3	

1
	movq $100, %rdi	
	movq %r12, %reg2	

1
	imull %esi	
	movq -24(%rbp), %reg2	

1
	addl %reg0, %eax	
	movq $55318, %rdi	

1
	movq %rdi, %reg1	
	jmp .Main.main_79	

1
	cmpq $Int_vtable, 0(%rax)	
	je .Main.func_1	

1
	movq -168(%rbp), %r8	
	addl %r8d, %eax	

1
	movq -32(%rbp), %rax	
	movq %reg2, %r8	

1
	movq $46509, %reg0	
	movq %reg0, -24(%rbp)	

1
.Main.main_52:	
	movq 0(%rax), %r14	

1
	movq -16(%rbp), %rsi	
	movq -40(%rbp), %rax	

1
	call *%rax	
	movq -16(%rbp), %rdx	

1
	movq %reg0, %r12	
	movq $1, %rbx	

1
	movq $174, %rsi	
	movq $.string5_l, %reg1	

1
	movq 80(%reg0), %reg0	
	movq %r14, %reg2	

1
	subl %esi, %reg1	
	movq %reg2, 16(%reg3)	

1
	movq -120(%rbp), %reg1	
	movq %reg2, %rsi	

1
	.quad List.insert	
Bool_vtable:	

1
Bazz.printh:	
	pushq %rbp	

1
	movq $36010, %reg0	
	negl %edi	

1
	movq 24(%rax), %reg1	
	movq 0(%reg1), %r12	

1
.Main.main_4:	
	movq $.string6, %r12	

1
	movq -160(%rbp), %reg1	
	movq -104(%rbp), %rdi	

1
	movq $0, %reg0	
	movq %reg0, 528(%reg1)	

1
	.type Matrix.new, @function	
Matrix.new:	

1
	movq -184(%rbp), %rcx	
	addl %ecx, %reg3	

1
	movq -104(%rbp), %reg1	
	movq %r15, %rax	

1
	call *%rax	
	movq %r13, %reg2	

1
	movq $33636, %rdi	
	imull %edi	

1
	movq $5411, %reg0	
	addl %reg0d, %reg1	

1
	movq 8(%rax), %rdi	
	call *%rbx	

1
	movq %reg0, %reg1	
	jmp .Main.main_7	

1
	je .Main.func_1	
	movq $.string6, %r12	

1
	movq $38661, %rdi	
	imull %edi	

1
	imull %r12d	
	subl %reg1, %ebx	

1
	addl %edi, %eax	
	movq -152(%rbp), %rdi	

1
	movq $0, %rdi	
	movq %rdi, 360(%rax)	

1
	movq $44, %reg0	
	movq $22, %reg1	

1
.Main.main_151:	
	cdq	

1
	movq $.string16, %rax	
	jmp .A2I.i2c_20	

1
	movq -16(%rbp), %reg1	
	movq -120(%rbp), %rax	

1
	movq %r15, %reg1	
	movq %r12, %rdi	

1
	jg .Main.main_127	
	movq -48(%rbp), %rax	

1
	call out_error	
.Main.main_122:	

1
	movq -136(%rbp), %rcx	
	subl %ecx, %reg3	

1
	movq $166, %reg0	
	movq $.string5_l, %rdi	

1
	movq %rbx, %reg1	
	subl %reg2, %eax	

1
	jge .Main.main_9	
	movq %reg0, %reg1	

1
	call *%rax	
	jmp .Main.new_4	

1
	movq %rdx, %rax	
	movq %reg2, %reg3	

1
	jne .Main.main_154	
	movq -144(%rbp), %rdi	

1
	movq $.string17, %reg0	
	movq %reg0, %r13	

1
	addl %edi, %reg1	
	cmpl $0, %reg2d	

1
	je .Nil.rcons_1	
	movq $107, %reg0	

1
	movq 8(%rdi), %rax	
	negl %eax	

1
	movq %rax, -72(%rbp)	
	movq %r13, %rax	

1
	call *%rax	
	movq 568(%reg1), %rax	

1
.Main.main_155:	
	cdq	

1
	movq -72(%rbp), %reg1	
	movq -104(%rbp), %rdi	

1
	movq -32(%rbp), %reg1	
	movq %rdi, %rsi	

1
	movq $1357, %rax	
	movq $9886, %reg1	

1
	movq $12, %rsi	
	movq -80(%rbp), %reg2	

1
	addl %reg0, %reg1	
	movq %reg2, 24(%rbx)	

1
	call *%rax	
	movq 280(%reg1), %reg2	

1
	testq $1, %rax	
	je .Bar.new_19	

1
	call *%reg0	
	movq $3, %rdi	

1
	addl %reg0, %edi	
	movq $28260, %reg2	

1
	.type DicNode.name, @function	
DicNode.name:	

1
	idivl %ecx	
	movq $14901, %rsi	

1
	negl %eax	
	movq $50691, %reg1	

1
	call out_error	
.Main.main_158:	

1
	cmpq $Int_vtable, 0(%rbx)	
	je .Main.main_23	

1
	movq -48(%rbp), %reg1	
	movq -72(%rbp), %rdi	

1
	addl %eax, %edi	
	movq $2, %rax	

1
	movq 8(%reg0), %rdi	
	cmpl %edi, %eax	

1
	movq 672(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq -152(%rbp), %rax	
	imull %ecx	

1
	movq %rdi, 704(%reg1)	
	movq $0, %rdi	

1
	testq $1, %rdi	
	je .Main.main_55	

1
	je .Main.new_3	
	cmpq $Bool_vtable, 0(%rbx)	

1
	movq $62331, %reg0	
	subl %eax, %edi	

1
	movq %rax, %reg1	
	movq $15735, %rax	

1
	cmpq $Razz_vtable, 0(%rbx)	
	je .Bar.new_15	

1
	movq %r11, %r10	
	imull %r10d	

1
	movq $3000, %rdi	
	movq %rdi, 360(%rax)	

1
	movq -112(%rbp), %rax	
	subl %reg2, %eax	

1
	addl %edi, %eax	
	movq %reg2, -64(%rbp)	

1
	addl %reg0, %reg1	
	movq $2, %reg2	

1
	call *%rax	
	movq 520(%reg1), %r12	

1
	movq $16, %reg0	
	movq $.string2_l, %rdi	

1
	movq $22, %rsi	
	imull %reg1	

1
	sete %reg0b	
	jne .A2I.c2i_17	

1
	movq -96(%rbp), %reg1	
	movq %reg2, %rcx	

1
.Matrix.get_31:	
.Matrix.get_29:	

1
	addl %reg0, %esi	
	movq $14546, %reg2	

1
	je .Main.main_47	
	movq %reg0, %reg1	

1
	movq %reg0, %rdx	
	movq %rdx, -72(%rbp)	

1
	movq %reg0, 584(%rax)	
	movq $0, %reg0	

1
.Main.main_25:	
	movq 0(%r13), %reg1	

1
	movq $0, %reg0	
	movq %reg0, 312(%reg1)	

1
	movq $52, %reg0	
	movq 0(%reg1), %r12	

1
	je .Main.out_whatever_6	
	movq $13, %reg0	

1
	movq -16(%rbp), %reg1	
	cmpl %eax, %edi	

1
	movq %reg0, %rax	
	movq %r12, %r13	

1
	cmpq $Foo_vtable, 0(%reg0)	
	je .Foo.new_8	

1
	movq $112, %rsi	
	movq $.string3_l, %reg1	

1
	movq 0(%rbx), %r12	
	movq 96(%r12), %r12	

1
	movq 528(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	addl %eax, %esi	
	movq -24(%rbp), %rax	

1
	je .Main.funccase_2	
	cmpq $Main_vtable, 0(%rdi)	

1
	movq %rdx, %reg1	
	movq -16(%rbp), %rbx	

1
	movq $9556, %rdi	
	cmpl %reg1, %reg2	

1
	movq $47988, %reg0	
	movq %reg0, %reg1	

1
	movq $15234, %reg0	
	movq 0(%rbx), %reg2	

1
	.quad .string8_l	
	.quad 8	

1
.Main.main_136:	
	movq %reg0, %rax	

1
	movq $5, %rax	
	subl %reg1, %reg2	

1
	movq %reg0, 520(%reg1)	
	movq $0, %reg0	

1
	movq %rax, %reg1	
	movq $10809, %rax	

1
	movq %rbx, %r13	
	movq %r12, %rax	

1
	call *%rbx	
	movq %r12, %reg2	

1
	movq $0, %rdi	
	movq %rdi, 232(%reg1)	

1
	.size DicNode.get, .-DicNode.get	
	.globl DicNode.insert	

1
	je .Main.main_32	
	movq $178, %rsi	

1
.Main.func_1:	
	movq $0, %rdi	

1
	jge .Main.main_30	
	movq $46404, %reg0	

1
	.type Nil.insert, @function	
Nil.insert:	

1
	movq %r12, %r13	
	movq $3, %rax	

1
	movq $.string7, %r15	
	movq -8(%rbp), %reg2	

1
	movq $14, %reg0	
	negl %eax	

1
	movq -32(%rbp), %rdi	
	imull %edi	

1
	movq -40(%rbp), %rax	
	movq -152(%rbp), %rsi	

1
	movq $.string11, %rax	
	movq %reg1, %reg2	

1
	movq %rsi, %reg1	
	subl %eax, %edi	

1
	xorq $1, %rax	
	movq %rax, %reg1	

1
	.globl Complex.new	
	.type Complex.new, @function	

1
	movq %reg0, %rax	
	jmp .Main.main_153	

1
	testq $1, %reg0	
	je .Main.main_130	

1
	imull %ecx	
	movq -80(%rbp), %rcx	

1
	testq $1, %rsi	
	je .Main.main_31	

1
.Main.main_4:	
	movq $3, %r12	

1
	movq %rax, 8(%rbx)	
	movq 8(%rbx), %rdi	

1
	movq %reg0, %r12	
	jmp .Main.main_31	

1
	negl %esi	
	movq -32(%rbp), %reg2	

1
	je .Bar.new_8	
	cmpq $Foo_vtable, 0(%reg0)	

1
.Matrix.get_8:	
	movq $5, %reg0	

1
	movq %rdi, %rax	
	jmp .Main.main_14	

1
	movq 472(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq -144(%rbp), %reg1	
	subl %reg2, %reg3	

1
	jne .CellularAutomaton.cell_right_neighbor_1	
	movq $0, %reg0	

1
	idivl %reg0	
	movq $53595, %rsi	

1
	movq $6, %reg0	
	movq %reg1, %rsi	

1
	movq $30996, %reg0	
	movq $0, %reg1	

1
	movq %reg0, %rax	
	jmp .Matrix.set_50	

1
	movq $0, %reg0	
	movq $0, %r12	

1
	movq 328(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	je .Main.main_92	
	movq $64, %rsi	

1
	movq $147, %rsi	
	movq $.string5_l, %reg1	

1
	je .Main.main_7	
	movq $13, %reg0	

1
	idivl %reg0	
	movq $12855, %reg1	

1
	movq %reg0, %rcx	
	movq %rdi, %r8	

1
	cmpq $Razz_vtable, 0(%rbx)	
	je .Foo.new_9	

1
.Main.main_17:	
	movq 0(%reg0), %reg1	

1
	movq $25, %rsi	
	movq $.string2_l, %reg1	

1
	je .Main.main_140	
	movq $112, %reg0	

1
	movq -128(%rbp), %reg1	
	addl %esi, %eax	

1
	subl %r9d, %reg1	
	movq -176(%rbp), %r9	

1
	movq $8423, %rax	
	movq $34498, %reg1	

1
	movq -152(%rbp), %rax	
	movq %r15, %reg3	

1
	movq %rdi, 40(%reg1)	
	movq %rdi, %reg1	

1
	movq %r12, 8(%rax)	
	movq 8(%reg2), %r12	

1
	call *%rax	
.Main.main_6:	

1
	jne .Main.main_62	
	cmpl $0, %reg0d	

1
	addl %reg0, %eax	
	jmp .Main.main_1	

1
	movq $3000, %rdi	
	movq %rdi, 24(%rax)	

1
	movq -80(%rbp), %reg1	
	movq -88(%rbp), %rdi	

1
	movq $3, %rdi	
	movq $0, %reg1	

1
	movq 16(%rbx), %reg1	
	cmpl %eax, %edi	

1
.Main.main_15:	
	movq $0, %reg0	

1
	movq $6195, %rsi	
	imull %esi	

1
	call ListNode.new	
	movq %reg0, 8(%reg1)	

1
	movq $0, %r15	
	movq %r15, %r14	

1
	.quad 5	
percentd_string_l:	

1
	je .Main.main_60	
	movq $213, %reg0	

1
	je .Main.main_2	
	movq $138, %rsi	

1
	call *%rax	
	movq %r14, %rdi	

1
.Main.main_51:	
	movq 0(%reg0), %reg1	

1
	addl %reg0, %reg1	
	movq %rax, -64(%rbp)	

1
	movq %reg0, 456(%rax)	
	movq $0, %reg0	

1
	testq $1, %rax	
	jne .Main.main_21	

1
	movq %rdi, 264(%reg1)	
	movq $3000, %rdi	

1
	movq %reg0, %r13	
	movq %reg2, %rdi	

1
DicNode.insert:	
	pushq %rbp	

1
	je .Main.main_75	
	movq %reg0, %rax	

1
	movq 192(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	ret	
	.size Complex.new, .-Complex.new	

1
	movq -32(%rbp), %rax	
	addl %edi, %eax	

1
	jne .Main.main_1	
	movq $11435, %reg0	

1
	movq $12, %rsi	
	movq -96(%rbp), %rax	

1
	movq $3000, %rdi	
	movq %rdi, 640(%reg1)	

1
	movq %reg0, %rsi	
	movq -24(%rbp), %rcx	

1
	idivl %reg0	
	movq -40(%rbp), %rcx	

1
	movq $3000, %reg0	
	movq %reg0, 280(%reg1)	

1
	je .Dictionary.insert_2	
	movq $14, %reg0	

1
	movq -128(%rbp), %rdi	
	movq -56(%rbp), %reg3	

1
.Matrix.get_39:	
.Matrix.get_26:	

1
	movq -24(%rbp), %reg1	
	subl %reg2, %edi	

1
	movq 96(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq $8, %reg0	
	movq %reg0, -80(%rbp)	

1
	negl %r12d	
	movq 0(%rbx), %rax	

1
.Main.main_29:	
	movq 0(%reg0), %rax	

1
	call *%r12	
	movq 576(%reg1), %reg2	

1
	.size Nil.rev, .-Nil.rev	
	.globl Nil.sort	

1
	call *%reg0	
	movq 584(%reg1), %reg0	

1
	call String.length	
	movq %reg0, %r14	

1
	movq $25947, %rsi	
	movq $22130, %rax	

1
	movq $10, %reg0	
	movq %reg0, -88(%rbp)	

1
	movq %r15, %reg1	
	movq %rbx, %reg3	

1
	movq %reg0, 24(%rbx)	
	jmp .DicNode.insert_5	

1
	ret	
	.size Dictionary.new, .-Dictionary.new	

1
.Main.main_86:	
	movq %r15, %rsi	

1
	movq 128(%reg0), %reg0	
	jmp .Matrix.get_42	

1
	movq %reg0, %reg1	
	movq $26972, %reg0	

1
	movq %r8, %reg1	
	movq $5660, %r8	

1
	movq $3453, %reg0	
	movq 0(%rbx), %reg2	

1
	cmpq $Main_vtable, 0(%rsi)	
	je .Main.func_6	

1
	imull %esi	
	movq -40(%rbp), %reg2	

1
	movq -48(%rbp), %rax	
	subl %reg2, %r8d	

1
	je .Main.main_77	
	movq $19, %rsi	

1
	je .Main.main_24	
	movq $168, %reg0	

1
	call *%rax	
	movq 520(%reg1), %reg2	

1
	movq %r12, %reg1	
	addl %esi, %reg3	

1
	jne .Matrix.set_6	
	movq %rdi, 24(%reg1)	

1
	movq $12, %reg0	
	movq -152(%rbp), %rax	

1
	movq %rdi, 264(%rax)	
	movq $3000, %rdi	

1
	movq %rax, %reg1	
	movq $18429, %r9	

1
	movq %reg0, 8(%rax)	
	movq %rax, 72(%rbx)	

1
	.size Main.main, .-Main.main	
	.globl Bar.setX	

1
	cmpq $Object_vtable, 0(%rdi)	
	je .Main.funccase_2	

1
	movq 512(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
.Main.funcifi_1:	
	movq $0, %rbx	

1
	movq %rdi, 8(%reg1)	
	movq $3000, %rdi	

1
	movq $37073, %rax	
	movq $6195, %rsi	

1
	negl %reg0d	
	movq $1, %reg1	

1
	movq -48(%rbp), %rsi	
	negl %reg2	

1
	movq %reg0, %rax	
	movq -168(%rbp), %r9	

1
	movq -16(%rbp), %reg1	
	movq %rsi, %reg3	

1
	cmpq $Bar_vtable, 0(%reg0)	
	je .Foo.new_5	

1
	movq 16(%rax), %reg1	
	movq %reg2, %reg3	

1
	movq $10, %rax	
	movq %rax, %r13	

1
	movq $57963, %rdi	
	subl %edi, %eax	

1
	cmpq $Bool_vtable, 0(%reg0)	
	je .Main.funccase_4	

1
	movq $.string12, %reg0	
	movq 0(%rbx), %reg2	

1
	.string "true"	
.string14:	

1
.Matrix.set_33:	
.Matrix.set_31:	

1
	movq $0, %rdi	
	movq %rdi, 520(%reg1)	

1
	movq %reg0, %rax	
	movq %rax, -112(%rbp)	

1
	je .Main.main_8	
	movq 0(%rbx), %rax	

1
	sete %reg0b	
	jne .Matrix.set_17	

1
	call *%r12	
	movq 544(%rbx), %r12	

1
	movq $2, %reg0	
	movq %reg0, 16(%reg1)	

1
	movq $8340, %rdi	
	negl %reg1	

1
	movq 72(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq $28260, %reg0	
	subl %eax, %reg2	

1
	movq -112(%rbp), %reg1	
	movq %r9, %r10	

1
.Razz.new_16:	
	movq %reg0, %reg1	

1
	movq $0, %rdi	
	movq %rdi, 320(%reg1)	

1
	movq $6934, %rsi	
	movq $0, %reg1	

1
	movq %rsi, %r12	
	movq 16(%rbx), %rax	

1
	movq $2438, %rsi	
	negl %esi	

1
	movq 0(%rbx), %rax	
	movq 32(%rax), %rax	

1
	call *%reg0	
	movq 600(%reg1), %rax	

1
	movq %rax, %reg1	
	movq %r11, %rax	

1
	je .Main.main_67	
	movq $.string10, %reg0	

1
	movq $1, %reg0	
	movq 8(%reg1), %rsi	

1
	idivl %esi	
	movq $43856, %rdi	

1
	call *%r15	
	movq %rax, %reg2	

1
	je .Main.main_29	
	movq $10, %reg0	

1
	imull %ebx	
	movq %reg1, %reg2	

1
	movq %reg0, %reg1	
	movq -64(%rbp), %rcx	

1
	movq -112(%rbp), %reg1	
	subl %esi, %reg3	

1
	movq $3000, %reg0	
	movq %reg0, 528(%reg1)	

1
	movq -24(%rbp), %rax	
	movq %rbx, %rdi	

1
	.quad .string3	
	.quad 3	

1
	addl %edi, %reg1	
	movq %reg2, -112(%rbp)	

1
	movq $10464, %r9	
	movq $32716, %reg1	

1
	movq $3000, %reg0	
	movq %reg0, 384(%rax)	

1
	movq $39523, %rsi	
	imull %esi	

1
	movq -96(%rbp), %rax	
	movq -48(%rbp), %r8	

1
	movq -128(%rbp), %rax	
	movq %rdi, %reg3	

1
	je .Main.main_85	
	movq $61, %rsi	

1
.DicNode.insert_6:	
	movq 24(%reg0), %reg1	

1
	movq %rax, -40(%rbp)	
	movq $17, %rax	

1
	je .Main.main_73	
	movq $52, %reg0	

1
	call *%reg0	
	movq 216(%rbx), %reg2	

1
	call *%reg0	
	movq 480(%reg1), %reg2	

1
	subl %reg0, %r12d	
	movq $35037, %r13	

1
	jne .DicNode.insert_1	
	movq %reg0, %reg1	

1
	negl %reg0	
	movq $38220, %reg1	

1
	movq %reg0, 696(%rax)	
	movq $0, %reg0	

1
	movq $ListNode_vtable, 0(%reg0)	
	movq $0, %reg1	

1
	imull %esi	
	movq -32(%rbp), %reg2	

1
	movq -56(%rbp), %rax	
	movq -96(%rbp), %rsi	

1
	movq %r14, %r8	
	subl %r8d, %eax	

1
	je .Main.main_16	
	cmpq $String_vtable, 0(%rdi)	

1
	movq %r13, %rsi	
	addl %esi, %eax	

1
	je .Main.main_186	
	movq $316, %rsi	

1
	call out_error	
.Matrix.set_66:	

1
	movq $0, %reg0	
	movq $5, %rax	

1
	movq %r9, %reg1	
	movq %r10, %r9	

1
	movq %rax, %reg1	
	movq -88(%rbp), %rsi	

1
	movq $12618, %rdi	
	negl %edi	

1
.Main.main_57:	
	movq %reg0, %rsi	

1
	movq -64(%rbp), %reg1	
	movq %r12, %rax	

1
.Main.main_12:	
	movq 0(%rax), %r15	

1
	negl %eax	
	movq %rax, 8(%reg2)	

1
	movq %reg0, %reg1	
	movq $5880, %reg0	

1
	movq %rax, %reg1	
	movq $53642, %rax	

1
	movq 648(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
.Main.main_7:	
	movq $.string9, %reg0	

1
	movq %reg0, %reg1	
	jmp .Main.main_145	

1
	movq -16(%rbp), %rax	
	subl %edi, %eax	

1
	movq $3000, %rdi	
	movq %rdi, 288(%reg1)	

1
	movq %rdi, 64(%reg1)	
	leave	

1
	movq $100, %reg0	
	movq $.string2_l, %reg1	

1
	movq %rax, %r13	
	movq $12, %rax	

1
	subl %reg0, %reg1	
	movq -24(%rbp), %rsi	

1
	movq %rsi, %rax	
	cmpl %edi, %reg3	

1
	movq $17376, %rax	
	negl %eax	

1
	movq $14, %reg0	
	movq %reg0, -128(%rbp)	

1
	movq $0, %reg0	
	movq %reg0, 336(%rax)	

1
	subl %eax, %edi	
	movq %r12, %rax	

1
	movq %reg0, 72(%rbx)	
	movq %rbx, %reg0	

1
	movq -128(%rbp), %rcx	
	negl %reg2	

1
.Matrix.elMul_2:	
	movq %r14, %reg1	

1
	testq $1, %rdi	
	je .Main.main_38	

1
	je .Main.main_49	
	movq $15, %reg0	

1
	testq $1, %reg0	
	je .Main.main_122	

1
	movq -88(%rbp), %rsi	
	imull %reg2	

1
	jne .A2I.c2i_9	
	movq $4, %reg0	

1
	movq 24(%rbx), %rax	
	addl %edi, %reg3	

1
ListNode.setVal:	
	pushq %rbp	

1
	movq $29790, %rsi	
	subl %esi, %reg2	

1
	movq 144(%reg0), %reg0	
	movq %reg1, %reg2	

1
	movq $0, %reg0	
	movq %reg0, 616(%reg1)	

1
.Bar.new_11:	
	movq %rax, 32(%rbx)	

1
	call out_error	
.Main.main_129:	

1
	movq $7, %r12	
	movq 0(%reg1), %rbx	

1
	movq $50538, %reg0	
	movq $12757, %reg1	

1
.Main.main_21:	
	movq $51816, %rax	

1
	movq $14356, %reg0	
	subl %reg1, %eax	

1
.Main.main_114:	
	cdq	

1
	call *%r12	
.CellularAutomaton.cell_right_neighbor_2:	

1
	movq %r12, %rsi	
	addl %reg2, %reg3	

1
	testq $1, %rcx	
	je .Main.main_46	

1
	jne .DicNode.insert_1	
	movq %rbx, %reg1	

1
	je .Main.main_70	
	movq $19, %rsi	

1
	movq %reg0, %r12	
	movq 0(%reg2), %rbx	

1
.Main.main_4:	
	movq 8(%reg0), %r12	

1
	movq $0, %reg0	
	movq %reg0, 736(%rax)	

1
	subl %eax, %reg1	
	movq $14379, %rax	

1
	movq $3000, %rdi	
	movq %rdi, 312(%rax)	

1
.DicNode.insert_1:	
	movq 24(%rbx), %rax	

1
	movq $12, %rsi	
	movq -40(%rbp), %reg2	

1
	movq $2, %r13	
	call Int.new	

1
	movq $43604, %rax	
	addl %reg1, %reg2	

1
	testq $1, %reg0	
	je .DicNode.get_6	

1
	jne .Main.main_6	
	movq 0(%rbx), %reg1	

1
ListNode.insert:	
	pushq %rbp	

1
	imull %reg0	
	movq $21514, %rdi	

1
	movq %rsp, %rbp	
	movq 16(%reg2), %reg3	

1
	sete %reg0l	
	jne .Matrix.get_49	

1
.A2I.c2i_5:	
	movq $.string10, %rdi	

1
	movq %reg0, %reg1	
	movq $72, %reg2	

1
	movq %reg0, %rsi	
	cmpl %esi, %edi	

1
	movq $61695, %rax	
	movq $50213, %rdi	

1
	movq %rdi, %rbx	
	movq $name_Int, %r12	

1
	testq $1, %reg0	
	je .Matrix.set_66	

1
	movq -56(%rbp), %rax	
	movq %r13, %reg3	

1
	movq $30996, %rsi	
	movq $0, %reg1	

1
	movq %rdi, 184(%rax)	
	movq $3000, %rdi	

1
	movq $3000, %reg0	
	movq %reg0, 72(%rax)	

1
	je .Main.main_86	
	movq $61, %reg0	

1
	movq $.string9, %reg0	
	movq %rbx, %r12	

1
	movq -72(%rbp), %rsi	
	cmpl %esi, %eax	

1
	movq -104(%rbp), %reg1	
	movq -160(%rbp), %reg3	

1
	je .Matrix.set_12	
	movq $89, %reg0	

1
.Foo.new_8:	
	call Razz.new	

1
	jmp .Matrix.get_18	
.Matrix.get_17:	

1
	movq $54460, %reg0	
	addl %reg1, %edi	

1
	movq %rdi, 288(%rax)	
	movq $3000, %rdi	

1
	movq 24(%rax), %reg1	
	movq %rbx, %rsi	

1
	movq -56(%rbp), %rax	
	negl %eax	

1
	sete %reg0l	
	jne .A2I.i2a_1	

1
.Razz.new_19:	
	movq 16(%reg0), %rdx	

1
	call *%rax	
	movq 216(%reg1), %reg2	

1
	movq %r13, %rax	
	movq %r12, %rdi	

1
	movq %rax, 40(%reg1)	
	movq $1, %rax	

1
	movq -136(%rbp), %reg1	
	negl %ecx	

1
	movq %rax, %reg1	
.Main.iota_1:	

1
	jne .Matrix.get_58	
	movq 184(%rax), %rax	

1
	movq %rdi, %rax	
.Main.main_160:	

1
	testq $1, %rax	
	je .Foo.new_12	

1
.Main.main_123:	
	cdq	

1
	movq 24(%reg0), %reg0	
	jmp .Matrix.get_7	

1
	je .Main.main_109	
	movq %reg0, %rax	

1
	je .Main.main_77	
	movq $52, %reg0	

1
	movq -120(%rbp), %reg1	
	cmpl %reg2, %eax	

1
	movq %r8, %rax	
	movq -144(%rbp), %r8	

1
	movq $3000, %reg0	
	movq %reg0, 464(%rax)	

1
	movq 8(%rdi), %reg1	
	movq 0(%reg2), %reg3	

1
	ret	
	.size Bar.getI, .-Bar.getI	

1
DicNode.insert:	
	pushq %reg0	

1
	movq %reg0, %r12	
	movq 16(%rbx), %rax	

1
	movq -160(%rbp), %rsi	
	addl %reg2, %reg3	

1
	movq 136(%rbx), %rax	
	movq 0(%rbx), %r12	

1
.Matrix.set_65:	
.Matrix.set_52:	

1
.List.insert_1:	
	cmpl $0, 8(%reg0)	

1
	subl %reg0, %esi	
	movq -96(%rbp), %rax	

1
	idivl %r14d	
	movq %reg1, %r14	

1
	call *%r13	
	movq 0(%rbx), %r13	

1
	movq %rdi, %reg1	
	movq %rsi, %r8	

1
	call *%reg0	
	movq 256(%reg1), %reg0	

1
	movq %rax, %reg1	
	movq $63664, %rax	

1
	movq %rbx, %rax	
	movq %r12, %rdi	

1
	subl %eax, %edi	
	movq %r14, %rax	

1
	.quad .string14_l	
	.quad 1	

1
	je .Main.main_29	
	movq $174, %rsi	

1
	movq %rdi, %r14	
	pushq %reg2	

1
	addl %reg0, %ecx	
	movq %rsi, %reg3	

1
	movq $.string7, %rax	
	jmp .A2I.i2a_2	

1
	movq %rdi, 48(%reg1)	
	cmpl %reg2, %eax	

1
	movq %reg0, %r13	
	jmp .Main.main_19	

1
	movq $.string8, %rdi	
	movq %reg1, %r12	

1
	movq $100, %rdi	
	movq %reg1, %rax	

1
	movq %rdi, 368(%reg1)	
	movq $0, %rdi	

1
	je .Main.main_96	
	movq %reg0, %rax	

1
.Main.main_100:	
	movq %reg0, %rsi	

1
	setle %dil	
	cmpl %edi, %eax	

1
	movq 40(%r15), %r15	
	movq %reg1, %rdi	

1
	movq $144, %reg0	
	movq $.string2_l, %rdi	

1
	jne .Matrix.set_21	
	movq %reg0, 72(%reg1)	

1
.Main.func2_2:	
	movq %reg0, %rax	

1
	movq 136(%rax), %rax	
	movq 8(%rbx), %rdi	

1
	movq %reg0, %reg1	
	movq 8(%rbx), %rsi	

1
	movq 600(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq $45332, %reg0	
	cmpl %reg1, %edi	

1
	subl %r9d, %reg1	
	movq -64(%rbp), %r9	

1
	movq $7493, %rdi	
	addl %reg1, %reg2	

1
	je .ListNode.push_1	
	movq $20, %reg0	

1
	movq $5, %reg0	
	movq %reg1, %rdi	

1
.Main.main_9:	
	movq 0(%reg0), %r14	

1
	movq $157, %reg0	
	movq $.string5_l, %rdi	

1
	movq $.string11, %reg0	
	movq %reg1, %r12	

1
	call *%r12	
	movq %rbx, %rdi	

1
	movq 496(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq -128(%rbp), %reg1	
	movq -48(%rbp), %reg3	

1
	movq %reg0, 16(%reg1)	
	movq 24(%reg1), %rsi	

1
	.quad 3	
abort_string_l:	

1
	movq %rax, %r13	
	jmp .A2I.a2i_aux_1	

1
	negl %eax	
	movq $50691, %r11	

1
	movq 8(%reg0), %rax	
	cmpl %reg2, %eax	

1
	movq %r12, 8(%rax)	
	movq 0(%rbx), %reg3	

1
	movq -56(%rbp), %rax	
	addl %reg2, %edi	

1
	cmpl %reg0, %r12d	
	sete %reg2	

1
	movq %reg0, 48(%rbx)	
	cmpl %edi, %eax	

1
	movq -152(%rbp), %reg1	
	movq -104(%rbp), %reg3	

1
	movq -32(%rbp), %reg1	
	movq -152(%rbp), %rax	

1
	movq $53642, %reg0	
	movq $21521, %reg1	

1
	call *%reg0	
	movq 712(%reg1), %reg0	

1
	je .Main.main_42	
	movq $15, %rsi	

1
	movq -168(%rbp), %reg1	
	movq -160(%rbp), %rdi	

1
	movq $53961, %reg0	
	movq $30773, %reg1	

1
	sete %dil	
	jne .Main.main_25	

1
	movq -88(%rbp), %reg1	
	addl %esi, %eax	

1
	movq %reg0, %rbx	
	movq 8(%reg2), %rdi	

1
	testq $1, %rdi	
	je .Main.main_4	

1
	imull %reg0d	
	subl %eax, %ebx	

1
	setl %reg0l	
	jge .A2I.a2i_aux_2	

1
	negl %reg0	
	movq $2951, %r12	

1
	movq 168(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	movq %rax, %rbx	
	movq %r12, %r13	

1
	movq %rdi, %rax	
	movq %rsi, %r8	

1
	movq %r9, %reg1	
	movq %r12, %r9	

1
	movq $3, %rdi	
	subl %edi, %reg2	

1
	movq -112(%rbp), %reg1	
	subl %esi, %eax	

1
	movq %rbx, %reg1	
	movq %rsi, %reg3	

1
	movq %rdi, %reg1	
	jmp .Main.main_50	

1
Foo.doh:	
	pushq %rbp	

1
.Main.main_8:	
	movq 0(%rbx), %reg1	

1
	movq -24(%rbp), %rax	
	cmpl %reg2, %edi	

1
	movq %reg0, %reg1	
	jmp .Bar.new_11	

1
	ret	
	.size A2I.a2i, .-A2I.a2i	

1
	cmpq $Main_vtable, 0(%rbx)	
	je .Main.main_23	

1
	movq -48(%rbp), %rsi	
	imull %reg2	

1
	movq $16, %rsi	
	movq $.string2_l, %rdi	

1
	movq $51925, %rax	
	movq 0(%reg1), %reg2	

1
	movq $0, %rax	
	jmp .Main.new_8	

1
	movq $55273, %reg0	
	movq $38801, %reg1	

1
	movq 400(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq $1, %reg0	
	movq $3, %reg1	

1
	.text 	
	.globl CellularAutomaton.new	

1
	movq $Bazz_vtable, 0(%reg0)	
	movq %reg0, %rbx	

1
	movq 456(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	movq $21514, %reg0	
	imull %reg1	

1
	idivl %esi	
	movq $2739, %reg1	

1
	jmp .Main.func_7	
.Main.func_3:	

1
	movq $0, %rdi	
	movq %rdi, 384(%reg1)	

1
	addl %reg0, %ecx	
	movq -176(%rbp), %rax	

1
	movq $14352, %rdi	
	cmpl %reg1, %eax	

1
	movq $52306, %reg0	
	negl %edi	

1
	movq $7741, %r13	
	movq %r13, %reg1	

1
	movq %rdi, %rbx	
	call List.new	

1
.Main.main_9:	
	movq -136(%rbp), %reg1	

1
	call *%reg0	
	movq 520(%rbx), %reg2	

1
	movq %rdi, 392(%reg1)	
	movq $0, %rdi	

1
	movq -104(%rbp), %reg1	
	subl %reg2, %esi	

1
	movq $.string15, %rax	
	movq 0(%rbx), %r12	

1
	subl %edi, %eax	
	movq $33866, %reg2	

1
	movq %rsp, %rbp	
	subq $128, %rsp	

1
	movq 120(%r12), %r12	
	movq 16(%reg1), %reg2	

1
	movq %r14, %rcx	
	addl %ecx, %reg3	

1
	negl %eax	
	movq %reg1, 8(%reg2)	

1
	jmp .A2I.a2i_aux_1	
.A2I.a2i_aux_2:	

1
	movq %reg0, %rax	
	jmp .Main.main_58	

1
	imull %reg0	
	movq $55348, %reg1	

1
	movq -72(%rbp), %rax	
	movq %reg2, %rcx	

1
	movq $62649, %reg0	
	movq 0(%rbx), %reg2	

1
	jmp .Main.func_3	
.Main.func_3:	

1
	movq $100, %rax	
	movq %rax, %reg1	

1
	movq 8(%rbx), %rax	
	movq %rdi, %reg3	

1
	.size Matrix.mul, .-Matrix.mul	
	.globl Main.main	

1
	movq $.string10, %reg0	
	movq %rbx, %reg2	

1
.Main.main_49:	
	movq %reg0, %reg1	

1
	je .Main.main_24	
	movq $10, %reg0	

1
	movq %reg0, 544(%reg1)	
	movq $0, %reg0	

1
	testq $1, %r9	
	je .Main.main_181	

1
	movq $5, %rax	
	addl %reg1, %reg2	

1
	movq 0(%rbx), %r12	
	movq 136(%r12), %r12	

1
	movq -152(%rbp), %rax	
	movq -64(%rbp), %rsi	

1
	call *%rax	
	movq $.string20, %rax	

1
.Matrix.set_56:	
	movq $3, %reg0	

1
.Main.main_28:	
	movq %reg0, %reg1	

1
	movq 8(%reg0), %r13	
	movq 0(%reg2), %reg3	

1
.string6_l:	
	.string "VOID"	

1
	.size Foo.getX, .-Foo.getX	
	.globl Foo.setX	

1
	jne .Matrix.set_28	
	movq %rdi, 88(%reg1)	

1
	movq %rcx, %rax	
	movq -136(%rbp), %rcx	

1
	movq %reg0, %reg1	
	movq $.string11, %reg2	

1
	subl %eax, %ecx	
	movq -96(%rbp), %reg3	

1
	je .Main.main_104	
	movq $64, %rsi	

1
	addl %eax, %r10d	
	movq $60159, %rax	

1
	movq %rsi, %reg1	
	movq $5, %rdi	

1
	subl %edi, %reg1	
	movq $4, %reg2	

1
	jne .Main.main_6	
	movq 0(%reg0), %reg1	

1
	movq $3453, %reg0	
	movq 0(%reg1), %rax	

1
	movq %reg0, %reg1	
	movq $88, %reg2	

1
	movq %rdi, 200(%rax)	
	movq %rdi, %rax	

1
.Main.main_167:	
	cdq	

1
	movq -88(%rbp), %rax	
	addl %eax, %edi	

1
	imull %esi	
	movq -144(%rbp), %rsi	

1
.string13_l:	
	.string "6"	

1
	movq %rdi, %reg1	
	movq %rsi, -16(%rbp)	

1
.Matrix.get_34:	
	movq $5, %rsi	

1
	addl %reg0, %reg1	
	movq -32(%rbp), %rcx	

1
	testq $1, %rax	
	je .Razz.new_14	

1
	movq -80(%rbp), %rax	
	movq -112(%rbp), %reg3	

1
	jge .Main.fib_1	
	movq $1, %reg0	

1
	movq %rdi, %rax	
	movq $20384, %rdi	

1
	movq 376(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq 64(%rax), %rax	
	movq 24(%reg1), %reg2	

1
	sete %reg0l	
	jne .Main.main_21	

1
.Main.main_9:	
	movq $10280, %reg0	

1
	movq 48(%rbx), %rbx	
	movq 8(%rax), %rdi	

1
	movq $3000, %rdi	
	movq %rdi, 424(%reg1)	

1
	movq %reg0, %rsi	
	movq -96(%rbp), %reg0	

1
	jne .Main.main_3	
	movq %reg0, %reg1	

1
.Main.func_5:	
	movq $.string9, %reg0	

1
	movq %reg0, %reg1	
	movq $678987, %r13	

1
	movq -96(%rbp), %reg1	
	subl %eax, %r9d	

1
	movq $0, %rdi	
	movq %rdi, 432(%reg1)	

1
	je .Main.new_2	
	cmpq $String_vtable, 0(%reg0)	

1
	subl %reg0, %r8d	
	movq $10464, %r9	

1
	movq 32(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 328(%rax)	

1
	movq -144(%rbp), %reg1	
	movq -136(%rbp), %reg3	

1
	je .Bazz.new_4	
	cmpq $Bazz_vtable, 0(%reg0)	

1
	movq $9508, %reg0	
	movq $60323, %rsi	

1
	jge .Main.main_78	
	movq %r15, %reg1	

1
	movq 128(%r13), %r13	
	movq %reg1, %rdi	

1
	testq $1, %rax	
	je .Main.main_86	

1
	movq %r12, %reg1	
	call Foo.getX	

1
	je .Main.main_180	
	movq $308, %rsi	

1
	movq $33866, %rdi	
	subl %edi, %reg2	

1
.Main.main_6:	
	movq $4, %reg0	

1
	movq -168(%rbp), %rax	
	movq -160(%rbp), %reg3	

1
	movq $34320, %reg0	
	movq $25316, %reg1	

1
	movq $0, %rcx	
	movq %reg1, %reg2	

1
	movq $53748, %rax	
	movq 0(%rbx), %r12	

1
	testq $1, %reg0	
	je .Bar.new_13	

1
	movq $.string15, %reg0	
	jmp .A2I.i2c_18	

1
	movq %reg0, 352(%reg1)	
	movq $3000, %reg0	

1
	movq -16(%rbp), %rax	
	imull %esi	

1
.Complex.print_2:	
	popq %reg0	

1
	.size _main, .-_main	
	.globl Matrix.get	

1
	movq $53181, %r8	
	addl %r8d, %eax	

1
	movq %r15, %rdi	
	movq %rax, %reg3	

1
	movq $3000, %rdi	
	movq %rdi, 608(%rax)	

1
	jge .Main.main_132	
	movq %reg0, %rax	

1
	subl %reg0, %eax	
	movq $15487, %rdi	

1
	imull %reg0	
	movq $23071, %reg1	

1
	testq $1, %reg0	
	je .Main.main_159	

1
	je .Main.main_4	
	movq 0(%reg0), %rax	

1
	movq %r14, %reg1	
	movq -120(%rbp), %reg3	

1
	testq $1, %reg0	
	je .Razz.new_14	

1
.Main.func_2:	
	movq 0(%reg0), %rax	

1
	movq -104(%rbp), %rax	
	movq %reg2, %rsi	

1
	je .Main.main_146	
	movq $112, %reg0	

1
	movq $2, %reg0	
	movq %rbx, %reg2	

1
	movq $57869, -24(%rbp)	
	movq $49695, %reg1	

1
	movq %rdi, 472(%reg1)	
	movq $3000, %rdi	

1
.Main.main_7:	
	cmpl $0, %ebx	

1
	call *%reg0	
	movq 376(%rbx), %reg0	

1
	movq $3000, %reg0	
	movq %reg0, 256(%rax)	

1
	movq $25185, %rax	
	addl %eax, %reg2	

1
	movq %r12, 8(%reg1)	
	movq 8(%reg2), %r12	

1
	je .Main.main_93	
	movq %reg0, %rax	

1
	idivl %reg0d	
	addl %reg1, %r12d	

1
	movq $33976, %rdi	
	addl %reg1, %eax	

1
	testq $1, %reg0	
	je .Dictionary.insert_4	

1
	movq -96(%rbp), %rdi	
	subl %edi, %eax	

1
	movq %rsp, %reg1	
	movq $32, %reg2	

1
	subl %edi, %eax	
	movq %rax, %r13	

1
	jge .Main.new_4	
	movq $0, %reg0	

1
	.globl List.head	
	.type List.head, @function	

1
	call *%r12	
	jmp .Main.main_35	

1
	movq %reg0, %rax	
	movq 48(%reg2), %rsi	

1
	movq $0, %reg0	
.Complex.equal_5:	

1
.Main.main_13:	
	movq %reg0, %reg1	

1
	movq $100, %rdi	
	movq %r12, %rax	

1
	movq -88(%rbp), %rax	
	movq %rdi, %reg3	

1
	movq %rsi, %reg1	
	movq %reg1, %r12	

1
	addl %reg0, %reg1	
	movq $38737, %reg2	

1
	movq %reg0, 48(%rax)	
	movq $3000, %reg0	

1
	je .Main.funccase_2	
	cmpq $IO_vtable, 0(%rdi)	

1
	movq 8(%rbx), %rsi	
	call *%rax	

1
	movq %reg0, %reg1	
	movq $22802, %reg0	

1
	movq $54460, %rax	
	addl %reg1, %edi	

1
	call *%r14	
	movq %rax, 24(%reg2)	

1
	movq $.string7, %r15	
	movq -8(%rbp), %rdx	

1
	movq -144(%rbp), %rdi	
	movq %reg2, %reg3	

1
	movq %rdi, 80(%reg1)	
	leave	

1
	jmp .A2I.i2c_12	
.A2I.i2c_11:	

1
	movq $.string9, %rax	
	movq %rax, %rbx	

1
	je .Main.main_162	
	movq %reg0, %reg1	

1
	movq $28260, %rax	
	subl %reg1, %reg2	

1
.Main.main_1:	
	movq 8(%rbx), %reg1	

1
	negl %eax	
	movq -144(%rbp), %rdi	

1
	movq %rdi, %rax	
	jmp .Matrix.set_35	

1
	movq $9, %rax	
	jmp .A2I.c2i_20	

1
	movq 624(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq 8(%reg0), %reg0	
	imull %reg1	

1
	movq %reg0, %rax	
	movq %r14, %rax	

1
	addl %edi, %eax	
	cmpl $0, %r13d	

1
	je .Main.main_40	
	movq $34, %reg0	

1
	je .Main.main_10	
	movq $5, %rsi	

1
	testq $1, %reg0	
	je .Matrix.set_25	

1
	movq 680(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq 88(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	call *%rbx	
	movq $48557, %reg1	

1
	movq $30797, %r8	
	movq $3233, %r9	

1
	imull %reg0	
	movq -152(%rbp), %rdi	

1
	.size List.print_list, .-List.print_list	
	.globl Cons.isNil	

1
	call *%rbx	
	movq %r12, %rdi	

1
	movq %rax, %reg1	
.CellularAutomaton.cell_at_next_evolution_2:	

1
.Main.main_1:	
	movq 0(%rax), %r14	

1
	sete %cl	
	jne .Matrix.set_49	

1
	call *%rax	
	movq 16(%reg1), %rdi	

1
	call Object.new	
	movq %reg0, %r14	

1
	movq %rax, %r12	
	movq %r12, %r13	

1
	jge .Main.main_18	
	movq 0(%reg0), %reg1	

1
	jge .Main.main_61	
	movq %reg0, %rax	

1
	je .Main.main_63	
	movq $49, %rsi	

1
	movq %reg0, %r13	
.Main.main_49:	

1
	movq $34422, %rax	
	subl %eax, %edi	

1
	movq 512(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	subl %edi, %eax	
	movq $15487, %reg2	

1
	movq %reg0, 96(%reg1)	
	movq %reg0, %reg1	

1
	movq %r14, %rax	
	addl %reg2, %ecx	

1
	movq 440(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq %rax, %r12	
.Main.main_10:	

1
	je .Main.main_98	
	movq $64, %rsi	

1
	movq %reg0, %rbp	
	movq $744, %reg2	

1
	movq $43604, %rax	
	addl %eax, %ecx	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_35	

1
.Complex.equal_4:	
	movq $0, %rax	

1
	xorq $1, %reg0	
	jmp .Main.main_125	

1
	.type Main.print_list, @function	
Main.print_list:	

1
	movq %reg0, %r8	
	movq -184(%rbp), %reg3	

1
	movq 56(%rax), %rax	
	movq 8(%rbx), %reg2	

1
	movq $.string15, %reg0	
	movq 0(%reg1), %r12	

1
	movq -128(%rbp), %reg1	
	movq %r14, %reg3	

1
	call *%r15	
	movq %rbx, %rax	

1
	jne .Matrix.set_17	
	movq %rdi, 56(%rax)	

1
	negl %eax	
	jmp .Main.main_4	

1
	movq %reg0, -32(%rbp)	
	movq $14461, %reg0	

1
	movq $20908, %reg0	
	imull %esi	

1
	call *%reg0	
	movq 320(%rbx), %reg2	

1
	movq $15798, %reg0	
	subl %reg1, %reg2d	

1
	movq $3, %rbx	
	movq 0(%reg1), %reg2	

1
	movq 328(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq -184(%rbp), %reg1	
	addl %ecx, %eax	

1
	movq $5, %reg0	
	cmpl %edi, %eax	

1
	movq %r14, %reg1	
	negl %eax	

1
	movq -112(%rbp), %reg1	
	cmpl %esi, %reg3	

1
	movq $38686, %r10	
	addl %r10d, %eax	

1
.Main.main_6:	
	movq $0, %reg0	

1
	jmp .Matrix.set_26	
.Matrix.set_14:	

1
	movq -128(%rbp), %rax	
	movq -32(%rbp), %rdi	

1
.Main.funccase_3:	
	movq %reg0, %reg1	

1
	movq 656(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	movq $.string9, %rbx	
	movq 0(%rax), %reg2	

1
	jg .Main.main_3	
	movq $15234, %r12	

1
	testq $1, %rax	
	je .Cons.insert_4	

1
.Main.main_19:	
	movq $0, %reg0	

1
.Matrix.set_50:	
.Matrix.set_48:	

1
	call *%reg0	
	movq 496(%reg1), %reg2	

1
	je .Main.main_9	
	cmpl %reg0, %esi	

1
	movq %rdi, %rbx	
	movq $name_Int, %reg2	

1
	movq %r10, %r9	
	movq $0, %r10	

1
	movq 128(%reg0), %reg0	
	movq 16(%rbx), %reg2	

1
	sete %reg0b	
	jne .DicNode.get_1	

1
	movq 0(%rdx), %reg1	
	movq 128(%reg1), %reg1	

1
	movq -80(%rbp), %reg1	
	addl %eax, %esi	

1
	call *%rax	
	movq 112(%rbx), %reg2	

1
	call *%r13	
	movq 8(%r12), %r13	

1
	movq $213, %reg0	
	movq $.string5_l, %reg1	

1
	addl %eax, %reg1	
	movq -168(%rbp), %rax	

1
	movq %reg0, %rax	
	subl %eax, %r9d	

1
.Main.main_50:	
	movq $1, %reg0	

1
	movq %reg0, 224(%rax)	
	movq $0, %reg0	

1
.Main.main_10:	
	movq %reg0, %rdi	

1
	movq -168(%rbp), %reg1	
	addl %reg2d, %eax	

1
	je .Foo.new_3	
	cmpq $Bazz_vtable, 0(%rbx)	

1
	movq %rbx, %reg1	
	movq 8(%rax), %r13	

1
	movq %reg0, %rsi	
	movq -136(%rbp), %reg3	

1
	movq 184(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	testq $1, %rax	
	je .DicNode.insert_3	

1
	idivl %edi	
	movq -16(%rbp), %reg2	

1
	movq -80(%rbp), %reg1	
	movq $0, %reg2	

1
	movq 96(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	ret	
	.size Bazz.doh, .-Bazz.doh	

1
	movq %rdi, 328(%reg1)	
	movq $3000, %rdi	

1
	.quad DicNode.decr	
	.quad DicNode.next	

1
	cmpq $Foo_vtable, 0(%rbx)	
	je .Razz.new_4	

1
	ret	
	.size DicNode.init, .-DicNode.init	

1
.Matrix.get_32:	
	movq $4, %reg0	

1
	movq %rdi, 152(%rax)	
	movq %rdi, %rax	

1
	movq 80(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq -80(%rbp), %rax	
	addl %reg2, %eax	

1
	je .Main.main_155	
	movq $115, %rsi	

1
	movq -152(%rbp), %reg1	
	addl %eax, %reg3	

1
	movq $0, %r12	
	movq $6, %r13	

1
	imull %r8d	
	movq %r14, %r8	

1
	jmp .A2I.c2i_16	
.A2I.c2i_15:	

1
	negl %reg0	
	movq -64(%rbp), %rdi	

1
	negl %r9d	
	movq $0, %r10	

1
	movq 8(%reg0), %rdi	
	cmpl %edi, %reg3	

1
	movq -112(%rbp), %rax	
	movq $0, %rcx	

1
	addl %reg0, %ecx	
	movq -112(%rbp), %rax	

1
	call *%rax	
	movq 648(%reg1), %reg2	

1
	movq %reg0, 16(%rbx)	
	movq $2, %reg0	

1
	movq $19369, %reg0	
	addl %edi, %reg2	

1
	testq $1, %rdi	
	je .Main.main_156	

1
	movq -56(%rbp), %reg1	
	addl %reg2, %edi	

1
	.quad 10	
percentd_string_l:	

1
	movq $3, %reg0	
	cmpl $0, %ebx	

1
	movq %rdi, %reg1	
	movq 48(%rbx), %reg3	

1
	movq %rdi, 112(%reg1)	
	movq $3000, %rdi	

1
	movq %reg0, %rcx	
	subl %ecx, %reg3d	

1
	movq %reg0, %reg1	
	addl %eax, %r9d	

1
	.string "8"	
.string15:	

1
	call *%r13	
	movq $.string7, %rax	

1
	movq %reg0, 680(%rax)	
	movq $0, %reg0	

1
.Main.main_110:	
.Main.main_108:	

1
	addl %reg0, %edi	
	movq -80(%rbp), %reg3	

1
	movq %reg0, %reg1	
	movq -48(%rbp), %rcx	

1
	je .Main.main_7	
	movq 0(%reg0), %rax	

1
	movq -136(%rbp), %reg1	
	movq -24(%rbp), %reg3	

1
	je .Main.main_19	
	movq $10, %reg0	

1
	call String.concat	
	movq 0(%r12), %r13	

1
	movq 16(%rbx), %reg1	
	subl %reg2, %eax	

1
	movq $16280, %rsi	
	imull %esi	

1
	je .Dictionary.insert_4	
	movq $15, %reg0	

1
	testq $1, %reg0	
	je .Matrix.get_51	

1
	call *%r12	
	movq 8(%rbx), %rax	

1
	movq %reg0, %rdi	
	movq -32(%rbp), %reg3	

1
	call *%r13	
	movq $.string7, %reg1	

1
	jge .Main.main_39	
	movq -128(%rbp), %rax	

1
	movq %reg0, %r14	
	jmp .Main.main_12	

1
	setle %dil	
	jg .Matrix.elMul_2	

1
.Main.main_119:	
	movq -56(%rbp), %rax	

1
	movq %r13, %reg1	
	cmpl %eax, %edi	

1
	movq %rdi, 200(%rax)	
	leave	

1
	jne .Main.main_142	
	movq %rbx, %reg1	

1
	.size Main.main, .-Main.main	
	.globl Main.myInt	

1
	movq %reg0, %rax	
	movq -72(%rbp), %rsi	

1
	call *%rax	
	movq 368(%rbx), %r12	

1
	movq %rdi, %reg1	
	jmp .Main.main_71	

1
.Main.main_4:	
	movq $.string8, %r13	

1
	movq -32(%rbp), %rax	
	imull %esi	

1
	movq $12, %r8	
	movq -48(%rbp), %rax	

1
	subl %ecx, %eax	
	movq -88(%rbp), %rcx	

1
	movq $1, %rdi	
	movq %rsi, %rcx	

1
	cmpq $Bool_vtable, 0(%rsi)	
	je .Main.func_4	

1
	movq $0, %rsi	
	movq $44, %rcx	

1
	sete %reg0	
	jne .Matrix.get_45	

1
	movq -112(%rbp), %rax	
	movq %r9, %r10	

1
	call *%r15	
	movq -120(%rbp), %reg2	

1
	movq -168(%rbp), %rax	
	movq %rcx, %reg3	

1
	movq %r13, %rax	
	movq -80(%rbp), %reg3	

1
.Main.main_7:	
	movq $17155, %reg0	

1
	movq $CellularAutomaton_vtable, 0(%reg0)	
	movq %reg0, %rbx	

1
	.quad Foo.getS	
	.quad Foo.setS	

1
	movq %reg0, %rdi	
	movq -128(%rbp), %reg0	

1
	jg .Main.main_94	
	movq %reg0, %reg1	

1
	movq $14, %rsi	
	movq $.string5_l, %reg1	

1
	movq -40(%rbp), %rax	
	movq -96(%rbp), %reg3	

1
.Main.main_3:	
	movq $3, %reg0	

1
	call *%r12	
	movq $.string12, %reg1	

1
	movq -96(%rbp), %reg1	
	movq -168(%rbp), %rax	

1
	testq $1, %rax	
	je .Bar.new_1	

1
	call *%reg0	
	jmp .CellularAutomaton.cell_left_neighbor_2	

1
	subl %reg0, %edi	
	movq %rdi, 16(%rax)	

1
	movq $7, %reg0	
	movq %reg0, -112(%rbp)	

1
	movq -56(%rbp), %rax	
	movq %reg2, %r9	

1
	movq $34526, %rdi	
	subl %edi, %reg2	

1
	idivl %ecx	
	movq $46154, %reg1	

1
	testq $1, %reg0	
	je .Razz.new_1	

1
	je .Main.main_12	
	movq $20, %reg0	

1
	movq %rdi, 496(%rax)	
	movq $0, %rdi	

1
	call *%rax	
	jmp .A2I.a2i_6	

1
	movq 80(%rax), %rax	
	movq %r14, %rdi	

1
	movq $118, %rsi	
	movq $.string2_l, %reg1	

1
	movq -152(%rbp), %reg1	
	movq -104(%rbp), %rdi	

1
	movq %reg0, %rbx	
	movq %r11, %reg0	

1
	movq $18119, %rax	
	subl %eax, %edi	

1
	movq %rdi, %rax	
	movq $34526, %rdi	

1
	movq %reg0, %rbx	
	movq 8(%rbx), %r12	

1
	movq $1, %rax	
.Main.new_8:	

1
	.size List.cons, .-List.cons	
	.globl Cons.isNil	

1
	.globl List.sort	
	.type List.sort, @function	

1
	jge .Main.main_18	
	movq 0(%rbx), %rax	

1
	cmpq $String_vtable, 0(%reg0)	
	je .Main.new_2	

1
	movq %rdi, 48(%reg1)	
	movq $3000, %rdi	

1
	je .Main.main_50	
	movq $15, %reg0	

1
	je .Main.main_19	
	movq %reg0, %rax	

1
	.quad Main.funcifi	
	.quad Main.funcifb	

1
	movq 16(%rbx), %rax	
	addl %edi, %eax	

1
	movq -32(%rbp), %reg1	
	movq -16(%rbp), %rdi	

1
	idivl %esi	
	movq $12660, %rsi	

1
	addl %reg0, %ebx	
	movq %reg2, %reg3	

1
	movq %reg0, %r8	
	movq -168(%rbp), %reg0	

1
	call getmem	
	movq $A2I_vtable, 0(%rax)	

1
	movq $3000, %reg0	
	movq %reg0, 720(%reg1)	

1
	call Bar.new	
	movq %rax, 32(%rbx)	

1
	movq %rsi, %reg1	
	movq %reg1, 72(%rax)	

1
	jne .Main.main_3	
	movq %reg0, %rax	

1
	movq $8800, %reg0	
	movq 0(%reg1), %rax	

1
	addl %reg0, %eax	
	leave	

1
	movq %rdi, 296(%rax)	
	movq $0, %rdi	

1
	call Bar.new	
	jmp .Bar.new_11	

1
	movq $38915, %reg0	
	movq $0, %rsi	

1
	movq %reg0, 560(%reg1)	
	movq $0, %reg0	

1
	movq %rax, %r13	
	movq $12, %rdi	

1
Razz.new:	
	pushq %rbp	

1
	movq $6765, %reg0	
	subl %edi, %reg2	

1
	movq %rcx, %rax	
	movq $0, %rcx	

1
	movq %rdi, 280(%reg1)	
	movq $3000, %rdi	

1
	addl %edi, %reg1	
	movq %rax, 16(%rbx)	

1
.Main.func_1:	
	cmpq $String_vtable, 0(%rsi)	

1
	jne .Main.main_23	
	movq $1, %reg0	

1
	.string "False"	
.string8:	

1
.Main.main_78:	
	movq %reg0, %rax	

1
.Main.main_37:	
	movq 0(%r13), %reg1	

1
	movq $1, %reg0	
	movq -8(%rbp), %rdx	

1
	movq $12, %r9	
	movq $0, %reg1	

1
	.type A2I.c2i, @function	
A2I.c2i:	

1
	movq 520(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	jne .Main.main_62	
	movq -48(%rbp), %rax	

1
	movq %rcx, %rax	
	movq %rbx, %rax	

1
	movq $22802, %rax	
	addl %reg1, %r8d	

1
	movq %reg0, %r8	
	movq $53642, %reg0	

1
	movq -136(%rbp), %reg1	
	movq -56(%rbp), %rax	

1
.Main.main_163:	
	cdq	

1
	movq 32(%rax), %rax	
	movq %rbx, %rdi	

1
	call *%rax	
	movq 40(%reg1), %rax	

1
	cmpq $Main_vtable, 0(%reg0)	
	je .Main.main_11	

1
.Main.funcwhilei_2:	
	movq 0(%rbx), %rax	

1
	je .Main.main_43	
	movq %reg0, %rax	

1
	subl %esi, %eax	
	movq %r12, %rsi	

1
	ret	
	.size Complex.print, .-Complex.print	

1
	je .Main.main_51	
	movq $15, %rsi	

1
	movq 56(%r13), %r13	
	movq %rbx, %rdi	

1
	subl %eax, %r12d	
	movq $35037, %r13	

1
	.quad 4	
.string10_l:	

1
	movq %rsi, %rdi	
	cmpl $0, %edi	

1
.Main.main_4:	
.Main.main_5:	

1
	je .Main.main_45	
	movq $200, %rsi	

1
	movq $empty_string, %reg0	
.A2I.i2c_20:	

1
	movq 24(%rbx), %rdx	
	movq 0(%rdx), %rax	

1
	jne .Matrix.set_19	
	movq %reg0, 64(%reg1)	

1
.Main.main_149:	
	movq -56(%rbp), %rdi	

1
	jne .Main.main_27	
	movq -144(%rbp), %reg1	

1
	jmp .Main.main_39	
.Main.main_33:	

1
	movq %rax, %r12	
	movq %rax, %reg2	

1
	call *%r12	
.Main.main_15:	

1
	movq %rdi, %rax	
	movq %rax, 56(%rbx)	

1
	movq %reg0, %rdi	
	movq $8423, %reg0	

1
	negl %eax	
	movq $38915, %reg1	

1
	call *%reg0	
	movq -24(%rbp), %rax	

1
	je .Main.main_21	
	movq $11, %reg0	

1
	movq %r14, %reg1	
	movq -16(%rbp), %reg3	

1
	movq %rax, 8(%rbx)	
	movq $.string7, %rax	

1
	movq $.string19, %reg0	
	call A2I.new	

1
	je .Main.main_9	
	movq $.string7, %r13	

1
	movq -160(%rbp), %reg1	
	addl %reg2, %r9d	

1
	movq 48(%reg0), %rsi	
	movq %rsi, 64(%reg0)	

1
	movq 8(%rbx), %rdx	
	call *%r14	

1
	movq $47988, %reg0	
	movq %reg0, %r8	

1
	movq $10280, %r12	
	movq 0(%reg1), %reg2	

1
	call out_error	
.Main.main_125:	

1
.Cons.insert_3:	
	popq %r13	

1
	movq 8(%rbx), %r14	
	pushq %reg2	

1
	call Object.type_name	
	movq 0(%reg0), %r12	

1
	testq $1, %rax	
	je .Main.main_24	

1
	subl %eax, %edi	
	movq -184(%rbp), %rax	

1
	call *%rax	
	movq 136(%rbx), %rax	

1
	movq $17, %reg0	
	movq %reg0, -32(%rbp)	

1
	call *%r13	
	movq -24(%rbp), %reg2	

1
	movq %rdi, 56(%rax)	
	movq %rdi, %rax	

1
	movq $12, %rdi	
	movq -16(%rbp), %rax	

1
.Matrix.set_17:	
	movq $3, %reg0	

1
	movq $3000, %rdi	
	movq %rdi, 440(%reg1)	

1
	testq $1, %reg0	
	je .Main.main_138	

1
	movq $11440, %reg0	
	imull %reg1	

1
	subl %reg0, %reg1	
	movq $47353, %reg2	

1
	call *%rax	
	movq 528(%reg1), %rax	

1
	movq 240(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	jne .Main.main_23	
	cmpl $0, %r13d	

1
	je .Main.main_7	
	cmpq $Object_vtable, 0(%rax)	

1
	addl %eax, %r8d	
	movq %rcx, %rax	

1
	addl %esi, %eax	
	subl %eax, %edi	

1
	movq %rax, %reg1	
	movq $2, %reg2	

1
.Main.main_24:	
	movq 0(%r13), %rax	

1
.Main.main_129:	
	cdq	

1
	movq $2211, %rsi	
	imull %esi	

1
.Main.main_94:	
	cdq	

1
	movq $16280, %reg0	
	imull %esi	

1
	idivl %reg0d	
	movq $47963, %reg1	

1
	ret	
	.size Foo.get, .-Foo.get	

1
	movq 264(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	je .Main.main_106	
	movq $64, %rsi	

1
	jmp .Foo.new_6	
.Foo.new_6:	

1
	movq -152(%rbp), %rax	
	movq -104(%rbp), %reg3	

1
	testq $1, %reg0	
	je .Cons.rev_2	

1
	movq $0, %reg0	
	movq %reg0, 664(%reg1)	

1
.Main.main_124:	
	movq %reg0, %rax	

1
	.size Main.setFoo, .-Main.setFoo	
	.globl Main.main	

1
.Main.main_1:	
	movq %rsi, %r8	

1
	movq $42968, %reg0	
	imull %reg1	

1
	call *%reg0	
	movq 432(%reg1), %rax	

1
	movq $10, %reg0	
	movq %rdi, %reg2	

1
	movq %rdi, 736(%reg1)	
	movq $3000, %rdi	

1
	movq $166, %rsi	
	movq $.string5_l, %rdi	

1
	call Object.type_name	
	cmpl $0, 8(%rbx)	

1
	movq $50538, %reg0	
	movq $12757, %rsi	

1
	testq $1, %rbx	
	je .Main.main_43	

1
	movq $164, %reg0	
	movq $.string5_l, %rdi	

1
	movq %rdi, 648(%reg1)	
	movq $3000, %rdi	

1
	call *%reg0	
	movq 288(%reg1), %r12	

1
	movq $0, %r14	
	movq %r12, %reg2	

1
.Matrix.mul_2:	
	movq %reg0, %reg1	

1
	movq %rdi, 408(%reg1)	
	movq $3000, %rdi	

1
	call *%r12	
	movq 168(%rbx), %r12	

1
	movq -184(%rbp), %rcx	
	addl %ecx, %eax	

1
	movq -16(%rbp), %rax	
	subl %eax, %reg3	

1
	negl %eax	
	movq -88(%rbp), %rsi	

1
	movq %reg0, %reg1	
	subl %reg2d, %eax	

1
	movq -56(%rbp), %rax	
	movq -56(%rbp), %r9	

1
	movq 8(%r12), %reg1	
	movq %reg2, %reg3	

1
	je .Bar.new_14	
	movq $26, %rsi	

1
	negl %reg0	
	movq $33788, %r11	

1
	call getmem	
	movq $Razz_vtable, 0(%rax)	

1
	je .Main.funccase_4	
	cmpq $Object_vtable, 0(%rdi)	

1
	movq $5, %reg0	
	movq $4, %r13	

1
	sete %cl	
	jne .Matrix.set_62	

1
	testq $1, %rdi	
	je .DicNode.get_3	

1
	call out_error	
.Razz.new_13:	

1
	setl %reg0l	
	jge .Main.main_68	

1
	subl %reg0, %eax	
	movq $12, %rcx	

1
	movq 312(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	idivl %ecx	
	movq -168(%rbp), %reg2	

1
	je .Main.main_103	
	movq %reg0, %rax	

1
	movq %reg0, %r12	
.Main.funcwhilei_1:	

1
	.type Foo.set, @function	
Foo.set:	

1
	movq $14379, %rax	
	movq $61731, %rsi	

1
.ListNode.push_1:	
	movq 8(%rbx), %rdx	

1
	movq %reg0, %rbx	
	movq $3, %reg0	

1
	jne .Main.main_17	
	movq -160(%rbp), %rax	

1
	addl %reg0, %eax	
	movq $8340, %rdi	

1
	movq -48(%rbp), %reg1	
	movq %reg2, %rsi	

1
	movq 608(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	movq %reg0, 8(%reg1)	
	movq %reg0, 16(%reg1)	

1
.Main.func_3:	
	popq %reg0	

1
	movq $34, %reg0	
	movq 0(%reg1), %reg2	

1
	movq $1, %rax	
	popq %reg1	

1
	testq $1, %rax	
	je .Main.main_103	

1
	movq $12, %reg0	
	movq 0(%reg1), %rax	

1
.Main.funccase_2:	
	movq %reg0, %reg1	

1
CellularAutomaton.new:	
	pushq %reg0	

1
	addl %reg0, %eax	
	movq %rax, 40(%rbx)	

1
	movq %rdi, 416(%reg1)	
	movq $3000, %rdi	

1
	movq %reg0, %rax	
	negl %edi	

1
	movq $3000, %rdi	
	movq %rdi, 120(%rax)	

1
	cmpq $Bazz_vtable, 0(%reg0)	
	je .Bar.new_2	

1
	addl %reg0d, %eax	
	movq -128(%rbp), %reg0	

1
	movq -56(%rbp), %rsi	
	subl %esi, %eax	

1
	movq 8(%reg0), %reg0	
	popq %reg1	

1
	movq $14461, %reg0	
	movq $15505, %rax	

1
	.quad Foo.setS	
	.quad Foo.func	

1
	.quad Main.funcwhileb	
	.text 	

1
	movq $26355, %rax	
	movq 0(%rbx), %r12	

1
	call Bar.new	
	jmp .Foo.new_11	

1
	call *%rax	
	movq $name_Int, %rax	

1
	movq -144(%rbp), %reg1	
	movq -80(%rbp), %rax	

1
	movq 208(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	movq %rdi, %rax	
	movq $.string7, %reg2	

1
	movq %rax, %rbx	
	cmpl $0, %ebx	

1
	movq %reg0, 432(%rax)	
	movq $0, %reg0	

1
	movq %reg0, 432(%reg1)	
	movq $3000, %reg0	

1
	idivl %ecx	
	movq $6550, %reg1	

1
	movq $53961, %reg0	
	movq $30773, %rdi	

1
	movq $0, %rdi	
	movq %rdi, 576(%rax)	

1
	movq %reg0, %rbp	
	movq $88, %reg2	

1
	movq 320(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq $.string7, %reg0	
	movq $.string8, %rax	

1
	negl %reg0	
	movq -168(%rbp), %rcx	

1
	addl %ebx, %reg1	
	movq %rax, %reg3	

1
	movq %rdi, 72(%rax)	
	movq $3000, %rdi	

1
	movq $19369, %rdi	
	addl %edi, %reg2	

1
	call out_error	
.Main.iota_3:	

1
	je .Main.main_90	
	movq $64, %rsi	

1
	call getmem	
	movq $DicNode_vtable, 0(%rax)	

1
	movq %reg0, %reg1	
	movq $13, %r15	

1
	movq $.string8, %rdi	
	movq %rdi, %r14	

1
.Main.main_14:	
	cmpq $IO_vtable, 0(%rdi)	

1
	movq -104(%rbp), %rax	
	movq -56(%rbp), %rdi	

1
	movq $22802, %rax	
	addl %reg1, %reg2d	

1
	movq $33158, %rsi	
	movq $0, %rcx	

1
	movq %reg0, %reg1	
.Main.iota_1:	

1
	je .Main.main_65	
	movq $17, %reg0	

1
	movq %reg0, %rcx	
	movq -184(%rbp), %reg3	

1
	je .Main.main_63	
	movq $17, %rsi	

1
	movq %reg0, 616(%reg1)	
	movq $3000, %reg0	

1
.Main.main_29:	
	movq $.string8, %rax	

1
	jge .Main.main_132	
	movq %reg0, %reg1	

1
.Main.main_64:	
	movq %reg0, %rax	

1
	cmpl $0, 24(%reg0)	
	movq 24(%reg0), %rdi	

1
	movq $6, %r13	
	movq 0(%reg1), %reg2	

1
	movq $0, %rdi	
	movq %rdi, 608(%reg1)	

1
	movq $7201, %reg0	
	movq %reg0, %rcx	

1
	testq $1, %rdi	
	je .Main.main_157	

1
.Matrix.get_62:	
	movq $1, %rax	

1
	movq $39506, %rsi	
	movq %rsi, %reg1	

1
	jne .Matrix.set_2	
	movq %reg0, 8(%reg1)	

1
	addl %esi, %eax	
	movq -80(%rbp), %reg3	

1
	call *%reg0	
	movq 104(%reg1), %reg0	

1
	movq %rbx, %reg1	
	movq -152(%rbp), %reg3	

1
	movq $3, %rax	
	movq 0(%rbx), %reg2	

1
	movq %reg0, %rax	
	cmpl %esi, %eax	

1
	movq $6, %r13	
	movq 0(%reg1), %r12	

1
.Foo.new_12:	
	movq 32(%reg0), %rdx	

1
	movq %reg0, 8(%rbx)	
	jmp .Dictionary.insert_3	

1
	.quad 1	
.string16_l:	

1
	call *%reg0	
	movq 72(%rbx), %rax	

1
.Main.funcwhilei_2:	
	movq 0(%rbx), %reg1	

1
	movq $42968, %rdi	
	imull %reg1	

1
	movq 440(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	jmp .Matrix.elMul_1	
.Matrix.elMul_2:	

1
	subl %edi, %eax	
	movq %rax, -120(%rbp)	

1
	movq -128(%rbp), %reg1	
	movq -56(%rbp), %rax	

1
	movq $63399, %rsi	
	imull %reg1	

1
	movq %r12, 8(%rax)	
	movq $2, %reg2	

1
	jne .Main.main_50	
	cmpl $0, %r13d	

1
	movq 56(%r12), %r12	
	movq 8(%rax), %reg2	

1
	je .CellularAutomaton.evolve_2	
	movq 0(%reg0), %rax	

1
	movq %rcx, %r13	
	movq %rax, %rdi	

1
	movq $ListNode_vtable, 0(%reg0)	
	movq %reg0, %reg1	

1
	jmp .Main.main_163	
.Main.main_162:	

1
	sete %reg0l	
	jne .Main.main_154	

1
	movq %reg0, %reg1	
	jmp .Main.main_16	

1
	movq $24923, %rsi	
	imull %esi	

1
.Main.main_14:	
	cmpq $IO_vtable, 0(%reg0)	

1
	.type Complex.equal, @function	
Complex.equal:	

1
	call *%reg0	
.DicNode.get_5:	

1
	negl %reg0	
	movq $38220, -32(%rbp)	

1
	subl %eax, %edi	
	movq $18841, %rax	

1
	movq $.string9, %rbx	
	movq 16(%rax), %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 656(%reg1)	

1
	movq $229, %reg0	
	movq $.string5_l, %rdi	

1
	setl %sil	
	jge .Main.main_98	

1
.Matrix.set_5:	
.Matrix.set_3:	

1
	.quad DicNode.setNext	
Int_vtable:	

1
	movq %r9, %reg1	
	movq -160(%rbp), %reg1	

1
DicNode.decr:	
	pushq %rbp	

1
	movq 184(%rax), %rax	
	jmp .Matrix.get_59	

1
	movq %reg0, 104(%reg1)	
	movq $3000, %reg0	

1
	movq $3000, %reg0	
	movq %reg0, 632(%rax)	

1
	movq $43617, %reg0	
	imull %esi	

1
.Main.main_29:	
	movq -120(%rbp), %reg1	

1
	movq $25895, %rax	
	cmpl %eax, %edi	

1
	movq 16(%rax), %reg1	
	movq $.string10, %r13	

1
	je .Main.main_6	
	movq $2, %rax	

1
	movq -168(%rbp), %reg1	
	movq %rdi, %rsi	

1
	je .Matrix.get_64	
	movq $76, %reg0	

1
	movq $3000, %rdi	
	movq %rdi, 616(%rax)	

1
	addl %reg0, %eax	
	movq $222, %rdi	

1
	movq $10280, %reg0	
	movq 0(%rbx), %reg2	

1
	movq %rdi, 96(%rax)	
	movq %rdi, %rax	

1
	movq -120(%rbp), %rsi	
	addl %reg2, %esi	

1
	movq %reg0, %reg1	
	call IO.out_int	

1
	jmp .Razz.new_6	
.Razz.new_6:	

1
Nil.isNil:	
	pushq %rbp	

1
	movq $12, %rsi	
	movq -184(%rbp), %reg2	

1
	call *%r12	
	movq 736(%rbx), %rax	

1
	movq %rax, %reg1	
	movq $10, %rsi	

1
	movq %reg0, %rbx	
	call Bool.new	

1
	movq %rax, %reg1	
	call Object.copy	

1
.Main.main_150:	
	cdq	

1
	jmp .A2I.c2i_6	
.A2I.c2i_5:	

1
	movq -80(%rbp), %rax	
	movq -88(%rbp), %rdi	

1
	call *%reg0	
	movq 440(%reg1), %rax	

1
	call *%reg0	
	movq 248(%rbx), %reg2	

1
	movq %rdi, 136(%rax)	
	movq $3000, %rdi	

1
	movq 328(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq $11435, %r12	
	movq 0(%rbx), %reg2	

1
	movq 80(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq 128(%r12), %r12	
	movq %rax, %reg2	

1
.List.insert_2:	
	movq 0(%reg0), %r13	

1
	jmp .Main.main_120	
.Main.main_119:	

1
	movq %r15, %rax	
	movq -96(%rbp), %reg3	

1
	call *%rax	
	movq 520(%rbx), %reg2	

1
	movq %rdi, %reg1	
	jmp .Main.main_69	

1
	movq $.string8, %r13	
	movq %reg1, %rdi	

1
	movq $.string9, %rax	
	movq 0(%rbx), %r13	

1
	imull %edi	
	movq %reg1, %r12	

1
	movq -88(%rbp), %rsi	
	addl %reg2, %eax	

1
	movq $6, %reg0	
	movq %reg1, %reg2	

1
	movq $0, %rdi	
	movq %rdi, 472(%reg1)	

1
	movq %reg0, %rax	
	movq $.string6, %rbx	

1
	idivl %reg0	
	movq -152(%rbp), %rsi	

1
	setle %dil	
	jg .Main.main_6	

1
	movq $.string6, %r12	
	movq $.string7, %reg1	

1
	addl %reg0, %reg1	
	movq -136(%rbp), %reg3	

1
	movq $110, %reg0	
	movq $.string3_l, %reg1	

1
	movq 16(%reg0), %reg1	
	movq $.string10, %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 384(%rax)	

1
	je .Main.main_1	
	cmpl $0, %reg0	

1
	movq $40570, %reg0	
	subl %reg0d, %reg1	

1
	call Matrix.new	
	movq %rax, %r12	

1
	movq %rsi, %reg1	
	movq %reg2, %rbx	

1
	movq $22520, %rsi	
	movq $40813, %rdi	

1
	movq 64(%r15), %r15	
	movq %rax, %rdi	

1
.string15_l:	
	.string "string"	

1
	movq %reg0, %rcx	
	movq %rdi, %reg3	

1
	negl %reg0	
	movq -56(%rbp), %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 472(%reg1)	

1
	movq 16(%rax), %rdi	
	negl %reg2	

1
	jmp .A2I.i2c_16	
.A2I.i2c_15:	

1
	movq %reg0, %rax	
	jmp .Main.main_108	

1
ListNode.next:	
	pushq %rbp	

1
	movq %reg0, -88(%rbp)	
	movq $11, %reg0	

1
	je .Main.main_4	
	movq $14, %rsi	

1
	movq 16(%rdi), %rax	
	negl %eax	

1
	movq %reg0, %reg1	
	movq $18422, %reg0	

1
.Main.main_3:	
	movq 80(%rbx), %reg1	

1
	movq %rcx, %reg1	
	movq $1, %r9	

1
	call out_error	
.Main.main_92:	

1
	movq $53642, %reg0	
	movq $21521, %r9	

1
	movq %rdi, %reg1	
	movq 24(%reg1), %reg2	

1
	movq $63133, %reg0	
	movq $31786, %rdi	

1
.Main.main_6:	
	movq 16(%reg0), %reg1	

1
.Main.main_1:	
	movq 0(%r14), %reg1	

1
	.type Complex.x_value, @function	
Complex.x_value:	

1
	movq 24(%rbx), %rsi	
	movq $0, %reg2	

1
	subq $136, %reg0	
	pushq %rbx	

1
	call *%reg0	
.Main.main_15:	

1
	movq $3000, %rdi	
	movq %rdi, 96(%reg1)	

1
.Cons.rev_2:	
	movq 0(%reg0), %reg1	

1
	movq $2, %rax	
	movq %rax, 24(%reg1)	

1
	movq %reg0, %reg1	
	movq $.string19, %reg2	

1
	subl %reg0, %edi	
	movq -96(%rbp), %reg3	

1
	movq -16(%rbp), %reg1	
	movq -160(%rbp), %rsi	

1
	movq %reg0, -16(%rbp)	
	call List.new	

1
	movq $name_Int, %r12	
	movq 0(%reg1), %rax	

1
	movq -96(%rbp), %rdi	
	subl %reg2, %reg3	

1
	movq %rdi, 128(%rax)	
	movq $3000, %rdi	

1
	movq -56(%rbp), %rcx	
	negl %ecx	

1
	movq 88(%reg0), %reg0	
	jmp .Matrix.get_29	

1
	call out_error	
.Main.main_108:	

1
.Bar.new_10:	
	movq %reg0, %reg1	

1
	movq $1, %reg0	
	jmp .Complex.equal_5	

1
	jne .Matrix.set_58	
	movq %reg0, 184(%rax)	

1
	je .Main.new_3	
	cmpq $Main_vtable, 0(%rax)	

1
	movq $138, %rsi	
	movq $.string3_l, %rdi	

1
	jne .Main.main_134	
	movq %reg0, %rax	

1
	movq -56(%rbp), %reg1	
	negl %eax	

1
	movq $174, %reg0	
	movq $.string5_l, %reg1	

1
	movq $100, %reg0	
	movq %r12, %reg2	

1
	imull %reg0d	
	movq $19892, %reg0	

1
	movq $1, %rax	
	movq %rax, -40(%rbp)	

1
.Main.main_4:	
	movq $.string6, %rax	

1
	testq $1, %rsi	
	je .Matrix.get_38	

1
	call out_error	
.Main.main_132:	

1
	movq %r13, %reg1	
	movq %r14, %r13	

1
	jg .Main.main_42	
	movq 0(%reg0), %rax	

1
	call *%r13	
	movq $12, %reg1	

1
	.size Cons.print_list, .-Cons.print_list	
	.globl Nil.isNil	

1
Complex.reflect_X:	
	pushq %reg0	

1
	movq %rdi, 488(%rax)	
	movq $3000, %rdi	

1
	call String.substr	
	movq %reg0, %r15	

1
	movq $3000, %rdi	
	movq %rdi, 704(%reg1)	

1
	jge .Main.main_18	
	movq 0(%reg0), %rax	

1
	movq $20470, %rcx	
	negl %ecx	

1
	movq 64(%rax), %rax	
	movq 24(%rbx), %reg2	

1
	movq $3175, %rsi	
	imull %reg1	

1
	testq $1, %r14	
	je .Main.main_59	

1
Cons.car:	
	pushq %reg0	

1
	call *%rax	
.Main.main_16:	

1
	movq %reg0, %rdi	
	call Main.func	

1
	movq $5, %reg0	
	movq 0(%rbx), %r13	

1
	movq %r12, %rax	
	movq %r15, %rdi	

1
	movq 24(%rbx), %rdi	
	movq %r12, %rsi	

1
	movq 736(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	jg .Main.main_3	
	movq $15234, %reg0	

1
	.quad 26	
.string0_l:	

1
	movq %reg0, 216(%reg1)	
	movq $0, %reg0	

1
	imull %reg0d	
	movq -16(%rbp), %reg0	

1
	.quad ListNode.insert	
String_vtable:	

1
.Main.main_132:	
	movq %reg0, %reg1	

1
	movq -96(%rbp), %reg1	
	subl %edi, %eax	

1
	addl %eax, %reg1	
	movq -176(%rbp), %rax	

1
	call *%reg0	
	jmp .Main.new_11	

1
	movq -32(%rbp), %rcx	
	negl %reg2	

1
	negl %eax	
	movq $9569, %reg1	

1
	movq $2, %reg0	
	movq %reg0, 24(%rbx)	

1
	movq $100, %rax	
	movq %rax, -16(%rbp)	

1
	je .Main.main_107	
	movq $67, %rsi	

1
	setl %reg0l	
	jge .Main.main_80	

1
	movq 504(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	movq $.string7, %r14	
	movq $0, %rax	

1
	movq -48(%rbp), %reg1	
	subl %eax, %r8d	

1
	movq $.string6, %rbx	
	movq 0(%reg1), %reg2	

1
	subl %r11d, %reg1	
	movq %rax, %r11	

1
	jge .Main.main_2	
	movq $1, %rax	

1
	movq %rdi, 504(%reg1)	
	movq $3000, %rdi	

1
	movq %rdi, 688(%reg1)	
	movq $3000, %rdi	

1
	movq $41455, %rax	
	movq $64464, %rcx	

1
.Main.main_2:	
	leave	

1
	subl %eax, %edi	
	movq -88(%rbp), %rax	

1
.Main.iota_2:	
	movq 8(%rbx), %rax	

1
	movq $22802, %rax	
	addl %eax, %reg2d	

1
.Main.main_63:	
	jmp .Main.main_183	

1
	call out_error	
.Cons.insert_5:	

1
	call *%reg0	
	movq 736(%reg1), %rax	

1
	movq -40(%rbp), %reg1	
	subl %eax, %reg3d	

1
.Main.main_29:	
	movq %reg0, %reg1	

1
	subl %edi, %reg1	
	movq $33866, %rdi	

1
	movq %rbx, %rax	
	cmpl %edi, %eax	

1
.Main.main_1:	
	movq $.string9, %rax	

1
	idivl %r9d	
	subl %eax, %reg2d	

1
	call *%reg0	
	movq 120(%rbx), %reg2	

1
	movq 128(%reg0), %reg0	
	movq %r12, %rdi	

1
	imull %esi	
	movq $53085, %rsi	

1
	testq $1, %reg0	
	je .Main.main_146	

1
	movq 16(%reg0), %rax	
	movq 24(%reg0), %reg2	

1
.Main.main_73:	
	movq %reg0, %rsi	

1
	movq %rsp, %rbp	
	movq $32, %reg2	

1
	je .Matrix.get_51	
	movq $67, %rsi	

1
	jg .Main.main_49	
	movq -144(%rbp), %rax	

1
	movq $89, %reg0	
	movq $.string2_l, %rdi	

1
	movq $1073741824, %rax	
	movq $4, %rdi	

1
	subl %reg0, %r9d	
	movq %reg2, %reg3	

1
	addl %reg0, %reg1	
	leave	

1
	movq $0, %reg0	
	movq %reg0, 424(%rax)	

1
	call out_error	
.Razz.new_14:	

1
	movq %rax, %rdi	
	movq $16693, %rax	

1
	je .Main.main_151	
	movq $115, %reg0	

1
.Razz.new_3:	
	call Bar.new	

1
	addl %eax, %esi	
	movq -96(%rbp), %rcx	

1
	call Dictionary.new	
	movq %reg0, -16(%rbp)	

1
	movq 24(%rax), %rdx	
	movq 0(%rdx), %reg2	

1
	movq %reg0, %reg1	
.Main.main_43:	

1
	movq 520(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	addl %eax, %ebx	
	movq %rbx, %rax	

1
	movq $83, %rsi	
	movq $.string2_l, %rdi	

1
	movq $.string17, %reg0	
	movq %reg0, %rdi	

1
.Main.new_3:	
	movq 24(%rbx), %reg1	

1
	jge .Main.main_14	
	movq $32151, %rax	

1
	movq 552(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq 8(%reg0), %reg1	
	call *%r14	

1
	.string "Hello, world.\\n"	
.string6:	

1
	movq %reg0, %rax	
	jmp .Matrix.set_46	

1
	je .Main.main_190	
	movq $316, %rsi	

1
	movq %rax, 8(%reg1)	
	movq $2, %r12	

1
	movq %rdi, %rax	
	jmp .Main.main_97	

1
	cdq	
	idivl %r13d	

1
	movq -56(%rbp), %rdi	
	movq -56(%rbp), %rax	

1
	movq -176(%rbp), %rax	
	imull %esi	

1
	jne .A2I.a2i_5	
	movq $1, %r13	

1
	call *%reg0	
	movq 696(%rbx), %reg2	

1
	call *%reg0	
.Main.funccaseb_3:	

1
	movq $3000, %reg0	
	movq %reg0, 416(%rax)	

1
	movq %reg0, 112(%rax)	
	movq %reg0, %rax	

1
	testq $1, %reg0	
	je .Main.new_5	

1
	movq %reg0, %reg1	
	movq 48(%rbx), %rsi	

1
	movq $2951, %r12	
	movq $0, %r13	

1
	movq %rax, %r12	
	movq $4, %rax	

1
	je .Main.main_77	
	movq $19, %reg0	

1
	je .Bar.new_18	
	movq $31, %reg0	

1
	imull %r11d	
	movq $8738, %r11	

1
	je .Main.main_155	
	movq $115, %reg0	

1
	call *%r12	
	movq $.string11, %reg1	

1
	movq 496(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 448(%rax)	

1
.Main.main_43:	
	movq $49656, %rax	

1
	call *%reg0	
	movq 120(%rbx), %r12	

1
	movq %r14, %reg1	
	subl %ecx, %eax	

1
	movq -24(%rbp), %reg1	
	cmpl %eax, %edi	

1
	movq %reg0, 200(%reg1)	
	movq $0, %reg0	

1
	movq %reg0, %reg1	
	movq $25185, %reg0	

1
	movq %rdi, 40(%reg1)	
	cmpl %edi, %reg3	

1
	movq $55662, %r14	
	movq $0, %reg1	

1
	movq $34, %reg0	
	movq 0(%rbx), %r12	

1
	movq %reg0, 416(%reg1)	
	movq $0, %reg0	

1
	movq 152(%reg0), %reg0	
	jmp .Matrix.get_48	

1
	movq -176(%rbp), %reg1	
	subl %edi, %eax	

1
	jge .Main.main_2	
	movq %r12, %rdi	

1
	movq %rax, 40(%rbx)	
	movq $.string6, %rax	

1
	movq $14802, %reg0	
	movq $39506, %rsi	

1
	movq $35, %rsi	
	movq $.string2_l, %reg1	

1
	movq -104(%rbp), %rsi	
	movq %r15, %rax	

1
	movq $58, %rsi	
	movq $.string5_l, %reg1	

1
	movq %r13, %rdi	
	subl %reg2, %edi	

1
	movq $.string11, %rdi	
	movq %rbx, %reg2	

1
Foo.z:	
	pushq %rbp	

1
	movq %r8, %rax	
	negl %eax	

1
	movq %rax, %rdi	
	movq $33, %rax	

1
	movq %reg0, %rax	
	movq -80(%rbp), %reg0	

1
	subl %reg0, %reg1	
	movq $15487, %reg2	

1
	jne .Complex.print_1	
	movq 8(%rax), %reg1	

1
	je .Main.main_14	
	movq $6, %reg0	

1
	movq %rdi, 704(%rax)	
	movq $0, %rdi	

1
	movq $3000, %rdi	
	movq %rdi, 264(%rax)	

1
	movq %rbx, 8(%reg1)	
.Main.main_39:	

1
	testq $1, %rax	
	je .Main.main_70	

1
	negl %r8d	
	movq %r12, %rax	

1
	negl %reg0d	
	movq 0(%rbx), %rax	

1
	jge .Main.main_45	
	movq %reg0, %reg1	

1
	movq 24(%rax), %rdi	
	sete %dil	

1
	movq $7258, %rsi	
	negl %reg1	

1
	movq %r13, %rsi	
	movq 8(%rbx), %rdx	

1
	setl %al	
	movq $2, %rdi	

1
	call *%r12	
	movq 472(%reg1), %reg2	

1
	movq $38686, %reg0	
	addl %reg0d, %reg1	

1
	jne .Main.main_134	
	movq %reg0, %reg1	

1
	movq %r13, %rdi	
	subl %eax, %reg3	

1
	jge .Main.main_2	
	cmpl $0, 8(%reg0)	

1
	negl %r11d	
	imull %r11d	

1
	testq $1, %r13	
	je .Main.main_57	

1
.Razz.new_17:	
	movq %rax, 48(%rbx)	

1
	.string "List"	
.string1:	

1
.Main.main_98:	
	cdq	

1
	negl %reg0	
	movq %rbx, %rax	

1
	je .Main.main_185	
	movq $316, %rsi	

1
	movq $3, %rax	
	movq 0(%reg1), %reg2	

1
	idivl %reg0	
	movq $6550, %rcx	

1
	movq -64(%rbp), %rdi	
	cmpl %reg2, %reg3	

1
	movq $50998, %reg0	
	addl %eax, %reg2	

1
	movq %rax, 32(%reg1)	
	movq $.string6, %rax	

1
.Razz.new_7:	
	cmpq $Bar_vtable, 0(%reg0)	

1
.Cons.insert_5:	
	movq 0(%rax), %reg1	

1
	movq %rdi, 360(%rax)	
	movq $3000, %rdi	

1
	movq -128(%rbp), %reg1	
	movq -56(%rbp), %rdi	

1
	call *%reg0	
	movq 240(%reg1), %reg0	

1
	jne .Matrix.set_19	
	movq %reg0, 64(%rax)	

1
.Main.out_whatever_5:	
	popq %r12	

1
	call out_error	
.Cons.rcons_2:	

1
	movq %rax, %r12	
	movq %r12, %rdi	

1
	imull %reg0	
	movq -40(%rbp), %rcx	

1
	movq $4, %rax	
	movq $22, %reg1	

1
.Main.main_67:	
	cmpl $0, -32(%rbp)	

1
	movq %rdi, %reg1	
	movq 48(%rbx), %rsi	

1
	movq -32(%rbp), %rsi	
	movq -144(%rbp), %rax	

1
.Main.main_2:	
	movq $2, %reg0	

1
	movq $0, %reg0	
	movq %reg0, 696(%reg1)	

1
	movq -136(%rbp), %reg1	
	movq %rsi, %reg3	

1
	addl %eax, %reg1	
	movq -80(%rbp), %reg3	

1
	movq $3000, %reg0	
	movq %reg0, 312(%rax)	

1
	movq $0, %reg0	
	movq %reg0, 360(%reg1)	

1
	movq %rax, %r13	
	jmp .Main.main_19	

1
	movq $60127, %reg0	
	addl %reg0d, %eax	

1
	testq $1, %r9	
	je .Main.main_127	

1
	testq $1, %rcx	
	je .Main.main_130	

1
	testq $1, %reg0	
	je .Matrix.mul_5	

1
	movq 8(%r12), %reg1	
	movq 0(%reg2), %rax	

1
	.quad Cons.isNil	
	.quad List.cons	

1
	addl %reg0, %eax	
	movq %reg2, 24(%reg3)	

1
.Cons.rcons_1:	
	movq 16(%rax), %reg1	

1
	addl %reg0, %eax	
	movq -160(%rbp), %rsi	

1
.Main.main_14:	
	movq %reg0, %rdx	

1
	movq %r13, %rax	
	subl %reg2, %edi	

1
	movq %rbx, %reg1	
	movq %reg2, %r10	

1
	.quad Nil.rcons	
	.quad Nil.print_list	

1
	sete %reg0b	
	jne .Matrix.set_34	

1
	.quad Main.print_list	
	.quad Main.main	

1
	je .Main.main_7	
	movq 0(%rbx), %reg1	

1
	movq $33788, %r11	
	negl %r11d	

1
.Complex.equal_3:	
	movq 0(%reg0), %reg1	

1
	addl %edi, %reg1	
	movq $222, %reg2	

1
	movq 152(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	movq $3, %rdi	
	movq %rdi, %reg1	

1
	movq -160(%rbp), %rax	
	subl %reg2, %reg3	

1
	movq %reg0, %rdx	
	movq %rdx, -32(%rbp)	

1
	subl %reg0, %reg1	
	movq -64(%rbp), %rax	

1
	movq -160(%rbp), %reg1	
	movq %r15, %rax	

1
	movq -128(%rbp), %reg1	
	movq %reg1, -176(%rbp)	

1
	movq $2, %rax	
	jmp .A2I.c2i_6	

1
	.size Main.main, .-Main.main	
	.globl Foo.x	

1
	movq $14802, %reg0	
	movq $39506, %reg1	

1
	movq %rbx, %rsi	
	movq -160(%rbp), %rax	

1
	movq -128(%rbp), %rax	
	movq -48(%rbp), %rsi	

1
.Matrix.get_9:	
.Matrix.get_7:	

1
	.size _main, .-_main	
	.globl A2I.c2i	

1
	call *%reg0	
	movq $.string21, %reg1	

1
	movq 416(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq %reg0, %reg1	
	jmp .Main.main_31	

1
	movq %rsi, %rbx	
	cmpl $0, %reg2	

1
	testq $1, %reg0	
	je .Main.main_97	

1
.Matrix.set_48:	
.Matrix.set_46:	

1
	jmp .Matrix.set_29	
.Matrix.set_28:	

1
	subl %edi, %reg1	
	movq %rax, %rbx	

1
	movq -96(%rbp), %reg1	
	subl %ecx, %reg3	

1
	movq $.string10, %rax	
	movq 0(%reg1), %rbx	

1
.Matrix.set_41:	
	movq $2, %r8	

1
	movq $0, %rax	
	movq %rax, 72(%rbx)	

1
	movq $5, %reg0	
	cmpl %reg1, %r8d	

1
	call *%r12	
	movq 104(%reg1), %r12	

1
	jmp .Matrix.get_44	
.Matrix.get_43:	

1
	movq $53667, %rsi	
	movq $0, %rcx	

1
	movq %rsp, %reg1	
	movq $208, %reg2	

1
.Main.new_2:	
	movq 0(%rbx), %rax	

1
	sete %reg0	
	jne .Matrix.get_56	

1
	call *%rax	
	movq 640(%reg1), %reg2	

1
.Main.main_8:	
	movq $48298, %reg0	

1
	call *%reg0	
	movq 640(%reg1), %reg2	

1
.Matrix.get_23:	
	movq $1, %reg0	

1
.Main.main_5:	
	cmpq $Int_vtable, 0(%reg0)	

1
	movq $.string18, %reg0	
	movq %reg0, %r13	

1
	movq $8997, %reg0	
	movq $30996, %rsi	

1
	movq 24(%rax), %reg1	
	cmpl $0, %edi	

1
	subl %edi, %reg1	
	movq %rax, -120(%rbp)	

1
.CellularAutomaton.cell_right_neighbor_1:	
	movq $1, %reg0	

1
	movq %r12, 8(%reg1)	
	movq 0(%rbx), %reg3	

1
.Main.main_2:	
	cmpl %reg0, %reg1	

1
	movq $0, %r14	
	movq 0(%reg1), %rax	

1
	movq $17155, %rdi	
	movq $30215, %reg1	

1
	je .Main.main_69	
	movq $226, %rsi	

1
	imull %reg0	
	movq $53085, %rsi	

1
	movq $0, %r13	
	call String.new	

1
	movq -120(%rbp), %rsi	
	addl %ecx, %reg3	

1
	movq $60858, %rsi	
	negl %esi	

1
	subl %eax, %edi	
	movq $48672, %reg2	

1
	movq -160(%rbp), %rax	
	movq $0, %reg2	

1
	movq $0, %r12	
	movq $0, %rbx	

1
	addl %reg0, %edi	
	movq %rbx, %reg3	

1
	testq $1, %r8	
	je .Main.main_63	

1
	movq -40(%rbp), %rsi	
	negl %esi	

1
	subl %reg0, %reg1	
	movq %rbx, %rdi	

1
	call Dictionary.new	
	movq %rax, -16(%rbp)	

1
	.quad List.cons	
	.quad Cons.car	

1
	negl %eax	
	movq $30631, %rdi	

1
	.quad 0	
	.quad Nil.new	

1
	sete %r13b	
	jne .A2I.a2i_3	

1
	sete %reg0	
	jne .Matrix.set_49	

1
	imull %reg0	
	movq %rax, %r12	

1
.Main.main_131:	
	cdq	

1
	jg .Main.funcifi_1	
	movq $1, %reg0	

1
	movq %reg0, 400(%rax)	
	movq $3000, %reg0	

1
.Bazz.new_5:	
	movq %reg0, %rax	

1
.Main.main_28:	
	movq -16(%rbp), %rax	

1
	movq %reg0, %r12	
	movq $63252, %reg0	

1
	testq $1, %reg0	
	jne .Main.main_20	

1
.Dictionary.get_2:	
	movq 0(%rax), %r13	

1
	testq $1, %rcx	
	je .Main.main_58	

1
	call getmem	
	movq $DicNode_vtable, 0(%reg0)	

1
	movq -16(%rbp), %rdi	
	negl %edi	

1
	movq %reg0, 640(%rax)	
	movq $0, %reg0	

1
.Matrix.set_4:	
	movq $3, %r8	

1
	addl %reg0, %eax	
	cmpl $0, %r13d	

1
	movq -24(%rbp), %rdx	
	movq 0(%rdx), %r12	

1
	movq $40813, %reg0	
	addl %reg1, %reg2	

1
	movq %rax, %rbx	
	movq $5880, %rax	

1
	movq %reg0, %reg1	
	movq $10, %r12	

1
	testq $1, %rcx	
	je .Main.main_63	

1
	movq %reg0, 120(%rax)	
	movq %reg0, %rax	

1
	jmp .Main.new_1	
.Main.new_2:	

1
	movq 120(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	sete %r13b	
	jne .Main.main_3	

1
	movq %rax, %rdi	
	movq -128(%rbp), %rax	

1
	jg .Main.main_6	
	movq $2, %rbx	

1
	subl %reg0, %edi	
	movq -88(%rbp), %reg3	

1
	sete %reg0	
	jne .Matrix.set_23	

1
	subl %eax, %esi	
	movq $48457, %rax	

1
	movq $50998, %rax	
	addl %eax, %reg2	

1
	call *%reg0	
	movq 336(%reg1), %rax	

1
	movq -112(%rbp), %reg1	
	addl %esi, %reg3	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_46	

1
	addl %esi, %eax	
	movq %reg2, %rcx	

1
	addl %eax, %edi	
	movq $38737, %reg2	

1
	.quad Object.type_name	
	.quad DicNode.init	

1
	call *%reg0	
	movq 656(%reg1), %reg2	

1
	idivl %ecx	
	movq -168(%rbp), %r8	

1
	movq %reg0, %reg1	
	movq $.string6, %r12	

1
	movq $40570, %reg0	
	subl %reg0d, %eax	

1
	movq -56(%rbp), %rax	
	subl %edi, %reg3	

1
	cmpq $Object_vtable, 0(%rbx)	
	je .Main.main_23	

1
.Main.main_97:	
	jmp .Main.main_166	

1
.Razz.new_13:	
	movq 16(%rbx), %rdx	

1
	subl %reg0, %reg1	
	movq %rax, -120(%rbp)	

1
	movq -168(%rbp), %reg1	
	addl %edi, %eax	

1
	cmpq $Object_vtable, 0(%reg0)	
	je .Main.main_11	

1
	call *%r12	
	movq 192(%rbx), %reg2	

1
	je .Main.main_188	
	movq $316, %reg0	

1
	addl %reg0, %edi	
	movq $30018, %reg2	

1
	movq -128(%rbp), %rdi	
	movq -56(%rbp), %rax	

1
	movq $3000, %rdi	
	movq %rdi, 120(%reg1)	

1
	movq %rdi, 640(%rax)	
	movq $3000, %rdi	

1
.string21_l:	
	.string "\\n"	

1
	jmp .DicNode.insert_2	
.DicNode.insert_1:	

1
	setle %reg0l	
	jg .Main.main_9	

1
	imull %reg0d	
	movq $27940, %reg0	

1
	movq %rax, 24(%reg1)	
	call Bar.new	

1
	testq $1, %r10	
	je .Main.main_150	

1
	setle %reg0l	
	jg .Main.main_46	

1
	call *%reg0	
	movq 680(%reg1), %rax	

1
	movq %reg0, %r14	
	movq %reg2, %rdi	

1
	movq %rdi, %reg1	
	movq $10, %rax	

1
	movq %reg0, %r8	
	movq $18429, %reg2	

1
	je .Main.main_13	
	movq $8, %reg0	

1
	movq %reg0, -56(%rbp)	
	movq $6, %reg0	

1
	movq %r8, %reg1	
	movq %r14, %r8	

1
	movq %rdi, 608(%rax)	
	movq $0, %rdi	

1
	movq -72(%rbp), %reg1	
	movq %reg2, %r8	

1
	call List.new	
	popq %reg0	

1
	setle %al	
	jmp .Main.main_148	

1
	movq %reg0, %reg1	
	movq 0(%reg2), %r13	

1
	movq %rax, %reg1	
	movq $5880, %rax	

1
	addl %eax, %reg1	
	movq -48(%rbp), %reg3	

1
	movq %rdi, %rax	
.Main.fib_2:	

1
.Main.main_40:	
	movq $51925, %reg0	

1
	je .Complex.equal_1	
	movq $62, %rsi	

1
	movq %rdi, 672(%reg1)	
	movq $3000, %rdi	

1
	movq 8(%rdi), %rdi	
	addl %eax, %edi	

1
	imull %reg0	
	movq -64(%rbp), %reg2	

1
	movq $.string6, %r14	
	movq 0(%reg1), %rax	

1
	movq %rdi, 664(%reg1)	
	movq $3000, %rdi	

1
	je .Main.main_18	
	movq $10, %rsi	

1
	negl %eax	
	movq %rax, 8(%rdi)	

1
	movq $6, %reg0	
	movq $.string1_l, %reg1	

1
	addl %eax, %reg1	
	movq $53587, %rax	

1
	call IO.new	
	movq %rax, %reg1	

1
	movq -152(%rbp), %rcx	
	imull %reg2	

1
.Matrix.set_59:	
.Matrix.set_57:	

1
.Main.main_7:	
	popq %reg0	

1
	movq %reg0, %rax	
	movq 48(%reg2), %reg3	

1
.Main.funcifi_1:	
	movq $0, %reg0	

1
	movq 8(%reg0), %reg1	
	movq 0(%reg1), %rbx	

1
.Main.main_73:	
	movq 0(%rbx), %rax	

1
	movq %rax, %r12	
	call Bar.new	

1
	movq %rsi, %reg1	
	movq %reg1, 72(%reg2)	

1
	je .Main.main_3	
	movq $5, %reg0	

1
	movq %r15, %rdi	
	addl %reg2, %reg3	

1
	movq %reg0, 144(%reg1)	
	movq $3000, %reg0	

1
.Main.main_12:	
	call IO.new	

1
	movq %reg0, 64(%reg1)	
	movq $3000, %reg0	

1
	movq 16(%rbx), %rdi	
	cmpl %edi, %eax	

1
	movq -56(%rbp), %rsi	
	addl %esi, %eax	

1
	movq %rax, 8(%rbx)	
	movq 0(%rbx), %rax	

1
	movq %reg0, 168(%reg1)	
	movq %reg0, %reg1	

1
	movq 120(%r12), %r12	
	movq 16(%reg1), %rdi	

1
	je .Main.main_3	
	movq $0, %r12	

1
	je .Main.main_69	
	movq $19, %reg0	

1
	movq -16(%rbp), %rdx	
	movq %rdx, %reg2	

1
	movq %r14, %rcx	
	subl %reg2, %eax	

1
	movq 120(%reg0), %reg0	
	movq 16(%reg1), %rdi	

1
	movq %rdi, 392(%rax)	
	movq $3000, %rdi	

1
	testq $1, %rax	
	je .Main.new_9	

1
.Main.main_6:	
	movq 0(%rax), %r13	

1
	movq -120(%rbp), %reg1	
	cmpl %reg2, %reg3	

1
CellularAutomaton.cell_left_neighbor:	
	pushq %rbp	

1
	call *%r12	
	movq 144(%rbx), %r12	

1
	movq $201, %reg0	
	movq $.string5_l, %reg1	

1
	movq 0(%r14), %r15	
	movq 56(%r15), %r15	

1
	movq -104(%rbp), %reg1	
	movq %reg2, %rsi	

1
	movq -136(%rbp), %reg1	
	imull %ecx	

1
	movq %reg0, 568(%rax)	
	movq $0, %reg0	

1
.Main.main_41:	
	movq 0(%reg0), %reg1	

1
	movq %rdi, %rax	
	movq -136(%rbp), %rdi	

1
	imull %esi	
	movq %r13, %reg2	

1
	movq -168(%rbp), %reg1	
	call *%reg2	

1
	movq %rdi, %rax	
	jmp .Matrix.set_63	

1
	call *%r13	
	movq 8(%reg1), %r13	

1
	movq -88(%rbp), %reg1	
	addl %eax, %edi	

1
.Main.main_28:	
	movq -16(%rbp), %reg1	

1
	testq $1, %rcx	
	je .Main.main_179	

1
.Main.main_51:	
	movq $34313, %reg0	

1
	movq 72(%rbx), %rax	
	testq $1, %rax	

1
	movq 112(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	movq %reg0, 624(%rax)	
	movq $3000, %reg0	

1
	movq %reg0, %rax	
	jmp .Matrix.set_61	

1
	jne .Matrix.get_19	
	movq 64(%reg0), %reg0	

1
	movq $60238, %reg0	
	movq $0, %reg1	

1
	jne .Matrix.set_54	
	movq %reg0, 168(%reg1)	

1
	movq $.string11, %rax	
	movq 0(%reg1), %r12	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_33	

1
	movq $6195, %reg0	
	imull %esi	

1
	setl %dil	
	jge .Main.funcwhilei_2	

1
	idivl %reg0d	
	movq $25834, %reg0	

1
	movq $9508, %rax	
	movq $60323, %reg1	

1
	subl %reg0, %reg1	
	movq -56(%rbp), %rax	

1
.Razz.new_16:	
	movq %rbx, %reg1	

1
	movq $21018, %reg0	
	movq -8(%rbp), %rdx	

1
	movq %reg0, %rax	
	movq %r15, %rsi	

1
	movq %reg0, %rbp	
	movq $208, %reg2	

1
	movq $22, %rax	
	popq %reg1	

1
	.globl ListNode.get	
	.type ListNode.get, @function	

1
.Main.main_99:	
	cdq	

1
	je .Main.main_114	
	movq $67, %reg0	

1
	subl %reg0, %reg1d	
	movq $35037, %r13	

1
	idivl %reg0	
.Matrix.get_24:	

1
	movq %reg0, 536(%rax)	
	movq $0, %reg0	

1
	testq $1, %reg0	
	je .List.insert_1	

1
	movq $3000, %reg0	
	movq %reg0, 280(%rax)	

1
	negl %eax	
	movq $58419, %reg1	

1
	movq -56(%rbp), %rax	
	movq -176(%rbp), %reg3	

1
	movq $16210, %reg0	
	movq $23599, %reg1	

1
.Main.main_83:	
	cdq	

1
	sete %r8b	
	jne .Matrix.set_32	

1
	movq 368(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
.Razz.new_13:	
	movq 16(%reg0), %reg1	

1
	movq %rdi, %rax	
	movq %rax, -112(%rbp)	

1
	movq 16(%reg0), %rax	
	subl %edi, %eax	

1
	movq 224(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	sete %cl	
	jne .A2I.i2c_5	

1
	idivl %reg0	
.Matrix.set_50:	

1
	movq -80(%rbp), %rax	
	subl %ecx, %reg3	

1
	subl %edi, %reg1	
	movq %rax, -40(%rbp)	

1
	movq $26083, %rax	
	movq $56556, %r10	

1
	movq %reg0, %rbx	
	movq $.string8, %r13	

1
	movq -152(%rbp), %reg1	
	movq -160(%rbp), %rdi	

1
	movq %rdi, 592(%rax)	
	movq $0, %rdi	

1
	.string "l"	
.string7:	

1
	movq %rdi, 152(%reg1)	
	movq $3000, %rdi	

1
	movq %rdi, -8(%rbp)	
	movq %rsi, -16(%rbp)	

1
.Main.main_21:	
	movq %reg0, %rax	

1
	call *%r12	
	movq 488(%rbx), %reg2	

1
	movq %reg0, 24(%reg1)	
	movq $7, %reg2	

1
	movq $10, %rax	
	cmpl $0, %ebx	

1
	idivl %reg0d	
	movq $33161, %r8	

1
	movq -56(%rbp), %reg1	
	cmpl %esi, %reg3	

1
	movq %rdi, %rbx	
	movq $.string19, %r12	

1
	addl %eax, %ebx	
	movq %rbx, %reg3	

1
	je .Main.main_15	
	movq %reg0, %rax	

1
	movq %rsi, %reg1	
	movq -152(%rbp), %rsi	

1
Bar.func2:	
	pushq %reg0	

1
	movq $107, %rsi	
	movq $.string4_l, %rdi	

1
	movq 32(%rbx), %reg1	
	pushq %rax	

1
	jge .Main.main_98	
	movq -128(%rbp), %rax	

1
.Main.main_127:	
	cdq	

1
	movq %reg0, 264(%reg1)	
	movq $0, %reg0	

1
	jne .Matrix.get_21	
	movq 72(%reg0), %reg0	

1
	call Bar.new	
	movq %rax, %r12	

1
	movq %rdi, 680(%rax)	
	movq $3000, %rdi	

1
	movq %rsp, %reg1	
	movq 16(%rdi), %rax	

1
	movq -184(%rbp), %reg1	
	movq -136(%rbp), %rsi	

1
.Main.main_14:	
	movq $2, %rax	

1
	sete %reg0l	
	jne .Complex.print_1	

1
	movq $46032, %rdi	
	movq %rdi, %rsi	

1
	movq 296(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	movq $0, %rdi	
	movq %rdi, 536(%reg1)	

1
	movq $20470, %rcx	
	negl %reg1	

1
	movq -160(%rbp), %rax	
	subl %eax, %edi	

1
	subl %reg0, %reg1	
	movq -32(%rbp), %reg3	

1
	je .Main.main_3	
	movq $8, %reg0	

1
	sete %reg0	
	jne .CellularAutomaton.cell_at_next_evolution_5	

1
	movq %reg0, 632(%rax)	
	movq $3000, %reg0	

1
.Main.main_72:	
	movq 0(%rbx), %rax	

1
	sete %dil	
	jne .Main.main_152	

1
.Main.main_48:	
.Main.main_45:	

1
	testq $1, %rax	
	je .List.insert_4	

1
	movq %r15, %reg1	
	movq %rax, %reg3	

1
	movq -16(%rbp), %reg1	
	cmpl %esi, %eax	

1
	idivl %reg0	
	movq -104(%rbp), %reg2	

1
	movq %rdi, %rax	
	movq $0, %rcx	

1
	subl %r10d, %reg1	
	movq %reg2, %r10	

1
	movq -152(%rbp), %rax	
	imull %esi	

1
	movq $38801, %rax	
	negl %reg1	

1
	addl %reg0, %reg1	
	movq $37073, %reg2	

1
	movq -112(%rbp), %reg1	
	movq $0, %r9	

1
	je .Main.main_60	
	movq $49, %reg0	

1
	movq %reg0, %reg1	
	movq -48(%rbp), %reg1	

1
.ListNode.push_1:	
	movq 8(%rbx), %reg1	

1
	call *%reg0	
	movq $14352, %rdi	

1
.Matrix.get_2:	
	movq $2, %rcx	

1
	movq -144(%rbp), %rax	
	movq -160(%rbp), %rdi	

1
	movq %rcx, %r12	
	movq $1, %reg2	

1
	movq 0(%rdx), %r12	
	movq 112(%r12), %r12	

1
	movq 16(%reg0), %rax	
	cmpl $0, %reg2	

1
	call *%reg0	
	movq 216(%rbx), %r12	

1
DicNode.get:	
	pushq %reg0	

1
	movq $0, %reg0	
	movq %reg0, 296(%rax)	

1
	movq $3, %reg0	
	movq 0(%reg1), %reg1	

1
	movq %rdi, %reg1	
	movq -160(%rbp), %rax	

1
	movq %reg0, %rax	
	movq -128(%rbp), %rdi	

1
	movq 136(%reg0), %reg0	
	movq 16(%rax), %reg2	

1
.Main.main_160:	
.Main.main_130:	

1
	ret	
	.size List.rcons, .-List.rcons	

1
	movq -40(%rbp), %reg1	
.Main.main_43:	

1
.Matrix.get_28:	
	movq $2, %reg0	

1
	movq %rbx, %rax	
	movq -64(%rbp), %reg3	

1
	movq 16(%rax), %reg1	
	movq %reg2, %rsi	

1
	movq $10809, %rax	
	subl %eax, %reg2d	

1
	imull %reg0	
	movq -32(%rbp), %rsi	

1
	movq -88(%rbp), %reg1	
	addl %reg2, %edi	

1
	movq $47308, %reg0	
	negl %esi	

1
	movq %r14, 8(%rbx)	
	movq %rbx, %rax	

1
	.globl Complex.reflect_0	
	.type Complex.reflect_0, @function	

1
	movq %reg0, 344(%rax)	
	movq $3000, %reg0	

1
	movq $125, %rsi	
	movq $.string3_l, %reg1	

1
	call *%rbx	
	movq $.string11, %rax	

1
	movq $1, %reg0	
	movq 8(%reg1), %reg1	

1
	movq $24092, %reg0	
	movq 0(%reg1), %reg2	

1
.Main.main_24:	
.Main.main_22:	

1
	movq %rdi, %reg1	
	jmp .Main.main_18	

1
	jmp .Razz.new_11	
.Razz.new_10:	

1
	jne .A2I.c2i_5	
	movq $2, %reg0	

1
	movq $15505, %rax	
	addl %reg1, %reg2	

1
	call String.length	
	movq %rax, %r13	

1
.Main.main_154:	
	movq %reg0, %rdi	

1
	jmp .Razz.new_6	
.Razz.new_4:	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_46	

1
	subl %edi, %eax	
	movq -88(%rbp), %rdi	

1
	movq %r15, %rsi	
	call String.cmp	

1
	movq -56(%rbp), %rsi	
	movq -48(%rbp), %reg3	

1
	call out_error	
.Dictionary.get_2:	

1
	movq %r12, 8(%rax)	
	movq $2, %rax	

1
	idivl %reg0d	
	movq %rax, %r13	

1
	movq $39523, %reg0	
	imull %reg1	

1
Nil.rcons:	
	pushq %rbp	

1
	movq $0, %reg0	
	movq %reg0, 560(%reg1)	

1
	testq $1, %reg0	
	je .Main.main_165	

1
.Matrix.get_58:	
	movq $4, %rcx	

1
	movq $.string7, %r13	
	movq %r13, %rdi	

1
	je .Main.main_8	
	movq $13, %reg0	

1
	.string "Bazz"	
.string3:	

1
	idivl %edi	
	movq %reg1, -104(%rbp)	

1
	.type Matrix.elMul, @function	
Matrix.elMul:	

1
	idivl %r9d	
	subl %reg1, %reg2d	

1
	movq -168(%rbp), %reg1	
	movq %rcx, %reg3	

1
.A2I.i2a_2:	
	popq %reg0	

1
	movq %reg0, %reg1	
	jmp .Main.main_50	

1
	movq 648(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	testq $1, %reg0	
	je .Main.main_83	

1
	movq -32(%rbp), %rax	
	movq %rcx, %r8	

1
	movq %rdi, 408(%reg1)	
	movq $0, %rdi	

1
	movq 88(%rbx), %rbx	
	movq %r12, %reg2	

1
	subl %reg0, %reg1	
	movq %rbx, %rax	

1
	movq %rsi, %rbx	
	movq $0, %reg2	

1
	movq $32079, %reg0	
	movq $0, %reg1	

1
	movq %rdi, %reg1	
	movq 24(%reg1), %rax	

1
	addl %reg0, %reg1	
	movq $47041, %reg2	

1
.Main.main_130:	
	cdq	

1
	subq $168, %rsp	
	pushq %rbx	

1
	call *%rax	
	movq 616(%reg1), %rax	

1
	call *%reg0	
	movq %rax, 24(%reg2)	

1
	je .Main.main_80	
	movq $19, %rsi	

1
	movq %rbx, %reg1	
	movq -152(%rbp), %rdi	

1
	movq %rdi, 552(%rax)	
	movq $0, %rdi	

1
	subl %eax, %r8d	
	movq $12, %r9	

1
	idivl %reg0	
	movq -184(%rbp), %rcx	

1
.Main.main_47:	
	movq -120(%rbp), %reg1	

1
	movq %r13, %reg1	
	addl %reg2, %ecx	

1
.Main.main_13:	
	movq $.string8, %r13	

1
	addl %reg0d, %eax	
	addl %eax, %ebx	

1
	movq %reg0, %r13	
	jmp .Matrix.mul_1	

1
.Foo.new_10:	
	movq %rbx, %rax	

1
	movq %reg0, %reg1	
	movq $208, %rdi	

1
	movq $47127, %rsi	
	imull %esi	

1
DicNode.new:	
	pushq %rbp	

1
	jne .Matrix.get_56	
	movq 176(%rax), %rax	

1
	jne .Main.main_23	
	movq -168(%rbp), %reg1	

1
	movq %rax, -32(%rbp)	
	movq $2, %rax	

1
	.quad .string6_l	
	.quad 33	

1
	.quad Nil.new	
	.quad Object.abort	

1
	movq %rdi, 320(%reg1)	
	movq $0, %rdi	

1
	movq %r12, 8(%rax)	
	movq %rax, 72(%rbx)	

1
	movq $9508, %reg0	
	movq $60323, %reg1	

1
	movq %rdi, 536(%rax)	
	movq $0, %rdi	

1
	movq $5660, %r8	
	subl %r8d, %eax	

1
	je .Main.main_1	
	movq $0, %rbx	

1
	call *%r12	
	movq $.string17, %rbx	

1
.Main.main_25:	
	movq $17107, %reg0	

1
	.size Main.print_list, .-Main.print_list	
	.globl Main.main	

1
	call *%r12	
	movq 16(%reg1), %reg2	

1
	addl %eax, %reg1	
	movq %r12, %reg3	

1
	movq %r12, %rax	
	movq 8(%rbx), %r13	

1
	movq %rdi, %rax	
	jmp .Main.main_135	

1
	movq 280(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	setl %r12b	
	jge .Main.main_11	

1
	movq $7, %r12	
	call Int.new	

1
	movq $53085, %rsi	
	imull %esi	

1
	jge .Main.main_61	
	movq -56(%rbp), %reg1	

1
	movq %r12, %reg1	
	call String.cmp	

1
	movq $2234, %reg0	
	movq 0(%rbx), %reg2	

1
	cmpq $Bar_vtable, 0(%reg0)	
	je .Bazz.new_5	

1
	movq %r12, %reg1	
	imull %reg2d	

1
	testq $1, %reg0	
	je .Main.main_113	

1
	movq 376(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
.A2I.c2i_17:	
	movq $.string16, %rdi	

1
	jge .Main.main_61	
	movq -56(%rbp), %rax	

1
	je .Main.main_26	
	movq $13, %reg0	

1
	movq %reg0, %rax	
	jmp .Main.main_114	

1
	movq -16(%rbp), %reg1	
	subl %esi, %eax	

1
	call *%r13	
	jmp .Main.main_12	

1
	je .Main.main_67	
	movq $49, %rsi	

1
	movq %rsi, %rax	
	movq $5, %rdi	

1
	movq -16(%rbp), %reg1	
	subl %esi, %reg3	

1
	movq -72(%rbp), %rax	
	movq -48(%rbp), %reg3	

1
	.quad Nil.sort	
	.quad Nil.insert	

1
	movq %rsi, %rax	
	movq %r12, %rsi	

1
	negl %reg0	
	movq -152(%rbp), %rcx	

1
	je .List.cons_1	
	movq $32, %rsi	

1
	movq $16693, %reg0	
	movq $2211, %rsi	

1
	movq %reg0, %reg1	
	call Dictionary.new	

1
	call *%r12	
	movq 32(%rbx), %r12	

1
	movq %rdi, %rax	
.Main.main_158:	

1
	movq %rsi, %reg1	
	negl %reg2	

1
	.size _main, .-_main	
	.globl CellularAutomaton.init	

1
	call String.length	
	movq %rax, %r14	

1
	movq %reg0, 56(%reg1)	
	movq $3000, %reg0	

1
	movq $60575, %reg0	
	negl %reg1	

1
	movq $0, %reg0	
	movq %rbx, %rdi	

1
	je .Main.main_138	
	movq $103, %rsi	

1
	cmpq $Int_vtable, 0(%reg0)	
	je .Main.main_16	

1
	je .Bar.new_12	
	movq $10, %rsi	

1
	movq -176(%rbp), %rdi	
	subl %edi, %eax	

1
	addl %reg0, %eax	
	movq -80(%rbp), %rsi	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_16	

1
	movq 320(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	idivl %reg0	
	movq $13076, %reg1	

1
	movq %rax, -32(%rbp)	
	movq $0, -24(%rbp)	

1
	negl %ecx	
	movq -136(%rbp), %reg2	

1
	cmpq $Object_vtable, 0(%rax)	
	je .Main.main_11	

1
	subl %reg0, %reg1	
	movq -24(%rbp), %rax	

1
	movq $0, %rsi	
	movq %rdi, %rax	

1
	jg .Main.main_19	
	movq $.string7, %rax	

1
	movq -168(%rbp), %reg1	
	movq %reg1, %reg2	

1
	call *%rax	
	movq $61456, %rdi	

1
	movq $12, %rsi	
	movq -16(%rbp), %reg2	

1
	movq %r12, %reg1	
	movq 8(%rbx), %rdi	

1
.Main.print_list_4:	
	movq 0(%reg0), %rax	

1
	movq %rax, %reg1	
	jmp .Matrix.mul_3	

1
	je .Main.main_29	
	movq $10, %rsi	

1
	call *%reg0	
	movq $3966, %rdi	

1
	je .Main.main_58	
	movq $49, %reg0	

1
	movq %rdi, %rbx	
	movq 0(%rax), %r12	

1
	addl %reg0, %eax	
	movq %reg2, 40(%rbx)	

1
	movq 376(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq %reg0, 448(%rax)	
	movq $3000, %reg0	

1
	movq -64(%rbp), %rax	
	movq %reg2, %r9	

1
	call *%reg0	
	movq 672(%reg1), %rax	

1
	movq %rdi, 368(%reg1)	
	movq $3000, %rdi	

1
	movq %r12, %rax	
	movq 8(%rbx), %rdi	

1
	movq $3000, %reg0	
	movq %reg0, 368(%reg1)	

1
	movq %reg0, 64(%rbx)	
	movq 0(%rbx), %reg0	

1
	movq $0, %r12	
	movq $0, %reg1	

1
	movq $3000, %rdi	
	movq %rdi, 408(%rax)	

1
	movq $100, %reg0	
	movq %r12, %rax	

1
	.text 	
	.globl Dictionary.new	

1
	call *%rax	
	movq 8(%rbx), %rax	

1
	movq %rdi, 688(%rax)	
	movq $3000, %rdi	

1
	call Foo.new	
	jmp .Razz.new_6	

1
	movq %rax, -40(%rbp)	
	movq $5, %rax	

1
	movq -40(%rbp), %rax	
	movq %reg2, %r8	

1
	call String.substr	
	popq %reg0	

1
	je .List.cons_1	
	movq $50, %rsi	

1
	call out_error	
.Razz.new_20:	

1
	call getmem	
	movq $Matrix_vtable, 0(%rax)	

1
	je .Main.main_96	
	movq %reg0, %reg1	

1
	addl %eax, %reg1	
	movq -112(%rbp), %rax	

1
	jmp .Bar.new_6	
.Bar.new_3:	

1
	sete %reg0b	
	jne .Matrix.set_60	

1
	movq $0, %r14	
	movq %r12, %rdi	

1
	je .Main.main_13	
	movq $156, %rsi	

1
.Cons.sort_2:	
	movq 0(%rax), %r12	

1
	movq $0, %reg0	
	movq %reg0, 64(%rbx)	

1
	movq $48557, %rax	
	negl %reg1	

1
	movq -56(%rbp), %rax	
	addl %eax, %reg3	

1
	movq $38220, -32(%rbp)	
	movq $48887, %reg1	

1
	movq -152(%rbp), %r8	
	negl %r8d	

1
.Main.main_1:	
	movq %reg0, %r8	

1
	movq -144(%rbp), %reg1	
	movq %rdi, %rax	

1
	je .Main.main_53	
	cmpl $0, %r13d	

1
.Bar.new_19:	
	movq 16(%reg0), %rdx	

1
	movq $3, %r13	
	movq $name_Bool, %rax	

1
	movq 680(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
.Main.main_35:	
	call Int.new	

1
	movq $0, %rdi	
	movq %rdi, 208(%reg1)	

1
	negl %reg0	
	movq $12, %r10	

1
	movq -176(%rbp), %reg1	
	movq %reg2, %rsi	

1
	call *%reg0	
	movq 672(%rbx), %reg2	

1
	movq %rdi, %rax	
	jmp .Main.main_44	

1
	addl %esi, %reg1	
	movq -56(%rbp), %rsi	

1
	movq %rax, -104(%rbp)	
	movq $16, %rax	

1
	movq %r12, 8(%reg1)	
	movq %reg1, 32(%rbx)	

1
	.quad CellularAutomaton.new	
	.quad Object.abort	

1
	movq -104(%rbp), %reg1	
	movq -56(%rbp), %reg3	

1
	subl %reg0, %ebx	
	movq $47353, %rax	

1
	movq $Yaz_vtable, 0(%rax)	
	leave	

1
.Main.main_17:	
	movq 0(%rax), %r13	

1
	movq 72(%reg0), %reg0	
	movq %r14, %reg2	

1
	.type A2I.i2a, @function	
A2I.i2a:	

1
	testq $1, %reg0	
	je .Matrix.get_38	

1
	jge .Main.main_80	
	movq %reg0, %reg1	

1
	movq $57963, %reg0	
	subl %edi, %reg2	

1
	movq $14352, %reg0	
	cmpl %reg1, %eax	

1
	movq 232(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq -144(%rbp), %rax	
	subl %eax, %reg3	

1
Cons.head:	
	pushq %rbp	

1
	movq $7258, %reg0	
	negl %reg1	

1
	idivl %esi	
	movq -72(%rbp), %reg2	

1
	movq %reg0, 256(%rax)	
	movq $0, %reg0	

1
	movq %reg0, %rsi	
	movq %reg0, %rax	

1
	movq %reg0, %rax	
	addl %reg2, %reg3d	

1
	je .Main.main_158	
	movq $127, %reg0	

1
	movq -128(%rbp), %reg1	
	addl %eax, %reg3	

1
	je .Main.main_30	
	movq $175, %rsi	

1
	setle %reg0	
	jg .Main.main_25	

1
.string2_l:	
	.string "DicNode"	

1
	call *%reg0	
	movq 392(%rbx), %r12	

1
	subq $176, %reg0	
	pushq %rbx	

1
	movq %reg0, %rdi	
	movq $41765, %reg0	

1
	movq $.string7, %reg0	
	movq $0, %rax	

1
	movq 472(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq 432(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq $3000, %rdi	
	movq %rdi, 72(%rax)	

1
	movq $11, %reg0	
	movq $0, %r9	

1
	movq 0(%r13), %r14	
	movq 48(%r14), %r14	

1
	call *%reg0	
	cmpl $0, -32(%rbp)	

1
	movq %rax, %r12	
	movq $10, %rsi	

1
	movq $0, %rax	
	popq %r15	

1
	movq %rdi, %reg1	
	movq 8(%reg1), %rdx	

1
	movq -24(%rbp), %rax	
	negl %reg2	

1
.Matrix.set_24:	
.Matrix.set_22:	

1
.Main.main_21:	
	cmpq $Foo_vtable, 0(%rbx)	

1
	call Object.type_name	
	movq 0(%reg0), %r13	

1
	call Razz.new	
	jmp .Razz.new_6	

1
	movq $57869, %reg0	
	movq $49695, %rdi	

1
	movq 8(%rax), %reg1	
	cmpl $0, %reg2	

1
	movq %rdi, 240(%rax)	
	movq $0, %rdi	

1
.Main.main_3:	
	movq 8(%rax), %rax	

1
	movq $0, %reg0	
	movq %reg0, 472(%reg1)	

1
	je .Main.main_136	
	movq %reg0, %rdi	

1
	je .Main.main_4	
	movq $14, %reg0	

1
	movq -136(%rbp), %rcx	
	subl %reg2, %reg3	

1
	.type Cons.car, @function	
Cons.car:	

1
	sete %reg0	
	jne .A2I.i2c_15	

1
	je .Main.main_5	
	movq -168(%rbp), %reg1	

1
	movq 8(%reg0), %r13	
	movq 0(%rbx), %reg3	

1
	movq %reg0, %rcx	
	call *%rax	

1
	testq $1, %rcx	
	je .Main.main_31	

1
	je .Main.main_96	
	movq -64(%rbp), %rax	

1
.Main.main_30:	
	movq $60750, %r12	

1
	call *%reg0	
	movq 552(%rbx), %reg0	

1
	movq $128, %reg0	
	movq $.string5_l, %reg1	

1
	subl %reg0, %edi	
	movq $34422, %rax	

1
	movq -112(%rbp), %rax	
	movq -48(%rbp), %reg3	

1
.Main.main_132:	
	cdq	

1
	movq -24(%rbp), %reg1	
	movq -128(%rbp), %rcx	

1
.Main.main_1:	
	movq $1, %r12	

1
	movq %rdi, -8(%rbp)	
	movq $34533, %rax	

1
	movq -48(%rbp), %rsi	
	call *%rax	

1
.A2I.c2i_11:	
	movq $.string13, %rdi	

1
	testq $1, %rax	
	je .Main.main_45	

1
	call *%reg0	
	movq -88(%rbp), %reg0	

1
	je .Main.main_4	
	movq $1, %rax	

1
	negl %eax	
	movq $7493, %reg1	

1
	movq -120(%rbp), %rax	
	imull %edi	

1
	movq $3000, %reg0	
	movq %reg0, 352(%reg1)	

1
	movq %reg0, %r11	
	subl %r11d, %eax	

1
	movq %rdi, %reg1	
	jmp .Main.main_54	

1
	movq $50347, %rax	
	movq %rax, %rcx	

1
	movq $12855, %rdi	
	addl %edi, %reg2	

1
	jmp .Matrix.get_20	
.Matrix.get_19:	

1
	imull %ebx	
	movq $27696, %reg1	

1
	je .Main.main_66	
	movq $17, %rsi	

1
	addl %edi, %reg1	
	movq %reg2, 16(%reg3)	

1
	call *%reg0	
	movq $12, %reg0	

1
	movq 312(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	idivl %reg0	
	movq $13076, %rdi	

1
	movq %r8, %rax	
	movq -120(%rbp), %r8	

1
	movq $2, %reg0	
	movq 8(%rax), %rsi	

1
.CellularAutomaton.evolve_1:	
	movq %r13, %reg1	

1
	movq 48(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq 216(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
.Matrix.set_55:	
	jmp .Matrix.set_65	

1
	movq $3000, %rdi	
	movq %rdi, 368(%rax)	

1
	movq $3000, %reg0	
	movq %reg0, 512(%rax)	

1
.Main.main_152:	
	movq %reg0, %rax	

1
	movq 8(%rax), %reg1	
	movq 0(%reg1), %r12	

1
	call getmem	
	movq $Complex_vtable, 0(%reg0)	

1
.Foo.new_5:	
	movq %reg0, %reg1	

1
	negl %reg0	
	movq -80(%rbp), %rax	

1
	addl %eax, %edi	
	movq $18119, %rax	

1
	movq $21060, %reg0	
	movq $19990, %rdi	

1
	call *%reg0	
	movq 616(%reg1), %reg0	

1
	jg .Main.main_13	
	movq $.string7, %rax	

1
	movq %rsi, -16(%rbp)	
	movq %rdx, %reg3	

1
	movq $3000, %reg0	
	movq %reg0, 576(%reg1)	

1
	movq $21521, %r9	
	imull %r9d	

1
	call *%reg0	
	movq 312(%rbx), %reg2	

1
	movq $0, %rax	
.Complex.equal_5:	

1
	movq %reg0, %reg1	
	popq %r14	

1
	movq $23071, %rsi	
	movq %rsi, %rcx	

1
	movq $10152, %reg0	
	movq $18046, %reg1	

1
.Main.main_43:	
	movq %reg0, %reg1	

1
	movq 640(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	testq $1, %r8	
	je .Main.main_175	

1
	jmp .Matrix.set_57	
.Matrix.set_56:	

1
	movq $51824, %reg0	
	negl %reg0d	

1
	.string "\\n"	
.string21:	

1
	testq $1, %r8	
	je .Main.main_20	

1
	movq -32(%rbp), %reg1	
	cmpl %esi, %eax	

1
	movq %reg0, 632(%rax)	
	movq $0, %reg0	

1
	movq %reg0, %reg1	
	jmp .DicNode.insert_2	

1
	je .Razz.new_1	
	movq $39, %reg0	

1
	movq $3000, %reg0	
	movq %reg0, 248(%reg1)	

1
	idivl %r8d	
	movq -104(%rbp), %rcx	

1
.ListNode.insert_3:	
	popq %r13	

1
	movq %rdi, 360(%reg1)	
	movq $0, %rdi	

1
	je .Main.main_4	
	movq 0(%reg0), %reg1	

1
	movq %reg0, %reg1	
	jmp .Main.main_122	

1
	call *%rax	
	movq 8(%r12), %rax	

1
	movq %reg0, 8(%rax)	
	jmp .Main.main_65	

1
	sete %cl	
	jne .Matrix.get_19	

1
.A2I.i2c_20:	
.A2I.i2c_18:	

1
	movq $18391, %rdi	
	negl %reg1	

1
	movq %reg0, %rbx	
	movq $.string6, %r12	

1
	testq $1, %rcx	
	je .Main.main_87	

1
	ret	
	.size Bar.setX, .-Bar.setX	

1
	movq 584(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	call *%reg0	
.Complex.print_2:	

1
	call Razz.new	
	movq %reg0, 24(%reg1)	

1
	movq $197, %rsi	
	movq $.string5_l, %rdi	

1
	movq %reg0, %reg1	
	movq $55273, %r11	

1
	movq %r12, %reg1	
	subl %esi, %reg3	

1
	subl %reg0, %eax	
	movq $4, %reg2	

1
	movq 536(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	je .Bar.getX_1	
	movq $14, %rsi	

1
.Main.main_7:	
	movq %reg0, %rsi	

1
	subl %eax, %edi	
	movq -56(%rbp), %rax	

1
	idivl %reg0	
	movq $60858, %rsi	

1
	movq 48(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq $.string9, %reg0	
	movq %reg1, %r12	

1
	jmp .Matrix.set_35	
.Matrix.set_34:	

1
	movq %rax, %r12	
	movq $2, %rax	

1
	call *%r12	
	movq 480(%rbx), %rax	

1
	cmpq $Bool_vtable, 0(%reg0)	
	je .Main.new_3	

1
	call *%reg0	
	movq $48557, %reg1	

1
	movq -8(%rbp), %reg1	
	popq %reg2	

1
	call *%rbx	
	movq $21018, %reg1	

1
	movq 720(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	.quad List.getHead	
	.quad List.insert	

1
	movq 208(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	.quad 6	
name_Bool_l:	

1
	.size Foo.getS, .-Foo.getS	
	.globl Foo.setS	

1
	movq 96(%r12), %r12	
	movq %reg1, %reg2	

1
	je .Main.main_9	
	movq $8, %reg0	

1
.Matrix.set_37:	
.Matrix.set_35:	

1
.string20:	
	.quad String_vtable	

1
	movq %reg0, %r12	
	movq $13, %reg2	

1
	testq $1, %rsi	
	je .Main.main_29	

1
	imull %ebx	
	movq $14356, %rbx	

1
	movq %rdi, 456(%reg1)	
	movq $3000, %rdi	

1
	movq 136(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	je .Main.main_50	
	movq $34, %rsi	

1
	movq %rdi, 528(%rax)	
	movq $0, %rdi	

1
	movq -184(%rbp), %reg1	
	subl %eax, %esi	

1
	movq $0, %rax	
	movq %reg1, %r13	

1
	movq $.string15, %rax	
	movq 0(%reg1), %r12	

1
	movq $name_Bool, %rax	
	movq %rax, %reg1	

1
.string9_l:	
	.string "H"	

1
.Main.main_7:	
	movq $17155, %rdi	

1
	movq -120(%rbp), %rax	
	movq %reg2, %rdi	

1
	ret	
	.size Cons.rcons, .-Cons.rcons	

1
	call String.length	
	movq 0(%rbx), %r13	

1
	movq 344(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	movq %rdi, 48(%rbx)	
	cmpl %edi, %reg3	

1
	movq %r12, %reg1	
	movq 8(%reg2), %rdi	

1
	movq %rdi, %rax	
.Main.main_169:	

1
	movq %rax, %reg1	
	movq %rax, %reg2	

1
	movq %rdi, 48(%rbx)	
	cmpl %edi, %eax	

1
	call *%reg0	
	movq 336(%rbx), %reg2	

1
	movq %reg0, %reg1	
.Main.main_169:	

1
	jmp .Main.main_169	
.Main.main_92:	

1
.Matrix.set_28:	
	movq $2, %reg0	

1
	jg .Main.main_6	
	movq %r12, %reg1	

1
	movq 232(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	je .Main.main_15	
	cmpq $Object_vtable, 0(%rdi)	

1
	setl %reg0	
	movq $1, %rsi	

1
.Main.main_113:	
	movq %reg0, %reg1	

1
	movq 32(%reg0), %reg1	
	pushq %rax	

1
	cmpq $Bar_vtable, 0(%rbx)	
	je .Bazz.new_5	

1
	movq $0, %reg0	
	movq %reg0, 264(%reg1)	

1
	movq $3, %reg0	
	jmp .A2I.c2i_8	

1
	je .Cons.rcons_1	
	movq $87, %rsi	

1
	movq %rdi, %rax	
.Main.main_1:	

1
	jne .Main.main_25	
	movq $8937, %reg0	

1
	movq %reg0, -176(%rbp)	
	movq -8(%rbp), %reg0	

1
	movq %r12, 8(%reg1)	
	movq %reg1, %r12	

1
	jg .Main.main_51	
	movq $21060, %reg0	

1
.Main.main_57:	
	cmpl $0, %reg0d	

1
	cmpq $Foo_vtable, 0(%reg0)	
	je .Bar.new_4	

1
.string10_l:	
	.string "IO\\n"	

1
	movq %reg0, %rdi	
	movq $6821, %reg2	

1
	movq $11, %rax	
	movq %rax, -80(%rbp)	

1
	movq $23599, %rax	
	subl %reg1, %reg2	

1
	.quad List.rev	
	.quad List.sort	

1
.Matrix.set_23:	
	movq $1, %reg0	

1
	testq $1, %reg0	
	je .Cons.rev_1	

1
	movq $0, %reg0	
	movq %reg0, 640(%rax)	

1
.Main.main_12:	
	movq 0(%reg0), %r15	

1
	call *%reg0	
	movq 72(%rbx), %reg2	

1
	jg .Main.new_12	
	movq $.string8, %rax	

1
	movq 584(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	call *%reg0	
	movq 368(%reg1), %r12	

1
	je .Main.main_37	
	movq $13, %rsi	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_44	

1
.Main.main_92:	
	movq %reg0, %reg1	

1
	setl %reg0l	
	jge .Main.main_66	

1
	movq $43617, %rsi	
	imull %reg1	

1
	je .Main.main_9	
	movq $6, %reg0	

1
	movq %rsi, %r12	
	movq %rdx, %reg3	

1
	movq %rax, -32(%rbp)	
	movq $0, %reg2	

1
	movq 96(%r14), %r14	
	movq %rax, %rdi	

1
	movq -64(%rbp), %rax	
	movq %r8, %r9	

1
	call *%rax	
	movq 128(%reg1), %r12	

1
	movq $45332, %reg0	
	cmpl %eax, %edi	

1
.Main.func2_2:	
	movq %rbx, %rax	

1
	movq $12, %rsi	
	movq -40(%rbp), %rax	

1
	je .Main.main_6	
	cmpq $Object_vtable, 0(%reg0)	

1
	.globl Dictionary.getHead	
	.type Dictionary.getHead, @function	

1
	je .Main.main_162	
	movq $142, %reg0	

1
	call *%reg0	
	jmp .Main.main_52	

1
	movq %r15, %rax	
	movq %r13, %rsi	

1
	movq $25947, %reg0	
	movq $22130, %reg1	

1
	movq $127, %rsi	
	movq $.string3_l, %rdi	

1
	je .Main.main_86	
	movq -64(%rbp), %reg1	

1
	addl %eax, %reg1	
	movq -24(%rbp), %rax	

1
.A2I.i2c_2:	
	popq %reg0	

1
	movq %reg0, %rsi	
	cmpl $0, %edi	

1
	movq $.string20, %rax	
	movq 0(%rbx), %reg2	

1
	je .Main.main_149	
	movq $115, %reg0	

1
.Main.funcwhilei_1:	
	movq $5, %reg0	

1
	movq $0, %reg0	
	movq %reg0, 264(%rax)	

1
	jmp .Matrix.set_22	
.Matrix.set_21:	

1
	testq $1, %rax	
	je .ListNode.insert_1	

1
	subl %edi, %eax	
	movq -16(%rbp), %rdi	

1
	movq 32(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq 16(%rbx), %reg1	
	movq 8(%rbx), %reg2	

1
	movq -120(%rbp), %rax	
	addl %edi, %reg3	

1
	call *%reg0	
.Main.main_48:	

1
	je .Main.main_129	
	movq %r14, %reg1	

1
	testq $1, %rcx	
	je .Main.main_138	

1
	movq %rdx, -96(%rbp)	
	movq %reg2, %rdx	

1
	movq %rdi, %rbx	
	movq %r12, %r13	

1
	movq %reg0, %rsi	
	movq 8(%rbx), %reg3	

1
	movq 8(%rbx), %rdx	
	call *%reg2	

1
.Main.main_51:	
	movq $34313, %r12	

1
	jg .Main.main_42	
	movq 0(%rbx), %reg1	

1
	subl %eax, %reg1	
	movq $18310, %reg2	

1
	movq 568(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq 0(%rax), %r12	
	movq 112(%r12), %r12	

1
	movq -32(%rbp), %rax	
	imull %ecx	

1
.Main.main_14:	
	movq $30102, %rdi	

1
	movq -168(%rbp), %reg1	
	call *%rax	

1
.Main.main_51:	
	movq 0(%reg0), %rax	

1
	subl %esi, %edi	
	movq %rdi, 16(%rax)	

1
	movq %reg0, %reg1	
	movq $51233, %reg0	

1
	movq $2, %r9	
	movq %reg1, %reg2	

1
	movq %rsi, %reg1	
	movq -64(%rbp), %reg1	

1
	je .Main.main_160	
	movq $142, %rsi	

1
	movq $0, %reg0	
	movq %reg0, 728(%reg1)	

1
	negl %eax	
	movq -176(%rbp), %rdi	

1
	movq 24(%reg0), %reg1	
	movq $0, %reg2	

1
	movq 8(%reg0), %rdi	
	movq $2, %rcx	

1
	je .Main.main_150	
	movq $115, %rsi	

1
	movq %rax, %reg1	
	movq $678987, %r13	

1
	call *%r12	
	movq 608(%rbx), %r12	

1
	movq $0, %reg0	
	movq %reg0, 376(%reg1)	

1
	movq $13, %reg0	
	movq 0(%r12), %reg2	

1
	movq $63252, %rax	
	subl %reg1, %r12d	

1
	cmpq $Bar_vtable, 0(%rbx)	
	je .Razz.new_16	

1
	movq -32(%rbp), %reg1	
	subl %eax, %ecx	

1
.Matrix.set_52:	
.Matrix.set_39:	

1
	call *%rax	
	movq 280(%rbx), %r12	

1
	idivl %r13d	
	addl %reg1, %r12d	

1
	movq %rax, 8(%rbx)	
	movq 0(%rbx), %reg2	

1
	call *%rbx	
	movq -168(%rbp), %rax	

1
	movq -48(%rbp), %rax	
	movq %rcx, %reg3	

1
	call List.new	
	movq %reg0, -32(%rbp)	

1
.Main.main_6:	
	movq $2, %rdi	

1
	movq $25895, %reg0	
	cmpl %reg1, %reg2	

1
	je .Main.new_5	
	movq $5, %reg0	

1
	movq 128(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	movq $45, %reg0	
	movq $.string5_l, %rdi	

1
	movq %rdi, %reg1	
.Main.main_166:	

1
	movq $80, %rsi	
	movq $.string4_l, %reg1	

1
	imull %reg0	
	movq $52290, %reg1	

1
	jne .Matrix.set_4	
	movq %rdi, 16(%reg1)	

1
	.quad 0	
.string7_l:	

1
	negl %ecx	
	movq %reg1, %rsi	

1
	movq %reg0, %r13	
	movq $2, %rdi	

1
	je .Bar.new_20	
	movq $31, %rsi	

1
	movq $50538, %rax	
	movq $12757, %rsi	

1
	movq -32(%rbp), %reg1	
	movq %rdi, %reg3	

1
	.type List.rev, @function	
List.rev:	

1
	movq $10478, %rax	
	subl %eax, %r8d	

1
	movq $12, %rdi	
	movq $0, %rsi	

1
	negl %esi	
	movq $0, %rcx	

1
	movq $932, %r9	
	movq $0, %r10	

1
	call *%reg0	
	movq 136(%reg1), %reg0	

1
.Main.main_90:	
	movq %reg0, %reg1	

1
	movq %r13, %reg1	
	movq %rdi, %r13	

1
	movq 48(%reg0), %reg0	
	movq 8(%rbx), %rdi	

1
	movq $52033, %reg0	
	subl %reg1, %reg2	

1
.Main.main_158:	
.Main.main_150:	

1
	movq %reg0, %reg1	
	jmp .Main.main_97	

1
	testq $1, %rcx	
	je .Main.main_140	

1
	pushq %rbx	
	movq $40, %rdi	

1
	call *%rax	
	movq %reg1, %r15	

1
	movq -8(%rbp), %rdi	
	movq -48(%rbp), %rsi	

1
List_vtable:	
	.quad .string3	

1
	.size ListNode.new, .-ListNode.new	
	.globl Main.new	

1
	movq %reg0, %reg1	
	movq $45332, %reg0	

1
	movq 136(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
.Main.func_1:	
	movq %rax, %reg1	

1
	movq %rdi, %reg1	
	jmp .Main.main_28	

1
	call *%r13	
	movq %reg1, %rax	

1
	call *%rax	
	movq 152(%reg1), %r12	

1
	movq $106, %rsi	
	movq $.string2_l, %rdi	

1
	.size Complex.reflect_0, .-Complex.reflect_0	
	.globl Complex.reflect_X	

1
	jne .A2I.i2c_1	
	movq $.string7, %reg0	

1
	movq $0, %rax	
	jmp .Main.new_5	

1
	movq $empty_string, %rdi	
	movq %reg1, %r12	

1
	je .Main.main_34	
	movq $13, %reg0	

1
	jne .Matrix.set_10	
	movq %rdi, 40(%rax)	

1
	movq $.string10, %reg0	
	movq 0(%rax), %r12	

1
	je .Main.main_37	
	movq $181, %rsi	

1
	movq $.string11, %reg0	
	movq %rbx, %reg2	

1
	movq $2, %rdi	
	movq %rdi, 16(%reg1)	

1
	movq $229, %rsi	
	movq %rsi, %rcx	

1
	movq $5, %rax	
	movq %rax, %r13	

1
	movq 576(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq $0, %rbx	
	movq %reg1, %reg2	

1
.string3_l:	
	.string "Bazz"	

1
	call *%reg0	
	movq %rax, 16(%reg2)	

1
	idivl %esi	
	movq $12855, %rdi	

1
	movq $28227, %r11	
	movq %r11, %rbx	

1
	movq -72(%rbp), %reg1	
	imull %reg2	

1
	call *%rax	
	movq 16(%rbx), %reg2	

1
	movq -168(%rbp), %rdi	
	addl %reg2, %reg3	

1
	movq %rsp, %reg1	
	call Foo.new	

1
	movq 608(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	subl %esi, %reg1	
	movq %r12, %rsi	

1
.Main.main_3:	
	movq $.string7, %reg0	

1
	addl %reg0, %eax	
	movq -136(%rbp), %reg3	

1
	jge .Main.new_10	
	movq 16(%reg0), %rax	

1
	movq -136(%rbp), %reg1	
	cmpl %esi, %eax	

1
	movq %r13, %reg1	
	movq 8(%reg2), %rdx	

1
	.quad IO.out_string	
	.quad Main.print_list	

1
	call String.concat	
	movq %rax, 8(%reg1)	

1
	movq 16(%rax), %reg1	
	negl %reg2	

1
.Main.main_2:	
	movq %reg0, %r12	

1
	je .Main.main_93	
	movq %reg0, %reg1	

1
	movq 24(%rax), %rdi	
	movq %reg2, %rsi	

1
	call *%r12	
	jmp .Main.main_18	

1
	movq 16(%rbx), %rax	
	subl %reg2, %reg3	

1
	je .Matrix.get_38	
	movq $58, %reg0	

1
	imull %esi	
	movq $24923, %rsi	

1
	movq $.string9, %reg0	
	movq 0(%rbx), %r13	

1
	movq $0, %rbx	
	movq %r12, %r13	

1
	movq -120(%rbp), %rax	
	movq -24(%rbp), %reg3	

1
	movq $93, %rsi	
	movq $.string4_l, %rdi	

1
	call *%rax	
	jmp .Main.main_24	

1
	testq $1, %rax	
	je .Razz.new_19	

1
	setle %reg0l	
	jg .Matrix.elMul_2	

1
	movq 16(%reg0), %rax	
	addl %edi, %eax	

1
	movq -96(%rbp), %reg1	
	subl %reg2, %r9d	

1
	movq %rdi, %reg1	
	movq %rdx, %rdi	

1
	movq $5, %reg0	
	movq $.string1_l, %rdi	

1
	movq %reg0, %reg1	
	movq 8(%reg1), %rdx	

1
	je .Main.main_3	
	movq $5, %rsi	

1
	je .Main.main_124	
	movq %reg0, %rax	

1
	.quad .string20_l	
	.quad 4	

1
	addl %reg0, %reg1	
	movq $37073, %rax	

1
	movq $34, %reg0	
	movq $.string1_l, %rdi	

1
	movq $12, %r12	
	movq 0(%reg1), %rax	

1
	movq %rax, -16(%rbp)	
	movq $3, %rax	

1
.Main.main_55:	
	movq %reg0, %rdx	

1
.Main.main_120:	
.Main.main_118:	

1
	movq %reg0, 320(%reg1)	
	movq $0, %reg0	

1
	setl %reg0l	
	jge .Main.new_10	

1
Complex_vtable:	
	.quad .string0	

1
	call *%rax	
	movq -128(%rbp), %reg2	

1
	movq %reg0, %rbx	
	movq $13, %reg0	

1
	movq %rax, %rdi	
	movq 8(%reg2), %rsi	

1
	movq $12618, %reg0	
	negl %edi	

1
	movq %rsi, %rax	
	movq -56(%rbp), %rsi	

1
	movq -24(%rbp), %reg1	
	movq %rbx, %rdi	

1
	movq %reg0, 8(%rax)	
	movq $2, %rax	

1
	movq $7201, %rsi	
	movq %rsi, %rcx	

1
	movq $1, %reg0	
	movq 16(%rbx), %reg2	

1
	subl %reg0, %reg1	
	movq $8997, %rax	

1
	movq -112(%rbp), %rax	
	movq -136(%rbp), %rdi	

1
	jge .Main.main_3	
	movq $1, %reg0	

1
	movq $0, %reg0	
	movq %reg0, 536(%reg1)	

1
.string8_l:	
	.string "halt"	

1
	movq %reg0, 656(%reg1)	
	movq $3000, %reg0	

1
	movq %rdi, 312(%rax)	
	movq $0, %rdi	

1
	movq $218, %reg0	
	movq $.string5_l, %reg1	

1
	.quad Complex.init	
	.quad Complex.print	

1
	call *%reg0	
	movq 488(%reg1), %reg2	

1
	movq 56(%r15), %r15	
	movq %r13, %rdi	

1
	movq 232(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	call out_error	
.Main.main_137:	

1
	testq $1, %rax	
	je .Razz.new_7	

1
	.quad Foo.func	
	.quad Bar.func2	

1
	movq 0(%reg0), %rbx	
	movq 144(%rbx), %rbx	

1
	movq -40(%rbp), %rsi	
	movq -96(%rbp), %reg3	

1
	idivl %reg0d	
	movq -104(%rbp), %rcx	

1
	.string "A2I"	
.string0:	

1
	movq 600(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	call out_error	
.Main.main_127:	

1
	movq -24(%rbp), %rdi	
	sete %reg2l	

1
.Main.main_46:	
	movq 0(%reg0), %reg1	

1
	movq %reg0, %rax	
	movq $35237, %reg0	

1
.Matrix.get_23:	
	movq $1, %rax	

1
	movq $6, %rcx	
	movq %reg1, %rsi	

1
	call String.cmp	
	movq %rax, %r15	

1
	movq %reg0, %reg1	
	addl %reg2d, %eax	

1
	movq $175, %reg0	
	movq $.string5_l, %rdi	

1
	movq -136(%rbp), %rbx	
	movq -8(%rbp), %reg3	

1
	idivl %r11d	
	addl %reg1, %reg2d	

1
CellularAutomaton.evolve:	
	pushq %reg0	

1
	movq 304(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq $6821, %rsi	
	movq $45379, %reg1	

1
	addl %reg0, %reg1d	
	movq %rcx, %rax	

1
	movq $45, %reg0	
	movq $.string5_l, %reg1	

1
	.string " == "	
.string20:	

1
	movq $6, %rsi	
	movq $.string5_l, %rdi	

1
	call String.concat	
	movq %reg0, 8(%reg1)	

1
	movq -80(%rbp), %rax	
	movq -152(%rbp), %reg3	

1
	movq $47218, %rcx	
	movq %rcx, %reg1	

1
.Main.main_93:	
	movq %reg0, %reg1	

1
	movq $3, %reg0	
	movq %reg0, 24(%reg1)	

1
	call Bar.new	
	movq %rax, 32(%reg1)	

1
.Main.main_18:	
	movq 0(%reg0), %r13	

1
	movq $10, %r12	
	movq $1, %r13	

1
	movq -144(%rbp), %reg1	
	cmpl %reg2, %esi	

1
	je .Main.main_47	
	movq $200, %reg0	

1
	movq %rax, %rdi	
	call Main.func	

1
	movq %reg0, 320(%reg1)	
	movq $3000, %reg0	

1
	movq %reg0, -104(%rbp)	
	movq -8(%rbp), %reg0	

1
	movq $1, %reg0	
	movq $.string6, %r12	

1
	testq $1, %reg0	
	je .Main.main_154	

1
	movq $7, %rcx	
	movq %rdi, %rsi	

1
	movq 32(%reg0), %r12	
	pushq %reg2	

1
	call out_error	
.Main.main_139:	

1
	movq -80(%rbp), %rax	
	subl %eax, %ecx	

1
	.type Cons.insert, @function	
Cons.insert:	

1
	movq 144(%rax), %rax	
	jmp .Matrix.get_46	

1
.Main.main_66:	
	movq 0(%reg0), %reg1	

1
	je .Main.main_26	
	movq $10, %reg0	

1
	jne .A2I.c2i_19	
	movq $9, %rax	

1
	je .Main.main_94	
	movq $64, %reg0	

1
	negl %reg0	
	movq %rax, %r11	

1
	movq %rsi, -16(%rbp)	
	movq %rdx, %rbx	

1
	jmp .A2I.c2i_18	
.A2I.c2i_17:	

1
	testq $1, %rax	
	je .Main.new_1	

1
	movq 16(%reg0), %rax	
	movq %reg2, %rdi	

1
	movq %rbx, %rax	
	addl %eax, %edi	

1
	addl %reg0, %edi	
	movq $53587, %reg2	

1
	movq %reg0, %rbx	
	movq $4, %reg2	

1
	movq $26972, %reg0	
	movq %reg0, %reg1	

1
	.quad CellularAutomaton.cell_at_next_evolution	
	.quad CellularAutomaton.evolve	

1
	addl %eax, %ebx	
	movq $47041, %reg2	

1
	movq $93, %reg0	
	movq $.string4_l, %reg1	

1
	movq $0, %rax	
.CellularAutomaton.cell_at_next_evolution_6:	

1
.CellularAutomaton.cell_at_next_evolution_8:	
	popq %r14	

1
	je .Main.main_43	
	movq $3453, %reg0	

1
	.text 	
	.globl Foo.new	

1
	movq -88(%rbp), %rsi	
	movq %reg2, %rax	

1
	movq %reg0, %rbp	
	movq $72, %reg2	

1
	movq %reg0, %reg1	
	movq $678987, %reg2	

1
	call *%rax	
.ListNode.insert_3:	

1
	movq $25, %rax	
	movq 0(%reg1), %reg2	

1
	movq -168(%rbp), %reg1	
	movq -32(%rbp), %reg3	

1
	subl %reg0, %edi	
	movq $17376, %reg2	

1
	movq $62649, %reg0	
	movq 0(%reg1), %rax	

1
	movq $10478, %reg0	
	subl %reg1, %r8d	

1
	subl %esi, %reg1	
	cmpl %reg1, %eax	

1
	movq $.string10, %rbx	
	movq 0(%reg1), %r12	

1
	movq $8640, %rdi	
	imull %edi	

1
	cmpq $Bazz_vtable, 0(%reg0)	
	je .Razz.new_2	

1
	movq %rdi, 112(%rax)	
	movq $3000, %rdi	

1
.Main.main_47:	
	movq 0(%rax), %r13	

1
	movq %rdi, %rax	
	jmp .Main.main_83	

1
	call out_error	
.Main.main_171:	

1
	movq $17107, %rax	
	movq 0(%reg1), %r12	

1
	movq $51233, %reg0	
	movq $33158, %rsi	

1
	movq -24(%rbp), %rsi	
	negl %reg2	

1
.Main.main_102:	
	movq %reg0, %reg1	

1
	.quad 0	
	.quad Yaz.new	

1
	call String.concat	
	movq %rax, %r13	

1
	subl %reg0, %reg1d	
	movq $61569, %rax	

1
	movq 224(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq %rdi, 288(%rax)	
	movq $0, %rdi	

1
	movq 72(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq $29011, %reg0	
	subl %reg1, %reg2	

1
	movq %rax, 8(%reg1)	
	movq $5, %reg2	

1
	subl %reg0, %reg1d	
	movq %r8, %reg3	

1
	addl %esi, %reg1	
	movq %reg2, 16(%reg3)	

1
Foo.set:	
	pushq %reg0	

1
.string6_l:	
	.string "Hello, world"	

1
	movq $24320, %rax	
	movq $3520, %reg1	

1
	.globl List.print_list	
	.type List.print_list, @function	

1
	movq %rax, 24(%reg1)	
	movq $7, %r12	

1
	movq %reg0, %rsi	
	addl %reg2, %edi	

1
	movq %reg0, %reg1	
	movq $62331, %reg0	

1
	je .Main.main_115	
	movq -72(%rbp), %rax	

1
	je .Main.func_6	
	cmpq $Main_vtable, 0(%reg0)	

1
	call *%reg0	
	movq $3966, %reg1	

1
	movq 272(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	.quad 3	
	.quad Bazz.new	

1
	movq -160(%rbp), %rax	
	addl %eax, %reg3d	

1
	movq 136(%rax), %rax	
	movq %rbx, %rdi	

1
	movq -136(%rbp), %reg1	
	movq %rbx, %reg3	

1
	movq $.string15, %rdi	
	movq %rbx, %r12	

1
	subl %reg0, %reg1	
	movq %r13, %rdi	

1
	movq -16(%rbp), %rsi	
	subl %esi, %eax	

1
	je .Main.main_98	
	movq $64, %reg0	

1
	movq $33636, %reg0	
	imull %reg1	

1
	movq 560(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	movq $12, %rax	
	cmpl $0, %ebx	

1
.Main.main_11:	
	movq 0(%reg0), %r15	

1
	movq %rdi, %rax	
	jmp .Matrix.set_20	

1
	movq $12, %r8	
	movq -112(%rbp), %reg2	

1
	movq $0, %reg0	
	movq -16(%rbp), %rdi	

1
	movq -96(%rbp), %reg1	
	movq -144(%rbp), %reg3	

1
	call *%reg0	
	movq 648(%rbx), %reg2	

1
	movq %rdi, %r12	
	movq $.string6, %rdi	

1
	.quad 2	
String_vtable:	

1
	testq $1, %rax	
	je .Dictionary.insert_4	

1
	movq 0(%r12), %rbx	
	movq 72(%rbx), %rbx	

1
	movq %rax, %rcx	
	movq -152(%rbp), %rax	

1
.Main.main_19:	
	movq -72(%rbp), %rax	

1
	movq $164, %rsi	
	movq $.string5_l, %reg1	

1
	movq 552(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
.DicNode.get_3:	
	cmpl $0, 24(%reg0)	

1
	movq %r12, %rax	
	movq -96(%rbp), %r8	

1
	movq %rax, %reg1	
	movq $25185, %rax	

1
	sete %reg0b	
	jne .Matrix.set_56	

1
	movq %reg0, 56(%rax)	
	movq $3000, %reg0	

1
	call *%r12	
	movq 456(%rbx), %r12	

1
	movq %reg0, 48(%reg1)	
	movq %reg0, %reg1	

1
	movq -144(%rbp), %rax	
	subl %reg2, %reg3	

1
	movq -176(%rbp), %r10	
	imull %r10d	

1
	movq %rdi, %rax	
	movq %rbx, %rdi	

1
	je .Main.main_69	
	movq $226, %reg0	

1
.Main.main_6:	
	movq $1, %rdi	

1
	movq $.string11, %r15	
	cmpl $0, %reg1	

1
.Main.main_2:	
	movq 0(%rax), %r13	

1
	movq -152(%rbp), %rax	
	addl %esi, %eax	

1
	movq -160(%rbp), %rdi	
	negl %edi	

1
	idivl %r9d	
	movq -72(%rbp), %reg2	

1
	movq $0, %rax	
	movq %reg1, %rdx	

1
.Main.main_7:	
	movq $.string8, %reg0	

1
	movq 552(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	subl %reg0, %edi	
	movq -152(%rbp), %rax	

1
	movq $154, %reg0	
	movq $.string5_l, %rdi	

1
	setl %reg0b	
	jge .Main.main_1	

1
	movq %rdi, %reg1	
	jmp .Main.main_163	

1
	movq %reg0, %r12	
	jmp .Main.main_10	

1
	movq $47279, %rdi	
	movq $47879, %rax	

1
	movq -16(%rbp), %rdi	
	imull %edi	

1
	jmp .Matrix.set_48	
.Matrix.set_47:	

1
	testq $1, %rdi	
	je .Main.main_135	

1
	movq $40488, %rax	
	negl %reg1	

1
	movq %rax, 8(%reg1)	
	movq $3, %rax	

1
	call *%rax	
.CellularAutomaton.cell_left_neighbor_2:	

1
	call *%r12	
	movq 488(%reg1), %reg2	

1
.Main.main_6:	
	movq %reg0, %rdx	

1
	movq %reg0, %r12	
	movq 8(%rax), %r13	

1
	.size CellularAutomaton.print, .-CellularAutomaton.print	
	.globl CellularAutomaton.num_cells	

1
	movq $48457, %rax	
	movq $18781, %reg1	

1
	movq %rdi, %reg1	
.Main.main_161:	

1
	movq $3000, %rdi	
	movq %rdi, 624(%rax)	

1
	movq $53085, %reg0	
	imull %reg1	

1
	movq -64(%rbp), %reg1	
	movq -72(%rbp), %reg3	

1
	movq $34526, %reg0	
	subl %reg1, %reg2	

1
	call *%rax	
	movq 280(%rbx), %reg2	

1
	movq $30215, %rax	
	subl %reg1, %reg2	

1
	movq %rdi, %reg1	
	jmp .Main.main_10	

1
	movq $.string7, %r14	
	movq %reg1, %reg2	

1
.Foo.new_1:	
	cmpq $Bar_vtable, 0(%rbx)	

1
	movq %reg0, %rbx	
	movq $.string7, %rdi	

1
	jne .Matrix.set_1	
	movq $1, %reg0	

1
	movq $1000, %reg0	
	movq %reg0, 32(%reg1)	

1
	movq $21514, %rdi	
	imull %reg1	

1
	testq $1, %rsi	
	je .Main.main_7	

1
	subl %reg0, %r8d	
	movq %r8, %rcx	

1
	movq $.string15, %rdi	
	movq %rbx, %reg2	

1
	movq -152(%rbp), %rcx	
	imull %ecx	

1
	movq 24(%reg0), %rdi	
	movq %rbx, %reg3	

1
	imull %edi	
	movq $11513, %reg1	

1
	idivl %reg0d	
	movq $38600, %reg0	

1
	call *%r12	
	movq 472(%rbx), %rax	

1
	jmp .A2I.i2c_10	
.A2I.i2c_9:	

1
	subl %reg0, %esi	
	movq -24(%rbp), %rax	

1
	jmp .Main.main_45	
.Main.main_42:	

1
	movq %reg0, %reg1	
	jmp .Main.main_58	

1
	movq 736(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq %rdi, 504(%rax)	
	movq $0, %rdi	

1
	idivl %reg0	
	movq $14901, %reg1	

1
	.type CellularAutomaton.cell, @function	
CellularAutomaton.cell:	

1
	movq $15234, %r12	
	movq 0(%reg1), %reg2	

1
	movq %reg0, %r8	
	movq %rdx, %reg0	

1
	movq $0, %rdi	
	movq %rdi, 664(%reg1)	

1
Nil.new:	
	pushq %rbp	

1
	movq $25099, %reg0	
	movq $52033, %rax	

1
	call *%reg0	
	movq 56(%rbx), %reg0	

1
	subl %reg0, %edi	
	movq -96(%rbp), %rax	

1
	addl %reg0, %eax	
	subl %eax, %edi	

1
	movq %rbx, %reg1	
	movq 8(%reg2), %reg3	

1
.Main.main_99:	
.Main.main_97:	

1
	movq %rdi, %reg1	
	movq -160(%rbp), %reg3	

1
	movq 368(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	movq %rdi, 128(%rax)	
	movq %rdi, %rax	

1
	movq %rax, %rdi	
	movq $9508, %rax	

1
	movq %reg0, %rsi	
	movq %reg2, %rdi	

1
	movq $46154, %rsi	
	imull %esi	

1
	movq $.string11, %reg0	
	movq 0(%reg1), %reg2	

1
	movq $.string6, %r13	
	movq %r13, %reg1	

1
	negl %r8d	
	movq %r8, %reg1	

1
	movq -144(%rbp), %rax	
	movq -184(%rbp), %reg3	

1
	movq $1202, %rax	
	movq $51824, %reg1	

1
	movq %reg0, 16(%reg1)	
	call Razz.new	

1
	movq 56(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	.quad .string7_l	
	.quad 8	

1
.Main.main_42:	
	movq -40(%rbp), %reg1	

1
	movq 24(%reg0), %rax	
	movq %reg2, %reg3	

1
	cmpq $Object_vtable, 0(%rax)	
	je .Main.func_2	

1
	movq %rsi, %reg1	
	movq 8(%rax), %rbx	

1
	subl %edi, %reg1	
	movq $15487, %reg2	

1
	.string "cycle\\n"	
.string10:	

1
	movq 672(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq 264(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	idivl %reg0	
	movq -168(%rbp), %reg2	

1
	movq $22802, %rax	
	addl %eax, %r8d	

1
	movq -40(%rbp), %rax	
	subl %reg2, %edi	

1
	movq -16(%rbp), %reg1	
	movq %r14, %rax	

1
	movq $2, %r9	
	movq %r8, %reg2	

1
	movq -88(%rbp), %rax	
	subl %esi, %eax	

1
	movq %rdi, 56(%reg1)	
	movq %rdi, %reg1	

1
	sete %reg0l	
	jne .Matrix.get_36	

1
	imull %reg0	
	movq $53085, %reg1	

1
	jmp .Main.main_12	
.Main.main_13:	

1
	.type DicNode.incr, @function	
DicNode.incr:	

1
	movq $27231, %reg0	
	movq %reg0, %rcx	

1
	subl %ecx, %reg1d	
	movq %reg1, %reg2	

1
.Main.main_41:	
	movq -72(%rbp), %reg1	

1
	testq $1, %rsi	
	je .Main.main_64	

1
	call *%reg0	
	movq 200(%reg1), %rax	

1
	sete %reg0l	
	jne .Main.main_11	

1
	negl %ecx	
	movq -136(%rbp), %rax	

1
	je .Main.main_126	
	movq $70, %rsi	

1
	movq $33161, %reg0	
	subl %reg0d, %reg1	

1
	testq $1, %r9	
	je .Main.main_76	

1
	movq 8(%reg0), %rbx	
	movq 0(%rax), %r12	

1
	movq %r13, %reg1	
	subl %ecx, %reg3	

1
	movq %reg0, %reg1	
	jmp .Main.main_8	

1
	movq %reg0, -16(%rbp)	
	movq %rdx, %rbx	

1
	movq $30773, %reg0	
	cmpl %reg1, %reg2	

1
Cons.rev:	
	pushq %reg0	

1
	negl %reg0	
	jmp .Main.main_4	

1
.Main.func_6:	
	movq $.string10, %rbx	

1
	addl %reg0, %eax	
	movq %reg2, 40(%reg3)	

1
	testq $1, %rsi	
	je .Main.main_181	

1
	movq -88(%rbp), %rax	
	movq -96(%rbp), %rcx	

1
	je .Main.main_33	
	movq -88(%rbp), %reg1	

1
	je .Main.main_55	
	movq $49, %reg0	

1
	addl %r9d, %reg1	
	movq -16(%rbp), %r9	

1
	movq %rdi, 64(%reg1)	
	movq $3000, %rdi	

1
	movq $0, %rdi	
	movq %rdi, 600(%rax)	

1
.Main.out_whatever_3:	
	movq %reg0, %rax	

1
	movq $31735, %reg0	
	imull %esi	

1
	movq $0, %reg0	
	movq -16(%rbp), %reg2	

1
	movq %r14, %rax	
	movq -96(%rbp), %reg3	

1
	movq $3, %reg0	
	movq $.string1_l, %reg1	

1
	je .Razz.new_20	
	movq $31, %reg0	

1
.Main.main_6:	
	jmp .Main.main_7	

1
	.quad Foo.x	
	.quad Foo.y	

1
	movq $3000, %reg0	
	movq %reg0, 112(%reg1)	

1
	movq $3000, %reg0	
	movq %reg0, 240(%rax)	

1
	movq %reg0, %reg1	
	movq $.string9, %r13	

1
	movq $26, %reg0	
	movq $.string3_l, %reg1	

1
	movq $2562, %r11	
	imull %r11d	

1
	movq %rdi, 144(%reg1)	
	movq %rdi, %reg1	

1
.A2I.c2i_10:	
.A2I.c2i_8:	

1
	movq -96(%rbp), %reg1	
	subl %eax, %esi	

1
	subl %reg0, %reg1	
	movq %rax, -152(%rbp)	

1
	imull %reg0	
	movq $56453, %reg1	

1
	movq -80(%rbp), %reg1	
	negl %edi	

1
	movq 640(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	jge .Main.main_9	
	movq %reg0, %rdi	

1
	movq -72(%rbp), %rdi	
	negl %edi	

1
	jge .Main.main_3	
	movq %reg0, %rdi	

1
	testq $1, %rdi	
	je .Main.new_5	

1
	movq $12, %rsi	
	movq -104(%rbp), %rax	

1
	movq $3000, %rdi	
	movq %rdi, 168(%rax)	

1
	cmpq $Razz_vtable, 0(%reg0)	
	je .Bar.new_3	

1
	movq -16(%rbp), %r9	
	subl %r9d, %eax	

1
.Main.main_34:	
	movq 0(%reg0), %reg1	

1
	call *%r14	
	movq $5, %r14	

1
	call *%reg0	
	movq %reg1, %r13	

1
	call *%reg0	
	movq -144(%rbp), %rdx	

1
	movq $60750, %r12	
	movq 0(%rbx), %rax	

1
	movq %reg0, %reg1	
	subl %edi, %esi	

1
	movq 8(%rbx), %reg1	
	cmpl $0, 16(%rbx)	

1
	movq %r14, %reg1	
	subl %reg1d, %eax	

1
	movq 592(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq -96(%rbp), %rax	
	imull %esi	

1
	imull %reg0d	
	movq $2469, %reg0	

1
.Main.main_36:	
	movq 0(%reg0), %rax	

1
.string10_l:	
	.string "cycle\\n"	

1
	movq $6765, %reg0	
	subl %reg1, %reg2	

1
	movq $2, %rdi	
	movq %reg1, %rax	

1
	movq 608(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 432(%rax)	

1
	movq %reg0, 528(%reg1)	
	movq $0, %reg0	

1
	movq -96(%rbp), %r8	
	subl %r8d, %reg2	

1
	addl %edi, %reg1	
	movq -152(%rbp), %reg3	

1
	movq %reg0, %r13	
	movq %reg2, %rax	

1
	movq %rax, %r12	
	jmp .Main.main_10	

1
	jmp .Main.main_43	
.Main.main_42:	

1
	movq -152(%rbp), %reg1	
	movq -96(%rbp), %reg3	

1
.Main.main_2:	
	movq 0(%rbx), %r12	

1
	movq 456(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	testq $1, %rsi	
	je .Main.main_103	

1
	je .Main.main_84	
	movq $61, %rsi	

1
	movq %reg0, %reg1	
	jmp .Main.main_139	

1
	pushq %r15	
	movq %reg1, %rax	

1
	movq %reg0, 72(%reg1)	
	movq %reg0, %reg1	

1
	.type Complex.print, @function	
Complex.print:	

1
	movq $1, %rdi	
	movq %rdi, %reg1	

1
	movq -168(%rbp), %reg1	
	movq -32(%rbp), %rax	

1
	call *%rax	
	movq 592(%rbx), %rax	

1
	jne .Main.main_23	
	movq %reg0, %rax	

1
	movq 24(%reg0), %rax	
	movq %reg2, %rdi	

1
	addl %edi, %eax	
	movq -152(%rbp), %reg3	

1
	movq %reg0, 416(%reg1)	
	movq $3000, %reg0	

1
.Main.main_128:	
	jmp .Main.main_161	

1
	je .Main.main_173	
	movq $308, %rsi	

1
	jne .Matrix.set_15	
	movq %rdi, 48(%reg1)	

1
.A2I.c2i_3:	
	movq $.string9, %reg0	

1
	movq $0, %reg0	
	movq %reg0, 416(%reg1)	

1
	subl %edi, %eax	
	movq %rax, -112(%rbp)	

1
	movq $108, %reg0	
	movq $.string3_l, %reg1	

1
	movq $3000, %reg0	
	movq %reg0, 8(%rax)	

1
	movq $3000, %reg0	
	movq %reg0, 408(%reg1)	

1
	movq 72(%r13), %r13	
	movq %r12, %rdi	

1
	jge .Main.main_121	
	movq -16(%rbp), %rax	

1
	movq -160(%rbp), %reg1	
	addl %esi, %eax	

1
.Main.main_2:	
	movq 16(%reg0), %r12	

1
	movq $1, %rax	
	movq 8(%reg1), %reg1	

1
	movq $93, %reg0	
	movq $.string4_l, %rdi	

1
	movq $4, %reg0	
	cmpl %eax, %reg2	

1
.Main.main_84:	
	movq %reg0, %rsi	

1
	testq $1, %rsi	
	je .Main.main_32	

1
	movq -104(%rbp), %rax	
	addl %eax, %esi	

1
	movq -144(%rbp), %rax	
	addl %edi, %eax	

1
	movq %rax, %reg1	
	movq $.string11, %reg2	

1
	idivl %ecx	
	movq $39267, %rsi	

1
.Main.main_87:	
	cdq	

1
	movq %rsi, %r12	
	call ListNode.new	

1
	movq 344(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
.DicNode.get_5:	
.DicNode.get_2:	

1
	movq -96(%rbp), %rax	
	movq -16(%rbp), %r8	

1
	addl %eax, %esi	
	movq $14546, %rax	

1
	movq -160(%rbp), %reg1	
	movq -80(%rbp), %rdi	

1
	movq %rdi, 616(%reg1)	
	movq $0, %rdi	

1
	movq 48(%reg0), %reg0	
	movq 8(%rax), %rdi	

1
	je .Main.main_21	
	movq $166, %rsi	

1
	call *%reg0	
	movq 80(%reg1), %rax	

1
	movq -144(%rbp), %reg1	
	movq -40(%rbp), %rsi	

1
	addl %eax, %ecx	
	movq -168(%rbp), %rax	

1
	cmpq $Razz_vtable, 0(%reg0)	
	je .Razz.new_8	

1
	movq %r14, %rcx	
	call *%rax	

1
	.quad Complex.new	
	.quad Object.abort	

1
	call *%rax	
	movq 712(%rbx), %rax	

1
	movq %reg0, %r12	
	movq $13, %rbx	

1
	movq -184(%rbp), %rax	
	movq -32(%rbp), %rdi	

1
	movq -144(%rbp), %reg1	
	addl %esi, %reg3	

1
	movq %r12, 8(%rax)	
	jmp .Main.main_4	

1
	movq %reg0, %reg1	
	jmp .Main.main_74	

1
.Main.main_7:	
	movq 0(%rbx), %rax	

1
	movq $64947, %reg0	
	movq %reg0, -24(%rbp)	

1
	je .Main.main_4	
.Main.main_4:	

1
	jne .A2I.c2i_13	
	movq $6, %rax	

1
	movq 392(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
.string7_l:	
	.string "passed\\n"	

1
	movq $64947, %reg0	
	movq %reg0, %reg1	

1
	movq $55318, %reg0	
	subl %reg1, %eax	

1
	movq 80(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq $3000, %rdi	
	movq %rdi, 408(%reg1)	

1
.Main.main_28:	
	cmpl $0, %r13d	

1
	movq %rdi, %reg1	
	movq $name_Int, %r12	

1
	call *%reg0	
	movq $9856, %reg1	

1
	movq %reg0, %reg1	
	movq $0, %r10	

1
	imull %r12d	
	movq %reg1, %r12	

1
	je .Main.main_12	
	movq $18, %rsi	

1
	movq %rax, %reg1	
	movq $50538, %rax	

1
	call *%reg0	
	movq 40(%rbx), %reg0	

1
	movq %reg0, 24(%reg1)	
	movq %reg0, %reg1	

1
	cmpq $IO_vtable, 0(%reg0)	
	je .Main.main_11	

1
	subl %r8d, %eax	
	movq -64(%rbp), %r8	

1
.Main.main_41:	
	movq 0(%r13), %reg1	

1
	addl %eax, %esi	
	movq $14546, %reg2	

1
	movq %rdi, 280(%reg1)	
	movq $0, %rdi	

1
	movq $1, %r13	
	movq $.string7, %r12	

1
	movq $51824, %r8	
	negl %r8d	

1
	.quad 2	
.string13_l:	

1
	movq %reg0, %rax	
	jmp .Main.main_74	

1
	imull %reg0	
	movq $29789, %reg1	

1
	movq %rdi, %rax	
	movq $0, %r12	

1
	je .Cons.print_list_1	
	movq $93, %rsi	

1
	subl %reg0, %reg1d	
	movq %reg1, %rcx	

1
	movq $45807, %rax	
	subl %reg1, %reg2	

1
	negl %esi	
	movq -96(%rbp), %reg2	

1
	movq %rbx, %rax	
	movq -168(%rbp), %reg3	

1
.Main.main_7:	
	movq 0(%reg0), %r15	

1
	negl %eax	
	movq -56(%rbp), %rcx	

1
	movq %rax, %rsi	
	movq $40488, %rax	

1
	movq -168(%rbp), %rax	
	movq -40(%rbp), %reg3	

1
	je .Main.main_4	
	movq $7, %rsi	

1
.Main.main_6:	
	movq 8(%reg0), %reg1	

1
	movq -112(%rbp), %reg1	
	movq -48(%rbp), %r8	

1
	addl %edi, %eax	
	movq %rax, -112(%rbp)	

1
	movq $13, %rbx	
	movq 0(%r12), %rax	

1
	ret	
	.size List.tail, .-List.tail	

1
	idivl %esi	
	movq $229, %rsi	

1
	subl %reg0, %eax	
	movq %reg2, -40(%rbp)	

1
	movq $10, %rax	
	movq %rax, %rdi	

1
	movq %reg0, %rsi	
	movq %reg0, %reg2	

1
	movq %reg0, %r13	
	movq %r12, %reg3	

1
	je .Main.main_11	
	movq $5, %reg0	

1
	movq -64(%rbp), %rdi	
	movq -56(%rbp), %reg3	

1
	je .Main.main_9	
	movq $7, %rsi	

1
.Main.main_1:	
	movq -16(%rbp), %reg1	

1
	call *%r15	
	cmpl $0, %r12d	

1
	movq $15234, %r12	
	movq 0(%reg1), %rax	

1
	movq %reg0, 128(%reg1)	
	movq $3000, %reg0	

1
	movq %r12, 8(%rax)	
	movq $2, %r13	

1
	movq $0, %r14	
	movq %reg1, %reg2	

1
	movq $22802, %reg0	
	addl %eax, %r8d	

1
	movq $.string11, %rdi	
	movq %reg1, %r12	

1
	movq -56(%rbp), %rsi	
	movq %reg2, %reg3	

1
	je .Main.main_157	
	movq $127, %reg0	

1
	movq %rdi, 464(%rax)	
	movq $3000, %rdi	

1
	movq $12, %rsi	
	movq %rbx, %reg2	

1
	movq $13, %reg0	
	cmpl $0, %r13d	

1
	sete %reg0l	
	jne .A2I.i2c_19	

1
	movq $10, %rdi	
	movq %reg1, %reg2	

1
	.size Bazz.new, .-Bazz.new	
	.globl Main.new	

1
	movq $201, %rsi	
	movq $.string5_l, %rdi	

1
	movq %reg0, -40(%rbp)	
	call String.new	

1
	movq $32, %reg0	
	movq $.string4_l, %reg1	

1
	movq $.string7, %r13	
	movq %r13, %reg1	

1
	negl %eax	
	movq $11440, %rdi	

1
	negl %eax	
	movq %reg1, %r8	

1
	imull %reg0	
	movq $7258, %reg1	

1
	negl %reg0	
	movq $2, %rax	

1
	movq -40(%rbp), %rax	
	subl %reg2, %reg3d	

1
	movq -184(%rbp), %reg1	
	movq %rsi, %reg3	

1
	movq %rdi, 456(%reg1)	
	movq $0, %rdi	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_11	

1
.Bazz.new_1:	
	cmpq $Bar_vtable, 0(%reg0)	

1
	movq 8(%reg0), %rax	
	negl %reg2	

1
	je .DicNode.get_4	
	movq $45, %rsi	

1
	movq %r13, 8(%rax)	
	movq 0(%reg2), %rax	

1
	movq 160(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq 400(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	testq $1, %rdi	
	je .Main.main_82	

1
	call *%reg0	
	movq 512(%reg1), %reg2	

1
	subl %edi, %reg1	
	movq $15487, %rdi	

1
	movq -24(%rbp), %reg1	
	addl %reg1d, %reg2	

1
	movq -136(%rbp), %rax	
	movq -104(%rbp), %reg3	

1
	movq $3, %reg0	
	movq 0(%rax), %rax	

1
	movq %reg0, %r14	
.Matrix.elMul_1:	

1
.Main.main_131:	
	movq -80(%rbp), %rax	

1
	movq $.string11, %rax	
	movq %r12, %reg2	

1
	movq -168(%rbp), %reg1	
	addl %edi, %reg3	

1
	subl %eax, %reg1	
	movq %r14, %reg3	

1
	je .Main.main_117	
	movq $67, %rsi	

1
	movq %rax, %rdi	
	movq $45807, %rax	

1
	movq %rdi, 216(%rax)	
	movq $0, %rdi	

1
.string3_l:	
	.string "List"	

1
	call *%r12	
	movq 480(%rbx), %reg2	

1
	.globl List.rcons	
	.type List.rcons, @function	

1
	movq %rax, 24(%rbx)	
	movq $7, %r12	

1
	movq 560(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq %rdi, 40(%rbx)	
	cmpl %reg2, %esi	

1
	jmp .Main.new_11	
.Main.new_10:	

1
	movq -128(%rbp), %rax	
	addl %esi, %reg3	

1
.Main.main_84:	
	cdq	

1
	movq -128(%rbp), %rax	
	movq -168(%rbp), %rdi	

1
	movq $218, %rsi	
	movq $.string5_l, %reg1	

1
	setle %reg0l	
	jg .Main.main_7	

1
	ret	
	.size Dictionary.setHead, .-Dictionary.setHead	

1
	movq %reg0, %reg1	
	jmp .Main.main_26	

1
	movq 16(%reg0), %rdi	
	negl %edi	

1
	movq $5, %reg0	
	addl %reg1, %edi	

1
	movq -144(%rbp), %reg1	
	imull %edi	

1
	cmpq $Main_vtable, 0(%reg0)	
	je .Main.new_2	

1
	movq -144(%rbp), %rdi	
	movq -48(%rbp), %rax	

1
	testq $1, %rdi	
	je .Dictionary.get_1	

1
	je .Main.main_137	
	movq $103, %rsi	

1
	call *%r13	
	movq %rax, 16(%reg2)	

1
	jg .Main.main_20	
	movq $29524, %reg0	

1
	movq %rcx, %rdi	
	movq $1, %reg2	

1
	movq $1073741824, %reg0	
	movq $4, %rdi	

1
	movq %rdi, 304(%rax)	
	movq $0, %rdi	

1
	movq -16(%rbp), %rsi	
	movq -40(%rbp), %reg3	

1
	movq $13, %rsi	
	negl %reg1	

1
	movq %reg0, %rsi	
	movq -80(%rbp), %reg3	

1
	idivl %reg0d	
	movq %reg1, %r13	

1
	movq $14901, %reg0	
	movq %reg0, %rcx	

1
	movq $3000, %rdi	
	movq %rdi, 168(%reg1)	

1
.Matrix.get_10:	
	movq $1, %reg0	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_50	

1
	movq %rcx, %reg1	
	movq -48(%rbp), %rcx	

1
	je .Main.main_13	
	movq $156, %reg0	

1
	movq $9556, %rdi	
	cmpl %edi, %reg2	

1
	movq 16(%rax), %reg1	
	subl %reg2, %reg3	

1
	movq %reg0, %rax	
	jmp .Main.main_22	

1
	sete %dil	
	jne .Main.main_7	

1
	movq $3, %rax	
	movq %rax, -24(%rbp)	

1
	jne .Complex.equal_2	
	cmpl $0, %r12d	

1
	movq $25316, %reg0	
	movq $8214, %r8	

1
	movq -56(%rbp), %rdi	
	negl %edi	

1
	imull %reg0	
	movq $63080, %rsi	

1
	je .Main.main_6	
	cmpq $Bool_vtable, 0(%rax)	

1
	movq $12, %rsi	
	movq -80(%rbp), %rax	

1
	movq %rax, -40(%rbp)	
	jmp .Main.main_43	

1
	movq $5, %reg0	
	jmp .A2I.c2i_12	

1
	movq %rdi, %reg1	
	jmp .Main.main_4	

1
	subl %eax, %esi	
	movq $34320, %rcx	

1
	idivl %r14d	
	movq %rax, %r14	

1
	call *%rax	
	movq $58921, %reg1	

1
	negl %r11d	
	movq %r11, %reg1	

1
	je .Main.main_172	
	movq $308, %reg0	

1
	je .Main.main_100	
	movq %reg0, %rax	

1
	movq $.string21, %r12	
	movq 0(%reg1), %reg2	

1
	movq $62649, %r12	
	movq 0(%reg1), %rax	

1
	movq $.string9, %rdi	
	movq %rbx, %r12	

1
	movq %rdi, %rsi	
	movq $2, %rdi	

1
	movq %rax, -112(%rbp)	
	movq $8, %rax	

1
	movq -96(%rbp), %reg1	
	movq %reg2, %rdi	

1
	movq $9042, %rax	
	movq $58652, %rdi	

1
	movq 352(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq 600(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq %rax, -48(%rbp)	
	movq $16, %rax	

1
	testq $1, %r8	
	je .Main.main_70	

1
	movq 16(%rax), %r12	
	movq $.string10, %reg2	

1
	movq $53595, %reg0	
	imull %reg1	

1
	movq $0, %reg0	
	movq %rdi, %rax	

1
	subl %eax, %reg1	
	movq -24(%rbp), %rax	

1
	movq %rdi, %rax	
	jmp .Main.main_101	

1
	je .Main.main_82	
	movq $27, %rsi	

1
	movq %rdi, %rax	
	jmp .Matrix.set_22	

1
	call *%reg0	
	movq $.string20, %reg0	

1
	movq -72(%rbp), %reg1	
	addl %reg2, %esi	

1
	movq 472(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	setle %dil	
	cmpl %edi, %reg2	

1
	testq $1, %reg0	
	je .Main.main_127	

1
	movq %rsi, %rax	
.Main.func_1:	

1
.Main.funccase_6:	
	movq 0(%rax), %r12	

1
	movq %reg0, %rax	
	jmp .Matrix.set_24	

1
	movq -16(%rbp), %reg1	
	movq %rdi, %reg3	

1
.A2I.i2c_19:	
	movq 0(%reg0), %rbx	

1
	movq $84, %reg0	
	movq $.string2_l, %reg1	

1
	movq $11440, %rdi	
	imull %reg1	

1
	movq %reg0, %reg1	
.Main.funcwhilei_1:	

1
	movq $List_vtable, 0(%rax)	
	movq $0, %reg1	

1
	addl %reg0, %r8d	
	movq -144(%rbp), %reg3	

1
	movq $17107, %rax	
	movq 0(%rbx), %r12	

1
	movq $0, %rdi	
	movq %rdi, 600(%reg1)	

1
.Dictionary.insert_3:	
	popq %reg0	

1
	movq $3000, %reg0	
	movq %reg0, 168(%reg1)	

1
	movq 48(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	subl %eax, %reg1	
	movq -16(%rbp), %reg3	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_59	

1
	subl %edi, %eax	
	movq $0, %r14	

1
	movq $12, %reg0	
	cmpl $0, %ebx	

1
	movq -112(%rbp), %reg1	
	negl %ecx	

1
	movq $.string10, %rax	
	movq 0(%reg1), %r12	

1
	movq $3000, %rdi	
	movq %rdi, 216(%rax)	

1
	imull %reg0	
	movq $19020, %reg1	

1
	movq %rsi, %reg1	
	movq $5, %reg2	

1
	movq $empty_string, %rax	
	movq %rax, %reg1	

1
	je .Main.func_2	
	cmpq $Bool_vtable, 0(%reg0)	

1
	movq -112(%rbp), %rsi	
	movq -128(%rbp), %reg3	

1
	je .Bar.new_4	
	cmpq $Bazz_vtable, 0(%rbx)	

1
	jne .Matrix.set_62	
	movq %reg0, 200(%rax)	

1
	je .Main.main_177	
	movq $145, %rsi	

1
	negl %reg0	
	movq $11440, %reg1	

1
	addl %eax, %edi	
	movq $1, %reg2	

1
	movq %rdi, %reg1	
	movq -48(%rbp), %rdi	

1
	sete %sil	
	jne .Matrix.get_62	

1
	.quad Object.type_name	
	.quad ListNode.push	

1
	movq %reg0, -16(%rbp)	
	movq %rdx, %reg3	

1
	jne .Matrix.set_15	
	movq %rdi, 48(%rax)	

1
	movq $3000, %reg0	
	movq %reg0, 128(%rax)	

1
	movq 152(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	.text 	
	.globl A2I.new	

1
	call Razz.new	
	jmp .Bar.new_6	

1
.Cons.sort_1:	
	movq 16(%reg0), %rdx	

1
	movq %reg0, 656(%rax)	
	movq $3000, %reg0	

1
	.type Bar.foo, @function	
Bar.foo:	

1
.Main.main_20:	
	movq 0(%reg0), %reg1	

1
	movq 0(%rbx), %rax	
	movq 136(%rax), %rax	

1
	movq %rax, %reg1	
	movq $.string6, %rax	

1
	movq 440(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq -168(%rbp), %reg1	
	addl %reg1d, %reg2	

1
	movq %reg0, %r12	
	cmpl $0, %ebx	

1
	jne .Matrix.get_45	
	movq 144(%reg0), %reg0	

1
	call getmem	
	movq $Nil_vtable, 0(%reg0)	

1
	movq %rax, %reg1	
.Main.main_19:	

1
	addl %edi, %reg1	
	movq %reg2, 56(%reg3)	

1
	jg .Main.main_20	
	movq $29524, %r12	

1
	imull %reg0d	
	movq -136(%rbp), %reg0	

1
	cmpq $String_vtable, 0(%rax)	
	je .Main.main_6	

1
.Razz.new_6:	
	movq %rax, 16(%rbx)	

1
	je .Main.main_59	
	movq -160(%rbp), %rax	

1
	.quad .string14_l	
	.quad 4	

1
	movq %reg0, %rdi	
	movq $62331, %reg0	

1
	testq $1, %reg0	
	je .Cons.insert_5	

1
	idivl %reg0	
	movq -112(%rbp), %reg2	

1
	movq -104(%rbp), %reg1	
	movq -96(%rbp), %rcx	

1
	movq $12, %r8	
	movq -24(%rbp), %reg2	

1
	movq -24(%rbp), %reg1	
	sete %reg2l	

1
	imull %reg0	
	movq -40(%rbp), %rsi	

1
	movq %rbx, %rax	
	addl %eax, %reg3	

1
	movq %rax, %r12	
	jmp .Main.main_31	

1
Main.funcifi:	
	pushq %reg0	

1
	.quad 1	
	.quad Yaz.new	

1
	subl %reg0, %ecx	
	movq $43604, %rax	

1
	je .Main.main_4	
	movq $4, %reg0	

1
	movq $12591, %reg0	
	movq $38801, %reg1	

1
	movq 8(%reg0), %rbx	
	movq 0(%rax), %reg3	

1
	jne .Main.main_123	
	movq %reg0, %reg1	

1
	call *%rax	
	movq 392(%reg1), %r12	

1
	sete %reg0b	
	jne .Main.main_4	

1
.Main.main_149:	
	movq -56(%rbp), %reg1	

1
	testq $1, %rsi	
	je .Main.main_82	

1
.Bar.new_2:	
	call Foo.new	

1
	movq -72(%rbp), %rsi	
	movq -48(%rbp), %rax	

1
	movq -112(%rbp), %reg1	
	addl %reg2, %edi	

1
	subl %edi, %eax	
	movq $43177, %rdi	

1
	movq 144(%reg0), %reg0	
	movq 16(%rbx), %reg2	

1
	movq 72(%rax), %rax	
	movq 16(%rbx), %rdi	

1
	.quad 5	
	.quad Foo.new	

1
	subl %reg0, %reg1	
	movq $0, %rdi	

1
.Cons.rcons_2:	
	movq 0(%rax), %r13	

1
	je .Main.main_36	
	movq $180, %reg0	

1
	.string "true"	
.string6:	

1
	movq $0, %reg0	
	movq %reg0, 288(%rax)	

1
	movq %reg0, %r13	
	jmp .Main.main_3	

1
	movq %rdi, 520(%rax)	
	movq $3000, %rdi	

1
.Main.main_90:	
	movq -152(%rbp), %reg1	

1
	call out_error	
.Main.main_116:	

1
	movq $3000, %rdi	
	movq %rdi, 208(%rax)	

1
	movq -128(%rbp), %rax	
	movq -136(%rbp), %rdi	

1
	je .Main.main_132	
	movq $88, %reg0	

1
	movq 664(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq %rdi, 624(%reg1)	
	movq $0, %rdi	

1
	movq %reg0, %reg1	
.Main.main_160:	

1
	movq $10809, %reg0	
	subl %eax, %r8d	

1
	movq -152(%rbp), %rsi	
	movq -144(%rbp), %reg3	

1
	movq -80(%rbp), %reg1	
	movq -144(%rbp), %rdi	

1
.Matrix.get_19:	
	movq $4, %rcx	

1
	movq %rax, -16(%rbp)	
	movq $604, -24(%rbp)	

1
	jg .Main.main_94	
	movq %reg0, %rsi	

1
	je .Main.main_8	
	movq $7, %reg0	

1
	movq %rcx, %r13	
	movq %reg2, %rdi	

1
	subq $176, %rsp	
	pushq %rbx	

1
	movq %rdi, %reg1	
	movq $0, %rcx	

1
	je .Main.main_92	
	movq %reg0, %rsi	

1
	testq $1, %rcx	
	je .Main.main_115	

1
	call *%rax	
	movq 112(%reg1), %r12	

1
.Razz.new_20:	
	movq 48(%rbx), %rdx	

1
	setl %r12b	
	jge .Main.main_7	

1
.Main.main_162:	
	movq %reg0, %rax	

1
	subl %eax, %reg1	
	movq $25241, %rax	

1
	movq %reg0, 24(%reg1)	
.Main.new_3:	

1
	movq %rdi, 688(%rax)	
	movq $0, %rdi	

1
	movq -24(%rbp), %reg1	
	subl %eax, %esi	

1
	addl %eax, %reg1	
	movq -56(%rbp), %reg3	

1
	je .Main.main_9	
	movq -168(%rbp), %reg1	

1
	call Bar.new	
	jmp .Razz.new_11	

1
	subl %eax, %edi	
	movq $23915, %rax	

1
	movq %reg0, %reg1	
	jmp .Main.main_46	

1
	movq $62331, %reg0	
	subl %eax, %reg2	

1
.Main.main_35:	
	movq -112(%rbp), %reg1	

1
	movq $4, %reg0	
	movq $.string6_l, %rdi	

1
.Main.main_69:	
.Main.main_67:	

1
	call Object.new	
	jmp .Main.main_2	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_24	

1
	cmpl %reg0d, %r13d	
	sete %reg0b	

1
	je .Main.main_173	
	movq $145, %rsi	

1
	movq %rax, %r12	
	call Bool.new	

1
	movq $12, %r14	
	movq $10, %reg1	

1
	idivl %esi	
	movq -152(%rbp), %rsi	

1
	movq $52290, %rsi	
	imull %esi	

1
	idivl %reg0	
.Matrix.set_24:	

1
	movq %rdi, %rax	
	movq -32(%rbp), %rdi	

1
	call Main.new	
	cmpl $0, %r12d	

1
	imull %edi	
	movq $9556, %reg1	

1
	jmp .CellularAutomaton.evolve_1	
.CellularAutomaton.evolve_2:	

1
	movq 88(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
ListNode.push:	
	pushq %reg0	

1
	setl %r13b	
	jge .Main.main_10	

1
	movq %r12, %reg1	
	movq 8(%reg2), %r14	

1
	addl %reg0, %ebx	
	movq %rbx, %rax	

1
	je .Main.main_38	
	movq $13, %reg0	

1
	movq %rdi, %rax	
	movq $19369, %rdi	

1
	call *%reg0	
	jmp .Main.main_48	

1
	movq %rax, 72(%rbx)	
	movq $1, %rax	

1
	call *%reg0	
	movq $.string12, %rax	

1
	jne .Matrix.get_14	
	movq $1, %reg0	

1
	movq $35237, %reg0	
	subl %reg0d, %reg1	

1
	sete %r8b	
	jne .Matrix.set_43	

1
.Main.main_73:	
	movq -128(%rbp), %rsi	

1
	subl %eax, %reg1	
	movq -16(%rbp), %rcx	

1
	movq %reg0, %r14	
	movq $.string11, %r15	

1
.Main.main_11:	
	movq $5, %reg0	

1
	movq %reg0, %rax	
	jmp .Bar.new_11	

1
	call Bool.new	
	movq %r13, 8(%rax)	

1
	.quad 2	
.string15_l:	

1
	movq 16(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	je .Main.main_82	
	movq %reg0, %reg1	

1
	movq 0(%rax), %reg1	
	movq 128(%reg1), %reg1	

1
	imull %reg0	
	movq %r13, %rsi	

1
	movq 712(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq $34313, %reg0	
	movq 0(%reg1), %rax	

1
	.quad .string9_l	
	.quad 8	

1
	movq $0, %reg0	
	movq %reg0, 624(%rax)	

1
	je .Matrix.get_25	
	movq $49, %reg0	

1
	movq 48(%reg0), %reg0	
	movq %r13, %reg2	

1
	subl %reg0, %eax	
	movq $61208, %reg2	

1
	je .Main.main_82	
	movq %r15, %rax	

1
	movq -16(%rbp), %rbx	
	movq -24(%rbp), %rax	

1
	.quad 1	
.string0_l:	

1
	movq %reg0, 288(%rax)	
	movq $3000, %reg0	

1
	.globl DicNode.setNext	
	.type DicNode.setNext, @function	

1
	jg .Main.main_4	
	movq $1, %rdi	

1
	movq $6, %reg0	
	jmp .A2I.c2i_14	

1
	movq %rdx, %reg1	
	movq %reg2, %r12	

1
	movq -152(%rbp), %rsi	
	movq -152(%rbp), %reg2	

1
	je .Main.main_18	
	movq $164, %rsi	

1
	call *%rax	
	movq 528(%rbx), %rax	

1
	testq $1, %rax	
	je .Main.main_55	

1
	movq $23599, %rax	
	subl %reg1, %edi	

1
	je .Main.new_3	
	cmpq $Int_vtable, 0(%reg0)	

1
	movq %reg0, -32(%rbp)	
	movq %reg2, %rbx	

1
	movq %rdi, %rax	
	jmp .Matrix.set_42	

1
	movq %rdx, %reg1	
	movq $1, %r8	

1
.Matrix.set_4:	
	movq $3, %reg0	

1
	call *%reg0	
	movq 688(%reg1), %reg0	

1
	call *%r12	
	jmp .Main.main_10	

1
	je .Main.func_2	
	movq $37, %rsi	

1
	movq $1, %rdi	
	movq 24(%rbx), %rax	

1
	movq 720(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	idivl %esi	
	movq %reg1, -120(%rbp)	

1
	subl %r10d, %eax	
	movq %rax, %r10	

1
	movq %reg0, 160(%reg1)	
	movq %reg0, %reg1	

1
	movq %rax, 64(%rbx)	
	movq 0(%rbx), %rax	

1
	movq -152(%rbp), %rax	
	imull %reg2d	

1
	jmp .Matrix.get_7	
.Matrix.get_6:	

1
	jmp .A2I.c2i_12	
.A2I.c2i_11:	

1
	sete %r12b	
	jne .Main.main_3	

1
	jmp .Main.main_58	
.Main.main_57:	

1
	jmp .Razz.new_6	
.Razz.new_3:	

1
	.quad 1	
	.quad List.new	

1
	movq $63899, %rax	
	movq $18189, %reg1	

1
	movq -64(%rbp), %rax	
	movq -32(%rbp), %rdi	

1
	movq $5, %rdi	
	cmpl %edi, %eax	

1
	call *%reg0	
	movq 152(%rbx), %r12	

1
.Main.main_67:	
.Main.main_65:	

1
Foo_vtable:	
	.quad .string4	

1
	je .Cons.insert_5	
	movq $82, %reg0	

1
	movq $.string8, %rax	
	movq 0(%rbx), %r14	

1
	movq %rdi, -8(%rbp)	
	movq $100, %reg2	

1
	.size Main.funcwhilei, .-Main.funcwhilei	
	.globl Main.funcwhileb	

1
	call *%rax	
	movq 120(%rbx), %reg2	

1
	movq %reg0, 552(%rax)	
	movq $3000, %reg0	

1
.Main.main_5:	
	movq 0(%rbx), %r13	

1
	movq %r13, %rsi	
	movq -128(%rbp), %rax	

1
	movq $61569, %reg0	
	movq $2562, %reg1	

1
	movq %rdi, %reg1	
	movq $46167, %rdi	

1
	movq $8, %reg0	
	movq %reg0, -104(%rbp)	

1
	call *%reg0	
	movq 184(%reg1), %reg2	

1
.Main.main_164:	
.Main.main_122:	

1
.Main.main_7:	
	movq $0, %r12	

1
	movq -184(%rbp), %r9	
	subl %r9d, %eax	

1
	call *%reg0	
	movq 392(%rbx), %reg2	

1
	movq -176(%rbp), %rax	
	movq -136(%rbp), %rdi	

1
	movq %reg0, -56(%rbp)	
	movq $15, %reg0	

1
	cmpq $Bool_vtable, 0(%reg0)	
	je .Main.main_23	

1
	movq %rdi, 24(%rax)	
	movq $3000, %rdi	

1
.Matrix.mul_4:	
	movq $1, %rdi	

1
.string0_l:	
	.string "Baz"	

1
	movq -56(%rbp), %reg1	
	cmpl %esi, %eax	

1
	movq $55049, %reg0	
	negl %eax	

1
	movq $60913, %rcx	
	movq $0, %reg1	

1
	movq $19369, %rdi	
	addl %reg1, %eax	

1
	call *%reg0	
	movq 216(%reg1), %reg2	

1
	movq -72(%rbp), %reg1	
	movq %reg2, %rsi	

1
.Main.func_1:	
	cmpq $String_vtable, 0(%reg0)	

1
	subl %eax, %edi	
	movq %r12, %reg3	

1
	movq $51925, %rax	
	movq 0(%rbx), %reg2	

1
	movq 128(%reg0), %reg0	
	movq 16(%reg1), %reg2	

1
	movq $Complex_vtable, 0(%rax)	
	movq $0, %rdi	

1
	jge .A2I.i2a_3	
	movq 0(%reg0), %reg1	

1
.Main.new_1:	
	movq $1, %reg0	

1
	movq -80(%rbp), %reg1	
	movq -80(%rbp), %rdi	

1
	call *%reg0	
	movq -24(%rbp), %rdx	

1
	movq %rsp, %rbp	
	movq $208, %reg2	

1
	je .Main.main_141	
	movq $112, %reg0	

1
	movq -144(%rbp), %reg1	
	movq -80(%rbp), %reg3	

1
	movq $.string9, %reg0	
	movq 16(%reg1), %r12	

1
	movq %reg0, 680(%reg1)	
	movq $0, %reg0	

1
	movq %rdi, %reg1	
	call List.new	

1
	movq %reg0, %rdi	
	movq %rdi, 72(%rax)	

1
	testq $1, %r8	
	je .Main.main_101	

1
	movq %rdi, %rax	
.Main.main_157:	

1
	je .Main.main_51	
	movq $34, %reg0	

1
	negl %reg0d	
	subl %reg0d, %eax	

1
	movq $5137, %reg0	
	imull %edi	

1
	movq $0, %rdi	
	movq %rdi, 472(%rax)	

1
	movq %r15, %reg1	
	movq %r14, %reg3	

1
	addl %esi, %reg1	
	negl %reg1	

1
	movq $0, %rdi	
	movq %rdi, 312(%reg1)	

1
	je .Main.out_whatever_2	
	cmpq $IO_vtable, 0(%rdi)	

1
	movq %r12, %r13	
	movq $2, %rax	

1
	cmpl %reg0, %edi	
	setle %sil	

1
	movq %rdi, 144(%rax)	
	movq %rdi, %rax	

1
	movq -80(%rbp), %rax	
	cmpl %eax, %reg3	

1
	je .Main.main_14	
	movq $21, %rsi	

1
	movq -144(%rbp), %rax	
	addl %edi, %reg3	

1
	movq $34313, %r12	
	movq 0(%reg1), %reg2	

1
	movq %rax, %r12	
	movq %reg2, %r13	

1
	movq %rbx, %rax	
	movq %r9, %reg3	

1
	testq $1, %rax	
	je .Main.main_47	

1
	jmp .Main.new_3	
.Main.new_9:	

1
	testq $1, %r9	
	je .Main.main_92	

1
	movq %reg0, 656(%reg1)	
	movq $0, %reg0	

1
	subl %reg0, %edi	
	cmpl %edi, %eax	

1
.Bar.new_12:	
	movq 32(%reg0), %reg1	

1
	movq $3000, %rdi	
	movq %rdi, 520(%rax)	

1
	.type CellularAutomaton.print, @function	
CellularAutomaton.print:	

1
.Main.main_59:	
	movq 0(%rax), %r13	

1
	jmp .CellularAutomaton.cell_left_neighbor_2	
.CellularAutomaton.cell_left_neighbor_1:	

1
	movq %rdi, 712(%rax)	
	movq $0, %rdi	

1
	movq $0, %reg0	
	movq %reg0, 304(%reg1)	

1
	movq $15798, %reg0	
	subl %eax, %reg2d	

1
	movq $168, %reg0	
	movq $.string5_l, %reg1	

1
	.quad .string8_l	
	.quad 54	

1
	movq %reg0, 8(%reg1)	
	movq %reg1, 16(%rbx)	

1
	movq %rax, %reg1	
	movq $12, %rdi	

1
	addl %reg0, %ebx	
	movq $47041, %rax	

1
	negl %edi	
	movq %reg1, 8(%reg2)	

1
	je .Main.main_12	
	movq $154, %reg0	

1
	movq %reg0, %reg1	
	movq -128(%rbp), %r9	

1
	call *%rbx	
	movq -72(%rbp), %reg2	

1
	movq 8(%r12), %reg1	
	movq 0(%rbx), %r13	

1
	movq $5, %reg0	
	addl %eax, %reg2	

1
	movq %rdi, 320(%reg1)	
	movq $3000, %rdi	

1
	movq -112(%rbp), %reg1	
	movq -136(%rbp), %rdi	

1
	movq %rdi, %rbx	
	movq $4, %r12	

1
	movq $0, %rax	
.A2I.c2i_20:	

1
	movq %r13, %rsi	
	addl %esi, %reg3	

1
	idivl %ecx	
	movq $17815, %reg1	

1
	movq %reg0, %r14	
	movq %r13, %reg0	

1
	addl %edi, %reg1	
	movq -136(%rbp), %rdi	

1
	sete %cl	
	jne .Matrix.get_47	

1
	movq 304(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq 536(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq $9, %reg0	
	cmpl %esi, %edi	

1
	movq %r12, %reg1	
	subl %eax, %reg3	

1
	movq %rdi, 664(%rax)	
	movq $0, %rdi	

1
	movq $13076, %rdi	
	imull %edi	

1
.Main.main_6:	
	movq $.string14, %reg0	

1
	.string "B\\n"	
.string8:	

1
.Cons.rev_2:	
	movq 0(%rax), %reg1	

1
.Main.main_110:	
	cdq	

1
.Main.main_3:	
	cmpl $0, -24(%rbp)	

1
.Main.main_124:	
	movq %rbx, %rax	

1
	movq %rdi, 128(%reg1)	
	movq %rdi, %reg1	

1
	movq %rdi, %rax	
	jmp .Main.main_52	

1
	movq $11513, %reg0	
	movq %reg0, %rsi	

1
	call *%reg0	
.List.insert_3:	

1
	call *%rax	
	jmp .Main.main_16	

1
	subl %eax, %r8d	
	movq $10464, %r9	

1
	movq %rdi, %rax	
	jmp .Main.main_122	

1
	movq %reg0, %rax	
	jmp .Matrix.set_16	

1
.Main.main_75:	
	movq -16(%rbp), %rax	

1
.Main.main_10:	
	movq %r12, %rdi	

1
	movq %rax, 8(%reg1)	
	movq 8(%reg1), %rdi	

1
	movq $33976, %reg0	
	addl %reg1, %eax	

1
	movq %r12, %rax	
	movq %r15, %reg3	

1
	movq %rbx, %rax	
	movq -88(%rbp), %rdi	

1
	movq %reg0, %rax	
	movq -32(%rbp), %reg0	

1
	movq %rax, 16(%rbx)	
	movq %rbx, %rax	

1
	setl %reg0	
	jmp .Main.main_137	

1
	movq 168(%reg0), %reg0	
	jmp .Matrix.get_55	

1
	movq $11, %reg0	
	cmpl $0, %reg1d	

1
	movq -64(%rbp), %rdi	
	subl %reg2, %eax	

1
.Main.main_138:	
	movq -168(%rbp), %rsi	

1
	movq $1823, %rax	
	movq $177, %rsi	

1
	movq 8(%rbx), %r12	
	movq 24(%rbx), %reg2	

1
	movq $58688, %reg0	
	movq %reg0, %r12	

1
	movq 8(%rdi), %reg1	
	negl %eax	

1
	movq -184(%rbp), %reg1	
	movq -32(%rbp), %rdi	

1
	jge .A2I.a2i_aux_2	
	movq $10, %reg0	

1
.Main.func_6:	
	movq $.string10, %reg0	

1
.Main.main_33:	
	call Int.new	

1
	movq 712(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	negl %reg0d	
	movq 0(%reg1), %rax	

1
	movq 144(%reg0), %reg0	
	movq 16(%reg1), %rdi	

1
	cmpl $0, 24(%rbx)	
	movq 24(%rbx), %rax	

1
	addl %reg0, %eax	
	movq %rax, -64(%rbp)	

1
	movq -24(%rbp), %reg1	
	negl %ecx	

1
	movq -128(%rbp), %rax	
	subl %reg2, %edi	

1
	.size List.isNil, .-List.isNil	
	.globl List.cons	

1
	movq $0, %r14	
	movq 0(%reg1), %reg2	

1
	movq %r12, %reg1	
	negl %reg1d	

1
	movq -88(%rbp), %reg1	
	movq %r13, %reg3	

1
DicNode.init:	
	pushq %rbp	

1
	movq $4, %reg0	
	movq $22, %reg1	

1
	addl %ecx, %reg1	
	movq $12, %reg2	

1
	je .Main.main_151	
	movq $115, %rsi	

1
	call CellularAutomaton.new	
	cmpl $0, %eax	

1
.Dictionary.get_4:	
	movq 8(%rax), %rdx	

1
.Razz.new_5:	
	movq %reg0, %reg1	

1
.Matrix.get_60:	
	movq $5, %reg0	

1
	movq -184(%rbp), %rsi	
	imull %esi	

1
	movq $6, %reg0	
	movq %reg0, -120(%rbp)	

1
.Razz.new_1:	
	cmpq $Bar_vtable, 0(%rbx)	

1
	movq %reg0, %rax	
	subl %r8d, %reg3	

1
	movq -16(%rbp), %r9	
	subl %r9d, %reg2	

1
	je .Main.main_118	
	movq $70, %rsi	

1
	movq %rbx, %reg1	
	movq -168(%rbp), %reg3	

1
	movq $15, %reg0	
	movq $.string5_l, %rdi	

1
	movq -104(%rbp), %reg1	
	subl %eax, %esi	

1
	movq -152(%rbp), %rsi	
	movq %reg2, %reg3	

1
	je .Main.main_1	
	movq $1, %rax	

1
	jne .A2I.c2i_15	
	movq $7, %reg0	

1
.Matrix.get_29:	
	jmp .Matrix.get_39	

1
	.globl ListNode.next	
	.type ListNode.next, @function	

1
	movq -128(%rbp), %rax	
	addl %esi, %eax	

1
	movq 40(%rax), %rax	
	movq %r12, %reg2	

1
	movq $53961, %rax	
	movq $30773, %rdi	

1
	movq $47353, %reg0	
	negl %reg1	

1
	movq 512(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq %rsp, %rbp	
	movq $72, %rdi	

1
	movq $17, %rax	
	movq %rax, -120(%rbp)	

1
	movq -160(%rbp), %rdi	
	negl %reg2	

1
	movq 16(%rax), %reg1	
	addl %reg2, %reg3	

1
	cmpq $Bazz_vtable, 0(%rbx)	
	je .Bar.new_2	

1
	sete %reg0b	
	jne .A2I.a2i_3	

1
	movq $26355, %reg0	
	movq 0(%rbx), %r12	

1
	movq $5, %reg0	
	subl %reg1, %edi	

1
	idivl %reg0	
.Matrix.get_50:	

1
	imull %edi	
	movq $17975, %rdi	

1
	testq $1, %rax	
	je .DicNode.insert_6	

1
	movq %reg0, %rsi	
	movq -136(%rbp), %reg0	

1
	movq 8(%reg0), %r15	
	movq 0(%reg0), %r14	

1
	movq $62150, %rax	
	movq %rax, %rcx	

1
Cons.insert:	
	pushq %rbp	

1
	movq %rax, %r12	
	movq $4, %reg2	

1
	je .Main.main_99	
	movq $64, %reg0	

1
	pushq %r13	
	movq %rdi, %r12	

1
	movq $0, %reg0	
	movq %reg0, 456(%rax)	

1
	movq %r13, %r12	
.Main.main_1:	

1
.Main.main_5:	
	movq $.string9, %rax	

1
	movq $64464, %reg0	
	movq $0, %r8	

1
	movq -104(%rbp), %reg1	
	movq -128(%rbp), %reg3	

1
	movq -168(%rbp), %rsi	
	movq -32(%rbp), %rax	

1
	jmp .Matrix.get_42	
.Matrix.get_41:	

1
	movq 24(%reg0), %rdx	
	movq 0(%rdx), %rax	

1
	movq -48(%rbp), %reg1	
	addl %reg2, %ecx	

1
	movq %reg0, 32(%reg1)	
.Main.new_1:	

1
	movq $33866, %rdi	
	subl %edi, %eax	

1
	ret	
	.size ListNode.init, .-ListNode.init	

1
	addl %edi, %reg1	
	movq -136(%rbp), %reg3	

1
	movq %rax, %reg1	
	movq %reg1, %r13	

1
	movq $3000, %reg0	
	movq %reg0, 624(%reg1)	

1
	je .Main.main_175	
	movq $145, %reg0	

1
	negl %eax	
	movq %reg1, 8(%rdi)	

1
	movq -24(%rbp), %rsi	
	negl %esi	

1
	movq 120(%rbx), %rbx	
	movq %rax, %rdi	

1
	movq $0, %reg0	
	movq %reg0, 560(%rax)	

1
	movq 8(%reg0), %reg1	
	call String.length	

1
	movq 568(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq 8(%reg0), %rbx	
	movq 0(%reg2), %reg3	

1
	call *%r12	
	movq 736(%reg1), %rax	

1
	movq $10280, %reg0	
	movq 0(%rbx), %rax	

1
	movq 72(%reg0), %reg0	
	jmp .Matrix.get_22	

1
.Main.main_18:	
.Main.main_16:	

1
	addl %reg0, %ebx	
	movq %reg2, %rax	

1
	movq $58, %rsi	
	movq $.string3_l, %reg1	

1
	negl %ecx	
	movq $30797, %reg1	

1
	movq $0, %rsi	
	movq $.string4_l, %rdi	

1
	movq $50, %rsi	
	movq $.string3_l, %reg1	

1
.Main.main_9:	
	movq 0(%rax), %r14	

1
	movq -136(%rbp), %reg1	
	movq -64(%rbp), %r8	

1
	movq $1, %rdi	
	movq 24(%rbx), %reg2	

1
	movq -24(%rbp), %rax	
	movq %rbx, %reg3	

1
	testq $1, %rcx	
	je .Main.main_172	

1
	call *%reg0	
	movq 408(%reg1), %reg0	

1
	movq %r13, %rsi	
	addl %reg2, %reg3	

1
.Main.main_40:	
.Main.main_38:	

1
	movq %rdi, %reg1	
	jmp .Main.main_108	

1
	addl %reg0, %edi	
	movq $30018, %rax	

1
	addl %edi, %reg1	
	movq $55318, %rdi	

1
	.quad Baz.main	
Bool_vtable:	

1
	movq $55662, %reg0	
	movq $0, %r15	

1
.Main.main_151:	
	movq -56(%rbp), %rax	

1
	movq %reg0, %rax	
	movq %rdi, %reg0	

1
	call *%rbx	
	movq -16(%rbp), %rbx	

1
	movq $10152, %rax	
	movq $18046, %reg1	

1
	movq $62420, %reg0	
	movq $31735, %reg1	

1
	movq %reg0, %rax	
	movq 48(%rbx), %rsi	

1
	je .Main.new_1	
	movq $2, %rsi	

1
	negl %reg0	
	movq -16(%rbp), %rcx	

1
	movq $2234, %rax	
	movq 0(%reg1), %r12	

1
	movq $36212, %rsi	
	negl %esi	

1
	je .Main.main_37	
	movq $34, %reg0	

1
	call *%rax	
	movq %r12, %r15	

1
	movq -152(%rbp), %reg1	
	imull %r8d	

1
	cmpq $Main_vtable, 0(%rax)	
	je .Main.new_3	

1
	movq -120(%rbp), %reg1	
	movq -48(%rbp), %reg3	

1
	movq $24320, %reg0	
	movq $3520, %reg1	

1
	movq -88(%rbp), %rsi	
	movq %reg2, %reg3	

1
	movq -32(%rbp), %rax	
	movq %rdi, %reg3	

1
	movq %rsi, %rcx	
	movq %rdi, %r8	

1
	call *%reg0	
	movq 504(%rbx), %reg0	

1
	movq $28260, %rax	
	subl %eax, %edi	

1
	ret	
	.size Matrix.elMul, .-Matrix.elMul	

1
	movq $13, %reg0	
	movq 0(%r12), %rax	

1
	movq $18, %reg0	
	movq %reg0, %reg1	

1
	.quad Object.type_name	
Bazz_vtable:	

1
	movq 200(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	jne .A2I.i2a_1	
	movq $.string7, %reg0	

1
	movq %rsi, %r12	
	movq 16(%reg2), %reg3	

1
	jmp .Main.main_49	
.Main.main_50:	

1
	subl %edi, %reg1	
	movq %reg2, -120(%rbp)	

1
	sete %reg0l	
	jne .Main.main_19	

1
	movq %reg0, %r12	
	movq $0, %rbx	

1
	movq %reg0, %rdi	
	movq $45332, %reg0	

1
	movq $2, %reg0	
	movq %reg0, 24(%reg1)	

1
	movq $41455, %rax	
	movq $64464, %reg1	

1
	movq $15487, %reg0	
	subl %edi, %eax	

1
	movq 128(%rax), %rax	
	movq %r12, %reg2	

1
	je .Main.funcifb_1	
	movq $1, %reg0	

1
	movq %r13, %rsi	
	movq 8(%rbx), %reg3	

1
	movq -152(%rbp), %r8	
	imull %r8d	

1
	movq %reg0, %rax	
	jmp .Main.main_67	

1
	addl %reg0, %reg1	
	movq %rax, -16(%rbp)	

1
	subl %edi, %eax	
	movq %rax, -136(%rbp)	

1
	subl %eax, %r10d	
	movq $61569, %rax	

1
	movq 472(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
Main.iota:	
	pushq %reg0	

1
	idivl %edi	
	movq 0(%reg1), %reg2	

1
	testq $1, %rax	
	je .Main.main_69	

1
	movq %rdi, %rax	
	jmp .Main.main_2	

1
	jge .Main.main_68	
	movq -168(%rbp), %rax	

1
	movq $9886, %rbx	
	imull %reg1	

1
	sete %sil	
	jne .Main.main_62	

1
	movq $17155, %reg0	
	movq $30215, %reg1	

1
	movq %reg0, %reg1	
	addl %r8d, %reg3	

1
	call *%reg0	
	movq 40(%reg1), %reg0	

1
	.type DicNode.get, @function	
DicNode.get:	

1
	je .Razz.new_8	
	cmpq $Foo_vtable, 0(%rbx)	

1
	movq %rdi, %reg1	
	movq 48(%reg2), %rsi	

1
	call *%r12	
	movq 600(%rbx), %rax	

1
	addl %reg0, %reg1	
	movq $8340, %rdi	

1
	movq %reg0, 208(%reg1)	
	movq $0, %reg0	

1
	negl %r10d	
	addl %r10d, %reg1	

1
	movq %reg0, %reg1	
	movq 16(%rdi), %rax	

1
	movq $58, %rsi	
	movq $.string3_l, %rdi	

1
	movq -24(%rbp), %reg1	
	movq %reg1, %reg2	

1
	movq %rax, %rbx	
	movq $3, %rax	

1
	movq $13131, %rax	
	addl %eax, %reg2	

1
.Cons.insert_2:	
	movq 0(%rax), %r13	

1
	movq 56(%reg0), %reg0	
	movq -24(%rbp), %reg2	

1
	movq $52, %rax	
	movq 0(%reg1), %r12	

1
	movq -16(%rbp), %reg1	
	movq %rdi, %rsi	

1
	movq $49288, %rax	
	movq $5606, %r11	

1
	movq $2438, %rsi	
	negl %reg1	

1
	movq %r13, %reg1	
	addl %reg1d, %eax	

1
	sete %r8b	
	jne .Matrix.get_1	

1
	call *%reg0	
	movq 496(%rbx), %reg2	

1
	call *%rbx	
	movq $1, %rax	

1
.Main.main_58:	
	movq 0(%reg0), %reg1	

1
	movq %reg0, 688(%rax)	
	movq $3000, %reg0	

1
	.globl Foo.y	
	.type Foo.y, @function	

1
	movq $30797, %reg0	
	movq $3233, %reg1	

1
	call *%reg0	
	movq 472(%rbx), %rax	

1
	testq $1, %rax	
	je .Bar.new_12	

1
	call *%rax	
	movq 704(%rbx), %r12	

1
	movq -96(%rbp), %reg1	
	subl %reg1d, %eax	

1
	call out_error	
.Main.main_157:	

1
	call *%reg0	
	cmpl $0, -24(%rbp)	

1
	idivl %reg0	
	movq -16(%rbp), %rcx	

1
	idivl %edi	
	movq $52306, %reg1	

1
	imull %esi	
	movq $19020, %reg1	

1
	movq -16(%rbp), %rax	
	subl %r8d, %reg3	

1
	movq 104(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq %rbx, %r11	
	subl %r11d, %reg2	

1
	movq $0, %rdi	
	movq %rax, %rsi	

1
	movq -40(%rbp), %rax	
	movq %rsi, %reg3	

1
	je .Main.main_53	
	movq -136(%rbp), %rax	

1
	movq %rax, %r13	
	movq $12, %reg2	

1
	call *%reg0	
	movq 552(%reg1), %reg0	

1
	movq -16(%rbp), %reg1	
	movq -96(%rbp), %rax	

1
	movq $60238, %reg0	
	movq $0, %rbx	

1
.Main.iota_3:	
	movq 0(%rax), %reg1	

1
.Main.main_17:	
	movq -40(%rbp), %rax	

1
.A2I.i2c_18:	
.A2I.i2c_16:	

1
.Main.main_140:	
	movq -168(%rbp), %rsi	

1
	movq $55626, %reg0	
	imull %reg1	

1
	movq $.string11, %reg0	
	movq %rbx, %r12	

1
	je .Main.main_189	
	movq $316, %rsi	

1
	je .Main.main_41	
	movq $15, %rsi	

1
	movq $0, %rdi	
	movq %rdi, 688(%rax)	

1
	movq -40(%rbp), %rdx	
	movq %rdx, -144(%rbp)	

1
	movq $49, %rsi	
	movq $.string3_l, %reg1	

1
	movq 64(%rax), %rax	
	movq 24(%rbx), %rdi	

1
	movq -96(%rbp), %rax	
	subl %reg2, %reg3d	

1
	movq %reg0, 8(%rbx)	
	movq 0(%rbx), %reg0	

1
	movq %rsp, %reg1	
	movq $72, %rdi	

1
	jne .Matrix.set_8	
	movq %reg0, 32(%reg1)	

1
	addl %reg0, %ecx	
	movq $46874, %reg2	

1
	jne .Matrix.set_43	
	movq %reg0, 136(%reg1)	

1
	movq %rax, 8(%reg1)	
	movq 0(%reg1), %rax	

1
	movq -64(%rbp), %reg1	
	subl %reg1d, %eax	

1
.Foo.new_11:	
	movq %rax, 32(%reg1)	

1
	movq %r12, %rax	
	movq -72(%rbp), %reg3	

1
	je .Main.main_6	
	movq $151, %reg0	

1
	movq %rdi, 32(%rax)	
	movq %rdi, %rax	

1
Bazz.new:	
	pushq %reg0	

1
	movq 304(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
.List.insert_3:	
	popq %reg0	

1
	movq $23599, %reg0	
	subl %eax, %edi	

1
	movq 64(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq $16693, %rax	
	movq $2211, %reg1	

1
	.quad .string21_l	
	.quad 2	

1
.Main.main_83:	
.Main.main_81:	

1
.DicNode.insert_6:	
	movq 24(%rbx), %rdx	

1
	call Object.copy	
	movq %reg0, %r13	

1
	movq 8(%rbx), %reg1	
	movq %reg2, %rdi	

1
	movq $61731, %reg0	
	movq %reg0, %reg1	

1
	je .Main.main_5	
	movq $0, %reg0	

1
	movq 56(%rax), %rax	
	movq -32(%rbp), %reg2	

1
	call *%rax	
	movq $2143, %reg1	

1
	movq %reg0, 384(%rax)	
	movq $3000, %reg0	

1
	je .Main.main_153	
	movq $115, %reg0	

1
	negl %ecx	
	movq -128(%rbp), %rax	

1
.Foo.new_1:	
	cmpq $Bar_vtable, 0(%reg0)	

1
.Cons.insert_1:	
	movq 8(%rbx), %r13	

1
.Bar.new_20:	
	movq 48(%rbx), %reg1	

1
.Main.iota_1:	
	movq %reg0, %rdi	

1
	movq 128(%rax), %rax	
	movq 16(%rbx), %rdi	

1
	je .Main.main_69	
	movq $19, %rsi	

1
	jne .A2I.i2c_7	
	movq $.string10, %reg0	

1
	.quad Object.type_name	
	.quad Bar.setI	

1
	.size Cons.new, .-Cons.new	
	.globl Nil.new	

1
	testq $1, %reg0	
	je .Main.main_137	

1
	movq $3000, %rdi	
	movq %rdi, 248(%reg1)	

1
	.quad Foo.foo	
Bar_vtable:	

1
	movq 24(%reg0), %rax	
	movq %r12, %reg3	

1
	movq %rdi, 248(%reg1)	
	movq $0, %rdi	

1
	call *%reg0	
	movq 224(%reg1), %reg0	

1
	movq $11, %reg0	
	movq $0, %reg1	

1
	je .Main.main_4	
	movq $2, %reg0	

1
	addl %reg0, %esi	
	movq -128(%rbp), %rax	

1
	movq $.string7, %rdi	
	movq %rbx, %reg2	

1
	cmpl %ebx, %r12d	
	sete %reg2	

1
	movq 8(%reg0), %reg1	
	movq %rdi, %reg3	

1
	movq %rdi, 8(%rax)	
	movq 16(%rax), %rdi	

1
Nil.rev:	
	pushq %rbp	

1
	movq $CellularAutomaton_vtable, 0(%reg0)	
	movq %reg0, %reg1	

1
	call out_error	
.Foo.new_1:	

1
	je .Main.main_9	
	movq $.string7, %reg0	

1
	movq 56(%r12), %r12	
	movq 24(%rax), %rdi	

1
	.quad 42	
Razz_vtable:	

1
	movq $.string12, %rdi	
	movq %rbx, %r12	

1
.Main.main_15:	
	movq 0(%rax), %r15	

1
	call *%r12	
	movq 320(%reg1), %reg2	

1
	movq $.string17, %rbx	
	movq %rbx, %rdi	

1
	movq $1, %rdi	
	movq %rdi, %rbx	

1
	imull %reg0	
	movq $63080, %reg1	

1
	call *%reg0	
	movq $28968, %reg1	

1
	movq $0, %reg0	
	movq %reg0, 72(%rbx)	

1
	movq -160(%rbp), %reg1	
	movq -40(%rbp), %reg3	

1
.A2I.a2i_6:	
.A2I.a2i_4:	

1
	movq $147, %rsi	
	movq $.string5_l, %rdi	

1
	movq $1, %reg0	
	movq $.string6, %rax	

1
	.quad 1	
.string7_l:	

1
	movq $59, %rsi	
	movq $.string5_l, %rdi	

1
	movq 8(%rax), %reg1	
	pushq %rax	

1
	movq %reg0, 584(%reg1)	
	movq $3000, %reg0	

1
	addl %edi, %eax	
	movq %rax, 16(%rbx)	

1
	movq 16(%reg0), %rax	
	negl %eax	

1
	call *%rax	
	movq 288(%reg1), %r12	

1
	jg .Main.main_2	
	call Matrix.new	

1
.Main.func_3:	
	movq 0(%rbx), %r12	

1
	movq %reg0, %rax	
	jmp .Matrix.set_55	

1
	movq $3000, %reg0	
	movq %reg0, 512(%reg1)	

1
	movq $0, %reg0	
	movq %reg0, 296(%reg1)	

1
	movq $49695, %reg0	
	movq $13131, %rax	

1
	movq $34533, %reg0	
	movq $48880, %reg1	

1
	call out_error	
.Matrix.set_12:	

1
.Main.funccase_4:	
	movq %reg0, %reg1	

1
	movq %rdi, 344(%reg1)	
	movq $3000, %rdi	

1
	je .CellularAutomaton.cell_at_next_evolution_7	
	movq $.string8, %rax	

1
	movq $21060, %rax	
	movq $19990, %reg1	

1
	movq $18391, %rdi	
	negl %edi	

1
	movq %reg0, %rbx	
	addl %reg2, %eax	

1
	imull %reg0	
	movq %reg1, %r12	

1
	call Razz.new	
	movq %reg0, 24(%rbx)	

1
	addl %reg0, %edi	
	movq $2, %reg2	

1
	je .Main.main_28	
	movq $10, %reg0	

1
	je .Main.main_86	
	movq %reg0, %rax	

1
	jne .A2I.c2i_17	
	movq $8, %rax	

1
	testq $1, %reg0	
	je .Main.print_list_5	

1
	setl %reg0l	
	jge .Main.main_30	

1
	negl %reg0	
	movq %reg1, %r12	

1
	idivl %edi	
	movq $13076, %reg1	

1
	movq %rax, %reg1	
	testq $1, %reg1	

1
	movq $4, %r12	
	call Int.new	

1
	movq -160(%rbp), %rax	
	movq %r8, %reg3	

1
	.size DicNode.name, .-DicNode.name	
	.globl DicNode.getCount	

1
	setle %reg0l	
	jg .Main.main_35	

1
	sete %r14b	
	jne .CellularAutomaton.cell_at_next_evolution_3	

1
	movq -80(%rbp), %rax	
	subl %reg2, %eax	

1
.Matrix.elMul_3:	
	movq -16(%rbp), %rdx	

1
	movq $228, %reg0	
	movq $.string5_l, %reg1	

1
	movq $13131, %rax	
	addl %reg1, %edi	

1
	je .Main.func2_1	
	movq $6, %r13	

1
	je .Main.main_34	
	movq $13, %rsi	

1
	cmpq $Int_vtable, 0(%rax)	
	je .Main.main_5	

1
	call out_error	
.Main.main_160:	

1
	movq $1, %rcx	
	movq 8(%rax), %rsi	

1
	imull %esi	
	movq $43617, %reg1	

1
	subl %eax, %reg1	
	movq $23915, %reg2	

1
	movq $12, %r8	
	movq -64(%rbp), %reg2	

1
	imull %reg0	
	movq $11513, %rdi	

1
	movq $168, %reg0	
	movq $.string2_l, %reg1	

1
	movq $3000, %reg0	
	movq %reg0, 168(%rax)	

1
	movq 24(%reg0), %reg1	
	sete %al	

1
	jne .A2I.i2a_1	
	movq $.string7, %rax	

1
	movq $60159, %reg0	
	movq %reg0, %r11	

1
	movq $3000, %rdi	
	movq %rdi, 240(%rax)	

1
	call *%r12	
	movq $.string8, %rax	

1
	movq 264(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq %rax, %r12	
	movq 0(%reg2), %reg3	

1
	.quad ListNode.init	
	.quad ListNode.get	

1
	movq -120(%rbp), %reg1	
	negl %esi	

1
	movq %rax, %r13	
	jmp .Main.iota_1	

1
.Main.main_4:	
	movq %rbx, %rax	

1
	call *%reg0	
	movq 32(%rbx), %reg0	

1
	movq %rax, %reg1	
	movq $41765, %rax	

1
	movq $Yaz_vtable, 0(%rax)	
	movq $0, %reg1	

1
	jne .Main.main_17	
	movq %reg0, %reg1	

1
	movq 328(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq %rsi, %rbx	
	movq %rbx, %r12	

1
	call *%reg0	
	movq 200(%rbx), %rax	

1
.Main.main_144:	
	movq %reg0, %rax	

1
	addl %ecx, %eax	
	movq -64(%rbp), %rcx	

1
	movq %reg0, %rax	
	movq -56(%rbp), %rax	

1
	movq -168(%rbp), %r9	
	imull %r9d	

1
	movq $177, %reg0	
	movq $0, %reg1	

1
	movq $90, %reg0	
	subl %edi, %esi	

1
	je .Main.main_4	
.Main.main_3:	

1
	imull %esi	
	movq $2438, %rsi	

1
	imull %reg0d	
	movq -128(%rbp), %reg0	

1
	movq 272(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq $14356, %reg0	
	subl %ebx, %eax	

1
	movq %reg0, %r13	
	jmp .Main.main_49	

1
.Main.main_138:	
	movq %reg0, %rsi	

1
	movq %rdx, %rsi	
	movq %reg2, %rdi	

1
	movq -96(%rbp), %rsi	
	movq -48(%rbp), %rax	

1
	movq -64(%rbp), %reg1	
	addl %reg2, %esi	

1
	movq -152(%rbp), %reg1	
	cmpl %esi, %reg3	

1
	movq -184(%rbp), %rax	
	subl %eax, %ecx	

1
	je .Main.main_13	
	movq $10152, %rax	

1
	je .Main.main_59	
	movq $49, %reg0	

1
	subl %eax, %esi	
	movq $48118, %rax	

1
	movq 224(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq $46509, %reg0	
	movq %reg0, %reg1	

1
	movq %rax, %rsi	
	movq %r13, %rax	

1
	subl %eax, %reg1d	
	movq $35037, %reg2	

1
	movq $2, %rbx	
	movq 0(%reg1), %reg2	

1
	movq -112(%rbp), %rax	
	movq %r15, %rsi	

1
	cmpq $Bar_vtable, 0(%rbx)	
	je .Bar.new_10	

1
.A2I.i2c_9:	
	movq $5, %reg0	

1
	movq $0, %rdi	
	movq %rdi, 592(%rax)	

1
	cmpq $Int_vtable, 0(%reg0)	
	je .Main.func_3	

1
	call *%r15	
	cmpl $0, %reg1d	

1
	addl %eax, %reg1	
	movq $28260, %rax	

1
	movq %reg0, %rax	
	jmp .Main.main_122	

1
	movq -88(%rbp), %rsi	
	addl %reg2, %reg3	

1
	movq -104(%rbp), %rax	
	cmpl %reg2, %esi	

1
	movq -80(%rbp), %rax	
	addl %reg2, %esi	

1
	movq $.string8, %reg0	
	movq %reg1, %r12	

1
	subq $40, %rsp	
	pushq %reg1	

1
	.globl Cons.head	
	.type Cons.head, @function	

1
	je .Main.main_70	
	movq %reg0, %reg1	

1
	je .Bazz.new_1	
	movq $39, %rsi	

1
	movq %reg0, 88(%rax)	
	movq $3000, %reg0	

1
	jne .Matrix.get_62	
	movq 200(%reg0), %reg0	

1
	call *%reg0	
	movq 296(%rbx), %reg2	

1
	movq $1, %reg0	
	jmp .Main.main_2	

1
	je .Main.main_174	
	movq $308, %rsi	

1
	movq $13, %r15	
	cmpl $0, %r13d	

1
	movq $3000, %reg0	
	movq %reg0, 32(%rax)	

1
	movq %rax, 8(%rbx)	
	call IO.new	

1
	.size List.isNil, .-List.isNil	
	.globl List.head	

1
	call *%reg0	
	movq 672(%rbx), %rax	

1
	movq $3000, %rdi	
	movq %rdi, 624(%reg1)	

1
	movq 72(%reg0), %reg0	
	movq 16(%rbx), %rdi	

1
	call *%reg0	
	movq 192(%reg1), %rax	

1
	addl %reg0, %reg1	
	movq %rax, 16(%reg3)	

1
	call *%r12	
	movq 56(%reg1), %r12	

1
	movq 480(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
.Main.main_13:	
	movq $4844, %reg0	

1
	call *%reg0	
	call List.new	

1
	movq %reg0, %rsi	
	movq -152(%rbp), %reg3	

1
	movq -56(%rbp), %rdi	
	negl %reg2	

1
	.size Dictionary.getHead, .-Dictionary.getHead	
	.globl Dictionary.setHead	

1
	je .Main.main_23	
	movq $13, %rsi	

1
	movq $46874, %rax	
	addl %reg1, %ecx	

1
	.size Main.new, .-Main.new	
	.globl ListNode.new	

1
.Main.main_24:	
	movq -8(%rbp), %reg1	

1
	negl %r11d	
	movq $48391, %reg1	

1
	movq %reg0, %reg1	
	movq 8(%reg2), %r14	

1
	addl %reg0, %eax	
	movq %r14, %rdi	

1
	je .Main.main_147	
	movq $112, %reg0	

1
	movq 16(%reg0), %rdi	
	cmpl %esi, %edi	

1
	jne .Matrix.get_6	
	movq 24(%reg0), %reg0	

1
	movq 120(%r12), %r12	
	movq 16(%rax), %rdi	

1
	movq -144(%rbp), %reg1	
	movq -48(%rbp), %reg3	

1
	movq -40(%rbp), %rax	
	movq -152(%rbp), %reg3	

1
	movq %r13, %rdi	
	movq $0, %reg2	

1
	movq $55662, %r14	
	movq $0, %r15	

1
	movq %rax, %reg1	
	movq $60606, %rax	

1
	movq %rdi, 704(%reg1)	
	movq $3000, %rdi	

1
	jg .Main.main_149	
	movq %reg0, %rdi	

1
	jmp .DicNode.insert_5	
.DicNode.insert_3:	

1
	movq %rdi, 328(%rax)	
	movq $3000, %rdi	

1
	cmpq $String_vtable, 0(%rsi)	
	je .Main.main_2	

1
.Main.main_48:	
	movq %reg0, %rdx	

1
	movq $9886, %rbx	
	imull %ebx	

1
	movq %rdi, 528(%rax)	
	movq $3000, %rdi	

1
	movq %reg0, %r14	
	movq 0(%r14), %reg0	

1
	jg .Main.main_84	
	movq %reg0, %reg1	

1
.Main.func_2:	
	movq 0(%reg0), %r12	

1
	je .Main.main_62	
	movq $49, %reg0	

1
	addl %reg0, %eax	
	cmpl $0, %reg2d	

1
	movq $3000, %rdi	
	movq %rdi, 536(%rax)	

1
	movq 504(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	movq -120(%rbp), %rsi	
	addl %esi, %eax	

1
	movq -96(%rbp), %rax	
	cmpl %eax, %reg3	

1
	jmp .Matrix.set_5	
.Matrix.set_4:	

1
	call *%r12	
	movq 544(%reg1), %r12	

1
	testq $1, %rdi	
	je .Main.main_33	

1
	subl %eax, %esi	
	movq -24(%rbp), %rax	

1
	movq %reg0, %reg1	
	addl %eax, %reg3d	

1
CellularAutomaton.cell_at_next_evolution:	
	pushq %rbp	

1
	movq %rdi, 24(%reg1)	
	movq 16(%reg1), %rdi	

1
.Main.funcwhilei_1:	
	movq $5, %rdi	

1
	movq %reg0, 456(%rax)	
	movq $3000, %reg0	

1
	movq %reg0, %rcx	
	movq -168(%rbp), %reg0	

1
	movq 8(%reg0), %r12	
	movq 16(%reg0), %reg2	

1
.Main.print_list_5:	
	movq 0(%reg0), %reg1	

1
	addl %edi, %reg1	
	movq $57963, %rdi	

1
	movq %reg0, %rax	
	jmp .Matrix.set_3	

1
List.sort:	
	pushq %reg0	

1
	movq -184(%rbp), %reg1	
	subl %eax, %ecx	

1
	jne .Matrix.set_34	
	movq %reg0, 112(%reg1)	

1
	movq $12, %rcx	
	movq -88(%rbp), %rax	

1
	jge .A2I.a2i_aux_2	
	movq $10, %rdi	

1
	testq $1, %rdi	
	je .Main.main_48	

1
	movq 0(%rax), %r14	
	movq 152(%r14), %r14	

1
	je .Main.main_20	
	movq $26, %reg0	

1
	jne .Matrix.set_58	
	movq %rdi, 184(%rax)	

1
	movq %reg0, 664(%rax)	
	movq $3000, %reg0	

1
	jne .Matrix.set_43	
	movq %reg0, 136(%rax)	

1
	movq $.string6, %r12	
	movq %r12, %reg1	

1
	testq $1, %rsi	
	je .Main.main_12	

1
	subl %reg0, %ecx	
	movq -112(%rbp), %reg3	

1
	addl %reg0, %reg1	
	movq %rdi, %r13	

1
	cmpq $Bar_vtable, 0(%reg0)	
	je .Razz.new_10	

1
	movq %rdi, %rax	
	jmp .Matrix.set_11	

1
	jne .Main.main_111	
	movq %reg0, %reg1	

1
	cmpq $Razz_vtable, 0(%rbx)	
	je .Razz.new_15	

1
	movq -32(%rbp), %reg1	
	subl %esi, %edi	

1
	testq $1, %rcx	
	je .Main.main_43	

1
	movq $213, %rsi	
	movq $.string5_l, %reg1	

1
	movq %rsp, %reg1	
	subq $176, %rsp	

1
	movq -96(%rbp), %rax	
	cmpl %reg2, %esi	

1
	movq $3000, %rdi	
	movq %rdi, 208(%reg1)	

1
	movq $Razz_vtable, 0(%rax)	
	movq %rax, %rbx	

1
	movq %rax, %reg1	
	movq %reg1, %rdi	

1
	movq 456(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	je .Main.main_11	
	cmpq $IO_vtable, 0(%rax)	

1
	jne .Matrix.get_17	
	movq 56(%reg0), %reg0	

1
	movq $50998, %reg0	
	addl %reg1, %reg2	

1
	je .Main.main_15	
	movq $21, %rsi	

1
	movq 16(%rbx), %reg1	
	movq %reg2, %rdi	

1
	movq $61139, %rax	
	movq 0(%rbx), %r12	

1
.Foo.new_10:	
	movq %reg0, %reg1	

1
	movq -120(%rbp), %reg1	
	movq %reg2, %rdi	

1
	movq $39267, %reg0	
	negl %reg1	

1
	movq %reg0, 8(%rax)	
	movq 16(%rax), %reg0	

1
	movq -56(%rbp), %rsi	
	addl %reg2, %reg3	

1
.CellularAutomaton.cell_at_next_evolution_2:	
	movq 0(%rbx), %rax	

1
	movq %rax, %reg1	
	movq $678987, %reg2	

1
	cmpq $String_vtable, 0(%rdi)	
	je .Main.main_16	

1
	jne .Matrix.set_34	
	movq %rdi, 112(%rax)	

1
	movq $34313, %reg0	
	movq 0(%rbx), %rax	

1
	movq 0(%reg0), %r12	
	movq 104(%r12), %r12	

1
	movq 216(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	movq $3000, %reg0	
	movq %reg0, 56(%rax)	

1
	movq %reg0, 56(%reg1)	
	movq 0(%reg1), %reg0	

1
	movq %rdi, 8(%reg1)	
	movq $39, %rdi	

1
	je .Dictionary.insert_1	
	movq $0, %r13	

1
	movq $.string14, %reg0	
	movq %rbx, %reg2	

1
	movq 144(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	movq %reg0, 408(%reg1)	
	movq $0, %reg0	

1
	movq $12, %r10	
	movq -112(%rbp), %rax	

1
	subl %reg0, %reg1	
	movq %reg2, -32(%rbp)	

1
	movq 24(%rbx), %reg1	
	cmpl $0, %reg2	

1
.Main.main_67:	
	cmpl $0, %reg0	

1
	je .Main.main_41	
	movq $15, %reg0	

1
	movq $39506, %reg0	
	movq %reg0, %rcx	

1
	movq %reg0, %rbx	
	movq $name_Bool, %reg2	

1
	movq $32151, %rax	
	movq 0(%reg1), %r12	

1
.Main.main_3:	
	movq %rax, %reg1	

1
	call *%reg0	
	movq 640(%rbx), %reg2	

1
	jg .Main.main_149	
	movq -56(%rbp), %rdi	

1
	call *%r15	
	movq %r12, %reg2	

1
	movq $37473, %rsi	
	movq $0, %reg1	

1
	movq %reg0, 216(%rax)	
	movq $0, %reg0	

1
.A2I.i2c_19:	
	movq 0(%rax), %reg1	

1
	movq %rax, %reg1	
.Main.main_5:	

1
	movq $0, %rdi	
	movq %rdi, 248(%reg1)	

1
	ret	
	.size Bar.foo, .-Bar.foo	

1
	movq $63664, %reg0	
	movq $60238, %r11	

1
	movq $25895, %reg0	
	cmpl %eax, %edi	

1
	movq %r14, 8(%rbx)	
	movq %rbx, %reg2	

1
	movq %rdi, 16(%rax)	
	movq 24(%rax), %rsi	

1
	movq %reg0, %r12	
	movq 0(%rax), %rbx	

1
	.string "continue"	
.string9:	

1
	movq %reg0, -72(%rbp)	
	movq -8(%rbp), %reg0	

1
	movq -56(%rbp), %reg1	
	movq -48(%rbp), %rax	

1
	je .Main.main_15	
	cmpq $Main_vtable, 0(%reg0)	

1
	xorq $1, %reg0	
	jmp .Main.main_150	

1
	jmp .A2I.i2c_4	
.A2I.i2c_3:	

1
	movq -168(%rbp), %rax	
	movq %rdi, %reg3	

1
	.size Main.getFoo, .-Main.getFoo	
	.globl Main.main	

1
	movq $34526, %rdi	
	subl %reg1, %eax	

1
	movq %r12, 8(%reg1)	
.Main.new_11:	

1
	idivl %edi	
	movq %reg1, %r13	

1
	addl %edi, %reg1	
	movq %reg2, 16(%rbx)	

1
	idivl %ecx	
	movq -104(%rbp), %reg2	

1
	movq %reg0, 80(%rax)	
	movq %reg0, %rax	

1
	call *%reg0	
	movq 448(%rbx), %rax	

1
	testq $1, %reg0	
	jne .Main.main_123	

1
.Main.new_4:	
	movq %reg0, 80(%reg1)	

1
	sete %r13b	
	jne .A2I.c2i_5	

1
	movq $229, %rsi	
	movq $.string5_l, %rdi	

1
	call *%reg0	
	movq 424(%reg1), %reg2	

1
	movq %reg0, 720(%reg1)	
	movq $3000, %reg0	

1
	movq %reg0, 72(%reg1)	
	movq $1, %reg0	

1
	movq 184(%reg0), %reg0	
	jmp .Matrix.get_59	

1
	subl %reg0, %edi	
	movq $23915, %rax	

1
.Main.main_91:	
.Main.main_89:	

1
.Main.main_17:	
	movq $.string8, %reg0	

1
Foo.y:	
	pushq %reg0	

1
	call *%r12	
	movq 88(%rbx), %rax	

1
	subl %esi, %edi	
	subl %edi, %reg2	

1
Cons.cdr:	
	pushq %reg0	

1
	movq -128(%rbp), %reg1	
	movq -40(%rbp), %rcx	

1
	movq 8(%reg0), %rax	
	movq 0(%reg0), %rbx	

1
	movq -72(%rbp), %reg1	
	movq -104(%rbp), %reg3	

1
	call *%r12	
	movq 584(%rbx), %r12	

1
	movq -168(%rbp), %reg1	
	movq -152(%rbp), %rdi	

1
	movq %r15, %reg1	
	movq -72(%rbp), %reg3	

1
	movq %r15, %reg1	
	movq -96(%rbp), %reg3	

1
.Main.func_3:	
	movq $.string7, %r12	

1
	movq -32(%rbp), %reg1	
	movq -144(%rbp), %rsi	

1
	negl %reg0	
	movq -152(%rbp), %r8	

1
.Bar.new_7:	
	cmpq $Bar_vtable, 0(%reg0)	

1
	.size Foo.setS, .-Foo.setS	
	.globl Foo.func	

1
	movq %rdi, 584(%rax)	
	movq $3000, %rdi	

1
	call *%rax	
	movq 128(%rbx), %reg2	

1
.Main.main_73:	
	movq -128(%rbp), %reg1	

1
	call *%reg0	
	movq -168(%rbp), %reg0	

1
.Main.main_46:	
	movq $26355, %rax	

1
	testq $1, %r9	
	je .Main.main_89	

1
.Main.iota_3:	
	movq 0(%reg0), %r14	

1
	movq $3000, %reg0	
	movq %reg0, 144(%rax)	

1
	movq %reg0, %reg1	
	jmp .Main.main_112	

1
	movq 704(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	movq %reg0, %reg1	
	movq $208, %reg2	

1
	movq -40(%rbp), %reg1	
	movq %reg1, -184(%rbp)	

1
	movq -104(%rbp), %rax	
	movq -128(%rbp), %reg3	

1
	movq $100, %reg0	
	movq %reg1, %reg2	

1
	movq -80(%rbp), %rsi	
	movq -24(%rbp), %rax	

1
	call *%reg0	
	movq 704(%reg1), %reg2	

1
	movq $14461, %reg0	
	movq $15505, %reg1	

1
.Bazz.new_3:	
	call Bar.new	

1
	movq 576(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	sete %reg0l	
	jne .Main.main_6	

1
	sete %reg0b	
	jne .A2I.c2i_7	

1
.Main.main_156:	
	cdq	

1
.Matrix.set_35:	
.Matrix.set_33:	

1
	cmpl %reg0, %r12d	
	sete %bl	

1
	movq %r15, %rax	
	movq -96(%rbp), %rdi	

1
	call *%reg0	
	movq $1073741824, %reg0	

1
	.type Complex.reflect_Y, @function	
Complex.reflect_Y:	

1
	subl %edi, %reg1	
	movq $4, %rdi	

1
	je .Main.main_5	
	movq %reg0, %reg1	

1
	movq $49288, %reg0	
	movq $5606, %reg1	

1
	movq $34, %rsi	
	movq $.string1_l, %reg1	

1
	testq $1, %reg0	
	je .Main.new_6	

1
	.type ListNode.init, @function	
ListNode.init:	

1
	movq %r12, 8(%reg1)	
	movq %reg1, 8(%rbx)	

1
	call Main.func	
	movq %rax, %r12	

1
.string9_l:	
	.string " "	

1
	movq %reg0, 40(%reg1)	
	cmpl %reg2, %esi	

1
	sete %r9b	
	jne .Matrix.set_1	

1
	movq $38686, %reg0	
	addl %reg0d, %eax	

1
	movq $5, %rcx	
	movq %rdi, %rsi	

1
	movq %reg0, %rsi	
	addl %ecx, %reg3	

1
	jne .Main.main_8	
	cmpl $0, %ebx	

1
	movq %rdi, %reg1	
	movq -80(%rbp), %rdi	

1
.Main.main_123:	
	movq %reg0, %rax	

1
	movq -128(%rbp), %reg1	
	movq -144(%rbp), %rdi	

1
	movq $5, %reg0	
	cmpl %reg1, %reg2d	

1
	call *%reg0	
	movq 320(%rbx), %rax	

1
	movq 16(%rbx), %rax	
	movq %r12, %reg3	

1
	movq 72(%rbx), %rbx	
	movq %r12, %rdi	

1
	movq -120(%rbp), %reg1	
	movq -48(%rbp), %rax	

1
	call *%reg0	
	jmp .Main.main_31	

1
	call *%reg0	
	movq -184(%rbp), %rax	

1
	addl %reg0, %reg1	
	jmp .Main.main_1	

1
	call *%r15	
	movq -128(%rbp), %rdx	

1
	movq %reg0, %rax	
	movq %r10, %reg3	

1
	movq $50347, %rax	
	movq %rax, %reg1	

1
.Main.main_9:	
	movq $.string9, %reg0	

1
.string7_l:	
	.string "True"	

1
	jmp .Main.main_83	
.Main.main_82:	

1
	movq %rdi, 216(%reg1)	
	movq $3000, %rdi	

1
	je .Cons.insert_5	
	movq $82, %rsi	

1
	movq %reg0, 8(%rbx)	
	movq $2, %reg2	

1
	jne .Matrix.get_10	
	movq 40(%rax), %rax	

1
	.quad .string4	
	.quad 5	

1
	movq $48118, %reg0	
	negl %reg1	

1
.Main.iota_2:	
	movq 8(%reg0), %rax	

1
.Matrix.mul_5:	
	movq 0(%r12), %reg1	

1
	je .Main.main_187	
	movq $316, %rsi	

1
	je .Main.main_8	
	movq $13, %rsi	

1
	call *%reg0	
	movq %rax, 16(%rbx)	

1
	sete %reg0	
	jne .Matrix.get_41	

1
	movq %reg0, %rax	
	movq -48(%rbp), %rcx	

1
	movq $.string16, %reg0	
	movq %reg0, %reg1	

1
.string6_l:	
	.string "O\\n"	

1
.Main.main_56:	
	movq 0(%reg0), %r14	

1
	movq 328(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq -136(%rbp), %reg1	
	subl %eax, %edi	

1
	movq $2, %rsi	
	movq $.string3_l, %reg1	

1
	movq 616(%reg0), %rax	
	movq 0(%reg0), %r12	

1
.Main.out_whatever_6:	
	movq 0(%rax), %r12	

1
	.quad 0	
.string10_l:	

1
	movq %rdi, 336(%reg1)	
	movq $0, %rdi	

1
	movq 192(%rax), %rax	
	jmp .Matrix.get_61	

1
	movq $3000, %rdi	
	movq %rdi, 160(%reg1)	

1
	call *%r13	
.Main.main_8:	

1
	movq $47988, %rcx	
	movq %rcx, %r8	

1
	testq $1, %rax	
	je .Main.main_73	

1
	je .Main.main_153	
	movq $115, %rsi	

1
	movq %reg0, 8(%reg1)	
	jmp .Dictionary.insert_3	

1
	movq $48027, %r12	
	movq 0(%reg1), %reg2	

1
	movq $9856, %reg0	
	movq $8640, %reg1	

1
	movq $17815, %rsi	
	movq %rsi, %reg1	

1
	movq -152(%rbp), %reg1	
	movq -64(%rbp), %rsi	

1
	addl %r12d, %reg1	
	addl %reg1, %ebx	

1
	movq $3000, %reg0	
	movq %reg0, 64(%rax)	

1
	movq $130, %reg0	
	movq %r13, %rax	

1
.CellularAutomaton.cell_at_next_evolution_3:	
	movq $0, %rax	

1
	movq $5, %reg0	
	movq %reg0, -56(%rbp)	

1
	movq $2, %rax	
	movq %rbx, %rdi	

1
	je .Main.main_3	
	movq $0, %rbx	

1
	movq -136(%rbp), %rdi	
	negl %edi	

1
	movq $4, %reg0	
	movq 0(%reg1), %rbx	

1
	movq %reg0, %rbx	
	movq $name_Int, %reg2	

1
	movq $name_Object, %rax	
	movq 0(%rbx), %reg2	

1
	movq $12, %r14	
	cmpl $0, %r12d	

1
	movq %r9, %rax	
	movq -24(%rbp), %r9	

1
	movq %reg0, %reg1	
.A2I.a2i_aux_1:	

1
.Main.main_133:	
	jmp .Main.main_160	

1
	movq 0(%rdx), %rax	
	movq 136(%rax), %rax	

1
	movq $45, %rsi	
	movq $.string5_l, %rdi	

1
	movq %rdi, %rax	
	movq $.string6, %rbx	

1
	movq $18, %rsi	
	movq $.string3_l, %rdi	

1
	call *%r13	
	jmp .DicNode.get_5	

1
.Main.funcwhileb_1:	
	movq %reg0, %reg1	

1
.Main.main_72:	
	movq 0(%rbx), %reg1	

1
	movq -64(%rbp), %rdi	
	movq %r12, %reg3	

1
	movq $60750, %r12	
	movq 0(%reg1), %reg2	

1
	subl %reg0, %reg1	
	movq %reg2, -152(%rbp)	

1
	ret	
	.size List.rev, .-List.rev	

1
	movq -104(%rbp), %rax	
	addl %reg2, %reg3	

1
.Main.main_147:	
	movq -160(%rbp), %reg1	

1
.Main.fib_2:	
	popq %reg0	

1
	movq %rsi, %rdi	
	movq $5, %rsi	

1
	imull %reg0	
	movq -96(%rbp), %reg2	

1
	xorq $1, %rax	
	jmp .Main.main_143	

1
	call *%reg0	
	movq 128(%rbx), %r12	

1
	movq $3000, %reg0	
	movq %reg0, 400(%reg1)	

1
	movq %rdi, 144(%reg1)	
	movq $3000, %rdi	

1
	subl %eax, %edi	
	movq -80(%rbp), %reg3	

1
	movq %reg0, 360(%rax)	
	movq $0, %reg0	

1
	movq %reg0, %rax	
	jmp .Main.main_141	

1
	subl %edi, %reg1	
	movq %rbx, %reg3	

1
	je .Main.main_154	
	movq $115, %rsi	

1
.Main.main_12:	
.Main.main_10:	

1
	movq %rdi, %reg1	
	jmp .Main.main_112	

1
	movq $9, %reg0	
	movq %reg0, -48(%rbp)	

1
	negl %reg0	
	movq $64582, %r13	

1
	movq 656(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	movq $83, %reg0	
	movq $.string2_l, %rdi	

1
	movq -168(%rbp), %rax	
	movq -16(%rbp), %reg3	

1
	.globl List.tail	
	.type List.tail, @function	

1
	movq $38801, %reg0	
	cmpl %eax, %edi	

1
	call out_error	
.Dictionary.get_4:	

1
	movq %reg0, %reg1	
	movq $29181, %reg0	

1
	movq -32(%rbp), %reg1	
	subl %reg2, %ecx	

1
	movq 24(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	je .Main.main_64	
	movq %reg0, %reg1	

1
	movq $40488, %reg0	
	negl %eax	

1
	movq %reg0, %reg1	
	jmp .Main.main_34	

1
	movq %reg0, 696(%rax)	
	movq $3000, %reg0	

1
	je .Main.main_7	
	movq $11, %rsi	

1
	movq -72(%rbp), %rax	
	movq -104(%rbp), %reg3	

1
	movq 8(%r12), %rax	
	movq %reg2, %reg3	

1
	je .Main.main_175	
	movq $308, %rsi	

1
	je .Matrix.get_66	
	movq $78, %rsi	

1
	movq 176(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	.globl Matrix.mul	
	.type Matrix.mul, @function	

1
	call *%reg0	
	movq 272(%rbx), %reg2	

1
	movq %rax, %reg1	
	movq $41455, %rax	

1
	movq 56(%reg0), %reg0	
	jmp .Matrix.get_18	

1
	.type DicNode.insert, @function	
DicNode.insert:	

1
	movq -24(%rbp), %rax	
	subl %edi, %reg3	

1
	movq -80(%rbp), %rsi	
	subl %esi, %eax	

1
	movq $3, %r14	
	cmpl $0, %r13d	

1
	movq $31786, %reg0	
	movq %reg0, %rsi	

1
	testq $1, %reg0	
	je .Main.main_94	

1
	je .Main.main_119	
	movq %rbx, %reg1	

1
.Main.main_10:	
	movq %rbx, %rax	

1
	testq $1, %reg0	
	je .Razz.new_13	

1
.Main.main_1:	
	movq -144(%rbp), %rax	

1
	cmpq $Main_vtable, 0(%reg0)	
	je .Main.func_6	

1
	movq 8(%rbx), %reg1	
	call *%r14	

1
	movq $28260, %reg0	
	subl %reg1, %edi	

1
	movq 16(%reg0), %rdi	
	subl %reg2, %edi	

1
	je .Main.main_33	
	movq %reg0, %rax	

1
	je .Main.main_117	
	movq %r15, %reg1	

1
	movq $.string10, %reg0	
	movq %reg0, %rbx	

1
	movq %rax, %rsi	
	movq -80(%rbp), %rax	

1
	movq 8(%reg0), %r13	
	pushq %rax	

1
	movq 16(%rax), %rdi	
	cmpl %reg2, %edi	

1
	movq %reg0, 96(%rax)	
	movq $3000, %reg0	

1
	call *%rax	
	call Int.new	

1
	movq %rsi, %rax	
	movq -120(%rbp), %rsi	

1
.Main.main_157:	
.Main.main_155:	

1
	call Object.copy	
	movq %rax, %r13	

1
	movq %rdi, 600(%rax)	
	movq $0, %rdi	

1
.Main.main_9:	
	movq %reg0, %rdi	

1
	sete %r8b	
	jne .Matrix.set_17	

1
	call *%reg0	
	movq 424(%rbx), %reg2	

1
	movq 224(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq %reg0, %rax	
	jmp .Main.main_34	

1
	movq %rsp, %rbp	
	movq 16(%reg2), %rax	

1
	movq $Bazz_vtable, 0(%rax)	
	movq %rax, %rbx	

1
	movq 8(%reg0), %reg0	
	addl %edi, %reg2	

1
	movq %rbx, %reg1	
	cmpl %esi, %reg3	

1
.Main.funcifb_1:	
	movq $0, %reg0	

1
	jg .Main.main_77	
	movq -136(%rbp), %reg1	

1
	.size Foo.foo, .-Foo.foo	
	.globl Bar.foo	

1
	movq -32(%rbp), %reg1	
	movq $0, %reg2	

1
	movq $11435, %r12	
	movq 0(%reg1), %reg2	

1
	movq $0, %reg0	
	movq %reg0, 240(%reg1)	

1
	je .Main.main_181	
	movq $308, %reg0	

1
.Main.main_1:	
	movq $4, %rsi	

1
	movq 112(%r12), %r12	
	movq %rax, %rdi	

1
	movq -136(%rbp), %rsi	
	cmpl %esi, %reg3	

1
	movq %r14, %rdx	
	call *%rax	

1
	je .Main.main_100	
	movq %reg0, %reg1	

1
	movq 104(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	movq 496(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	call *%r12	
	movq 328(%reg1), %reg2	

1
.Main.main_100:	
	movq -32(%rbp), %rsi	

1
	jne .Main.main_2	
	movq 24(%reg0), %reg1	

1
	movq $1, %reg0	
	movq 8(%rax), %rsi	

1
	movq $47, %reg0	
	movq $.string5_l, %rdi	

1
	cmpq $String_vtable, 0(%rdi)	
	je .Main.funccase_2	

1
	movq %reg0, %rbp	
	movq $88, %rdi	

1
	cmpq $IO_vtable, 0(%rdi)	
	je .Main.funccase_2	

1
	movq $63080, %reg0	
	movq $0, %rcx	

1
	negl %eax	
	movq -120(%rbp), %rsi	

1
	addl %eax, %ebx	
	movq %reg2, %reg3	

1
	testq $1, %reg0	
	je .Main.main_104	

1
	je .Main.main_9	
	movq $6, %rsi	

1
	movq -160(%rbp), %rax	
	addl %reg2, %edi	

1
	jg .Main.main_13	
	cmpl $0, %reg0	

1
	movq $55049, %rax	
	negl %reg1	

1
List_vtable:	
	.quad .string1	

1
	movq $3000, %rdi	
	movq %rdi, 240(%reg1)	

1
	testq $1, %r9	
	je .Main.main_61	

1
	movq $3000, %reg0	
	movq %reg0, 496(%reg1)	

1
	movq 448(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	testq $1, %rdi	
	je .Matrix.get_64	

1
	jge .Main.main_98	
	movq %reg0, %rax	

1
.Main.main_154:	
	cdq	

1
	movq $.string8, %reg0	
	movq $.string9, %reg1	

1
	movq -152(%rbp), %rax	
	movq -96(%rbp), %rdi	

1
	jne .Matrix.get_2	
	movq 8(%reg0), %reg0	

1
	movq $.string8, %r12	
	movq 0(%rax), %rbx	

1
	movq $3000, %rdi	
	movq %rdi, 552(%reg1)	

1
	movq -32(%rbp), %reg1	
	movq %rcx, %reg3	

1
	xorq $1, %reg0	
	jmp .Main.main_120	

1
	movq %reg0, %rax	
	movq 8(%reg2), %rdi	

1
	movq %rsi, %r12	
	movq %reg2, %reg3	

1
	movq -16(%rbp), %reg1	
	movq -128(%rbp), %reg3	

1
.CellularAutomaton.evolve_2:	
	movq %r14, 8(%reg1)	

1
	jne .Main.main_64	
	movq $0, %reg0	

1
	movq $3000, %rdi	
	movq %rdi, 680(%reg1)	

1
	je .Main.main_73	
	movq $52, %rsi	

1
	call Foo.foo	
	leave	

1
	movq -16(%rbp), %rax	
	movq $0, %r8	

1
	movq %rax, %r12	
	movq $.string9, %reg2	

1
	movq $18422, %reg0	
	subl %reg1, %eax	

1
	movq 8(%rbx), %rax	
	cmpl %edi, %eax	

1
Cons.cdr:	
	pushq %rbp	

1
.Main.main_7:	
	movq %r13, %rsi	

1
	movq 112(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	je .Main.out_whatever_2	
	cmpq $IO_vtable, 0(%reg0)	

1
	movq $1000, %rax	
	movq %rax, 32(%reg1)	

1
.Main.main_25:	
	movq %reg0, %rax	

1
	call *%reg0	
	movq $.string17, %rbx	

1
	call Object.type_name	
	movq %reg0, %r12	

1
	subl %edi, %reg1	
	movq %reg2, -144(%rbp)	

1
	movq $0, %rdi	
	movq %rdi, %rbx	

1
.Main.main_44:	
	movq -32(%rbp), %reg1	

1
	imull %edi	
	movq %reg1, -56(%rbp)	

1
	movq $126, %reg0	
	movq $.string4_l, %reg1	

1
	.type Main.funcifb, @function	
Main.funcifb:	

1
.Cons.insert_2:	
	movq 0(%reg0), %reg1	

1
	movq %reg0, 360(%reg1)	
	movq $0, %reg0	

1
	.size Main.main, .-Main.main	
	.globl Foo.getX	

1
	movq $0, %rdi	
	movq %rdi, 480(%rax)	

1
	movq 8(%reg0), %r13	
	movq 0(%reg2), %rax	

1
	je .Main.main_47	
	movq $200, %rsi	

1
	.quad String_vtable	
	.quad .string20_l	

1
	movq -32(%rbp), %rdi	
	movq %r13, %reg3	

1
	idivl %reg0	
	movq $16420, %rsi	

1
	call Razz.new	
	movq %rax, 24(%reg1)	

1
	movq $63080, %rsi	
	movq $0, %rcx	

1
	ret	
	.size Bazz.new, .-Bazz.new	

1
.Main.main_125:	
	jmp .Main.main_164	

1
	sete %r8b	
	jne .Matrix.get_40	

1
	movq -184(%rbp), %reg1	
	movq %reg2, %rdi	

1
.Razz.new_6:	
	movq %reg0, 16(%rbx)	

1
	idivl %reg0	
.Matrix.get_65:	

1
	movq %reg0, %reg1	
	movq %rcx, %rdi	

1
	movq $0, %r15	
	movq %r15, %reg1	

1
	movq $.string9, %rbx	
	movq 0(%reg1), %reg2	

1
.Main.main_171:	
	cdq	

1
	subl %edi, %reg1	
	movq %reg2, -136(%rbp)	

1
	.globl Main.funcwhilei	
	.type Main.funcwhilei, @function	

1
	cmpq $Main_vtable, 0(%reg0)	
	je .Main.main_7	

1
	idivl %reg0	
	movq $17815, %rsi	

1
	call *%reg0	
.DicNode.insert_5:	

1
	idivl %reg0	
	movq $63562, %rsi	

1
	movq 72(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	jge .Main.main_10	
	movq %reg0, %reg1	

1
	addl %edi, %eax	
	movq $4, %rdi	

1
	testq $1, %reg0	
	jne .Main.main_3	

1
	movq 8(%r12), %reg1	
	movq 0(%reg2), %r13	

1
	call *%reg0	
	movq -112(%rbp), %reg2	

1
	negl %esi	
	movq %rbx, %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 336(%rax)	

1
.Main.main_119:	
	movq %reg0, %reg1	

1
.Main.new_3:	
	movq 24(%reg0), %reg1	

1
	movq $0, %rax	
	movq %rax, 64(%rbx)	

1
	movq -176(%rbp), %rsi	
	addl %esi, %edi	

1
	movq 8(%rax), %rax	
	popq %rbx	

1
	negl %eax	
	movq -152(%rbp), %r8	

1
	.string "true\\n"	
.string8:	

1
	movq $.string20, %reg0	
	movq 0(%reg1), %r12	

1
	movq $1, %rbx	
	movq 8(%reg1), %reg2	

1
	movq -104(%rbp), %rsi	
	subl %reg2, %reg3	

1
	movq $154, %rsi	
	movq $.string5_l, %reg1	

1
	call *%r12	
	movq $.string7, %r12	

1
	movq -104(%rbp), %reg1	
	movq %r15, %reg3	

1
	movq %r15, %reg1	
	movq -48(%rbp), %rdi	

1
	movq $30, %reg0	
	movq $.string5_l, %reg1	

1
	je .Main.main_185	
	movq $151, %reg0	

1
	movq 80(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	je .Main.main_146	
	movq $112, %rsi	

1
.Main.main_62:	
	movq -48(%rbp), %rsi	

1
	movq -80(%rbp), %reg1	
	movq -56(%rbp), %reg3	

1
	movq $3000, %reg0	
	movq %reg0, 288(%rax)	

1
	movq $2, %rsi	
	negl %reg1	

1
	.globl Dictionary.setHead	
	.type Dictionary.setHead, @function	

1
.string10_l:	
	.string "hi"	

1
.Main.main_3:	
	movq %rax, %rdi	

1
.Main.main_11:	
	movq 0(%r14), %reg1	

1
	negl %edi	
	movq %rdi, 16(%reg2)	

1
	call *%reg0	
	movq 80(%rbx), %rax	

1
	movq 72(%rax), %rax	
	movq %r14, %rdi	

1
	movq %rdi, %r12	
	movq $13, %reg2	

1
	movq %rdi, 472(%rax)	
	movq $0, %rdi	

1
.Main.main_72:	
	movq %reg0, %rax	

1
	addl %reg0, %reg1	
	cmpl $0, %reg2d	

1
	movq %rax, %r12	
	movq $12, %rax	

1
.Main.main_22:	
	movq $2, %reg0	

1
	movq %rsi, %rax	
	cmpl %edi, %eax	

1
.Main.main_7:	
	movq 8(%reg0), %r12	

1
	movq $8800, %r12	
	movq 0(%rbx), %rax	

1
	cmpq $IO_vtable, 0(%reg0)	
	je .Main.funccase_2	

1
	movq $5, %reg0	
	movq %reg0, -128(%rbp)	

1
	movq %rdi, %rax	
	jmp .Main.main_20	

1
	movq $3, %rax	
	cmpl $0, %r13d	

1
	movq 16(%reg0), %rax	
	movq %r12, %reg3	

1
	movq 160(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	je .Main.main_188	
	movq $151, %reg0	

1
	addl %ebx, %eax	
	movq %rax, %reg3	

1
	movq %rdi, %rax	
	jmp .Main.main_114	

1
	movq %reg0, %r12	
	movq $.string9, %reg2	

1
.Main.main_105:	
	movq %reg0, %reg1	

1
.Main.main_159:	
	cdq	

1
	movq %rax, %reg1	
	movq $1, %rdi	

1
.Main.main_59:	
	movq 0(%reg0), %reg1	

1
	movq $166, %rsi	
	movq $.string5_l, %reg1	

1
	movq %rsi, %rax	
	negl %reg2	

1
	movq %reg0, %rcx	
	movq -64(%rbp), %reg0	

1
	je .Main.func_2	
	cmpq $String_vtable, 0(%rax)	

1
	subl %edi, %reg1	
	movq %rax, -96(%rbp)	

1
	je .Main.main_1	
	movq $83, %rsi	

1
	movq -136(%rbp), %rdi	
	movq %reg2, %reg3	

1
	call *%r12	
	movq 496(%reg1), %reg2	

1
	movq %rdi, %reg1	
	jmp .Main.main_76	

1
	movq 552(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq %reg0, %reg1	
	jmp .Main.main_63	

1
	movq 24(%reg0), %reg1	
	movq $0, %rdi	

1
	movq $.string14, %reg0	
	movq %reg1, %reg2	

1
	addl %reg0, %edi	
	movq %rbx, %rax	

1
	movq %r12, %rax	
	movq 8(%reg2), %rdi	

1
	movq $175, %rsi	
	movq $.string5_l, %reg1	

1
	movq 144(%reg0), %reg0	
	movq %rax, %reg2	

1
	movq -184(%rbp), %r8	
	imull %r8d	

1
	movq $12, %r10	
	movq -128(%rbp), %rax	

1
	movq %reg0, 240(%reg1)	
	movq $3000, %reg0	

1
	subl %reg0, %edi	
	subl %edi, %reg2	

1
	movq $18, %reg0	
	movq $.string3_l, %reg1	

1
	movq -152(%rbp), %rax	
	movq %r15, %rdi	

1
	movq 656(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	call *%rax	
	movq 632(%rbx), %reg2	

1
	movq %reg0, %rax	
	jmp .Main.main_18	

1
.Main.main_72:	
	movq %r15, %reg1	

1
.ListNode.insert_3:	
	popq %reg0	

1
	movq $8, %reg0	
	jmp .A2I.c2i_18	

1
	je .Main.new_2	
	cmpq $String_vtable, 0(%rax)	

1
.Main.main_6:	
	movq 0(%r13), %rax	

1
	movq $24, %reg0	
	movq $.string3_l, %rdi	

1
	movq -96(%rbp), %rax	
	subl %reg2, %eax	

1
	movq $39523, %reg0	
	imull %esi	

1
	subl %reg0, %reg1	
	movq $23915, %reg2	

1
	je .Main.main_190	
	movq $151, %rsi	

1
	movq %rax, %r10	
	movq $18444, %rax	

1
	movq $0, %rdi	
	movq %rdi, 424(%reg1)	

1
	movq $13, %reg0	
	movq 0(%reg1), %reg2	

1
	movq %rdi, 632(%rax)	
	movq $0, %rdi	

1
.Matrix.mul_2:	
	movq %r12, %rax	

1
	call *%reg0	
	movq $name_Int, %reg0	

1
	movq $3000, %reg0	
	movq %reg0, 120(%reg1)	

1
	testq $1, %rcx	
	je .Main.main_183	

1
	movq %r15, %rsi	
	cmpl %reg2, %reg3	

1
	movq %rdi, 200(%rax)	
	movq $0, %rdi	

1
	movq -136(%rbp), %rdi	
	negl %reg2	

1
	call *%reg0	
	movq $21018, %reg1	

1
	call Foo.getX	
	movq %reg0, %rdx	

1
.Main.main_3:	
	movq %reg0, %rax	

1
	movq $7741, %reg0	
	movq %reg0, %r14	

1
	movq 128(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	call *%reg0	
.Main.main_44:	

1
	movq $38220, %reg0	
	movq $48887, %rax	

1
	movq -56(%rbp), %rax	
	movq -88(%rbp), %rdi	

1
	.type Bar.setI, @function	
Bar.setI:	

1
.Main.main_15:	
	jmp .Main.main_50	

1
	movq $3175, %rsi	
	imull %esi	

1
	idivl %reg0d	
	movq -16(%rbp), %r8	

1
	movq $3000, %rdi	
	movq %rdi, 264(%reg1)	

1
	negl %reg0	
	movq %rbx, %rsi	

1
	idivl %reg0	
	movq $16420, %reg1	

1
	movq 136(%reg0), %reg0	
	movq 8(%rbx), %reg2	

1
	movq $.string10, %rdi	
	movq %reg1, %reg2	

1
	je .Main.main_32	
	movq $13, %rsi	

1
	movq %reg0, 32(%rbx)	
	call Bazz.new	

1
	movq -96(%rbp), %reg1	
	subl %edi, %reg3	

1
	testq $1, %reg0	
	je .DicNode.insert_3	

1
	movq $3453, %reg0	
	movq 0(%reg1), %reg2	

1
	movq $29773, %rax	
	movq 0(%rbx), %reg2	

1
	movq %rsp, %reg1	
	movq $88, %reg2	

1
	movq 112(%reg0), %reg0	
	movq 16(%reg1), %reg2	

1
	sete %reg0b	
	jne .Matrix.set_43	

1
	movq $3000, %rdi	
	movq %rdi, 592(%rax)	

1
	movq %r12, %r13	
	pushq %rax	

1
	movq 0(%reg0), %r12	
	movq 96(%r12), %r12	

1
.Main.main_3:	
	movq 0(%r13), %r14	

1
	movq %rcx, %reg1	
	movq -184(%rbp), %reg1	

1
	je .Main.main_4	
	movq $8, %rsi	

1
	.quad Cons.rcons	
	.quad Cons.print_list	

1
	movq $63899, %reg0	
	movq $18189, %reg1	

1
.Dictionary.insert_4:	
	movq 8(%reg0), %reg1	

1
	je .Main.main_64	
	movq $49, %reg0	

1
	negl %eax	
	movq $58688, %reg1	

1
	movq %rsi, %reg1	
	movq -152(%rbp), %reg1	

1
	movq $25036, %rdi	
	subl %reg1, %reg2	

1
	negl %ecx	
	movq -72(%rbp), %rax	

1
	call *%rax	
	movq $3966, %rdi	

1
	movq -160(%rbp), %reg1	
	imull %r8d	

1
	je .Main.main_59	
	movq $17, %rsi	

1
	jg .Main.main_73	
	movq -80(%rbp), %reg1	

1
	je .Main.out_whatever_4	
	cmpq $Int_vtable, 0(%rdi)	

1
	movq $55318, %rdi	
	subl %reg1, %reg2	

1
.Main.main_135:	
.Main.main_133:	

1
	addl %reg0, %reg1	
	movq $1, %reg2	

1
	pushq %rbx	
	movq $32, %rdi	

1
	movq -184(%rbp), %rax	
	movq %reg2, %rsi	

1
	.quad .string0_l	
	.quad 7	

1
	movq %rdi, 16(%rax)	
	movq $3000, %rdi	

1
	movq $18444, %reg0	
	negl %reg1	

1
.Cons.print_list_1:	
	movq 16(%rbx), %reg1	

1
	je .Main.main_6	
	cmpq $IO_vtable, 0(%rax)	

1
	ret	
	.size ListNode.insert, .-ListNode.insert	

1
	.text 	
	.globl Matrix.new	

1
	movq %reg0, 208(%rax)	
	movq $0, %reg0	

1
	je .Bar.new_19	
	movq $31, %rsi	

1
	movq $61569, %rax	
	movq $2562, %reg1	

1
.Main.main_9:	
	movq %reg0, %rax	

1
	movq 16(%reg0), %reg1	
	subl %edi, %eax	

1
	call *%reg0	
	movq 408(%rbx), %reg0	

1
	movq %r13, %rax	
	subl %edi, %eax	

1
	movq 440(%reg0), %rax	
	movq 0(%reg0), %r12	

1
.Main.main_75:	
	movq %reg0, %reg1	

1
	cmpl $0, %reg0	
	setl %bl	

1
	jne .Main.main_57	
	movq %reg0, %reg1	

1
	movq %rdi, %reg1	
	jmp .Main.main_40	

1
	movq %rdi, 480(%reg1)	
	movq $3000, %rdi	

1
	jne .Matrix.get_56	
	movq 176(%reg0), %reg0	

1
	.quad .string8_l	
	.quad 5	

1
	testq $1, %reg0	
	je .Main.main_166	

1
	call *%r13	
	cmpl $0, %r14d	

1
	idivl %reg0d	
	subl %reg1, %r8d	

1
	movq $0, %reg0	
	movq %reg0, 688(%reg1)	

1
	call *%reg0	
	jmp .Main.funcwhileb_1	

1
	movq $12, %rsi	
	movq %r13, %rax	

1
	movq %r13, %reg1	
	cmpl %eax, %reg3	

1
	jmp .Main.new_8	
.Main.new_7:	

1
	movq $34422, %rax	
	subl %reg1, %reg2	

1
	movq %reg0, %r12	
	movq $.string9, %r13	

1
	ret	
	.size Main.funccaseb, .-Main.funccaseb	

1
	movq $3000, %reg0	
	movq %reg0, 96(%rax)	

1
	movq -144(%rbp), %rax	
	movq -184(%rbp), %rcx	

1
	negl %reg0	
	movq $7493, %reg1	

1
	movq -144(%rbp), %reg1	
	movq -96(%rbp), %reg3	

1
	addl %eax, %edi	
	movq -128(%rbp), %rax	

1
	call out_error	
.Main.main_150:	

1
	movq %rsi, %rax	
	movq $5, %reg2	

1
	movq -40(%rbp), %rdi	
	subl %reg2, %eax	

1
	movq 320(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
.Main.new_9:	
	movq 24(%reg0), %reg1	

1
	negl %eax	
	movq $9569, %rsi	

1
	call *%reg0	
	movq 432(%rbx), %rax	

1
.Main.main_11:	
	movq 0(%r12), %r13	

1
	movq -184(%rbp), %rax	
	movq -32(%rbp), %reg3	

1
	je .Main.main_67	
	movq $17, %reg0	

1
	movq $14, %rax	
	negl %eax	

1
	movq %reg0, %r13	
	movq 0(%rbx), %reg3	

1
	movq 616(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq 16(%rax), %reg1	
	cmpl %reg2, %edi	

1
	.type Main.funcwhileb, @function	
Main.funcwhileb:	

1
	movq %reg0, %rbx	
	movq $20, %reg2	

1
	je .Main.main_13	
	movq $6, %rax	

1
	call *%reg0	
	jmp .Complex.print_2	

1
	testq $1, %rcx	
	je .Main.main_10	

1
	movq -136(%rbp), %rdi	
	movq -56(%rbp), %reg3	

1
	call Object.type_name	
	movq %reg0, %reg1	

1
	cmpq $String_vtable, 0(%reg0)	
	je .Main.func_5	

1
	addl %eax, %reg1	
	movq -96(%rbp), %reg3	

1
	movq $.string7, %reg0	
	movq 8(%reg1), %reg2	

1
	movq -16(%rbp), %rax	
	movq %reg2, %rcx	

1
	movq 640(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	je .Main.main_182	
	movq $308, %rsi	

1
	subl %reg0, %eax	
	movq %rax, -152(%rbp)	

1
	.globl Cons.print_list	
	.type Cons.print_list, @function	

1
	movq $5, %reg0	
	movq 0(%reg1), %r13	

1
	.quad Foo.get	
String_vtable:	

1
	movq %rbx, %r12	
	movq 8(%reg2), %r13	

1
	movq $0, %reg0	
	movq %reg0, 368(%rax)	

1
	call out_error	
.Main.out_whatever_1:	

1
	movq $38737, %reg0	
	subl %reg1, %edi	

1
	cmpq $Razz_vtable, 0(%rbx)	
	je .Foo.new_4	

1
	movq $3000, %rdi	
	movq %rdi, 528(%reg1)	

1
	movq $60606, %reg0	
	cmpl %reg1, %edi	

1
	movq 0(%r12), %r15	
	movq 56(%r15), %r15	

1
.Main.main_2:	
	movq %r13, %reg1	

1
	movq $name_Bool, %rax	
	movq %rax, %rdi	

1
	movq $Yaz_vtable, 0(%reg0)	
	movq $0, %reg1	

1
	movq %reg0, %rax	
	jmp .Matrix.set_33	

1
	sete %sil	
	jne .Main.main_113	

1
	je .Main.main_136	
	movq -128(%rbp), %rdi	

1
	sete %reg0l	
	jne .Matrix.get_62	

1
.Main.main_16:	
	movq %r14, %reg1	

1
	movq %reg0, 24(%rbx)	
	call Bar.new	

1
	movq %reg0, 72(%rax)	
	movq %rax, %reg0	

1
.Main.main_53:	
	movq %reg0, %reg1	

1
	jne .DicNode.get_1	
	jmp .DicNode.get_2	

1
	call *%rax	
	jmp .Main.funcwhilei_1	

1
	movq -112(%rbp), %reg1	
	cmpl %esi, %eax	

1
	call *%r12	
	movq $name_Bool, %rax	

1
	testq $1, %reg0	
	je .Dictionary.get_1	

1
	jne .A2I.c2i_7	
	movq $3, %rax	

1
	movq $3000, %reg0	
	movq %reg0, 664(%rax)	

1
	movq $151, %reg0	
	movq $.string5_l, %rdi	

1
	subl %eax, %edi	
	movq $8997, %reg2	

1
	movq -184(%rbp), %reg1	
	subl %reg2, %r8d	

1
	movq $10, %rsi	
	movq %rdi, %reg2	

1
	testq $1, %rdi	
	je .Cons.rcons_1	

1
	imull %r10d	
	movq -144(%rbp), %r10	

1
	movq $12, %reg0	
	movq %reg1, %rdi	

1
	movq 8(%rax), %r15	
	movq 0(%rax), %reg2	

1
	jne .Main.main_154	
	movq %reg0, %reg1	

1
	movq $12, %rdi	
	movq %r13, %rax	

1
	cmpq $Razz_vtable, 0(%reg0)	
	je .Bar.new_8	

1
	movq %reg0, 8(%rbx)	
	movq $1, %reg2	

1
	je .Main.main_182	
	movq $151, %rsi	

1
	call Object.type_name	
	movq 0(%rbx), %r13	

1
	movq %rax, %r12	
	cmpl $0, %eax	

1
.Main.main_111:	
	movq %r14, %rax	

1
	movq 56(%r15), %r15	
	movq %r14, %reg2	

1
	.string "6"	
.string13:	

1
	movq %rax, %rdi	
	call Object.copy	

1
	movq %reg0, %reg1	
.Main.main_61:	

1
	subl %eax, %reg1	
	movq %rbx, %rax	

1
	movq %r13, %rax	
	movq %r12, %reg3	

1
	movq -136(%rbp), %reg1	
	movq -56(%rbp), %reg3	

1
List.head:	
	pushq %rbp	

1
	negl %reg0	
	movq -40(%rbp), %rsi	

1
	movq $5, %rax	
	movq $0, %reg1	

1
	addl %eax, %ecx	
	movq -176(%rbp), %reg3	

1
	movq 200(%rax), %rax	
	jmp .Matrix.get_63	

1
	negl %reg0	
	movq -144(%rbp), %rdi	

1
	movq -104(%rbp), %rsi	
	subl %esi, %reg3	

1
.Main.main_44:	
	movq %reg0, %reg1	

1
	idivl %r10d	
	movq $12, %r10	

1
	cmpq $Bar_vtable, 0(%reg0)	
	je .Bar.new_16	

1
	movq %reg0, 16(%reg1)	
	jmp .ListNode.insert_3	

1
	movq %r13, %rax	
	subl %eax, %edi	

1
	je .Main.main_10	
	movq $4, %rax	

1
.Cons.insert_2:	
	movq 0(%reg0), %r13	

1
	movq -32(%rbp), %rdi	
	call *%rax	

1
	jne .CellularAutomaton.cell_left_neighbor_1	
	movq 0(%reg0), %rax	

1
	imull %reg0	
	movq $59714, %reg1	

1
	call *%reg0	
	movq -96(%rbp), %reg0	

1
	movq $33636, %reg0	
	imull %edi	

1
	movq %r12, 8(%reg1)	
	movq %reg1, 32(%reg2)	

1
	movq %rbx, %reg1	
	imull %reg1d	

1
	movq 56(%reg0), %reg0	
	movq 8(%rbx), %reg2	

1
	je .Main.main_8	
	movq $17, %rsi	

1
.Main.main_107:	
	movq -40(%rbp), %rsi	

1
.Main.main_61:	
	movq $12, %rsi	

1
	movq -32(%rbp), %rax	
	addl %ecx, %eax	

1
	movq %rax, %rbx	
	movq $5, %rax	

1
.Main.funccase_4:	
	movq %reg0, %rax	

1
	je .Main.main_15	
	movq $.string7, %rbx	

1
	movq $0, %rbx	
	cmpl %ebx, %r12d	

1
	idivl %esi	
	movq -64(%rbp), %reg2	

1
	jne .Main.main_27	
	movq %reg0, %reg1	

1
	.size Main.funccasei, .-Main.funccasei	
	.globl Main.funccaseb	

1
	movq $.string6, %reg0	
	movq %reg1, %rdi	

1
	movq $6765, %rdi	
	subl %edi, %eax	

1
	.quad Cons.print_list	
	.quad Cons.init	

1
	movq %reg0, 8(%reg1)	
	movq $3000, %reg0	

1
	movq %rdi, 656(%reg1)	
	movq $0, %rdi	

1
.Bar.new_1:	
	cmpq $Bar_vtable, 0(%reg0)	

1
	movq %reg0, %r13	
	movq 0(%reg2), %rax	

1
	negl %reg0	
	movq %rdi, 16(%reg2)	

1
	movq %r14, %rcx	
	addl %ecx, %eax	

1
	addl %edi, %reg1	
	movq %r14, %reg3	

1
	movq 544(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	movq %rsi, %reg1	
	movq -16(%rbp), %reg1	

1
	subl %reg0, %reg1	
	movq -184(%rbp), %reg3	

1
.Main.main_4:	
	movq 8(%rbx), %r12	

1
	setle %reg0l	
	jg .Matrix.mul_4	

1
.Main.main_15:	
	movq $0, %r12	

1
	idivl %r9d	
	movq $33161, %r8	

1
	movq -136(%rbp), %rdi	
	movq %reg2, %rax	

1
	movq 64(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	movq %rax, %reg1	
	movq $6821, %rsi	

1
	movq 24(%reg0), %rax	
	addl %edi, %reg3	

1
	movq 56(%reg0), %reg0	
	movq 24(%reg1), %rdi	

1
	movq %rdi, %reg1	
	movq -88(%rbp), %reg1	

1
	je .Main.main_113	
	movq $67, %reg0	

1
	setle %reg0l	
	jg .Main.main_2	

1
	imull %reg0	
	movq $28379, %rsi	

1
	subl %eax, %reg1	
	movq $48672, %rax	

1
	movq $144, %rsi	
	movq $.string2_l, %reg1	

1
	movq -112(%rbp), %rax	
	addl %ecx, %eax	

1
.Dictionary.get_1:	
	cmpl $0, 8(%reg0)	

1
	subl %reg0, %eax	
	movq $0, %r14	

1
	movq -72(%rbp), %rax	
	movq %rcx, %reg3	

1
	movq %reg0, 8(%rax)	
	movq %rax, 8(%reg2)	

1
	movq 8(%reg0), %rax	
	movq %r12, %rdi	

1
	je .Main.main_9	
	movq $19, %rsi	

1
	movq $14901, %rsi	
	movq %rsi, %rcx	

1
	call *%reg0	
	movq 704(%rbx), %r12	

1
	movq $19990, %reg0	
	imull %edi	

1
	movq %rdi, %reg1	
.Main.main_164:	

1
	idivl %edi	
.Matrix.set_63:	

1
	call *%reg0	
	jmp .Main.funccase_8	

1
.Main.main_95:	
	cdq	

1
	.quad 7	
.string10_l:	

1
	movq $8271, %rsi	
	imull %reg1	

1
	idivl %edi	
	movq $55626, %rdi	

1
	movq %reg0, %rax	
	movq %r10, %r11	

1
	movq $3000, %rdi	
	movq %rdi, 392(%rax)	

1
	call IO.out_string	
	movq $1, %rax	

1
	movq %reg0, %reg1	
	jmp .CellularAutomaton.cell_at_next_evolution_2	

1
	setle %reg0	
	jg .Main.main_31	

1
	movq %reg0, %reg1	
	movq %reg0, %rbx	

1
	negl %reg0	
	movq -160(%rbp), %reg2	

1
	cmpq $Main_vtable, 0(%reg0)	
	je .Main.main_15	

1
	movq 24(%reg0), %reg1	
	movq 0(%reg1), %rax	

1
	.quad ListNode.setVal	
String_vtable:	

1
	movq -40(%rbp), %rsi	
	movq -56(%rbp), %reg3	

1
Bar.setI:	
	pushq %rbp	

1
.DicNode.insert_6:	
	movq 24(%reg0), %rdx	

1
	je .Main.main_163	
	movq $142, %rsi	

1
	movq %rbx, %rsi	
	cmpl %reg2, %reg3	

1
	movq -48(%rbp), %rax	
	imull %reg2	

1
.Main.main_13:	
	movq $4844, %rax	

1
	movq $19, %rax	
	movq %rax, -88(%rbp)	

1
.Main.main_80:	
	movq -128(%rbp), %reg1	

1
	movq $3000, %reg0	
	movq %reg0, 720(%rax)	

1
	addl %reg0, %reg1	
	movq %r12, %rax	

1
	movq $9, %rsi	
	cmpl %reg1, %reg2	

1
A2I.a2i_aux:	
	pushq %rbp	

1
	movq -168(%rbp), %rax	
	addl %r8d, %eax	

1
.Matrix.get_13:	
	leave	

1
	movq %reg0, 24(%reg1)	
	movq $7, %r12	

1
	jmp .A2I.i2c_8	
.A2I.i2c_7:	

1
	je .Main.main_1	
	movq $25, %reg0	

1
	addl %esi, %eax	
	movq -160(%rbp), %rsi	

1
	movq %reg0, 48(%reg1)	
	cmpl %edi, %eax	

1
.Main.main_103:	
	movq %reg0, %rax	

1
	cmpq $Foo_vtable, 0(%rbx)	
	je .Main.main_22	

1
	movq $12, %rsi	
	movq -96(%rbp), %reg2	

1
	sete %reg0b	
	jne .Matrix.set_2	

1
	setle %dil	
	jg .Main.main_9	

1
	movq $.string7, %r12	
	movq %r12, %reg1	

1
	negl %eax	
	movq $20470, %rcx	

1
	movq %reg0, %rbp	
	movq 16(%rdi), %rax	

1
	movq %reg0, 40(%rbx)	
	movq $.string6, %reg0	

1
.Main.main_158:	
	cdq	

1
.Main.main_39:	
	movq %rbx, %reg1	

1
	movq %reg0, 688(%reg1)	
	movq $0, %reg0	

1
	movq $3000, %reg0	
	movq %reg0, 696(%rax)	

1
	ret	
	.size Main.out_whatever, .-Main.out_whatever	

1
	movq %rsi, %rbx	
	movq 8(%rax), %reg3	

1
	movq 104(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	movq $ListNode_vtable, 0(%rax)	
	movq $0, %rdi	

1
	.type Bar.setJ, @function	
Bar.setJ:	

1
	movq -32(%rbp), %rsi	
	subl %esi, %edi	

1
	negl %reg0d	
	movq $0, %reg1	

1
	movq $18119, %rax	
	subl %reg1, %reg2	

1
	movq $.string12, %rax	
	movq 0(%reg1), %reg2	

1
	movq $56453, %rsi	
	imull %esi	

1
	movq $173, %reg0	
	movq $.string5_l, %reg1	

1
	testq $1, %rcx	
	je .Main.main_34	

1
	movq %reg0, 8(%reg1)	
	movq %reg1, 32(%rbx)	

1
	movq $157, %rsi	
	movq $.string5_l, %reg1	

1
	jne .Main.main_11	
	movq -144(%rbp), %reg1	

1
	movq %reg0, %rax	
	jmp .Main.main_44	

1
	movq $3, %rbx	
	movq 0(%rax), %rax	

1
	idivl %r13d	
	addl %reg1, %reg2d	

1
	movq $4, %r13	
	movq %reg1, %rdi	

1
	.quad Bar.foo	
String_vtable:	

1
	movq $60606, %reg0	
	cmpl %eax, %edi	

1
	sete %cl	
	jne .A2I.i2c_11	

1
	movq 56(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	movq %reg0, 96(%rax)	
	movq %reg0, %rax	

1
	movq 8(%reg0), %rdi	
	movq %rdi, 48(%reg0)	

1
.DicNode.get_6:	
	movq 24(%reg0), %reg1	

1
.CellularAutomaton.evolve_1:	
	movq %reg0, %reg1	

1
	.quad CellularAutomaton.num_cells	
	.quad CellularAutomaton.cell	

1
	je .Main.main_15	
	movq $21, %reg0	

1
	movq $59714, %reg0	
	movq %reg0, %reg1	

1
.Main.main_7:	
	movq %reg0, %reg1	

1
	movq $58921, %rdi	
	cmpl %reg1, %eax	

1
.Main.main_145:	
.Main.main_143:	

1
	movq %reg0, -48(%rbp)	
	movq $10, %reg0	

1
	subl %r10d, %reg1	
	movq %rax, %r10	

1
	movq %rax, %r9	
	movq -40(%rbp), %rax	

1
	call *%rbx	
	movq %reg1, %rdx	

1
	movq $43177, %rdi	
	subl %edi, %reg2	

1
	movq %rdi, %reg1	
.Main.main_171:	

1
	je .Main.main_25	
	movq %rdi, %reg1	

1
	movq $178, %rsi	
	movq $.string5_l, %rdi	

1
	movq $54460, %rax	
	addl %reg1, %reg2	

1
	movq -104(%rbp), %reg1	
	movq -168(%rbp), %rsi	

1
	jne .Main.main_3	
	movq 72(%rbx), %reg1	

1
	call *%rax	
	movq 16(%reg1), %reg2	

1
	.quad IO.out_string	
CellularAutomaton_vtable:	

1
	addl %reg0, %reg1d	
	movq -144(%rbp), %rax	

1
	addl %ecx, %reg1	
	movq %rbx, %rcx	

1
	movq -120(%rbp), %reg1	
	subl %reg2, %reg3	

1
	setle %sil	
	jg .Main.main_127	

1
	addl %edi, %eax	
	movq $57963, %reg2	

1
	movq -136(%rbp), %rax	
	subl %reg2, %ecx	

1
	.quad A2I.i2a_aux	
Main_vtable:	

1
	movq 72(%rax), %rax	
	jmp .Matrix.get_22	

1
	movq %rsp, %reg1	
	movq $744, %reg2	

1
	setl %reg0l	
	jge .Main.main_14	

1
	movq %r12, %rdi	
	subl %edi, %eax	

1
	movq $34526, %rdi	
	subl %edi, %eax	

1
	je .Main.main_30	
	movq $13, %rsi	

1
	je .Main.main_107	
	movq %reg0, %reg1	

1
	movq $.string10, %rax	
	movq 0(%rbx), %reg2	

1
	movq $0, %r15	
	cmpl %r15d, %r14d	

1
.Main.main_23:	
	movq $.string8, %reg0	

1
	cmpq $Razz_vtable, 0(%reg0)	
	je .Foo.new_9	

1
	movq $0, %rdi	
	movq %rdi, 720(%reg1)	

1
	call out_error	
.Main.main_135:	

1
	je .Main.main_14	
	movq $21, %reg0	

1
	movq $0, %reg0	
	movq %reg0, 704(%rax)	

1
.Main.main_2:	
	movq %rax, %rdi	

1
	movq $17376, %reg0	
	negl %reg1	

1
.Matrix.set_3:	
	jmp .Matrix.set_13	

1
	movq %reg0, 8(%reg1)	
	movq %reg1, 72(%rbx)	

1
.Main.main_124:	
	movq %reg0, %reg1	

1
	je .Main.main_64	
	movq $49, %rsi	

1
	movq $1, %r12	
	movq $1, %r13	

1
.Main.main_75:	
	movq %reg0, %rax	

1
	movq %reg0, %r13	
	negl %r13d	

1
	jne .A2I.i2c_15	
	movq $.string14, %rax	

1
	call out_error	
.Main.main_121:	

1
.Complex.equal_3:	
	movq 0(%r12), %rax	

1
	movq $45402, %rdi	
	movq %rdi, %reg1	

1
	movq $21060, %rax	
	movq $19990, %rdi	

1
	movq $25099, %rsi	
	movq $52033, %reg1	

1
	movq $169, %reg0	
	movq $.string5_l, %reg1	

1
	.quad Bar.getX	
	.quad Foo.getY	

1
	movq %reg0, 32(%reg1)	
	movq %reg0, %reg1	

1
	testq $1, %r8	
	je .Main.main_170	

1
	je .Main.main_1	
	movq $112, %rsi	

1
	cmpl %reg0, %edi	
	setle %reg2l	

1
	.quad 0	
.string19_l:	

1
	call *%rax	
	movq 368(%reg1), %r12	

1
	movq %rdi, %rbx	
	movq $name_Bool, %rax	

1
	.globl Baz.main	
	.type Baz.main, @function	

1
	movq 304(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq %rax, %reg1	
	movq $45332, %rax	

1
	movq %r14, %rax	
	movq -120(%rbp), %rsi	

1
	movq %reg0, -32(%rbp)	
	movq $19, %reg0	

1
.ListNode.insert_4:	
	movq 16(%rbx), %reg1	

1
.Bar.new_3:	
	call Bar.new	

1
	imull %reg0	
	movq -48(%rbp), %reg2	

1
	movq -24(%rbp), %reg1	
	movq %reg2, %rax	

1
.Matrix.get_30:	
	movq $3, %rcx	

1
	movq %reg0, %rax	
	jmp .Main.main_85	

1
.Main.main_3:	
	cmpq $Int_vtable, 0(%reg0)	

1
	movq %rax, 8(%reg1)	
	movq $.string7, %rax	

1
.Main.main_45:	
	movq -16(%rbp), %rdx	

1
	movq %r15, %rsi	
	movq %r14, %reg3	

1
	movq $0, %rdi	
	movq %rdi, 496(%rax)	

1
	movq %reg0, %rax	
	movq %rdx, %reg0	

1
	testq $1, %reg0	
	je .Main.main_143	

1
	movq %reg0, %reg1	
	movq $1317, %reg0	

1
	movq -136(%rbp), %rax	
	subl %ecx, %reg3	

1
	movq $Dictionary_vtable, 0(%rax)	
	movq $0, %reg1	

1
	movq %rdi, 584(%rax)	
	movq $0, %rdi	

1
	je .Main.main_52	
	movq $15, %reg0	

1
	movq %r14, %reg1	
	negl %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 400(%rax)	

1
	movq %reg0, 112(%rax)	
	movq $3000, %reg0	

1
	movq -56(%rbp), %reg1	
	movq -56(%rbp), %r9	

1
	movq $27940, %r11	
	movq $0, %reg1	

1
	movq 88(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	ret	
	.size Complex.reflect_Y, .-Complex.reflect_Y	

1
	subl %reg0, %reg1	
	movq -112(%rbp), %rcx	

1
	je .Main.main_181	
	movq $308, %rsi	

1
.Main.main_11:	
	movq $.string9, %rax	

1
	.size List.sort, .-List.sort	
	.globl List.insert	

1
.Matrix.set_25:	
	cdq	

1
	movq $30773, %rdi	
	cmpl %edi, %reg2	

1
	movq -88(%rbp), %rcx	
	negl %reg2	

1
.Razz.new_13:	
	movq 16(%reg0), %rdx	

1
	movq -32(%rbp), %rax	
	subl %eax, %ecx	

1
	movq -24(%rbp), %rdi	
	movq %reg2, %rsi	

1
	subl %eax, %edi	
	movq %rdi, -32(%rbp)	

1
	movq %reg0, %reg1	
	movq %rcx, %r12	

1
	movq $4, %rsi	
	movq $.string5_l, %reg1	

1
	movq %reg0, 104(%rax)	
	movq %reg0, %rax	

1
	movq %rdi, %reg1	
	movq $0, %rsi	

1
	movq $.string6, %rax	
	movq %rax, 8(%reg1)	

1
	jge .Main.main_13	
	movq %reg0, %reg1	

1
	movq $8800, %reg0	
	movq 0(%reg1), %reg2	

1
	movq $9, %rax	
	movq %rax, -96(%rbp)	

1
	movq %r12, %reg1	
	movq %r15, %rdi	

1
	movq %r12, 8(%reg1)	
	movq $2, %reg1	

1
	movq 8(%reg0), %reg1	
	movq $2, %rcx	

1
	call *%reg0	
	movq 192(%rbx), %reg2	

1
	movq $18429, %reg0	
	movq $52820, %reg1	

1
	movq %reg0, %reg1	
	jmp .Foo.new_6	

1
	movq %rdi, %rax	
	jmp .Main.main_63	

1
	movq %rax, %reg1	
	jmp .Main.iota_1	

1
	movq %reg0, 320(%rax)	
	movq $3000, %reg0	

1
	testq $1, %rsi	
	je .Main.main_141	

1
	movq 632(%reg0), %r12	
	movq 0(%reg0), %rax	

1
.Razz.new_13:	
	movq 16(%rbx), %reg1	

1
	je .Main.main_78	
	movq $55, %rsi	

1
	jne .Matrix.set_36	
	movq %reg0, 120(%rax)	

1
	movq %reg0, 488(%reg1)	
	movq $3000, %reg0	

1
	setl %dil	
	jge .Main.new_10	

1
	imull %reg0d	
	movq -32(%rbp), %reg0	

1
	movq %rdi, %rax	
	movq 48(%rbx), %rsi	

1
	movq $4, %reg0	
	movq %reg0, -40(%rbp)	

1
	movq $21813, %rdi	
	movq $25099, %reg1	

1
.Cons.insert_1:	
	movq 8(%reg0), %r13	

1
	je .Main.func_2	
	cmpq $Bool_vtable, 0(%rax)	

1
	idivl %r9d	
	subl %eax, %r8d	

1
	subl %edi, %reg1	
	movq %reg2, %rbx	

1
	je .Matrix.set_38	
	movq $107, %reg0	

1
	movq -24(%rbp), %reg1	
	movq -64(%rbp), %reg3	

1
	movq $3966, %rdi	
	cmpl %reg1, %eax	

1
	movq $50691, %r11	
	imull %r11d	

1
	call *%rax	
	movq 352(%reg1), %rax	

1
	jmp .A2I.c2i_10	
.A2I.c2i_9:	

1
	subl %eax, %ecx	
	movq %rsi, %reg3	

1
	movq $38511, %rax	
	subl %eax, %edi	

1
	jmp .Main.main_31	
.Main.main_30:	

1
.Main.main_82:	
	movq %rdi, %reg1	

1
	.quad .string11_l	
	.quad 3	

1
	movq %r14, %rax	
	movq -96(%rbp), %rsi	

1
	je .Main.main_64	
	movq -160(%rbp), %rax	

1
	movq %rdi, %rax	
	negl %edi	

1
	.quad Matrix.set	
	.quad Matrix.elMul	

1
	movq %rdi, %rax	
	jmp .Matrix.set_5	

1
	negl %edi	
	movq -32(%rbp), %rax	

1
	call *%rbx	
	movq $0, %reg1	

1
.Razz.new_20:	
	movq 48(%reg0), %rdx	

1
	jmp .Bazz.new_6	
.Bazz.new_3:	

1
	.quad 38	
.string7_l:	

1
	subl %esi, %eax	
	negl %eax	

1
	call String.cmp	
	movq %reg0, %r15	

1
	call *%reg0	
	movq 464(%rbx), %reg0	

1
	movq $.string7, %rbx	
	movq 0(%rax), %reg2	

1
	movq 0(%reg0), %r14	
	movq 152(%r14), %r14	

1
	jne .Main.main_62	
	movq %reg0, %reg1	

1
	addl %edi, %eax	
	movq %r14, %reg3	

1
	addl %eax, %ecx	
	movq -168(%rbp), %reg3	

1
	call *%rax	
	movq 112(%reg1), %reg2	

1
.Cons.sort_2:	
	movq 0(%reg0), %r12	

1
	movq 288(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	movq -56(%rbp), %reg1	
	movq %rdi, %reg3	

1
	jne .Main.main_2	
	movq %r12, %r14	

1
	.quad Main.funccase	
	.quad Main.funccasei	

1
	movq %rdi, %reg1	
	movq $34533, %rax	

1
.Main.main_68:	
	movq %reg0, %rsi	

1
	movq %rsi, %reg1	
	movq $5, %rsi	

1
Bar.getJ:	
	pushq %rbp	

1
	je .Main.main_19	
	movq $11, %rsi	

1
	imull %esi	
	movq $23071, %rsi	

1
	movq %rbx, %rdi	
	subl %reg2, %reg3	

1
	movq %reg0, %rdi	
	movq $1823, %reg0	

1
	idivl %reg0	
	movq $55626, %rdi	

1
	sete %reg0b	
	jne .Matrix.set_6	

1
	movq -152(%rbp), %reg1	
	movq -152(%rbp), %reg2	

1
	imull %edi	
	movq $9556, %rdi	

1
	subl %esi, %reg1	
	movq -152(%rbp), %reg3	

1
	movq 0(%r12), %rax	
	movq 72(%rax), %rax	

1
	movq $3000, %reg0	
	movq %reg0, 592(%rax)	

1
A2I.new:	
	pushq %reg0	

1
	movq -48(%rbp), %reg1	
	subl %reg2, %r8d	

1
	movq 712(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
.Main.main_151:	
	movq %reg0, %reg1	

1
	movq -104(%rbp), %rsi	
	subl %reg2, %eax	

1
	movq $53748, %reg0	
	movq 0(%rbx), %reg2	

1
	movq 8(%reg0), %reg0	
	addl %eax, %edi	

1
.string4_l:	
	.string "Main"	

1
	testq $1, %rax	
	je .ListNode.insert_4	

1
	movq -144(%rbp), %reg1	
	subl %reg2, %esi	

1
	je .Matrix.set_51	
	movq $116, %reg0	

1
	call *%rax	
	movq 352(%rbx), %rax	

1
.A2I.i2c_11:	
	movq $6, %rcx	

1
	cmpq $Bool_vtable, 0(%rax)	
	je .Main.new_2	

1
.Main.print_list_5:	
	movq 0(%r12), %reg1	

1
	call *%reg0	
	movq 152(%reg1), %r12	

1
Foo.get:	
	pushq %rbp	

1
	movq $45379, %rax	
	subl %reg1, %esi	

1
	idivl %edi	
.Matrix.get_37:	

1
	jmp .Main.main_40	
.Main.main_39:	

1
	movq %reg0, %rdi	
.CellularAutomaton.cell_at_next_evolution_4:	

1
	movq %r15, %rdi	
	addl %reg2, %eax	

1
	movq $0, %reg0	
	movq %reg0, 224(%reg1)	

1
	movq $63562, %reg0	
	movq %reg0, %rcx	

1
	imull %edi	
	movq %rax, -152(%rbp)	

1
	call *%reg0	
	movq $16210, %rdi	

1
	call *%rax	
	movq 400(%reg1), %rax	

1
	idivl %reg0	
	movq -128(%rbp), %rsi	

1
	je .Main.main_78	
	movq $19, %reg0	

1
	call *%reg0	
	movq -16(%rbp), %rdx	

1
	movq -80(%rbp), %rax	
	movq -152(%rbp), %rdi	

1
	call Bar.new	
	movq %reg0, 8(%reg1)	

1
	movq %r12, %rcx	
	negl %reg2	

1
	movq $8937, %reg0	
	movq $45402, %reg1	

1
	subl %reg0, %reg1	
	movq $14802, %reg2	

1
	movq %r13, %r12	
.Main.main_3:	

1
	subl %reg0, %reg1	
	movq $34320, %reg2	

1
.Main.main_23:	
	movq $0, %r12	

1
	addl %eax, %ecx	
	movq -176(%rbp), %rax	

1
	call getmem	
	movq $Dictionary_vtable, 0(%reg0)	

1
	movq 88(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	.quad 42	
.string21_l:	

1
	je .Matrix.set_25	
	movq $98, %reg0	

1
	movq -16(%rbp), %rax	
	movq %rbx, %rdi	

1
	call *%reg0	
	movq 184(%reg1), %rax	

1
	jge .A2I.i2a_3	
	movq 0(%reg0), %r12	

1
	je .Main.main_123	
	movq $70, %rsi	

1
	movq $5, %rcx	
	movq %reg1, %reg2	

1
	.string "DicNode"	
.string2:	

1
	movq $.string8, %reg0	
	movq %reg0, %rbx	

1
	movq %rax, %r14	
	jmp .Main.main_12	

1
	.quad 4	
.string15_l:	

1
	call *%r13	
	movq 0(%reg1), %r12	

1
	movq %reg0, %rdi	
	movq -48(%rbp), %rsi	

1
	movq %rax, %r10	
	movq $63664, %rax	

1
	.size CellularAutomaton.num_cells, .-CellularAutomaton.num_cells	
	.globl CellularAutomaton.cell	

1
	movq %reg0, %r15	
	cmpl $0, %reg2	

1
	movq -152(%rbp), %reg1	
	negl %esi	

1
	addl %reg0, %reg1d	
	movq %rcx, %reg3	

1
	idivl %ecx	
	movq -40(%rbp), %rsi	

1
	movq %r12, %rax	
	imull %reg2d	

1
	movq -56(%rbp), %r9	
	imull %r9d	

1
.Cons.rev_1:	
	movq 16(%rax), %rdx	

1
	je .Main.main_1	
	movq $138, %reg0	

1
	addl %reg0, %reg1	
	movq $38737, %rax	

1
	movq %reg0, 592(%reg1)	
	movq $0, %reg0	

1
	jne .Matrix.set_19	
	movq %rdi, 64(%rax)	

1
.Main.main_23:	
	movq %reg0, %rsi	

1
	movq 16(%rbx), %rax	
	movq %reg2, %reg3	

1
	movq %r13, %reg1	
	movq %r15, %rdi	

1
	je .Main.main_47	
	movq $34, %reg0	

1
.Main.main_138:	
	movq %reg0, %reg1	

1
	movq %rdi, 592(%reg1)	
	movq $0, %rdi	

1
	movq 200(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
.Main.main_20:	
.Main.main_18:	

1
	movq %rdi, %reg1	
	jmp .Main.main_139	

1
	addl %eax, %r8d	
	movq -144(%rbp), %reg3	

1
	.size Main.funccase, .-Main.funccase	
	.globl Main.funccasei	

1
	movq $41765, %reg0	
	subl %eax, %reg2	

1
	jmp .Bar.new_11	
.Bar.new_11:	

1
	movq -32(%rbp), %rax	
	movq -144(%rbp), %rsi	

1
	je .Main.main_15	
	movq -120(%rbp), %rax	

1
	movq -168(%rbp), %reg1	
	movq -152(%rbp), %reg3	

1
.Main.print_list_5:	
	movq 0(%r12), %rax	

1
	movq -80(%rbp), %reg1	
	movq -88(%rbp), %reg3	

1
	movq -168(%rbp), %rsi	
	movq -88(%rbp), %reg3	

1
.Main.main_1:	
	movq $34, %reg0	

1
	movq %rdi, %reg1	
	jmp .Main.main_87	

1
	jge .Main.main_3	
	movq $1, %r12	

1
	.quad Nil.insert	
	.quad Nil.rcons	

1
	.globl Razz.new	
	.type Razz.new, @function	

1
	movq %rsi, %rax	
	subl %reg2, %edi	

1
.DicNode.get_4:	
	movq 0(%rax), %r13	

1
	movq $8937, %rax	
	movq $45402, %rdi	

1
.Main.main_56:	
	movq 0(%rax), %r14	

1
	testq $1, %rdi	
	je .Main.main_56	

1
.string6_l:	
	.string "2 is trivially prime.\\n"	

1
	movq $2, %reg0	
	addl %edi, %esi	

1
.Cons.insert_1:	
	movq 8(%reg0), %reg1	

1
	movq -160(%rbp), %reg1	
	movq %reg2, %rsi	

1
	movq %rdi, %rax	
	movq -152(%rbp), %rax	

1
	movq 48(%rbx), %reg1	
	movq %reg1, 64(%rbx)	

1
	testq $1, %rax	
	je .Main.main_32	

1
.Main.new_3:	
	movq $0, %rdi	

1
	movq $201, %reg0	
	movq $.string5_l, %rdi	

1
	cmpq $Foo_vtable, 0(%reg0)	
	je .Foo.new_3	

1
.Main.main_8:	
	movq 0(%r13), %reg1	

1
	movq $5411, %r10	
	addl %r10d, %eax	

1
	call *%r12	
	jmp .Main.func_3	

1
	movq %r9, %rax	
	movq %r12, %r9	

1
.Main.main_88:	
	cdq	

1
	call *%reg0	
	movq 456(%rbx), %reg0	

1
	movq %reg0, %r12	
	jmp .Main.main_1	

1
	movq $125, %rsi	
	movq $.string3_l, %rdi	

1
	movq $0, %reg0	
.Complex.equal_6:	

1
	movq $38686, %r10	
	addl %r10d, %reg1	

1
	movq 736(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	call *%rax	
	movq 696(%reg1), %reg2	

1
	jge .Main.main_35	
	cmpl $0, %reg0d	

1
	movq %reg0, 120(%reg1)	
	movq %reg0, %reg1	

1
	movq %reg0, %reg1	
	call IO.out_string	

1
	call Main.func	
	movq %reg0, %r12	

1
	je .Main.main_1	
	call Object.new	

1
	sete %r13b	
	jne .Main.main_4	

1
	testq $1, %rcx	
	je .Main.main_68	

1
	movq 272(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq $8, %reg0	
	movq $.string5_l, %rdi	

1
	je .Main.main_75	
	movq -128(%rbp), %rax	

1
	imull %reg0	
	movq $60575, %reg1	

1
	movq -104(%rbp), %rax	
	subl %eax, %reg3	

1
.Cons.sort_1:	
	movq 16(%rax), %rdx	

1
.Main.main_7:	
	movq 0(%rbx), %r15	

1
	testq $1, %rax	
	je .Main.main_58	

1
	movq %reg0, 736(%reg1)	
	leave	

1
	movq $60323, %reg0	
	imull %reg1	

1
	movq $0, %reg0	
	movq %reg0, 672(%reg1)	

1
	negl %eax	
	movq -104(%rbp), %rsi	

1
	movq %rbx, %reg1	
	movq %r10, %reg3	

1
	negl %eax	
	movq %reg1, -40(%rbp)	

1
	.size _main, .-_main	
	.globl Dictionary.get	

1
	je .Main.main_17	
	movq $.string7, %reg0	

1
	je .Main.main_121	
	movq $70, %rsi	

1
	movq %r15, %rax	
	movq -72(%rbp), %reg3	

1
.Main.main_19:	
	movq $.string8, %rax	

1
	setle %reg0l	
	jg .Main.funcifi_1	

1
Baz_vtable:	
	.quad .string0	

1
	call *%r13	
	movq $1, %reg1	

1
	movq %rsi, %reg1	
	movq %reg2, %r8	

1
	movq %r15, %rsi	
	movq %rbx, %reg3	

1
	movq $30018, %rax	
	subl %eax, %edi	

1
	cmpq $Object_vtable, 0(%reg0)	
	je .Main.main_16	

1
	movq $3000, %reg0	
	movq %reg0, 224(%reg1)	

1
.Main.main_8:	
	movq $9, %rax	

1
	subl %reg0, %esi	
	movq $48457, %reg2	

1
	addl %reg0, %eax	
	movq %reg2, 16(%reg3)	

1
	movq -24(%rbp), %reg1	
	movq %r8, %r9	

1
	jne .Matrix.set_49	
	movq %reg0, 160(%reg1)	

1
	call out_error	
.Main.main_159:	

1
	testq $1, %rdi	
	je .List.insert_2	

1
	movq $12843, %reg0	
	movq $0, %r13	

1
	je .Main.main_162	
	movq %reg0, %rax	

1
	sete %r13b	
	jne .DicNode.get_1	

1
	movq -88(%rbp), %rsi	
	movq -32(%rbp), %rax	

1
	call *%r12	
	jmp .Main.new_4	

1
	movq 152(%rax), %rax	
	jmp .Matrix.get_48	

1
	setle %reg0l	
	jg .Main.main_6	

1
.Main.main_62:	
	movq -48(%rbp), %reg1	

1
	je .Bar.getX_1	
	movq $14, %reg0	

1
	je .Main.main_3	
	movq $.string6, %rax	

1
	movq -168(%rbp), %reg1	
	movq -88(%rbp), %rdi	

1
	movq 480(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq $.string7, %r14	
	movq %r12, %rdi	

1
	movq $13765, %reg0	
	movq $5137, %rdi	

1
	movq %rax, -72(%rbp)	
	movq %reg2, %rax	

1
	negl %r8d	
	movq -64(%rbp), %rax	

1
.Main.main_4:	
	cmpl $0, %reg0	

1
	cmpq $Main_vtable, 0(%reg0)	
	je .Main.main_23	

1
	idivl %reg0	
	movq %reg1, -120(%rbp)	

1
	movq -72(%rbp), %rsi	
	subl %esi, %eax	

1
	je .Main.main_19	
	movq $11, %reg0	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_9	

1
	jg .Main.main_35	
	movq -160(%rbp), %reg1	

1
.Main.main_4:	
	movq $0, %r12	

1
	movq $5456, %rax	
	subl %reg1, %reg2	

1
.Bar.new_19:	
	movq 16(%reg0), %reg1	

1
	je .Bar.new_7	
	movq $4, %rsi	

1
	call out_error	
.Main.main_191:	

1
	movq $213, %rsi	
	movq $.string5_l, %rdi	

1
	.type DicNode.getCount, @function	
DicNode.getCount:	

1
	movq %rdi, %rax	
	movq %rdx, %rdi	

1
	movq %rsi, %reg1	
	movq %rdi, %r8	

1
	call *%reg0	
	movq $12, %r14	

1
	je .Matrix.set_12	
	movq $89, %rsi	

1
	jge .Main.new_10	
	movq 16(%rbx), %reg1	

1
	movq 152(%r12), %r12	
	movq %rax, %reg2	

1
	subl %eax, %reg1	
	movq -128(%rbp), %reg3	

1
	movq $3000, %rdi	
	movq %rdi, 192(%rax)	

1
	call *%reg0	
	jmp .Main.func2_2	

1
	addl %eax, %reg1	
	movq -168(%rbp), %reg3	

1
.Main.main_15:	
	movq 0(%reg0), %rax	

1
	movq $4, %rax	
	cmpl %eax, %edi	

1
	call *%rax	
	negl %eax	

1
	.size List.rcons, .-List.rcons	
	.globl List.print_list	

1
	.string "+"	
.string18:	

1
	movq -128(%rbp), %reg1	
	movq -88(%rbp), %rsi	

1
	movq $47, %rsi	
	movq $.string5_l, %rdi	

1
	movq %rsp, %rbp	
	subq $40, %rsp	

1
	testq $1, %reg0	
	je .Main.main_157	

1
	addl %reg0, %reg1	
	movq $18119, %rax	

1
	movq -168(%rbp), %rax	
	movq -104(%rbp), %rdi	

1
	movq 688(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	call *%reg0	
	movq 296(%rbx), %r12	

1
.Main.main_16:	
	movq 0(%rax), %r14	

1
	movq $7493, %reg0	
	addl %reg1, %reg2	

1
	subl %r8d, %reg1	
	movq -112(%rbp), %r8	

1
	movq -16(%rbp), %rsi	
	cmpl %esi, %reg3	

1
	call *%r15	
	movq $11, %r14	

1
	addl %reg0, %reg1	
	movq %reg2, -16(%rbp)	

1
	je .Main.func_1	
	movq $10, %rsi	

1
	movq $62649, %r12	
	movq 0(%reg1), %reg2	

1
	movq $4, %r13	
	movq $1, %r14	

1
	subl %eax, %reg1	
	movq $8997, %reg2	

1
	movq $.string9, %rbx	
	movq 0(%reg1), %r12	

1
	movq $3000, %reg0	
	movq %reg0, 144(%reg1)	

1
	movq %rdi, %rax	
	jmp .Main.main_28	

1
	movq -64(%rbp), %reg1	
	movq -32(%rbp), %rdi	

1
	movq %r10, %reg1	
	movq $50929, %r10	

1
	.quad 1	
percentlld_string_l:	

1
	je .Main.main_34	
	movq $179, %reg0	

1
	.quad A2I.a2i	
	.quad A2I.a2i_aux	

1
	movq 688(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq %rax, -80(%rbp)	
	movq $9, %rax	

1
	movq -56(%rbp), %rsi	
	subl %esi, %reg3	

1
	je .Razz.new_5	
	cmpq $Razz_vtable, 0(%reg0)	

1
	movq $15, %rsi	
	movq $.string3_l, %reg1	

1
	movq %reg0, %reg1	
	subl %r8d, %eax	

1
	movq %rdi, %r13	
	movq 0(%rbx), %reg3	

1
	addl %reg0, %edi	
	movq $18119, %reg2	

1
	movq %rdi, %rax	
	jmp .Main.main_141	

1
	negl %eax	
	movq %reg1, -136(%rbp)	

1
	movq $.string9, %reg0	
	movq 16(%reg1), %reg2	

1
	je .Main.main_36	
	movq $13, %reg0	

1
	idivl %reg0	
	movq $3175, %reg1	

1
	call *%rax	
	call Bar.new	

1
	movq 8(%r12), %reg1	
	movq %rbx, %reg3	

1
	call Bar.new	
	jmp .Bar.new_6	

1
	jge .Main.main_66	
	movq %r14, %reg1	

1
	subl %reg0, %edi	
	movq $18310, %rax	

1
.Main.main_47:	
	movq 0(%reg0), %reg1	

1
	je .Main.main_22	
	cmpq $Object_vtable, 0(%rbx)	

1
	movq %reg0, %reg1	
	movq $33976, %reg0	

1
	je .Main.main_167	
	movq $145, %rsi	

1
	call *%rax	
	movq 568(%rbx), %rax	

1
	call *%r13	
	movq $.string8, %rax	

1
.Main.main_13:	
	movq 0(%reg0), %r12	

1
	movq $0, %reg0	
	movq 16(%rax), %reg2	

1
.Main.main_6:	
	movq 0(%rbx), %reg1	

1
	movq %rdi, 184(%reg1)	
	movq %rdi, %reg1	

1
	.size Cons.isNil, .-Cons.isNil	
	.globl Cons.head	

1
	idivl %esi	
	movq $229, %reg1	

1
	movq $18119, %reg0	
	subl %reg1, %reg2	

1
.ListNode.insert_2:	
	movq 0(%rax), %r13	

1
	.string "Main"	
.string3:	

1
	movq %reg0, %rax	
	jmp .Main.main_10	

1
	testq $1, %rax	
	je .Cons.print_list_1	

1
	testq $1, %rax	
	jne .Main.main_8	

1
	jge .Main.main_80	
	movq %reg0, %rax	

1
	movq %rsp, %rbp	
	call Foo.new	

1
.Main.main_152:	
	movq -48(%rbp), %rax	

1
	call *%rbx	
	jmp .Main.main_30	

1
	movq -144(%rbp), %reg1	
	movq %reg1, %reg2	

1
Bazz.new:	
	pushq %rbp	

1
	movq %reg0, %rdi	
	movq $38511, %reg0	

1
	je .Main.main_30	
	movq $13, %reg0	

1
	movq $12618, %rdi	
	negl %reg1	

1
	movq $52820, %rax	
	movq $38686, %reg1	

1
	movq 16(%rax), %rdi	
	movq %r12, %reg3	

1
	movq $10152, %rax	
	movq $18046, %rdi	

1
	setle %reg0l	
	jg .Main.main_77	

1
	movq 200(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	jg .Main.main_13	
	cmpl $0, %ebx	

1
	movq -144(%rbp), %rdi	
	imull %edi	

1
	movq $12, %r8	
	movq %r12, %rax	

1
	movq %reg0, %reg1	
	movq $45807, %reg0	

1
	movq $10280, %r12	
	movq 0(%rbx), %rax	

1
	addl %edi, %eax	
	movq %reg2, 40(%rbx)	

1
	call *%reg0	
	movq 632(%reg1), %reg2	

1
.Main.main_32:	
.Main.main_30:	

1
	testq $1, %reg0	
	je .ListNode.insert_4	

1
	negl %reg0d	
	movq $48391, %rax	

1
	movq $40488, %rax	
	negl %eax	

1
	movq -104(%rbp), %reg1	
	subl %esi, %eax	

1
	movq 8(%rax), %rdi	
	movq $2, %rcx	

1
	movq -16(%rbp), %rdi	
	subl %edi, %esi	

1
	movq %r12, %rax	
	movq %rbx, %reg3	

1
	call *%reg0	
	movq 16(%reg1), %rax	

1
	movq -80(%rbp), %reg1	
	movq -56(%rbp), %rax	

1
	jmp .A2I.a2i_2	
.A2I.a2i_1:	

1
	jmp .Main.main_36	
.Main.main_35:	

1
	je .List.insert_4	
	movq $104, %rsi	

1
	movq %r12, %r15	
	pushq %reg2	

1
	movq $.string21, %r12	
	movq 0(%reg1), %rax	

1
.Cons.print_list_1:	
	movq 16(%reg0), %rdx	

1
	movq %rsi, %rdi	
	movq 8(%rdi), %reg2	

1
	movq %rdi, 560(%rax)	
	movq $0, %rdi	

1
	movq -160(%rbp), %r9	
	imull %r9d	

1
	ret	
	.size CellularAutomaton.evolve, .-CellularAutomaton.evolve	

1
	movq $100, %rdi	
	movq %reg1, %reg2	

1
	movq $.string10, %rax	
	movq 0(%rbx), %r12	

1
	movq 8(%reg0), %r12	
	movq 16(%reg0), %rax	

1
	movq $0, %reg0	
	movq %reg0, 512(%reg1)	

1
	movq 96(%r12), %r12	
	movq %reg1, %rdi	

1
	movq 8(%reg0), %rdi	
	cmpl $0, %edi	

1
	addl %edi, %reg1	
	movq %rax, -16(%rbp)	

1
	movq 288(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	jmp .A2I.a2i_4	
.A2I.a2i_3:	

1
	movq %rdi, 280(%rax)	
	movq $3000, %rdi	

1
	movq -16(%rbp), %reg1	
	movq -160(%rbp), %reg3	

1
	je .Main.new_3	
	cmpq $Int_vtable, 0(%rbx)	

1
.Bar.new_10:	
	movq %rbx, %reg1	

1
	movq $36212, %rsi	
	negl %reg1	

1
	movq 16(%reg0), %rdi	
	subl %reg2, %reg3	

1
	movq -72(%rbp), %rax	
	movq -48(%rbp), %rsi	

1
	je .Main.main_9	
	movq $30, %reg0	

1
.Matrix.set_10:	
	movq $1, %reg0	

1
	.quad Dictionary.setHead	
DicNode_vtable:	

1
	movq $.string17, %rbx	
	movq %rbx, %reg1	

1
	addl %reg0, %reg1	
	movq $28260, %rax	

1
	movq %reg0, %reg1	
	movq $15735, %reg0	

1
	movq $1, %reg0	
	movq $0, %rsi	

1
	negl %reg0	
	cmpl %reg0, %reg1	

1
	movq -48(%rbp), %rax	
	movq %reg2, %rsi	

1
	movq $173, %rsi	
	movq $.string5_l, %reg1	

1
	je .Main.main_42	
	movq $34, %reg0	

1
	movq $2234, %rax	
	movq 0(%reg1), %reg2	

1
	movq %rdx, -144(%rbp)	
	movq -8(%rbp), %rdx	

1
	movq %reg0, %rax	
	jmp .Main.main_135	

1
	movq %r12, %reg1	
	imull %r8d	

1
	call *%r12	
	movq $.string11, %rax	

1
.Main.main_48:	
.Main.main_46:	

1
	testq $1, %rax	
	je .Bazz.new_1	

1
	movq $50347, %reg0	
	movq %reg0, %rcx	

1
.Bar.new_7:	
	cmpq $Bar_vtable, 0(%rbx)	

1
	sete %reg0b	
	jne .Matrix.set_21	

1
	je .Main.main_129	
	movq %reg0, %rdi	

1
.Main.main_26:	
.Main.main_24:	

1
	movq -168(%rbp), %rax	
	cmpl %reg2, %edi	

1
	movq %reg0, 280(%reg1)	
	movq $0, %reg0	

1
	movq 104(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	je .Main.main_33	
	movq $22, %reg0	

1
	movq $3000, %reg0	
	movq %reg0, 688(%reg1)	

1
	imull %edi	
	movq %r12, %reg2	

1
	movq $.string8, %r15	
	movq %reg1, %reg2	

1
	sete %dil	
	jne .Main.main_17	

1
	movq 24(%rbx), %rax	
	imull %edi	

1
.Razz.new_10:	
	movq %reg0, %rax	

1
	movq -32(%rbp), %reg1	
	movq -128(%rbp), %rsi	

1
	movq %reg0, 376(%reg1)	
	movq $0, %reg0	

1
	call *%r12	
	movq 88(%rbx), %reg2	

1
	movq $24, %rsi	
	movq $.string3_l, %rdi	

1
	movq $37073, %rax	
	movq $6195, %reg1	

1
	jne .Main.main_3	
	movq -128(%rbp), %rax	

1
	negl %esi	
	movq -16(%rbp), %rcx	

1
	movq %rdi, 64(%rax)	
	movq $3000, %rdi	

1
	movq $222, %reg0	
	negl %edi	

1
	call *%r12	
	movq 48(%rbx), %rax	

1
	movq %rax, %reg1	
	call Bool.new	

1
	movq -144(%rbp), %rax	
	movq -40(%rbp), %reg3	

1
	movq $2, %reg0	
	imull %esi	

1
	movq 24(%rax), %rdi	
	cmpl $0, %reg2	

1
	movq $151, %reg0	
	movq $.string5_l, %reg1	

1
	call *%rax	
	movq 40(%rbx), %rax	

1
	movq 144(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq $24, %reg0	
	movq $.string1_l, %rdi	

1
	movq %rdi, %reg1	
	jmp .Main.main_48	

1
	subl %edi, %reg1	
	movq %rax, %r13	

1
	movq $51816, %rax	
	movq 0(%rbx), %r12	

1
	je .Main.main_165	
	movq $142, %rsi	

1
	movq %reg0, %rbx	
.Main.main_70:	

1
	movq %reg0, %rax	
	jmp .Razz.new_6	

1
	je .Main.main_62	
	movq $17, %rsi	

1
	movq 128(%r13), %r13	
	movq %reg1, %reg2	

1
	pushq %r12	
	movq $64, %rdi	

1
	movq %reg0, %rbp	
	subq $136, %reg0	

1
	testq $1, %rsi	
	je .Matrix.set_64	

1
	popq %rax	
	cmpl $0, %r15d	

1
.Main.new_3:	
	movq 24(%rbx), %rax	

1
	movq %reg0, %reg1	
	call Foo.foo	

1
	movq -32(%rbp), %rsi	
	subl %reg2, %edi	

1
	movq $2, %reg0	
	movq %reg0, 16(%rax)	

1
	setle %dil	
	jg .Main.main_149	

1
	movq $11, %rsi	
	movq $.string3_l, %reg1	

1
	idivl %esi	
	movq $16420, %reg1	

1
	call out_error	
.Main.funccase_6:	

1
	je .Main.main_28	
	cmpl $0, %r13d	

1
	ret	
	.size Main.funcifi, .-Main.funcifi	

1
	movq -16(%rbp), %rax	
	movq %r12, %rdi	

1
	movq %rdi, %reg1	
	jmp .Main.main_26	

1
	.quad 3	
	.quad Foo.new	

1
	movq %rsi, %rdi	
	movq -32(%rbp), %rsi	

1
	movq 16(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq %r15, %rdi	
	movq %reg2, %rsi	

1
	movq %reg0, %reg1	
	movq $name_Bool, %rax	

1
.A2I.i2a_aux_2:	
	popq %reg0	

1
	movq $76, %reg0	
	movq $.string3_l, %rdi	

1
	movq %reg0, -104(%rbp)	
	movq %reg2, %reg0	

1
	movq $.string10, %r12	
	movq 0(%rbx), %rax	

1
	movq -32(%rbp), %reg1	
	addl %eax, %reg3	

1
	addl %ebx, %reg1	
	movq %reg2, %reg3	

1
	addl %esi, %reg1	
	subl %reg1, %reg2	

1
	movq $4844, %reg0	
	movq $42968, %rdi	

1
	movq %r13, %reg1	
	movq %rbx, %reg3	

1
.Bar.new_9:	
	call Razz.new	

1
	movq %rax, 24(%rbx)	
	movq 8(%rbx), %rax	

1
	movq -168(%rbp), %reg1	
	movq -40(%rbp), %reg3	

1
	movq 640(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	movq %reg0, %reg1	
	movq %reg1, -32(%rbp)	

1
	movq 16(%rbx), %reg1	
	movq 32(%rbx), %r12	

1
	movq $0, %r13	
	movq 0(%reg1), %reg2	

1
	je .Main.main_47	
	movq $78, %rsi	

1
	movq $.string10, %reg0	
	movq 0(%reg1), %rax	

1
	.string "0"	
.string7:	

1
	testq $1, %rdi	
	je .Main.main_24	

1
	movq %rdi, 48(%reg1)	
	movq %rdi, %reg1	

1
	movq -72(%rbp), %rax	
	imull %ecx	

1
	cmpl $0, %ebx	
	sete %reg1	

1
	testq $1, %reg0	
	je .Main.main_116	

1
	movq %rcx, %reg1	
	movq %reg2, %reg3	

1
	call *%reg0	
	movq 416(%reg1), %reg0	

1
	call out_error	
.Main.main_128:	

1
	testq $1, %reg0	
	je .Matrix.set_38	

1
	movq $147, %reg0	
	movq $.string5_l, %reg1	

1
	movq %rdi, %rbx	
	movq $3, %reg2	

1
	movq $.string9, %rax	
	jmp .A2I.i2c_6	

1
	movq 0(%rax), %r15	
	movq 64(%r15), %r15	

1
	movq $0, %reg0	
	movq %reg0, 456(%reg1)	

1
	call *%r14	
	jmp .Main.main_10	

1
	call *%rax	
	movq 648(%reg1), %r12	

1
	movq %rsi, %rbx	
	movq 8(%reg2), %reg3	

1
	movq -64(%rbp), %rdi	
	cmpl %edi, %eax	

1
	je .Main.main_151	
	movq -128(%rbp), %rax	

1
	movq %r12, %rax	
	movq 8(%rbx), %r14	

1
	jne .Main.main_21	
	movq 0(%rbx), %reg1	

1
	movq %rdi, 72(%reg1)	
	movq $3000, %rdi	

1
	movq $56453, %reg0	
	imull %reg1	

1
	je .Main.main_9	
	movq $19, %reg0	

1
	movq %reg0, %reg1	
	movq $34533, %reg2	

1
	movq %rax, 8(%reg1)	
	movq 8(%reg1), %reg2	

1
	movq $14802, %rax	
	movq $39506, %rsi	

1
	testq $1, %reg0	
	je .Main.iota_2	

1
	testq $1, %rdi	
	je .Cons.sort_2	

1
.Matrix.set_34:	
	movq $5, %rcx	

1
	movq $58, %reg0	
	movq $.string5_l, %rdi	

1
	movq -112(%rbp), %rax	
	addl %esi, %reg3	

1
	movq $181, %rsi	
	movq $.string5_l, %rdi	

1
	movq 8(%rbx), %rdi	
	cmpl %reg2, %reg3	

1
	je .Main.main_5	
	movq $.string8, %reg0	

1
	movq %r15, %reg1	
	movq -72(%rbp), %rdi	

1
	movq %rdi, %rax	
	jmp .Main.main_163	

1
	je .A2I.a2i_1	
	movq $0, %reg0	

1
	negl %edi	
	movq %r13, %reg2	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_20	

1
	ret	
	.size Cons.sort, .-Cons.sort	

1
	movq 672(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq 16(%reg0), %rdi	
	cmpl %esi, %reg3	

1
	call String.concat	
	movq %reg0, %r13	

1
	movq %reg0, %rbx	
	movq $20, %rax	

1
	movq %rax, %reg1	
	movq $2, %rdi	

1
	movq %reg0, 64(%rax)	
	movq $1, %reg0	

1
	testq $1, %rdi	
	je .Main.main_52	

1
	call Main.func	
	popq %reg0	

1
	movq $192, %rsi	
	movq $.string5_l, %rdi	

1
	movq 16(%reg0), %reg1	
	addl %reg2, %edi	

1
	.type CellularAutomaton.cell_right_neighbor, @function	
CellularAutomaton.cell_right_neighbor:	

1
	subl %esi, %eax	
	movq -24(%rbp), %reg3	

1
	movq $55626, %rdi	
	imull %edi	

1
	movq %rdi, %rax	
	movq %r14, %rdi	

1
	subq $128, %rsp	
	pushq %rbx	

1
.Main.main_44:	
	movq %reg0, %rdx	

1
	movq %reg0, 144(%rax)	
	movq %reg0, %rax	

1
	movq %rdi, 240(%rax)	
	movq $3000, %rdi	

1
	.string " is prime.\\n"	
.string7:	

1
	jne .Matrix.set_49	
	movq %rdi, 160(%reg1)	

1
	ret	
	.size DicNode.setNext, .-DicNode.setNext	

1
.Main.new_2:	
	movq 0(%reg0), %rax	

1
	setl %al	
	movq $1, %rsi	

1
	call *%reg0	
	movq 320(%reg1), %reg2	

1
.Main.main_54:	
	movq 0(%r13), %rax	

1
	movq %rdi, 80(%rax)	
	leave	

1
	je .Main.main_54	
	movq $49, %rsi	

1
	movq %reg0, %reg1	
	jmp .Bar.new_6	

1
.Main.main_89:	
.Main.main_87:	

1
	movq $7, %rcx	
	movq %reg1, %rsi	

1
	je .Main.main_51	
	movq $34, %rsi	

1
	movq $3000, %rdi	
	movq %rdi, 144(%reg1)	

1
	setle %al	
	jmp .Main.main_155	

1
	movq 24(%reg0), %rax	
	addl %reg2, %eax	

1
	imull %ecx	
	movq -72(%rbp), %reg2	

1
	movq $36, %rsi	
	movq $.string2_l, %reg1	

1
	movq $3000, %rdi	
	movq %rdi, 416(%rax)	

1
	jg .Main.main_7	
	movq $.string7, %reg0	

1
	movq $3000, %reg0	
	movq %reg0, 80(%rax)	

1
	movq $ListNode_vtable, 0(%reg0)	
	movq $0, %rdi	

1
	movq $10, %rdi	
	movq %r14, %rax	

1
	movq $.string20, %rax	
	movq 0(%rbx), %r12	

1
	movq $83, %reg0	
	movq $.string2_l, %reg1	

1
	negl %ecx	
	addl %ecx, %esi	

1
	negl %reg0	
	movq $15469, %reg1	

1
	.type Bar.setX, @function	
Bar.setX:	

1
	movq $57936, %rsi	
	movq $0, %rcx	

1
	imull %r10d	
	addl %reg1, %r9d	

1
	.quad Object.type_name	
Foo_vtable:	

1
.Bar.new_18:	
	movq 32(%reg0), %reg1	

1
	je .Main.main_6	
	movq $89, %rsi	

1
	negl %eax	
	movq $7493, %rdi	

1
	movq %reg0, 648(%rax)	
	movq $3000, %reg0	

1
	movq $20, %reg0	
	movq %reg0, %r14	

1
	movq -40(%rbp), %reg1	
	movq $0, %r9	

1
	negl %eax	
	movq $30631, %reg1	

1
	movq $0, %rdi	
	movq %rdi, 632(%reg1)	

1
	call *%reg0	
	movq 160(%rbx), %reg0	

1
	call *%r15	
	movq -160(%rbp), %rdx	

1
	movq %reg0, %reg1	
	jmp .Main.main_163	

1
	je .Main.main_68	
	movq $17, %rsi	

1
	call *%rax	
	movq 632(%rbx), %r12	

1
	movq %r9, %reg1	
	movq %reg2, %reg1	

1
	movq $48985, %rax	
	movq 0(%rbx), %reg2	

1
	call *%rax	
	movq 272(%rbx), %r12	

1
	ret	
	.size Complex.x_value, .-Complex.x_value	

1
	movq %r13, %reg1	
	cmpl %reg2, %edi	

1
	negl %reg0	
	cmpl %reg0, %eax	

1
	ret	
	.size Nil.rcons, .-Nil.rcons	

1
	movq 24(%rbx), %rax	
	movq %r12, %rdi	

1
	je .Main.main_184	
	movq $151, %rsi	

1
	call *%r12	
.Dictionary.get_3:	

1
	movq $18119, %rax	
	subl %eax, %reg2	

1
	jmp .Main.main_99	
.Main.main_98:	

1
.Matrix.get_21:	
	movq $5, %rsi	

1
	movq %rdi, %rax	
	jmp .Main.main_12	

1
	je .Main.main_54	
	movq $204, %rsi	

1
	movq -160(%rbp), %rsi	
	addl %esi, %reg3	

1
	movq 8(%rax), %r12	
	movq 0(%rax), %reg2	

1
	jge .Main.main_78	
	movq %reg0, %rax	

1
	.globl Nil.sort	
	.type Nil.sort, @function	

1
	movq %reg0, %reg1	
	jmp .Matrix.mul_3	

1
	testq $1, %reg0	
	je .Matrix.get_66	

1
	movq 8(%rax), %r12	
	movq 0(%rax), %rbx	

1
	je .Main.funccase_3	
	cmpq $Bool_vtable, 0(%rdi)	

1
	testq $1, %rbx	
	je .Main.main_76	

1
	movq 592(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq %r14, %rax	
	movq -16(%rbp), %reg3	

1
	movq 296(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	imull %reg0	
	movq %r12, %rdi	

1
	imull %reg0	
	movq %reg1, %rbx	

1
	addl %edi, %reg1	
	movq %rax, 40(%rbx)	

1
	je .Main.main_15	
	movq %reg0, %reg1	

1
.string10_l:	
	.string "         X         "	

1
	movq $29524, %reg0	
	movq 0(%reg1), %reg2	

1
	subl %reg0, %r9d	
	movq %reg2, %rax	

1
	movq $.string7, %r13	
	movq $.string7, %reg1	

1
.Main.main_23:	
	movq -104(%rbp), %rsi	

1
	movq $50929, %r10	
	addl %r10d, %eax	

1
	movq $45402, %reg0	
	movq %reg0, %rsi	

1
	jg .Main.main_126	
	movq %reg0, %reg1	

1
	movq %r13, 8(%rax)	
	movq 0(%reg2), %reg3	

1
	movq %reg0, 200(%reg1)	
	leave	

1
	movq %rax, %reg1	
	jmp .Main.main_31	

1
	cmpq $Object_vtable, 0(%reg0)	
	je .Main.main_7	

1
Nil.print_list:	
	pushq %reg0	

1
	movq %rdx, -152(%rbp)	
	movq %reg2, %rdx	

1
.Main.main_86:	
	movq %reg0, %reg1	

1
	movq %rax, %rdi	
	movq -88(%rbp), %reg3	

1
.Bar.new_11:	
	movq %reg0, 32(%reg1)	

1
	je .Main.main_11	
	movq $4, %reg0	

1
	movq 136(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq 424(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq $43177, %reg0	
	subl %edi, %eax	

1
	movq -168(%rbp), %reg1	
	imull %reg1d	

1
	movq $.string11, %reg0	
	movq %r12, %rdi	

1
	jge .Main.main_146	
	movq -152(%rbp), %reg1	

1
	movq %rax, %rdi	
	movq -16(%rbp), %rsi	

1
	movq $4, %reg0	
	cmpl %eax, %edi	

1
	movq %reg0, %r10	
	movq $8022, %reg0	

1
	sete %r8b	
	jne .Matrix.set_58	

1
	movq $3000, %reg0	
	movq %reg0, 608(%rax)	

1
	je .Main.main_55	
	movq -168(%rbp), %rax	

1
	movq $33, %reg0	
	movq $2, %reg1	

1
	movq -136(%rbp), %reg1	
	movq %reg2, %rcx	

1
	subl %reg0, %eax	
	movq %reg2, -96(%rbp)	

1
	movq %r12, 8(%reg1)	
	movq 0(%reg2), %r14	

1
	movq $3000, %reg0	
	movq %reg0, 120(%rax)	

1
	je .Main.main_2	
	movq $13, %rsi	

1
	movq $2, %reg0	
	movq %reg0, 8(%rax)	

1
	movq 320(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
.Main.funccaseb_3:	
	popq %r12	

1
	.quad 1	
.string14_l:	

1
	movq -96(%rbp), %reg1	
	movq -48(%rbp), %rcx	

1
	call Razz.new	
	jmp .Bar.new_11	

1
	movq $0, %rdi	
	movq %rdi, 608(%rax)	

1
	.size CellularAutomaton.cell_at_next_evolution, .-CellularAutomaton.cell_at_next_evolution	
	.globl CellularAutomaton.evolve	

1
.Main.main_7:	
	movq 0(%reg0), %r12	

1
	.size Foo.getX, .-Foo.getX	
	.globl Bar.getX	

1
	movq -24(%rbp), %r9	
	addl %r9d, %eax	

1
	call *%r12	
	movq 8(%reg1), %reg2	

1
	movq -48(%rbp), %reg1	
	movq $0, %r9	

1
	jge .Main.main_2	
	cmpl $0, 8(%rbx)	

1
	imull %esi	
	movq -128(%rbp), %rsi	

1
.string6_l:	
	.string "qwerty"	

1
	movq $6, %rax	
	movq %rax, -64(%rbp)	

1
	movq %reg0, %reg1	
	movq %rdi, %r8	

1
	movq $5, %rsi	
	movq $.string4_l, %reg1	

1
	movq -128(%rbp), %rdx	
	movq %rdx, -176(%rbp)	

1
	movq %reg0, %rax	
	movq -184(%rbp), %reg3	

1
	je .Main.main_2	
	movq $0, %r12	

1
	je .Matrix.set_38	
	movq $107, %rsi	

1
	movq 32(%rax), %rax	
	jmp .Matrix.get_9	

1
.Main.main_14:	
	movq $7, %reg0	

1
	je .Main.main_1	
	movq $12, %r12	

1
	negl %reg0d	
	movq %reg0, %rbx	

1
	movq $35, %rsi	
	movq $90, %rdi	

1
	movq %reg0, %reg1	
	movq %r13, %reg1	

1
	movq $2, %rax	
	movq %rax, 24(%rbx)	

1
.Main.new_3:	
	movq %reg0, %reg1	

1
	negl %edi	
	cmpl %edi, %eax	

1
	.quad Object.type_name	
	.quad Dictionary.get	

1
.CellularAutomaton.evolve_2:	
	movq %reg0, 8(%reg1)	

1
	addl %reg0, %reg1	
	movq %reg2, -112(%rbp)	

1
	movq -40(%rbp), %reg1	
	movq -56(%rbp), %reg3	

1
	movq 712(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
List.cdr:	
	pushq %reg0	

1
	movq $49411, %rsi	
	movq %rsi, %reg1	

1
	sete %reg0	
	jne .Matrix.get_2	

1
.Main.main_30:	
	movq 0(%r13), %reg1	

1
	je .Foo.new_9	
	cmpq $Foo_vtable, 0(%reg0)	

1
	movq -176(%rbp), %reg1	
	subl %edi, %reg3	

1
	movq %reg0, %reg1	
	movq %rdx, %rax	

1
	imull %reg0	
	movq %rax, -16(%rbp)	

1
	jne .Main.main_17	
	movq -160(%rbp), %reg1	

1
	movq $9556, %rdi	
	cmpl %edi, %eax	

1
	negl %reg0	
	movq -8(%rbp), %rdx	

1
	movq 16(%reg0), %reg1	
	cmpl %eax, %edi	

1
	jmp .Main.main_118	
.Main.main_117:	

1
	movq -128(%rbp), %rsi	
	movq %rbx, %rax	

1
	sete %reg0l	
	jne .Main.main_57	

1
	movq -56(%rbp), %reg1	
	addl %eax, %edi	

1
	movq $12, %reg0	
	movq $0, %r10	

1
	movq 568(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq $10, %reg0	
	cmpl $0, %reg1d	

1
	subl %eax, %esi	
	movq -128(%rbp), %rax	

1
	movq %rax, -32(%rbp)	
	movq $0, %rax	

1
.Razz.new_14:	
	cmpq $Bar_vtable, 0(%rbx)	

1
	idivl %reg0	
	movq %rax, -104(%rbp)	

1
.DicNode.insert_1:	
	movq 24(%reg0), %rax	

1
	movq $20995, %reg0	
	movq $47127, %reg1	

1
	movq %reg0, %r8	
	movq -48(%rbp), %reg3	

1
	subl %reg0, %eax	
	movq $61208, %rbx	

1
.Main.main_103:	
	movq %reg0, %reg1	

1
	movq $324, %reg0	
	movq $12, %reg1	

1
	je .DicNode.get_6	
	movq $47, %rsi	

1
	movq $17, %rax	
	movq %rax, -32(%rbp)	

1
	movq $12, %r10	
	movq %rbx, %rax	

1
	movq 608(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	movq -16(%rbp), %rdx	
	movq %rdx, -32(%rbp)	

1
	movq -184(%rbp), %reg1	
	subl %ecx, %r8d	

1
	movq $932, %reg0	
	movq $0, %reg1	

1
	movq 568(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq $37473, %reg0	
	movq $0, %reg1	

1
	idivl %reg0	
	movq $39267, %rsi	

1
	movq 8(%rax), %reg1	
	movq %rbx, %reg3	

1
.Main.main_154:	
	movq -40(%rbp), %reg1	

1
.Main.main_51:	
	movq -168(%rbp), %rsi	

1
	movq $14, %rsi	
	movq $.string5_l, %rdi	

1
	movq 0(%reg0), %rbx	
	movq 112(%rbx), %rbx	

1
	movq %rdi, 248(%rax)	
	movq $3000, %rdi	

1
	movq $60159, %reg0	
	movq %reg0, %reg1	

1
	movq %reg0, %rsi	
	call IO.out_string	

1
	movq %reg0, 8(%reg1)	
	movq 8(%reg1), %rdi	

1
	movq %reg0, 8(%rbx)	
	movq %rbx, %rax	

1
	movq 72(%reg0), %reg0	
	movq 16(%reg1), %rdi	

1
	movq %rdi, %reg1	
	jmp .Main.main_36	

1
	.quad .string1_l	
	.quad 10	

1
	testq $1, %reg0	
	je .Main.main_170	

1
	movq $55348, %rsi	
	movq %rsi, %reg1	

1
.Main.main_16:	
	movq %r14, %rax	

1
	movq 8(%reg0), %rdi	
	call String.length	

1
	testq $1, %r8	
	je .Main.main_3	

1
	call *%r14	
	movq 0(%reg1), %rax	

1
	je .Main.main_96	
	movq $64, %rsi	

1
	movq 80(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq $3000, %rdi	
	movq %rdi, 192(%reg1)	

1
	movq 0(%rdx), %reg1	
	movq 120(%reg1), %reg1	

1
	je .Main.main_97	
	movq $64, %reg0	

1
	movq -160(%rbp), %rax	
	movq %r13, %rdi	

1
	movq %rdi, 544(%rax)	
	movq $3000, %rdi	

1
	negl %eax	
	movq %rax, 16(%reg2)	

1
	subq $40, %rsp	
	pushq %rbx	

1
	subl %edi, %eax	
	movq $43177, %reg2	

1
	testq $1, %rdi	
	je .Dictionary.get_2	

1
	jge .Main.main_72	
	movq %reg0, %rax	

1
	.quad .string16_l	
	.quad 1	

1
	movq %reg0, %r8	
	movq -96(%rbp), %reg0	

1
	addl %reg0, %reg1	
	movq -56(%rbp), %rax	

1
	movq $3000, %reg0	
	movq %reg0, 616(%rax)	

1
	movq $3828, %rsi	
	movq $0, %rcx	

1
	movq %rax, %rdi	
	jmp .CellularAutomaton.cell_at_next_evolution_4	

1
	movq %reg0, %rsi	
	movq -80(%rbp), %reg0	

1
	movq 152(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
.Main.main_12:	
	movq 0(%rax), %r13	

1
.Main.out_whatever_6:	
	movq 0(%reg0), %reg1	

1
	movq -160(%rbp), %rax	
	movq -16(%rbp), %reg3	

1
	testq $1, %rax	
	je .CellularAutomaton.evolve_2	

1
	imull %reg0	
	movq -24(%rbp), %rsi	

1
.ListNode.insert_1:	
	cmpl $0, 16(%reg0)	

1
	movq 16(%rbx), %rax	
	movq 32(%rbx), %reg2	

1
	jge .Main.main_18	
	movq 0(%rbx), %reg1	

1
	movq -168(%rbp), %rax	
	movq %rsi, %reg3	

1
	.quad 50	
.string3_l:	

1
	movq 8(%reg0), %reg1	
	movq 24(%reg0), %reg2	

1
	movq -64(%rbp), %reg1	
	movq %rsi, %rcx	

1
	movq %rax, %reg1	
	movq $15798, %rax	

1
	idivl %r14d	
	movq %rax, %r13	

1
	movq $33976, %reg0	
	addl %reg1, %reg2	

1
	movq $35037, %reg0	
	movq $56918, %reg1	

1
	testq $1, %r8	
	je .Main.main_75	

1
.Razz.new_5:	
	movq %reg0, %rax	

1
	movq 616(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	.quad DicNode.name	
	.quad DicNode.getCount	

1
	movq $12, %rcx	
	movq -168(%rbp), %rax	

1
	movq -16(%rbp), %reg1	
	movq %rsi, %rcx	

1
	addl %edi, %reg1	
	jmp .Main.main_1	

1
	movq $51816, %rax	
	movq 0(%rbx), %reg2	

1
	cmpq $Bool_vtable, 0(%rax)	
	je .Main.func_2	

1
	movq $72, %reg0	
	call getmem	

1
	jne .Main.main_1	
	movq %rsi, %r8	

1
	movq $2147483647, %reg0	
	movq $4, %reg1	

1
	movq -88(%rbp), %rax	
	subl %eax, %ecx	

1
	movq %reg0, -112(%rbp)	
	movq $8, %reg0	

1
	movq $78, %rsi	
	movq $.string3_l, %reg1	

1
	setl %sil	
	jge .Main.main_13	

1
	movq -88(%rbp), %reg1	
	movq %rdi, %rsi	

1
	call *%reg0	
	movq 304(%rbx), %reg0	

1
	movq 16(%rax), %reg1	
	cmpl %reg2, %reg3	

1
	call *%reg0	
	movq 64(%rbx), %reg0	

1
	testq $1, %reg0	
	je .Main.main_128	

1
Foo.z:	
	pushq %reg0	

1
	.size Cons.isNil, .-Cons.isNil	
	.globl Cons.init	

1
	movq %r14, %rsi	
	imull %esi	

1
	call *%rax	
	movq -64(%rbp), %reg2	

1
	movq %reg0, %reg1	
	movq $18429, %r9	

1
	movq -144(%rbp), %rax	
	negl %eax	

1
	sete %reg0l	
	jne .Matrix.get_10	

1
	movq -56(%rbp), %reg1	
	movq -16(%rbp), %rax	

1
	movq $27, %reg0	
	movq $.string2_l, %reg1	

1
	movq $3, %rdi	
	movq %rdi, %rbx	

1
	movq $1, %rdi	
	movq 16(%reg1), %reg2	

1
	.size ListNode.new, .-ListNode.new	
	.globl _main	

1
.Main.func_4:	
	movq $.string8, %r12	

1
	jmp .Main.main_11	
.Main.main_8:	

1
	movq %rdi, 656(%reg1)	
	movq $3000, %rdi	

1
.Main.main_77:	
	movq -16(%rbp), %rax	

1
.Matrix.mul_1:	
	movq $5, %rdi	

1
	movq 8(%rax), %rdi	
	call String.length	

1
	movq $169, %rsi	
	movq $.string5_l, %rdi	

1
	movq %reg0, 16(%reg1)	
	movq $3000, %reg0	

1
.Main.main_22:	
	movq $63133, %reg0	

1
	je .Bazz.new_3	
	cmpq $Foo_vtable, 0(%rbx)	

1
	imull %edi	
	movq -40(%rbp), %reg2	

1
	testq $1, %rax	
	je .Main.main_156	

1
	movq 120(%r13), %r13	
	movq %reg1, %rdi	

1
.Main.main_14:	
	movq 0(%r12), %reg1	

1
	ret	
	.size ListNode.get, .-ListNode.get	

1
	call *%reg0	
	jmp .Main.main_57	

1
	movq $0, %rdi	
	movq %rdi, 312(%rax)	

1
	idivl %reg0	
	movq $32704, %reg1	

1
Bar.foo:	
	pushq %rbp	

1
	.type CellularAutomaton.num_cells, @function	
CellularAutomaton.num_cells:	

1
	je .Dictionary.get_2	
	movq $6, %rsi	

1
	je .Main.main_53	
	movq $34, %rsi	

1
	movq %rdi, 432(%rax)	
	movq $3000, %rdi	

1
	movq %r11, %r10	
	subl %r10d, %eax	

1
	idivl %ecx	
	movq -120(%rbp), %rsi	

1
	movq $58210, %rsi	
	negl %reg1	

1
	movq $5456, %reg0	
	subl %eax, %reg2	

1
	movq $.string8, %r12	
	movq 0(%reg1), %rbx	

1
	setle %dil	
	jg .Main.main_20	

1
	movq %reg0, %rdi	
	call Foo.foo	

1
	movq %reg0, 112(%reg1)	
	movq %reg0, %reg1	

1
	movq $21613, %reg0	
	movq 0(%reg1), %rax	

1
	.quad Cons.head	
	.quad Cons.tail	

1
	movq %reg0, %rbx	
	movq $5, %r12	

1
	movq %rax, %rbx	
	call Matrix.new	

1
	movq %rax, %rdi	
	movq $26972, %rax	

1
	.quad 3	
substrerr_string_l:	

1
	movq %r15, %rax	
	negl %eax	

1
	je .Main.new_1	
	movq $12, %reg0	

1
	subl %eax, %reg1	
	movq $20509, %rax	

1
	movq -96(%rbp), %rsi	
	movq -168(%rbp), %reg3	

1
	movq $34526, %reg0	
	subl %edi, %reg2	

1
	testq $1, %rdi	
	je .Cons.rev_1	

1
	movq -184(%rbp), %reg1	
	addl %eax, %esi	

1
	je .Main.main_156	
	movq -136(%rbp), %reg1	

1
	movq 64(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq $0, %rdi	
	movq %rdi, 432(%rax)	

1
	addl %eax, %reg1	
	movq $53587, %reg2	

1
	je .Main.main_170	
	movq $145, %rsi	

1
	movq -56(%rbp), %rsi	
	addl %reg2, %eax	

1
	jne .A2I.c2i_15	
	movq $7, %rax	

1
	subl %reg0, %reg1	
	movq $43177, %reg2	

1
	movq -160(%rbp), %rax	
	movq $0, %rcx	

1
	movq %reg0, 560(%reg1)	
	movq $3000, %reg0	

1
	addl %reg0, %r12d	
	movq $15079, %rax	

1
	idivl %esi	
	movq $32704, %rsi	

1
	movq %rdi, %reg1	
	movq $.string6, %r12	

1
	movq $62723, %r10	
	negl %r10d	

1
	movq 8(%rax), %reg1	
	negl %reg2	

1
.Dictionary.insert_2:	
	movq 0(%rax), %r14	

1
	testq $1, %rsi	
	je .Main.main_85	

1
	movq %rdi, %rbx	
	movq $12591, %rdi	

1
	movq %reg0, %rax	
	movq $5, %reg2	

1
	je .Main.main_11	
	cmpq $Int_vtable, 0(%reg0)	

1
	call *%reg0	
	movq 480(%reg1), %rax	

1
	je .Main.main_109	
	movq -48(%rbp), %reg1	

1
	jne .Matrix.get_4	
	movq 16(%rax), %rax	

1
	movq -120(%rbp), %rsi	
	addl %esi, %reg3	

1
	movq $52033, %reg0	
	subl %reg1, %esi	

1
	jne .Matrix.set_21	
	movq %reg0, 72(%rax)	

1
Bar.func2:	
	pushq %rbp	

1
	movq 16(%reg0), %reg1	
	movq %reg2, %rdi	

1
	movq -120(%rbp), %rax	
	addl %reg2, %eax	

1
.DicNode.insert_2:	
	popq %r14	

1
	negl %esi	
	movq $0, %reg1	

1
	.quad Dictionary.insert	
	.quad Dictionary.getHead	

1
	movq $0, %reg0	
	movq %reg0, 712(%reg1)	

1
	idivl %ecx	
	movq -184(%rbp), %rcx	

1
	jne .Matrix.get_54	
	movq 168(%rax), %rax	

1
	call *%rax	
	movq 264(%rbx), %reg2	

1
	movq $9042, %reg0	
	movq $58652, %reg1	

1
	subl %reg0, %reg1	
	movq -56(%rbp), %reg3	

1
	movq $0, %reg0	
	movq %reg0, 656(%rax)	

1
	movq -72(%rbp), %rsi	
	negl %reg2	

1
.Main.iota_3:	
	movq 0(%rax), %r14	

1
	movq $5, %r12	
	movq 0(%rbx), %reg2	

1
	je .Main.main_175	
	movq $145, %rsi	

1
	movq -72(%rbp), %reg1	
	movq %rcx, %reg3	

1
	testq $1, %r9	
	je .Main.main_109	

1
	movq %r12, 8(%reg1)	
	jmp .Main.main_4	

1
	movq 8(%rax), %rdi	
	movq %rbx, %rsi	

1
	movq -120(%rbp), %reg1	
	movq -24(%rbp), %rcx	

1
.Main.main_152:	
	movq %reg0, %reg1	

1
	movq %rdi, %reg1	
	jmp .Main.main_56	

1
	movq $3306, -32(%rbp)	
	movq $61695, %rax	

1
	movq 728(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq $5, %rcx	
	cmpl %ecx, %r8d	

1
	je .Main.main_13	
	movq $10152, %reg0	

1
.A2I.i2c_16:	
.A2I.i2c_14:	

1
	setl %reg0l	
	jge .Main.funcwhilei_2	

1
	movq $12, %rcx	
	movq -32(%rbp), %rax	

1
	call *%reg0	
.Main.main_38:	

1
	movq $5456, %reg0	
	subl %reg1, %reg2	

1
.Main.main_2:	
	cmpl %edi, %reg1	

1
	movq -88(%rbp), %reg1	
	negl %esi	

1
	je .Main.func_6	
	cmpq $Bool_vtable, 0(%rsi)	

1
	call *%reg0	
	movq 400(%reg1), %reg0	

1
	movq %rax, %r14	
	movq %reg2, %rdi	

1
	movq 0(%rbx), %r14	
	movq 96(%r14), %r14	

1
	subl %reg0, %eax	
	movq 0(%reg2), %r13	

1
	idivl %reg0	
	movq $229, %rsi	

1
	call IO.new	
	movq %reg0, 8(%reg1)	

1
.Main.main_72:	
	movq 0(%reg0), %reg1	

1
	movq $60913, %reg0	
	movq $0, %r8	

1
	je .Main.main_15	
	movq $.string7, %reg0	

1
Bar.setJ:	
	pushq %rbp	

1
.Main.main_12:	
	movq 0(%reg0), %r13	

1
.Main.main_9:	
	movq 0(%r13), %rax	

1
.Main.main_136:	
	movq %r14, %reg1	

1
	movq -16(%rbp), %rax	
	movq %r8, %reg3	

1
.Main.main_2:	
	movq $1, %rdi	

1
	movq $173, %reg0	
	movq $.string2_l, %rdi	

1
	idivl %reg0	
	movq $60858, %reg1	

1
	cmpl %r14d, %r13d	
	sete %r14b	

1
	movq -184(%rbp), %rax	
	movq %reg2, %rcx	

1
	movq $3, %rax	
	movq %rax, %r13	

1
	movq 304(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq %reg0, %reg1	
	movq %rsi, -16(%rbp)	

1
	movq $39267, %rsi	
	negl %esi	

1
	movq $116, %reg0	
	movq $.string3_l, %reg1	

1
	movq 368(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	movq %reg0, %rcx	
	movq -144(%rbp), %reg3	

1
Main.print_list:	
	pushq %rbp	

1
	movq $12, %rsi	
	movq -160(%rbp), %reg2	

1
	addl %eax, %edi	
	movq %reg2, %r13	

1
	movq $3000, %rdi	
	movq %rdi, 560(%reg1)	

1
	jne .Main.funcwhileb_2	
	movq %r12, %rax	

1
	idivl %esi	
	movq -128(%rbp), %rsi	

1
.Matrix.set_51:	
	cdq	

1
	movq %reg0, %rsi	
	movq $2, %reg0	

1
	movq 0(%reg0), %r13	
	movq 120(%r13), %r13	

1
	movq $5, %rax	
	movq 0(%rbx), %r12	

1
	subl %reg0, %reg1d	
	movq -96(%rbp), %rax	

1
	movq $3000, %reg0	
	movq %reg0, 232(%rax)	

1
	movq %reg0, %rax	
	jmp .Main.main_56	

1
	movq %rax, 8(%reg1)	
	jmp .Main.main_4	

1
.Main.out_whatever_1:	
	cmpq $String_vtable, 0(%reg0)	

1
	movq $27, %rsi	
	movq $.string2_l, %rdi	

1
	sete %cl	
	jne .Matrix.get_6	

1
.Main.main_16:	
	movq $53961, %reg0	

1
.Main.main_2:	
	movq 0(%reg0), %r13	

1
	jmp .Main.funccase_5	
.Main.funccase_4:	

1
	movq $10, %reg0	
	movq %r12, %rax	

1
	movq $5137, %reg0	
	imull %reg1	

1
	movq 56(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	testq $1, %rcx	
	je .Main.main_57	

1
	movq %rbx, %rax	
	movq -88(%rbp), %rsi	

1
.Main.main_14:	
	movq $7, %rax	

1
	cmpq $Bar_vtable, 0(%rbx)	
	je .Foo.new_10	

1
	movq %reg0, %rax	
.Main.fib_2:	

1
	addl %reg0d, %reg1	
	movq -168(%rbp), %reg0	

1
	movq %reg0, %reg1	
	movq 16(%rbx), %rax	

1
	addl %reg0, %r10d	
	movq $60159, %reg2	

1
.Matrix.mul_4:	
	movq $1, %reg0	

1
	movq -56(%rbp), %reg1	
	movq -64(%rbp), %reg3	

1
.Main.main_2:	
	movq 8(%reg0), %reg0	

1
	je .Matrix.set_66	
	movq $127, %rsi	

1
	je .Main.main_22	
	movq $10, %rsi	

1
	movq $2, %reg0	
	movq 8(%reg1), %reg2	

1
	movq %rdi, 376(%reg1)	
	movq $3000, %rdi	

1
	movq %reg0, %rsi	
	movq 8(%reg2), %rdx	

1
	movq $0, %r12	
	call String.new	

1
	movq -136(%rbp), %rcx	
	negl %ecx	

1
	movq $empty_string, %reg0	
	movq %reg0, %r12	

1
	movq -160(%rbp), %rax	
	imull %r9d	

1
	idivl %edi	
	movq %reg1, -16(%rbp)	

1
	movq -32(%rbp), %reg1	
	movq -96(%rbp), %reg3	

1
	movq %rcx, %rax	
	movq -184(%rbp), %rax	

1
	movq 600(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq $2, %r12	
	movq 0(%reg1), %rax	

1
	je .Main.main_72	
	movq $52, %rsi	

1
	movq %reg0, -40(%rbp)	
	jmp .Main.main_43	

1
	movq %reg0, %rbx	
	movq 8(%rbx), %rdx	

1
	movq %reg0, %rax	
	jmp .Foo.new_11	

1
	movq %reg0, 160(%rax)	
	movq %reg0, %rax	

1
	je .Main.main_10	
	movq $14, %reg0	

1
	addl %eax, %reg1	
	movq -32(%rbp), %rcx	

1
	movq $932, %r9	
	movq $0, %reg1	

1
	movq 8(%reg0), %rdi	
	movq $2, %reg2	

1
	jmp .Main.main_192	
.Main.main_191:	

1
	negl %edi	
	movq -120(%rbp), %rax	

1
	sete %r8b	
	jne .Matrix.set_8	

1
	jne .Matrix.set_56	
	movq %rdi, 176(%rax)	

1
.Main.main_8:	
	movq $9, %reg0	

1
	movq $0, %rdi	
	movq %rdi, 224(%reg1)	

1
	.size Bar.getX, .-Bar.getX	
	.globl Foo.getY	

1
	movq $47879, %rax	
	cmpl %eax, %edi	

1
	movq $46032, %reg0	
	movq %reg0, %rsi	

1
	subl %reg0, %reg1d	
	movq -96(%rbp), %reg3	

1
	movq $51816, %reg0	
	movq 0(%rbx), %reg2	

1
	setl %sil	
	jge .Main.main_121	

1
	jge .Main.main_68	
	movq %reg0, %reg1	

1
	movq $30018, %reg0	
	subl %reg1, %reg2	

1
	movq -104(%rbp), %rax	
	movq -128(%rbp), %rcx	

1
	testq $1, %rax	
	je .Main.main_88	

1
	call *%rax	
	movq 296(%rbx), %r12	

1
	movq %rbx, %reg1	
	call String.substr	

1
	je .Main.main_86	
	movq $61, %rsi	

1
	movq 32(%reg0), %reg0	
	movq %r13, %reg2	

1
	movq 8(%r12), %reg1	
	movq 0(%r12), %reg2	

1
	movq %reg0, 496(%reg1)	
	movq $0, %reg0	

1
	jge .Main.main_78	
	movq %reg0, %reg1	

1
	jne .Main.main_17	
	movq 0(%rbx), %reg1	

1
	addl %reg0, %reg1	
	movq $222, %rdi	

1
	.quad .string2	
	.quad 7	

1
	testq $1, %reg0	
	je .DicNode.get_4	

1
	call out_error	
.Main.main_124:	

1
	jne .CellularAutomaton.cell_right_neighbor_1	
	movq $0, %r12	

1
.A2I.i2a_3:	
	movq $1, %reg0	

1
	movq $64582, %reg0	
	movq %reg0, %r14	

1
	testq $1, %r9	
	je .Main.main_91	

1
	movq 24(%reg0), %rax	
	cmpl $0, %reg2	

1
List.tail:	
	pushq %reg0	

1
	movq -88(%rbp), %rsi	
	movq -32(%rbp), %reg3	

1
	je .Main.main_11	
	cmpq $Bool_vtable, 0(%reg0)	

1
	call Main.func	
	movq %reg0, %reg1	

1
	movq -48(%rbp), %rax	
	addl %reg2, %ecx	

1
	movq %reg0, %reg1	
	jmp .Main.main_108	

1
	je .Main.main_72	
	movq $228, %reg0	

1
	movq %rdi, 448(%reg1)	
	movq $0, %rdi	

1
	addl %reg0, %eax	
	movq $57963, %reg2	

1
.Razz.new_11:	
	movq %rax, 32(%rbx)	

1
	negl %edi	
	movq -120(%rbp), %reg2	

1
	movq %rdi, 632(%reg1)	
	movq $0, %rdi	

1
	movq %reg0, 8(%rax)	
	cmpq $Bool_vtable, 0(%rax)	

1
	call *%reg0	
	movq 232(%reg1), %reg0	

1
	negl %reg0	
	movq $3306, -32(%rbp)	

1
	movq 152(%r14), %r14	
	movq %rax, %reg2	

1
	.globl DicNode.next	
	.type DicNode.next, @function	

1
	sete %reg0	
	jne .A2I.i2c_1	

1
	call *%reg0	
	movq 488(%rbx), %reg2	

1
	jge .Main.main_7	
	movq $1, %rax	

1
	movq %r12, %rsi	
	addl %esi, %reg3	

1
	movq %reg0, %reg1	
	jmp .Main.main_43	

1
	movq %rdi, 112(%rax)	
	movq %rdi, %rax	

1
	addl %eax, %reg1	
	movq -152(%rbp), %rax	

1
	movq $53085, %rsi	
	imull %reg1	

1
	movq $11440, %reg0	
	imull %edi	

1
	testq $1, %reg0	
	je .ListNode.push_1	

1
	call *%reg0	
	cmpl $0, 16(%reg1)	

1
	movq %reg0, 616(%reg1)	
	movq $0, %reg0	

1
	movq 24(%rbx), %reg1	
	movq 0(%reg1), %reg2	

1
	movq %reg0, %r13	
	movq %rax, %rdi	

1
.Main.main_98:	
	movq %reg0, %reg1	

1
	movq -8(%rbp), %reg1	
	movq -168(%rbp), %reg3	

1
	movq %rsp, %rbp	
	subq $136, %rsp	

1
	movq -88(%rbp), %reg1	
	addl %esi, %reg3	

1
	jg .Main.main_6	
	movq %r12, %rax	

1
	movq %reg0, %r8	
	movq $24320, %reg0	

1
	movq 352(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	jmp .Main.main_39	
.Main.main_16:	

1
	movq -64(%rbp), %reg1	
	imull %r8d	

1
Main.funccaseb:	
	pushq %rbp	

1
	testq $1, %rax	
	jne .Main.main_142	

1
	je .Main.main_35	
	movq $31, %rsi	

1
	call *%reg0	
	movq 152(%rbx), %reg2	

1
	movq %rdi, 48(%reg1)	
	cmpl %edi, %reg3	

1
	setle %dil	
	jg .Main.main_46	

1
	call *%rax	
	movq 552(%rbx), %rax	

1
	call out_error	
.Bar.new_19:	

1
	jg .Main.main_4	
	movq $1, %rax	

1
	movq %reg0, %rsi	
	movq -16(%rbp), %reg0	

1
	movq %reg0, -40(%rbp)	
	movq $17, %reg0	

1
	idivl %reg0	
	movq $8271, %reg1	

1
	movq %reg0, %reg1	
	movq %reg1, 72(%reg2)	

1
	movq $0, %r13	
	movq $0, %r12	

1
	movq -152(%rbp), %rcx	
	addl %ecx, %eax	

1
	negl %edi	
	movq -176(%rbp), %reg2	

1
	movq 720(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq %reg0, %reg1	
.Main.main_171:	

1
	je .Main.main_6	
	movq $151, %rsi	

1
	movq %rdi, 288(%reg1)	
	movq $0, %rdi	

1
	negl %reg0d	
	movq %rcx, %rax	

1
	call *%rax	
	movq 304(%rbx), %rax	

1
	movq 40(%reg0), %reg0	
	movq %r12, %rdi	

1
	movq %reg0, 688(%rax)	
	movq $0, %reg0	

1
	call out_error	
.Main.main_162:	

1
	movq %r13, %rax	
	movq -88(%rbp), %reg3	

1
	movq $52306, %rdi	
	negl %edi	

1
	movq $20, %reg0	
	movq %reg0, -16(%rbp)	

1
	testq $1, %rax	
	je .Main.main_115	

1
	movq %reg0, 640(%reg1)	
	movq $3000, %reg0	

1
	movq 448(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 88(%reg1)	

1
	movq $.string8, %rax	
	jmp .CellularAutomaton.cell_at_next_evolution_8	

1
	imull %reg0	
	movq $17975, %reg1	

1
.string7_l:	
	.string "l"	

1
	.size Matrix.new, .-Matrix.new	
	.globl Main.new	

1
	movq -176(%rbp), %rax	
	movq $0, %rcx	

1
	movq 312(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	.quad .string9_l	
	.quad 3	

1
	movq %rdi, %reg1	
	movq $5, %r12	

1
.Main.main_43:	
	cmpl $0, -32(%rbp)	

1
	subl %reg0, %reg1	
	movq %rax, -136(%rbp)	

1
	movq %rdi, 584(%reg1)	
	movq $3000, %rdi	

1
	call *%r14	
	movq -112(%rbp), %reg2	

1
	testq $1, %reg0	
	je .Main.func_3	

1
	movq %rax, %rbx	
	movq %r11, %rax	

1
	jne .Main.main_17	
	movq %reg0, %rax	

1
	movq 48(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	call *%r12	
	movq 488(%reg1), %rax	

1
.Main.new_4:	
	movq %reg0, 8(%rbx)	

1
	movq $1823, %reg0	
	movq $177, %rsi	

1
	jne .A2I.c2i_3	
	movq $1, %rax	

1
	movq %rax, %rdi	
	movq -64(%rbp), %rsi	

1
	jne .Matrix.set_45	
	movq %reg0, 144(%rax)	

1
.Main.main_9:	
	movq %r12, %rdi	

1
	movq 360(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	movq $47279, %reg0	
	movq $47879, %rax	

1
	movq 408(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq $50213, %rdi	
	movq %rdi, %rsi	

1
	movq -48(%rbp), %rax	
	movq -32(%rbp), %reg3	

1
	movq %rax, %reg1	
	movq $8022, %rax	

1
.Main.main_33:	
	movq %reg0, %rax	

1
	subl %eax, %reg1	
	movq -56(%rbp), %rax	

1
	movq %reg0, %rcx	
	movq -144(%rbp), %rax	

1
	call *%rbx	
	movq $48557, %rax	

1
	call *%reg0	
	movq 64(%reg1), %reg0	

1
	movq $2, %reg0	
	movq $2, %rsi	

1
	.type Cons.cdr, @function	
Cons.cdr:	

1
	movq %rax, %reg1	
	jmp .CellularAutomaton.cell_at_next_evolution_2	

1
	je .Main.main_80	
	movq $61, %rsi	

1
	negl %ecx	
	movq -48(%rbp), %reg2	

1
	movq 136(%reg0), %reg0	
	jmp .Matrix.get_44	

1
.Main.main_66:	
	movq %reg0, %rax	

1
	.globl Foo.get	
	.type Foo.get, @function	

1
	movq $38511, %reg0	
	subl %eax, %edi	

1
	movq %rdi, %rbx	
	movq 8(%rbx), %r12	

1
	movq $12, %rcx	
	movq -168(%rbp), %reg2	

1
	movq $51816, %reg0	
	movq 0(%reg1), %r12	

1
	movq $3000, %rdi	
	movq %rdi, 496(%reg1)	

1
	movq $6765, %rdi	
	subl %edi, %reg2	

1
.List.insert_2:	
	movq 0(%rax), %reg1	

1
	movq $64464, %rcx	
	movq $0, %r8	

1
	movq $218, %reg0	
	movq $.string5_l, %rdi	

1
.Main.main_11:	
	movq $.string13, %rax	

1
	negl %esi	
	movq %r12, %reg2	

1
	movq $28968, %rax	
	movq $32079, %rdi	

1
	movq -88(%rbp), %reg1	
	negl %ecx	

1
	movq 16(%rax), %reg1	
	negl %edi	

1
	je .Matrix.mul_5	
	movq $144, %rsi	

1
.Razz.new_20:	
	movq 48(%rbx), %reg1	

1
	movq $0, %rdi	
	movq %rbx, %rax	

1
	addl %reg0, %edi	
	movq %reg2, 16(%reg3)	

1
	subl %ecx, %eax	
	movq %rbx, %reg3	

1
	.size Cons.sort, .-Cons.sort	
	.globl Cons.insert	

1
	je .Main.main_58	
	movq $49, %rsi	

1
	testq $1, %rsi	
	je .Main.main_2	

1
	movq $88, %rdi	
	call getmem	

1
	imull %esi	
	movq -144(%rbp), %reg2	

1
	cmpq $IO_vtable, 0(%rbx)	
	je .Main.new_2	

1
	movq $8423, %reg0	
	movq $34498, %reg1	

1
	movq $0, %reg0	
	movq %reg0, 280(%reg1)	

1
	movq %rbx, %reg1	
	subl %reg1d, %reg2	

1
	movq $.string19, %r12	
	call A2I.new	

1
	.type Foo.z, @function	
Foo.z:	

1
	testq $1, %r8	
	je .Main.main_166	

1
	ret	
	.size DicNode.next, .-DicNode.next	

1
	movq $2234, %reg0	
	movq 0(%reg1), %reg2	

1
	movq $10, %reg0	
	movq %rdi, %rax	

1
	movq -136(%rbp), %reg1	
	movq -104(%rbp), %rsi	

1
.Matrix.get_35:	
.Matrix.get_33:	

1
	cmpq $String_vtable, 0(%rax)	
	je .Main.new_2	

1
	addl %edi, %eax	
	movq %rax, 24(%reg3)	

1
	movq 8(%rax), %reg1	
	movq 0(%rax), %r14	

1
	movq %rdi, %rbx	
	movq $3, %rax	

1
	call *%rax	
	movq 288(%rbx), %r12	

1
	movq $45379, %rax	
	subl %eax, %esi	

1
	movq $0, %reg0	
	movq %reg0, 720(%reg1)	

1
	jne .Main.new_7	
	movq $0, %rax	

1
	movq -56(%rbp), %reg1	
	movq -176(%rbp), %rsi	

1
	movq 240(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	testq $1, %r9	
	je .Main.main_168	

1
	je .Main.main_119	
	movq %reg0, %reg1	

1
	movq %reg0, 8(%rbx)	
	call Bar.new	

1
	.type ListNode.push, @function	
ListNode.push:	

1
	movq 528(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq %rax, %rcx	
	movq %rbx, %rax	

1
	movq $11, %rsi	
	movq $.string1_l, %rdi	

1
	movq %rbx, %reg1	
	movq -88(%rbp), %rax	

1
	movq $2, %rdi	
	addl %reg1, %esi	

1
.Main.main_20:	
	movq 0(%rbx), %reg1	

1
	je .Main.main_23	
	cmpq $Main_vtable, 0(%reg0)	

1
	call *%rbx	
.Main.main_14:	

1
	movq $0, %reg0	
	movq %reg0, 712(%rax)	

1
	call out_error	
.Bar.new_1:	

1
	movq -88(%rbp), %reg1	
	subl %ecx, %reg3	

1
	subl %reg0, %eax	
	subl %eax, %reg2	

1
	movq $0, %rdi	
	movq %rdi, 504(%rax)	

1
.Matrix.get_53:	
	movq $1, %reg0	

1
	movq $56556, %reg0	
	movq $0, %reg1	

1
	subl %reg0, %reg1	
	movq $14379, %reg2	

1
.Main.main_12:	
	movq $5, %rdi	

1
	movq 528(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	movq $55049, %reg0	
	negl %reg1	

1
	jmp .A2I.c2i_4	
.A2I.c2i_3:	

1
.Main.main_115:	
	movq %rbx, %rsi	

1
	je .Main.main_109	
	movq $67, %rsi	

1
Dictionary.setHead:	
	pushq %reg0	

1
	testq $1, %rax	
	je .Bar.new_7	

1
	testq $1, %reg0	
	je .Razz.new_7	

1
	.globl Main.iota	
	.type Main.iota, @function	

1
	movq -144(%rbp), %rax	
	negl %reg2	

1
	movq $39037, %rdi	
	negl %edi	

1
	movq 240(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq %r14, %reg1	
	addl %eax, %ecx	

1
	je .Main.main_20	
	movq $11, %rsi	

1
	movq -184(%rbp), %r8	
	movq -48(%rbp), %rax	

1
	movq 16(%reg0), %reg1	
	addl %edi, %reg3	

1
	.size Bar.new, .-Bar.new	
	.globl Razz.new	

1
	movq $1823, %reg0	
	movq $177, %reg1	

1
	movq $25895, %reg0	
	cmpl %eax, %reg2	

1
	movq -88(%rbp), %rax	
	movq -96(%rbp), %reg3	

1
	movq %r12, %r13	
	movq $3, %reg2	

1
	movq $18310, %rax	
	subl %eax, %edi	

1
	.text 	
	.globl Baz.new	

1
	movq %reg0, %rax	
	movq -40(%rbp), %rcx	

1
	movq $2951, %reg0	
	movq $0, %reg1	

1
.Main.new_7:	
	movq $1, %rax	

1
	setl %sil	
	jge .Main.main_78	

1
	movq $.string13, %rdi	
	movq %reg1, %reg2	

1
	je .Main.main_173	
	movq $308, %reg0	

1
	sete %reg0	
	jne .Matrix.set_10	

1
	movq 304(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq $Matrix_vtable, 0(%reg0)	
	movq $0, %reg1	

1
	movq $3000, %rdi	
	movq %rdi, 200(%rax)	

1
	movq $14546, %rax	
	subl %reg1, %esi	

1
	call *%rax	
	movq 368(%rbx), %reg2	

1
	movq %rax, %r14	
	movq $13, %reg2	

1
	sete %cl	
	jne .Matrix.set_36	

1
	movq %rdi, 272(%reg1)	
	movq $3000, %rdi	

1
	call *%r12	
	movq 600(%reg1), %reg2	

1
	movq -64(%rbp), %rax	
	addl %eax, %esi	

1
	je .Main.main_16	
	movq $23, %rsi	

1
	movq 16(%reg0), %rdi	
	movq 24(%reg0), %reg2	

1
	.quad .string10_l	
	.quad 7	

1
	je .Dictionary.insert_1	
	movq $0, %reg0	

1
	call *%rax	
	movq 656(%rbx), %reg2	

1
	movq %rax, 8(%rbx)	
	movq 8(%rbx), %reg2	

1
	movq $10809, %reg0	
	subl %reg1, %reg2d	

1
	movq %reg0, 504(%reg1)	
	movq $0, %reg0	

1
	movq %rax, %rcx	
	movq -184(%rbp), %r8	

1
	movq $60323, %rsi	
	imull %esi	

1
	je .Main.main_55	
	movq %reg0, %rax	

1
	movq -24(%rbp), %rdi	
	addl %eax, %reg3	

1
	movq 16(%rbx), %reg1	
	movq %r12, %rdi	

1
	movq -128(%rbp), %reg1	
	movq -24(%rbp), %rax	

1
	call *%reg0	
	movq -40(%rbp), %rax	

1
	movq 528(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	.string "I"	
.string9:	

1
	call *%r12	
	call Int.new	

1
	movq -40(%rbp), %rax	
	movq -96(%rbp), %rdi	

1
	movq %rdi, %rax	
	movq $0, %rsi	

1
	movq %reg0, %reg1	
	subl %esi, %edi	

1
	subl %eax, %r8d	
	movq $12, %reg2	

1
	cmpq $Bar_vtable, 0(%rbx)	
	je .Razz.new_5	

1
	subl %reg0, %eax	
	movq %rax, -176(%rbp)	

1
	addl %eax, %reg1d	
	movq $7429, %rax	

1
	je .Main.main_5	
	movq $14, %reg0	

1
	idivl %reg0	
	movq $58210, %reg1	

1
	call *%reg0	
	movq %reg1, %r14	

1
	movq $14352, %reg0	
	cmpl %edi, %eax	

1
	movq $52486, %reg0	
	movq $20968, %reg1	

1
	call out_error	
.Main.main_133:	

1
	movq $10478, %rax	
	subl %reg1, %r8d	

1
	sete %reg0b	
	jne .A2I.c2i_15	

1
	je .List.insert_1	
	call ListNode.new	

1
	ret	
	.size DicNode.name, .-DicNode.name	

1
	imull %ecx	
	movq -40(%rbp), %rcx	

1
	movq %rsi, %reg1	
	movq $0, %rcx	

1
	jne .Main.main_3	
	movq $.string7, %r15	

1
	testq $1, %rsi	
	je .Main.main_137	

1
	idivl %reg0	
	movq $12855, %rdi	

1
	call *%r12	
	jmp .Main.funcifb_2	

1
	movq -16(%rbp), %reg1	
	movq %r8, %reg3	

1
	movq %reg0, 64(%rbx)	
	movq 32(%rbx), %reg2	

1
	subl %eax, %reg1d	
	movq %rcx, %reg3	

1
	je .Main.main_3	
	movq $6, %rsi	

1
	movq %reg0, %reg1	
	movq 24(%reg2), %reg0	

1
	movq %reg0, %reg1	
	movq %reg2, %r11	

1
	movq $48391, %reg0	
	negl %eax	

1
	movq $169, %rsi	
	movq $.string5_l, %reg1	

1
	movq $3, %rax	
	movq %rax, 24(%reg1)	

1
	movq $116, %reg0	
	movq $.string3_l, %rdi	

1
	movq -136(%rbp), %rsi	
	movq -24(%rbp), %reg3	

1
	testq $1, %reg0	
	je .Main.funcifb_1	

1
	movq %rdi, 224(%reg1)	
	movq $0, %rdi	

1
	movq $56556, %reg0	
	movq $0, %r11	

1
	addl %reg0, %reg1	
	imull %reg1	

1
	movq $51816, %reg0	
	movq 0(%rbx), %r12	

1
DicNode.next:	
	pushq %reg0	

1
	idivl %r13d	
	addl %eax, %r12d	

1
	addl %reg0, %reg1	
	movq -88(%rbp), %rax	

1
	call String.new	
	movq %rax, %r14	

1
	movq -16(%rbp), %reg1	
	movq %rbx, %reg3	

1
	idivl %reg0	
	movq $20908, %reg1	

1
	movq %reg0, %r8	
	cmpl %r8d, %reg2	

1
	movq %reg0, 24(%reg1)	
	jmp .Main.new_3	

1
	je .Matrix.get_51	
	movq $67, %reg0	

1
	movq 688(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	subl %edi, %reg1	
	movq -96(%rbp), %rdi	

1
	je .Complex.equal_1	
	movq $62, %reg0	

1
	je .Main.main_17	
	movq $.string7, %rax	

1
	imull %esi	
	movq $7258, %rsi	

1
	movq $27940, %reg0	
	movq $0, %rbx	

1
	movq $63252, %reg0	
	subl %eax, %r12d	

1
	movq $.string7, %r15	
	movq %reg1, %reg2	

1
	movq %rax, 56(%reg1)	
	movq %reg1, %rax	

1
.Main.main_62:	
	movq %reg0, %rsi	

1
	movq %rdi, 432(%reg1)	
	movq $0, %rdi	

1
	movq %reg0, %reg1	
	movq 8(%reg2), %rsi	

1
	.quad 1	
name_Bool_l:	

1
	je .Main.main_23	
	cmpq $IO_vtable, 0(%reg0)	

1
	cmpq $Int_vtable, 0(%reg0)	
	je .Main.main_5	

1
	movq %reg0, 8(%rax)	
	jmp .Main.main_26	

1
A2I.i2a_aux:	
	pushq %reg0	

1
	testq $1, %reg0	
	je .Main.main_132	

1
	movq $40813, %rdi	
	addl %reg1, %reg2	

1
	movq $104, %rsi	
	movq $.string5_l, %reg1	

1
	call *%reg0	
	movq 480(%rbx), %rax	

1
	testq $1, %rsi	
	je .Main.main_37	

1
.CellularAutomaton.cell_at_next_evolution_3:	
	movq $0, %reg0	

1
	je .Main.func_3	
	movq $37, %rsi	

1
	cmpq $Int_vtable, 0(%rdi)	
	je .Main.funccase_3	

1
	jmp .Main.main_6	
.Main.main_6:	

1
	.globl Cons.car	
	.type Cons.car, @function	

1
	movq %rdi, 352(%reg1)	
	movq $3000, %rdi	

1
	movq %rbx, %r13	
	movq %reg2, %rax	

1
	movq $0, %reg0	
	movq %reg0, -40(%rbp)	

1
	idivl %r8d	
	movq -152(%rbp), %r8	

1
	movq -128(%rbp), %reg1	
	addl %esi, %reg3	

1
	idivl %reg0	
	movq $6550, %reg1	

1
	cmpq $IO_vtable, 0(%reg0)	
	je .Main.new_3	

1
	call *%r12	
	jmp .A2I.i2a_4	

1
	je .Main.main_88	
	movq %rbx, %rax	

1
	je .Main.main_29	
	movq $174, %reg0	

1
	je .Main.main_127	
	movq $70, %reg0	

1
	movq $9, %rsi	
	movq $.string2_l, %reg1	

1
.Main.main_161:	
	testq $1, %rax	

1
	movq $30215, %reg0	
	subl %reg1, %reg2	

1
	subl %eax, %edi	
	movq $25241, %reg2	

1
	addl %reg0, %r10d	
	movq $7429, %reg2	

1
	je .Main.main_156	
	movq $118, %rsi	

1
	movq -72(%rbp), %rsi	
	cmpl %reg2, %reg3	

1
	movq %reg0, 24(%reg1)	
	movq $1, %reg0	

1
	movq $13, %reg0	
	negl %esi	

1
	subl %reg0, %reg1	
	movq %rax, %r13	

1
.Main.main_89:	
	cdq	

1
	movq $45332, %reg0	
	cmpl %eax, %reg2	

1
	movq %rdi, %rbx	
	movq $.string19, %reg2	

1
	movq -96(%rbp), %rax	
	addl %reg2, %eax	

1
	movq $3000, %rdi	
	movq %rdi, 256(%reg1)	

1
	movq -40(%rbp), %reg1	
	movq -48(%rbp), %rdi	

1
	movq %r14, %reg1	
	subl %esi, %eax	

1
	movq $163, %reg0	
	movq $.string2_l, %rdi	

1
	je .Main.main_177	
	movq $145, %reg0	

1
	movq $30605, %rax	
	movq $35043, %reg1	

1
	.quad 3	
.string18_l:	

1
	jne .A2I.i2c_11	
	movq $.string12, %reg0	

1
	call Bazz.new	
	movq %rax, 8(%reg1)	

1
	movq %rdi, %rax	
.Main.main_168:	

1
.Main.main_25:	
	movq 0(%reg0), %reg1	

1
.Matrix.get_1:	
	movq $2, %r8	

1
	movq -176(%rbp), %reg1	
	subl %reg1d, %reg2	

1
	addl %edi, %eax	
	movq %rax, 40(%rbx)	

1
	movq %reg0, %rax	
	movq 48(%rbx), %reg3	

1
	movq %reg0, %reg1	
	movq $.string8, %r13	

1
.Main.main_30:	
	movq 0(%r13), %rax	

1
	jg .Main.main_126	
	movq %reg0, %rax	

1
	testq $1, %rax	
	jne .Main.main_23	

1
	subl %reg0, %reg1	
	movq $0, %r14	

1
	movq -120(%rbp), %rsi	
	addl %ecx, %esi	

1
	movq -168(%rbp), %reg1	
	cmpl %reg2, %edi	

1
	jne .CellularAutomaton.cell_left_neighbor_1	
	movq 0(%rbx), %rax	

1
	sete %sil	
	jne .Matrix.get_49	

1
	negl %reg0	
	movq $38915, %rdi	

1
	movq $30, %rsi	
	movq $.string5_l, %reg1	

1
.Main.print_list_3:	
	popq %reg0	

1
	movq $3000, %rdi	
	movq %rdi, 152(%reg1)	

1
	movq %reg0, 200(%rax)	
	movq %reg0, %rax	

1
	call *%reg0	
	movq 296(%reg1), %r12	

1
	movq 24(%rax), %reg1	
	sete %dil	

1
	call *%r12	
	movq 600(%reg1), %rax	

1
	movq $62, %rsi	
	movq $.string2_l, %rdi	

1
	movq $67, %rsi	
	movq $.string3_l, %reg1	

1
	call *%r12	
.Cons.insert_3:	

1
	movq 488(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq $229, %reg0	
	movq $.string5_l, %reg1	

1
	jg .Main.main_84	
	movq %reg0, %rax	

1
	testq $1, %r10	
	je .Main.main_148	

1
	movq $7, %reg0	
	jmp .A2I.c2i_16	

1
	movq -160(%rbp), %reg1	
	movq -16(%rbp), %reg3	

1
	movq -48(%rbp), %reg1	
	addl %reg2, %edi	

1
	addl %reg0, %ebx	
	movq %rbx, %reg3	

1
	addl %reg0, %edi	
	movq -48(%rbp), %rax	

1
.A2I.i2a_aux_1:	
	movq $10, %reg0	

1
	je .Main.main_7	
	cmpq $IO_vtable, 0(%reg0)	

1
	movq $25895, %rax	
	cmpl %reg1, %edi	

1
	imull %esi	
	movq $13, %reg1	

1
	movq 8(%reg0), %rax	
	movq 0(%rbx), %reg3	

1
	movq %reg0, %r8	
	movq $22802, %reg0	

1
	movq 16(%rbx), %rdi	
	cmpl %eax, %edi	

1
	je .Main.main_15	
	movq $23, %reg0	

1
	movq -88(%rbp), %reg1	
	movq %rbx, %reg3	

1
	jg .Main.main_35	
	movq %reg0, %rax	

1
.Main.new_1:	
	movq $1, %rax	

1
	testq $1, %rdi	
	je .Bar.getX_1	

1
.Main.main_1:	
	movq $1, %reg0	

1
	subl %eax, %reg1	
	movq $48457, %reg2	

1
	movq 8(%rax), %reg1	
	movq %r12, %reg3	

1
	movq 128(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	movq %rax, %reg1	
	movq $18444, %rax	

1
	movq -32(%rbp), %rax	
	movq -128(%rbp), %rsi	

1
	movq 72(%r13), %r13	
	movq %r12, %reg2	

1
	call out_error	
.Main.main_100:	

1
	movq $83, %rsi	
	movq $.string2_l, %reg1	

1
	movq $8, %reg0	
	movq $.string5_l, %reg1	

1
	.globl DicNode.name	
	.type DicNode.name, @function	

1
.Matrix.set_42:	
	jmp .Matrix.set_52	

1
	idivl %ecx	
	movq -40(%rbp), %rcx	

1
.Main.main_21:	
	movq %reg0, %reg1	

1
	je .Main.print_list_4	
	movq $110, %rsi	

1
	addl %reg0, %ecx	
	movq -176(%rbp), %reg3	

1
	movq $63562, %rsi	
	movq %rsi, %reg1	

1
	movq %rsi, %rax	
	movq -152(%rbp), %rsi	

1
	jne .CellularAutomaton.cell_at_next_evolution_3	
	movq $1, %rax	

1
	negl %reg0d	
	movq $1357, %rax	

1
	movq $1, %rax	
	jmp .Main.main_2	

1
	movq 136(%rax), %rax	
	jmp .Matrix.get_44	

1
	movq 16(%rax), %r12	
	movq $.string10, %r13	

1
.Main.funccase_8:	
	jmp .Main.funccase_5	

1
	movq %r13, %reg1	
	movq $0, %rsi	

1
	movq %reg0, %reg1	
	movq -112(%rbp), %reg1	

1
	movq $.string11, %reg0	
	popq %reg1	

1
	negl %reg0	
	movq $65097, %r12	

1
	movq 72(%r14), %r14	
	movq -8(%rbp), %rdi	

1
	movq %r15, %reg1	
	addl %edi, %eax	

1
	ret	
	.size Nil.print_list, .-Nil.print_list	

1
	setle %reg0	
	jg .Main.main_19	

1
Dictionary.insert:	
	pushq %rbp	

1
	jne .A2I.c2i_11	
	movq $5, %reg0	

1
	sete %reg0b	
	jne .Matrix.set_15	

1
	.globl List.cdr	
	.type List.cdr, @function	

1
	movq %reg0, %reg1	
	movq %reg0, %r9	

1
	movq -120(%rbp), %rsi	
	movq -48(%rbp), %reg3	

1
	call *%r12	
	movq 432(%rbx), %reg2	

1
	movq -144(%rbp), %reg1	
	movq -136(%rbp), %rdi	

1
	je .Main.main_81	
	movq $61, %reg0	

1
	movq -96(%rbp), %reg1	
	subl %reg2, %esi	

1
	movq %rdi, 424(%reg1)	
	movq $3000, %rdi	

1
	movq %reg0, 80(%reg1)	
	leave	

1
	call *%rax	
	cmpl $0, -32(%rbp)	

1
.Main.main_82:	
	movq %rdi, %rax	

1
	addl %reg0, %eax	
	movq %rax, 24(%rbx)	

1
	movq %reg0, %reg1	
	jmp .Main.main_18	

1
	jg .Main.main_149	
	movq %reg0, %reg1	

1
	movq 128(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	movq %reg0, %reg1	
	subl %ecx, %r8d	

1
	movq 8(%r12), %rax	
	movq 0(%r12), %reg2	

1
	movq -160(%rbp), %rax	
	movq -24(%rbp), %r8	

1
	movq $57963, %reg0	
	subl %reg1, %eax	

1
	movq $.string11, %rdi	
	movq %rbx, %r12	

1
	call *%rax	
	movq 264(%reg1), %r12	

1
	movq $61456, %reg0	
	cmpl %edi, %reg2	

1
	call Dictionary.new	
	movq %rax, %reg1	

1
	jne .Matrix.set_19	
	movq %rdi, 64(%reg1)	

1
	movq %r15, %reg1	
	movq %r14, %rax	

1
	movq $57869, -24(%rbp)	
	movq $49695, %rdi	

1
	movq -96(%rbp), %rax	
	subl %eax, %r9d	

1
	testq $1, %r11	
	je .Main.main_36	

1
	call *%r12	
	movq 536(%reg1), %reg2	

1
	subl %eax, %reg1	
	movq %reg2, -32(%rbp)	

1
	call *%r13	
	jmp .Main.funcwhileb_1	

1
.Bar.new_16:	
	movq %rbx, %rax	

1
	je .Main.main_57	
	movq $49, %rsi	

1
	subl %reg0, %r10d	
	movq $61569, %reg2	

1
	movq %rax, %r13	
	negl %r13d	

1
	movq 224(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq $15735, %reg0	
	movq $932, %r9	

1
	movq 280(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	subl %eax, %esi	
	movq -96(%rbp), %rax	

1
	movq -48(%rbp), %rax	
	addl %eax, %edi	

1
	movq %r12, %reg1	
	movq -96(%rbp), %r8	

1
	movq %r12, %reg1	
	movq %reg2, %r9	

1
	jne .Matrix.set_43	
	movq %rdi, 136(%rax)	

1
	movq $0, -24(%rbp)	
	cmpl $0, -16(%rbp)	

1
	movq %rax, %r9	
	movq -96(%rbp), %rax	

1
	movq 728(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq 480(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	call *%reg0	
	movq 312(%rbx), %rax	

1
	jg .Main.main_147	
	movq -64(%rbp), %reg1	

1
	movq $6765, %rdi	
	subl %reg1, %eax	

1
	movq $.string10, %rbx	
	movq 0(%reg1), %reg2	

1
	movq $59495, %r11	
	movq %r11, %rbx	

1
	setl %dil	
	jge .Main.fib_1	

1
	jmp .Matrix.get_29	
.Matrix.get_28:	

1
.Razz.new_12:	
	movq 32(%rbx), %rdx	

1
	je .Main.main_2	
	movq $11, %reg0	

1
	.quad Main.main	
	.quad Main.myInt	

1
	je .Main.funccase_6	
	movq $24, %rsi	

1
	movq $4, %r13	
	movq %r12, %reg2	

1
	movq -168(%rbp), %r8	
	addl %r8d, %reg2	

1
	je .Main.main_174	
	movq $145, %reg0	

1
	movq $2, %reg0	
	movq %r8, %reg2	

1
	movq %r13, %reg1	
	movq %r12, %rdi	

1
	movq $0, %rcx	
	movq %rdi, %rsi	

1
	negl %ecx	
	movq -128(%rbp), %reg2	

1
	je .Main.main_122	
	movq $70, %rsi	

1
	movq $33788, %reg0	
	negl %reg0d	

1
.Bar.new_4:	
	call Razz.new	

1
	testq $1, %r8	
	je .Main.main_83	

1
.Main.main_15:	
	movq -24(%rbp), %rax	

1
.Main.main_156:	
	movq %reg0, %rax	

1
	movq $7, %rcx	
	movq %rdi, %reg2	

1
	movq $28147, %reg0	
	negl %reg1	

1
	movq 16(%rbx), %rax	
	subl %edi, %eax	

1
	call *%r12	
	movq -8(%rbp), %reg2	

1
	je .Main.main_23	
	movq $13, %reg0	

1
	movq %reg0, %r10	
	movq $15798, %reg0	

1
	testq $1, %reg0	
	je .Main.main_120	

1
	movq $1, %r15	
	movq %r15, %r14	

1
	jne .Matrix.get_36	
	movq 120(%reg0), %reg0	

1
	.string "\\t"	
.string7:	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_50	

1
	movq $13, %reg0	
	movq %reg0, -136(%rbp)	

1
	movq $45379, %rax	
	subl %reg1, %reg2	

1
	jne .Matrix.set_41	
	movq %reg0, 128(%rax)	

1
	movq $130, %rdi	
	movq %r13, %reg2	

1
	je .Main.main_117	
	movq $67, %reg0	

1
	movq $55273, %reg0	
	movq $38801, %rax	

1
	movq %rdi, %reg1	
	movq $name_Bool, %rax	

1
	testq $1, %rcx	
	je .Main.main_44	

1
	movq %rdx, -152(%rbp)	
	movq -8(%rbp), %rdx	

1
	movq $128, %reg0	
	movq $.string5_l, %rdi	

1
	imull %edi	
	movq $21514, %reg1	

1
	idivl %edi	
.Matrix.get_65:	

1
	addl %edi, %eax	
	jmp .Main.main_1	

1
	je .Main.new_9	
	movq $1, %reg0	

1
	movq %rdi, %rax	
	movq $.string6, %rdi	

1
	call IO.out_int	
	movq $.string6, %rax	

1
	idivl %edi	
	movq %rax, -104(%rbp)	

1
	movq -128(%rbp), %reg1	
	movq -144(%rbp), %reg3	

1
	movq %rsi, 64(%rbx)	
	movq 32(%rbx), %rdi	

1
	subl %eax, %edi	
	movq -152(%rbp), %rax	

1
	movq -176(%rbp), %rax	
	imull %reg2	

1
	movq %rsi, %reg1	
	movq 8(%reg2), %rdi	

1
	testq $1, %reg0	
	je .Matrix.set_64	

1
	.globl Main.funcifi	
	.type Main.funcifi, @function	

1
	je .Matrix.set_66	
	movq $127, %reg0	

1
	je .Main.main_14	
	movq $156, %reg0	

1
	movq $51925, %reg0	
	movq 0(%reg1), %reg2	

1
	call *%r12	
	movq 344(%reg1), %r12	

1
	jne .Main.main_71	
	movq $.string11, %r12	

1
	movq $29790, %rsi	
	subl %reg1, %edi	

1
	movq $2, %r12	
	call Bar.new	

1
	xorq $1, %rax	
	jmp .Main.main_120	

1
	testq $1, %rax	
	je .Main.main_129	

1
	movq %reg0, %r9	
	movq -152(%rbp), %reg0	

1
	movq -120(%rbp), %reg1	
	subl %reg2, %edi	

1
	testq $1, %r8	
	je .Main.main_84	

1
	movq $49411, %reg0	
	movq %reg0, %rcx	

1
	movq $12, %r12	
	movq 0(%reg1), %reg2	

1
	movq -56(%rbp), %rax	
	movq -96(%rbp), %reg3	

1
	movq $.string10, %reg0	
	movq 0(%r12), %rbx	

1
	movq $3000, %rdi	
	movq %rdi, 600(%rax)	

1
	addl %reg0d, %reg1	
	movq $60127, %reg0	

1
	subl %eax, %edi	
	movq -136(%rbp), %reg3	

1
	idivl %reg0	
	movq $8271, %rsi	

1
	movq %reg0, %reg1	
	movq $25351, %reg0	

1
	je .Main.main_37	
	movq -144(%rbp), %rax	

1
	call *%reg0	
	movq 464(%reg1), %reg0	

1
	je .Main.func_1	
	movq $10, %reg0	

1
	movq -88(%rbp), %reg1	
	subl %ecx, %eax	

1
	call *%r12	
	movq 720(%reg1), %r12	

1
	movq -32(%rbp), %rax	
	movq -16(%rbp), %reg3	

1
	movq -32(%rbp), %rax	
	addl %ecx, %reg3	

1
	movq %r13, %reg1	
	addl %esi, %reg3	

1
	movq %r12, %rsi	
	subl %reg2, %eax	

1
	je .Main.main_41	
	movq %reg0, %reg1	

1
	cmpq $String_vtable, 0(%reg0)	
	je .Main.main_10	

1
	movq %rax, 8(%rbx)	
	movq $3, %rax	

1
	movq $168, %rsi	
	movq $.string5_l, %rdi	

1
	movq -152(%rbp), %rax	
	movq -64(%rbp), %reg3	

1
	movq -184(%rbp), %rax	
	addl %eax, %esi	

1
	je .Bar.new_14	
	movq $26, %reg0	

1
	movq $127, %reg0	
	movq $.string3_l, %rdi	

1
	subl %reg0, %edi	
	movq $20509, %reg2	

1
	je .Main.main_16	
	movq $62343, %reg0	

1
	.globl CellularAutomaton.cell_left_neighbor	
	.type CellularAutomaton.cell_left_neighbor, @function	

1
	setl %dil	
	jge .Main.main_18	

1
	call *%rax	
	movq -24(%rbp), %rdx	

1
	jg .Main.main_127	
	movq %reg0, %reg1	

1
	movq 8(%rdi), %rdi	
	imull %edi	

1
	movq -184(%rbp), %rcx	
	imull %reg2	

1
	.globl Bar.getJ	
	.type Bar.getJ, @function	

1
	movq $3000, %reg0	
	movq %reg0, 200(%reg1)	

1
	je .Main.main_15	
	movq -120(%rbp), %reg1	

1
	.type List.head, @function	
List.head:	

1
	addl %edi, %eax	
	movq %reg2, 24(%reg3)	

1
	movq 696(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq -160(%rbp), %reg1	
	movq -40(%rbp), %rdi	

1
	movq $78, %rsi	
	movq $.string2_l, %rdi	

1
	subl %reg0, %reg1	
	movq 0(%rbx), %r13	

1
	subl %eax, %reg1	
	movq -128(%rbp), %rax	

1
	movq 392(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq $76, %reg0	
	movq $.string2_l, %rdi	

1
	movq $3000, %rdi	
	movq %rdi, 392(%reg1)	

1
	call *%r12	
	jmp .Complex.print_2	

1
	movq %reg0, %r12	
	movq %reg2, %rax	

1
	movq -88(%rbp), %rax	
	movq $0, %rcx	

1
	testq $1, %rsi	
	je .Matrix.get_66	

1
	movq $.string13, %r12	
	movq 0(%rbx), %reg2	

1
	movq 320(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	call *%rax	
	movq -136(%rbp), %reg2	

1
	movq %r13, %rsi	
	movq %rbx, %reg3	

1
	movq 216(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	movq %reg0, 264(%rax)	
	movq $0, %reg0	

1
	movq %reg0, %reg1	
	movq $604, %reg2	

1
	sete %dil	
	jne .Main.main_23	

1
	jmp .Bar.new_17	
.Bar.new_16:	

1
	movq %r10, %reg1	
	movq $62723, %r10	

1
	movq %rdi, %r13	
	movq %r13, %r12	

1
	cmpq $String_vtable, 0(%reg0)	
	je .Main.main_16	

1
	movq $3000, %rdi	
	movq %rdi, 504(%reg1)	

1
	call *%reg0	
	movq 640(%rbx), %r12	

1
	movq 160(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq %rdi, %reg1	
	movq -64(%rbp), %reg1	

1
	jne .Matrix.set_17	
	movq %rdi, 56(%reg1)	

1
	movq $33158, %rsi	
	movq $0, %reg1	

1
	testq $1, %rcx	
	je .Main.main_112	

1
.Main.main_59:	
	movq 0(%reg0), %r13	

1
	movq %reg0, %reg1	
	movq $11282, %reg0	

1
	jne .Main.main_2	
	movq -8(%rbp), %rdx	

1
	movq $11, %reg0	
	cmpl $0, %r13d	

1
.Main.funccase_4:	
	movq %rdi, %rax	

1
.Dictionary.insert_2:	
	movq 0(%rax), %reg1	

1
	movq $33472, %reg0	
	movq $7201, %rsi	

1
	movq 32(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq %reg0, %r13	
	jmp .CellularAutomaton.cell_at_next_evolution_2	

1
	jg .Main.main_42	
	movq 0(%rbx), %rax	

1
	movq %rax, -24(%rbp)	
	movq $20, %rax	

1
.Main.main_15:	
	movq %reg0, %rax	

1
	call String.concat	
	movq 8(%rbx), %reg1	

1
	addl %eax, %edi	
	movq $30018, %rax	

1
	movq -48(%rbp), %reg1	
	movq %rdi, %rsi	

1
	movq %reg0, %rax	
.Main.main_157:	

1
	imull %edi	
	movq %rax, -56(%rbp)	

1
	.type Main.out_whatever, @function	
Main.out_whatever:	

1
	movq $14356, %rbx	
	subl %reg1, %eax	

1
	movq %rdi, %rbx	
	movq $.string7, %reg2	

1
	subl %reg0, %reg1	
	movq %rdi, 16(%rax)	

1
	je .Main.main_32	
	movq $16, %rsi	

1
	movq %rbx, %rax	
	popq %r14	

1
	je .Main.main_27	
	movq $.string7, %reg0	

1
	je .Main.main_190	
	movq $316, %reg0	

1
	call *%reg0	
	movq $11, %reg1	

1
	je .Main.main_97	
	movq $64, %rsi	

1
	movq 40(%rax), %rax	
	movq 8(%rbx), %rdi	

1
	movq $0, %rsi	
	movq 16(%reg1), %rdi	

1
	movq $43604, %reg0	
	addl %reg1, %reg2	

1
	movq $21514, %reg0	
	imull %edi	

1
	movq $0, %rdi	
	movq %rdi, 392(%rax)	

1
	movq $30773, %rdi	
	cmpl %reg1, %eax	

1
	call *%reg0	
	movq 8(%rbx), %reg0	

1
	jne .Matrix.get_60	
	movq 192(%reg0), %reg0	

1
	call *%reg0	
	jmp .Main.main_32	

1
.Main.main_34:	
	movq 0(%r13), %reg1	

1
.Bazz.new_1:	
	cmpq $Bar_vtable, 0(%rbx)	

1
	movq $178, %rsi	
	movq $.string5_l, %reg1	

1
	jmp .A2I.i2a_2	
.A2I.i2a_1:	

1
	movq $4, %reg0	
	movq $22, %rsi	

1
	movq %rsi, %r12	
	movq 8(%reg2), %rbx	

1
.Matrix.get_15:	
	movq $2, %rcx	

1
	call String.concat	
	movq %r12, %rdi	

1
.Main.main_6:	
	movq 0(%r12), %rax	

1
.Foo.new_12:	
	movq 32(%rbx), %rdx	

1
	movq %reg0, 208(%rax)	
	movq $3000, %reg0	

1
	subl %reg0, %reg1	
	movq $54460, %reg2	

1
	movq -152(%rbp), %rsi	
	movq -144(%rbp), %rax	

1
	idivl %reg0	
	movq -104(%rbp), %rcx	

1
	jmp .Main.main_7	
.Main.main_8:	

1
	jne .Complex.print_1	
	movq 8(%reg0), %reg1	

1
	subl %reg0, %reg1	
	movq $34320, %rcx	

1
	movq $162, %reg0	
	movq $.string2_l, %rdi	

1
	movq 72(%rax), %rax	
	movq %r12, %reg2	

1
	negl %reg0d	
	subl %reg0d, %reg1	

1
.Main.main_1:	
	movq $130, %reg0	

1
	movq $34, %rax	
	movq 0(%reg1), %r12	

1
	movq $0, %rdi	
	movq %rdi, 616(%reg1)	

1
	movq $3000, %reg0	
	movq %reg0, 216(%rax)	

1
.Main.func2_2:	
	movq %reg0, %reg1	

1
	movq $3, %reg0	
	subl %edi, %reg2	

1
	jne .Matrix.set_47	
	movq %reg0, 152(%rax)	

1
Cons.insert:	
	pushq %reg0	

1
	.globl Dictionary.get	
	.type Dictionary.get, @function	

1
	movq %rsi, -16(%rbp)	
	movq %reg2, %reg3	

1
	movq %rdi, %r8	
	cmpl %r8d, %ecx	

1
	movq %rbx, %reg1	
	movq -88(%rbp), %rdi	

1
.Main.main_28:	
.Main.main_26:	

1
	je .Razz.new_18	
	movq $31, %rsi	

1
	movq $15505, %rax	
	addl %reg1, %edi	

1
	movq $0, %reg0	
	movq %reg0, 448(%reg1)	

1
	movq %rax, %reg1	
	jmp .Main.main_10	

1
	jne .Main.main_142	
	movq %reg0, %reg1	

1
	movq $.string9, %reg0	
.CellularAutomaton.cell_at_next_evolution_8:	

1
	movq %rax, %r12	
	movq %rbx, %rax	

1
	call *%r14	
	movq %reg1, %r13	

1
	movq -16(%rbp), %reg1	
	movq $0, %reg2	

1
.string6_l:	
	.string "string"	

1
	testq $1, %r11	
	je .Main.main_54	

1
	je .Main.main_47	
	movq -152(%rbp), %reg1	

1
	movq $62343, %reg0	
	movq 0(%rbx), %rax	

1
	movq %reg0, %reg1	
	movq $.string11, %reg0	

1
	movq $25351, %rax	
	subl %eax, %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 176(%reg1)	

1
	imull %reg0	
	movq $24923, %reg1	

1
	je .Matrix.elMul_3	
	movq $133, %reg0	

1
	movq %rax, %rcx	
	movq -16(%rbp), %rax	

1
	movq 24(%rbx), %rax	
	sete %reg2	

1
	movq $20968, %reg0	
	movq %reg0, %rcx	

1
	xorq $1, %reg0	
	movq %reg0, %r12	

1
	movq -136(%rbp), %rax	
	movq %rsi, %rcx	

1
.Main.main_37:	
	movq %rbx, %reg1	

1
	negl %eax	
	movq -104(%rbp), %rcx	

1
	.type Main.funccase, @function	
Main.funccase:	

1
	sete %reg0b	
	jne .Matrix.set_58	

1
	movq -160(%rbp), %rax	
	addl %eax, %edi	

1
	movq %reg0, %reg1	
	cmpl $0, 8(%reg2)	

1
Complex.reflect_X:	
	pushq %rbp	

1
	ret	
	.size Complex.init, .-Complex.init	

1
	movq %rdi, %rax	
	movq %rax, %rbx	

1
	movq %rax, %reg1	
	jmp .Main.main_61	

1
	idivl %esi	
	movq $43856, %reg1	

1
	movq %rdi, %reg1	
.Main.main_160:	

1
	movq %reg0, %rbp	
	movq 16(%rdi), %reg3	

1
	movq $.string10, %reg0	
	movq 8(%reg1), %reg2	

1
	call *%r12	
.Main.main_49:	

1
	call *%rbx	
.Main.main_18:	

1
	je .Main.main_67	
	movq $49, %reg0	

1
	movq -120(%rbp), %reg1	
	cmpl %esi, %eax	

1
	movq $.string9, %reg0	
	movq 0(%rax), %reg2	

1
	movq %reg0, %r12	
	movq %rbx, %reg0	

1
	testq $1, %r10	
	je .Main.main_77	

1
	movq $5456, %rax	
	subl %reg1, %edi	

1
	.size DicNode.incr, .-DicNode.incr	
	.globl DicNode.decr	

1
	movq 24(%reg0), %rdi	
	movq %r12, %rsi	

1
	je .Main.main_46	
	movq $34, %rsi	

1
	movq 128(%r12), %r12	
	movq %rax, %rdi	

1
	movq $3000, %reg0	
	movq %reg0, 680(%rax)	

1
	movq %reg0, %rax	
	subl %r8d, %eax	

1
	movq -168(%rbp), %reg1	
	addl %r8d, %eax	

1
	movq %reg0, -16(%rbp)	
	movq %reg2, %reg0	

1
	movq %reg0, 280(%rax)	
	movq $0, %reg0	

1
	movq -128(%rbp), %rax	
	movq -88(%rbp), %reg3	

1
	je .Main.main_124	
	movq $70, %rsi	

1
	jmp .Razz.new_11	
.Razz.new_11:	

1
	movq $24092, %rax	
	movq 0(%rbx), %reg2	

1
	call *%r12	
	movq 472(%rbx), %reg2	

1
	call *%rax	
	movq 696(%rbx), %r12	

1
	movq %reg0, 448(%rax)	
	movq $0, %reg0	

1
	movq %r12, %reg1	
	call Bool.new	

1
	movq -144(%rbp), %reg1	
	negl %esi	

1
	jmp .Matrix.get_48	
.Matrix.get_47:	

1
	.globl Nil.insert	
	.type Nil.insert, @function	

1
	movq %r12, 8(%rax)	
	movq 0(%reg2), %r14	

1
	movq -152(%rbp), %rax	
	movq -80(%rbp), %rsi	

1
	movq %rax, %reg1	
	movq -16(%rbp), %reg3	

1
	movq -136(%rbp), %reg1	
	movq -8(%rbp), %reg3	

1
	movq $5, %reg0	
	cmpl %ecx, %reg2d	

1
	movq -56(%rbp), %rsi	
	subl %reg2, %eax	

1
.Main.new_4:	
	movq %rax, 8(%reg1)	

1
.CellularAutomaton.cell_at_next_evolution_6:	
	movq %reg0, %reg1	

1
	.size Complex.x_value, .-Complex.x_value	
	.globl Complex.y_value	

1
.Main.main_25:	
	movq -80(%rbp), %reg1	

1
.Main.main_45:	
	movq %reg0, %rdx	

1
.Main.main_36:	
	movq 0(%r13), %reg1	

1
	testq $1, %reg0	
	je .Main.main_91	

1
	call *%rbx	
.Main.main_16:	

1
	je .Main.main_37	
	movq $181, %reg0	

1
	jge .Main.main_9	
	movq %r12, %rdi	

1
	movq %reg0, %reg1	
	movq %reg1, 72(%rax)	

1
	jge .Main.main_90	
	movq -152(%rbp), %reg1	

1
	call *%reg0	
	movq 328(%rbx), %reg2	

1
	je .Main.main_70	
	movq %r15, %rax	

1
	movq $3000, %rdi	
	movq %rdi, 56(%rax)	

1
	je .Bar.new_5	
	cmpq $Razz_vtable, 0(%rbx)	

1
	.quad 2	
.string11_l:	

1
	movq 40(%rax), %rax	
	movq 8(%reg1), %rdi	

1
	je .Main.main_63	
	movq $215, %reg0	

1
	movq -48(%rbp), %rsi	
	call *%reg2	

1
	sete %reg0	
	jne .A2I.i2c_9	

1
	movq 592(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	jne .Matrix.set_28	
	movq %reg0, 88(%rax)	

1
	movq %rdi, 48(%reg1)	
	cmpl %edi, %eax	

1
.Main.main_60:	
	movq -16(%rbp), %rdx	

1
	je .Main.main_26	
	movq $36, %rsi	

1
	cmpq $IO_vtable, 0(%reg0)	
	je .Main.main_23	

1
.Main.main_59:	
	movq %reg0, %rax	

1
	movq %reg0, -32(%rbp)	
	movq $2, %reg0	

1
	movq $5, %reg0	
	addl %eax, %edi	

1
	movq $128, %rsi	
	movq $.string5_l, %rdi	

1
	movq -152(%rbp), %reg1	
	movq -24(%rbp), %reg3	

1
	movq 24(%reg0), %reg1	
	sete %reg2l	

1
	movq %rax, %reg1	
	movq $13, %r15	

1
	movq -112(%rbp), %reg1	
	movq %rsi, %rcx	

1
	movq $13076, %rdi	
	imull %reg1	

1
	movq $9, %reg0	
	movq %reg0, -96(%rbp)	

1
	movq $1202, %reg0	
	movq $51824, %r8	

1
	movq $3000, %reg0	
	movq %reg0, 400(%rax)	

1
	call *%rbx	
	movq $2730, %rax	

1
	.quad List.sort	
	.quad List.insert	

1
	subl %reg0, %esi	
	movq -96(%rbp), %reg3	

1
	movq 544(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	movq %rdi, %rax	
	jmp .Matrix.set_33	

1
	call *%reg0	
	movq 32(%reg1), %reg0	

1
	je .Main.main_13	
	movq $21, %rsi	

1
	sete %cl	
	jne .Matrix.get_15	

1
	movq %reg0, 464(%rax)	
	movq $0, %reg0	

1
	je .Main.main_135	
	movq $100, %rsi	

1
	.size ListNode.insert, .-ListNode.insert	
	.globl Main.main	

1
	movq %r12, %rsi	
	imull %reg2	

1
	idivl %reg0d	
	movq -152(%rbp), %reg0	

1
	testq $1, %reg0	
	jne .Main.main_21	

1
.Matrix.get_5:	
.Matrix.get_3:	

1
	testq $1, %rax	
	je .Razz.new_20	

1
	movq %rdi, 232(%reg1)	
	movq $3000, %rdi	

1
	je .Main.main_23	
	cmpq $String_vtable, 0(%rbx)	

1
	movq $14, %rax	
	movq %rax, -128(%rbp)	

1
	call *%reg0	
	movq -40(%rbp), %reg0	

1
.Main.main_73:	
	movq 0(%reg0), %reg1	

1
.A2I.c2i_16:	
.A2I.c2i_14:	

1
	movq -136(%rbp), %rax	
	addl %reg2, %edi	

1
	testq $1, %reg0	
	je .Main.main_101	

1
	movq $.string13, %reg0	
	movq %rbx, %reg2	

1
	movq %reg0, 416(%rax)	
	movq $0, %reg0	

1
	movq $27, %rsi	
	movq $.string2_l, %reg1	

1
	subl %reg0, %edi	
	movq %rbx, %reg3	

1
	je .Main.main_172	
	movq $145, %reg0	

1
	movq -32(%rbp), %rsi	
	movq -144(%rbp), %reg3	

1
	movq %rax, -96(%rbp)	
	movq $10, %rax	

1
	.globl A2I.i2a	
	.type A2I.i2a, @function	

1
	movq %rax, %reg1	
	movq $63252, %rax	

1
	movq 72(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq $25036, %reg0	
	subl %edi, %eax	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_33	

1
.Main.main_107:	
	movq %reg0, %rsi	

1
	movq 176(%rax), %rax	
	jmp .Matrix.get_57	

1
	testq $1, %rax	
	je .Main.main_64	

1
	.quad List.print_list	
Bool_vtable:	

1
	subl %eax, %reg1	
	movq -168(%rbp), %rax	

1
	movq $2, %rdi	
	movq %r12, %reg2	

1
	movq %rcx, %rax	
	movq -48(%rbp), %rcx	

1
	.globl CellularAutomaton.cell_right_neighbor	
	.type CellularAutomaton.cell_right_neighbor, @function	

1
	movq $0, %rdi	
	movq %rdi, 680(%reg1)	

1
	jne .Main.main_2	
	movq 24(%rbx), %reg1	

1
	movq $46167, %reg0	
	addl %reg1, %eax	

1
.string16_l:	
	.string "9"	

1
	movq %reg0, 40(%rax)	
	movq %reg0, %rax	

1
	movq $18841, %reg0	
	movq $54759, %reg1	

1
	movq 232(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	ret	
	.size Cons.rev, .-Cons.rev	

1
	movq $52820, %rax	
	movq $38686, %r10	

1
	call *%reg0	
	movq $2143, %rdi	

1
	movq $10, %reg0	
	movq %reg0, %rdi	

1
.string6_l:	
	.string "0123456789"	

1
	addl %reg0, %reg1	
	movq -48(%rbp), %rax	

1
	movq %reg0, %rax	
	cmpl %esi, %reg3	

1
	setle %reg0l	
	jg .Main.main_40	

1
	movq $0, %rdi	
	movq %rdi, 640(%reg1)	

1
	movq $4, %reg0	
	movq $.string5_l, %reg1	

1
	movq $38737, %rax	
	subl %eax, %edi	

1
	movq %r12, %r13	
	movq $2, %reg2	

1
	movq %reg0, %rdi	
	movq -120(%rbp), %rax	

1
	movq -48(%rbp), %reg1	
	movq %rbx, %reg3	

1
	movq %reg0, %rdi	
	movq 8(%reg0), %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 104(%rax)	

1
	movq -112(%rbp), %reg1	
	subl %reg2, %edi	

1
	movq $26, %rsi	
	movq $.string3_l, %rdi	

1
	call *%reg0	
	movq 368(%rbx), %r12	

1
	je .Main.main_23	
	movq $.string7, %rbx	

1
	je .Main.main_23	
	cmpq $Int_vtable, 0(%rbx)	

1
	movq $3, %r9	
	movq %r8, %rcx	

1
	movq %rdi, 16(%rax)	
	movq 24(%rax), %reg2	

1
.Main.main_9:	
	cmpl %edi, %esi	

1
	.size Cons.tail, .-Cons.tail	
	.globl Cons.init	

1
	movq $3000, %reg0	
	movq %reg0, 680(%reg1)	

1
.string6_l:	
	.string "FAIL"	

1
	movq -128(%rbp), %rax	
	movq $0, %reg2	

1
.DicNode.get_6:	
	movq 24(%reg0), %rdx	

1
	movq -40(%rbp), %rdi	
	subl %edi, %eax	

1
	negl %reg0	
	movq -88(%rbp), %rsi	

1
	je .Razz.new_13	
	movq $10, %rsi	

1
	movq 40(%r15), %r15	
	movq %rax, %reg2	

1
.Main.main_3:	
	movq %rsi, %rdi	

1
	movq 264(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	jmp .Main.main_57	
.Main.main_53:	

1
	movq %reg0, %reg1	
	movq $10809, %reg0	

1
	movq -88(%rbp), %reg1	
	subl %esi, %reg3	

1
	movq 496(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq %reg0, 104(%rax)	
	movq $3000, %reg0	

1
	movq $3, %reg0	
	movq %reg0, 24(%rbx)	

1
	movq $62, %rsi	
	movq $.string2_l, %reg1	

1
	xorq $1, %rax	
	movq %rax, %r12	

1
	movq 128(%reg0), %reg0	
	movq 16(%rbx), %rdi	

1
	movq $53181, %reg0	
	addl %reg0d, %reg1	

1
	.globl Nil.rcons	
	.type Nil.rcons, @function	

1
	movq $0, %reg0	
	movq %reg0, 424(%reg1)	

1
.Cons.insert_3:	
	popq %reg0	

1
	movq 8(%reg0), %rax	
	cmpl %edi, %eax	

1
	movq %reg0, %reg1	
.Main.main_164:	

1
.Main.main_27:	
	movq 0(%r13), %reg1	

1
	movq 304(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	je .Main.main_91	
	movq $64, %rsi	

1
.Foo.new_10:	
	movq %rbx, %reg1	

1
.Main.main_39:	
	movq %rbx, %rsi	

1
	call *%rax	
	call Foo.new	

1
	call *%r14	
	movq %rax, %r12	

1
	movq 32(%reg0), %reg0	
	jmp .Matrix.get_9	

1
	movq -88(%rbp), %reg1	
	movq -32(%rbp), %reg3	

1
	movq $15469, %rdi	
	movq %rdi, %reg1	

1
.Main.main_6:	
	movq 0(%rax), %r15	

1
	movq $0, %reg0	
	movq %reg0, 592(%reg1)	

1
	jmp .Matrix.set_18	
.Matrix.set_17:	

1
	setle %bl	
	jg .Main.main_25	

1
.A2I.c2i_13:	
	movq $.string14, %rdi	

1
	jg .Main.main_6	
	movq %reg0, %reg1	

1
	movq -136(%rbp), %reg1	
	subl %eax, %ecx	

1
	subl %reg0, %reg1	
	movq $50998, %rax	

1
	movq %r8, %reg1	
	negl %eax	

1
	movq %r13, 8(%rax)	
	movq %rax, %r13	

1
	movq -24(%rbp), %rax	
	movq -16(%rbp), %reg3	

1
	movq $0, %rcx	
	movq %reg1, %rsi	

1
	movq $25947, %rsi	
	movq $22130, %reg1	

1
	movq -16(%rbp), %rdi	
	movq %reg2, %rax	

1
	ret	
	.size Bar.getJ, .-Bar.getJ	

1
	jne .Matrix.set_17	
	movq %reg0, 56(%rax)	

1
	movq $12, %rcx	
	movq -32(%rbp), %reg2	

1
	testq $1, %rcx	
	je .Main.main_108	

1
	jge .Main.main_21	
	movq %reg0, %rax	

1
	je .Bazz.new_5	
	cmpq $Razz_vtable, 0(%reg0)	

1
	movq $107, %reg0	
	movq $.string4_l, %reg1	

1
	movq $130, %rdi	
	movq %r13, %rax	

1
	movq $38801, %rax	
	negl %eax	

1
	testq $1, %r9	
	je .Main.main_160	

1
	idivl %reg0	
	movq %reg1, -160(%rbp)	

1
	call *%reg0	
.Main.func2_2:	

1
	setle %reg0l	
	jg .Main.main_126	

1
	.quad Foo.setX	
String_vtable:	

1
	movq $Matrix_vtable, 0(%reg0)	
	movq $0, %rdi	

1
	movq %rax, %rsi	
	movq -136(%rbp), %rax	

1
	sete %cl	
	jne .Matrix.get_56	

1
	sete %reg0	
	jne .Matrix.get_47	

1
	movq %rsi, %rax	
	negl %eax	

1
	movq %reg0, %reg1	
	jmp .Main.main_60	

1
	movq %reg0, 288(%reg1)	
	movq $0, %reg0	

1
	movq -16(%rbp), %reg1	
	cmpl %esi, %reg3	

1
	je .Main.main_161	
	movq $142, %rsi	

1
	call *%reg0	
	movq 8(%rbx), %reg2	

1
	movq %reg0, %reg1	
	movq %reg2, -16(%rbp)	

1
	movq %rcx, %reg1	
	movq %rax, %reg3	

1
	movq $72, %rdi	
	call getmem	

1
List.tail:	
	pushq %rbp	

1
	sete %cl	
	jne .A2I.i2c_3	

1
	movq %reg0, %rsi	
	movq -16(%rbp), %rax	

1
	movq %reg0, %reg1	
	movq $39037, %reg0	

1
	movq %rax, %rcx	
	movq -128(%rbp), %reg3	

1
	movq 168(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	call *%r12	
	movq 48(%reg1), %rax	

1
	idivl %reg0	
	movq -56(%rbp), %rcx	

1
	.size Cons.cdr, .-Cons.cdr	
	.globl Cons.rev	

1
.Main.main_117:	
	movq -104(%rbp), %reg1	

1
	movq -112(%rbp), %reg1	
	movq $0, %rcx	

1
	negl -24(%rbp)	
	movq $38220, %reg1	

1
	movq $20, %rax	
	movq %rax, -16(%rbp)	

1
	movq 8(%reg0), %r12	
	call Int.new	

1
	movq %rax, 24(%rbx)	
	movq $7, %reg2	

1
	jmp .Main.main_85	
.Main.main_84:	

1
	movq %reg0, %rax	
	movq -176(%rbp), %rsi	

1
	call *%reg0	
	movq -72(%rbp), %reg2	

1
	movq 0(%rbx), %r13	
	movq 56(%r13), %r13	

1
	.quad Bar.func2	
String_vtable:	

1
	movq %reg0, %rax	
	jmp .Main.main_60	

1
	movq -80(%rbp), %rsi	
	movq -56(%rbp), %rax	

1
	addl %reg0, %reg1	
	movq -24(%rbp), %rax	

1
	subl %eax, %edi	
	movq %reg2, -16(%rbp)	

1
	movq %reg0, %reg1	
	movq $17594, %reg0	

1
	movq %reg0, 600(%rax)	
	movq $0, %reg0	

1
	movq %reg0, 424(%rax)	
	movq $0, %reg0	

1
	movq $60858, %reg0	
	negl %esi	

1
	imull %reg0d	
	movq $36519, %reg0	

1
	negl %ecx	
	movq -80(%rbp), %rax	

1
	movq %reg0, 200(%rax)	
	movq $3000, %reg0	

1
	call *%r12	
	movq 600(%rbx), %reg2	

1
	movq $.string7, %rax	
	movq %reg1, %rdi	

1
	movq %r13, %reg1	
	addl %eax, %ecx	

1
	call *%rax	
	jmp .Main.main_31	

1
	addl %reg0, %esi	
	movq -96(%rbp), %reg3	

1
	movq %reg0, %rax	
	movq %r14, %rsi	

1
	movq -64(%rbp), %rax	
	movq -72(%rbp), %rdi	

1
	testq $1, %rax	
	je .Complex.equal_4	

1
	movq %r13, 8(%rax)	
	movq 0(%reg2), %r14	

1
	movq $51549, %rax	
	movq %reg1, %rdx	

1
	jge .Main.main_132	
	movq %r15, %rax	

1
	.globl A2I.i2c	
	.type A2I.i2c, @function	

1
	je .Main.funccaseb_2	
	movq $1, %reg0	

1
	subl %ecx, %eax	
	movq -152(%rbp), %reg3	

1
	movq %rdi, %reg1	
	movq $39037, %rdi	

1
	movq $840, %rsi	
	movq %rsi, %reg1	

1
	call *%r12	
	movq $.string12, %rax	

1
.Matrix.set_29:	
	jmp .Matrix.set_39	

1
	call *%reg0	
.Main.main_26:	

1
	negl %reg0	
	movq %rax, %r9	

1
	.string "-"	
.string17:	

1
	movq $5, %reg0	
	subl %eax, %edi	

1
.Main.main_32:	
	movq 0(%r13), %rax	

1
	je .Main.main_59	
	movq %reg0, %rax	

1
	movq $3000, %rdi	
	movq %rdi, 608(%reg1)	

1
.Razz.new_10:	
	movq %rbx, %reg1	

1
	testq $1, %reg0	
	jne .Main.main_6	

1
	movq 680(%reg0), %rax	
	movq 0(%reg0), %r12	

1
.Main.main_47:	
	movq %reg0, %rax	

1
	.type Foo.getS, @function	
Foo.getS:	

1
	movq %rdi, 64(%reg1)	
	movq $1, %rdi	

1
	testq $1, %rdi	
	je .DicNode.insert_4	

1
	movq -72(%rbp), %rsi	
	movq %rdi, %reg3	

1
	subl %eax, %reg1	
	movq -56(%rbp), %reg3	

1
	subl %ecx, %eax	
	movq -152(%rbp), %rcx	

1
	movq $64, %reg0	
	call getmem	

1
	movq -104(%rbp), %rcx	
	negl %ecx	

1
	sete %dil	
	jne .Main.main_154	

1
	movq 520(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	subl %reg0, %esi	
	movq -112(%rbp), %rcx	

1
	movq -128(%rbp), %rax	
	addl %eax, %edi	

1
	.type DicNode.next, @function	
DicNode.next:	

1
	movq -72(%rbp), %reg1	
	negl %esi	

1
.Matrix.set_32:	
	movq $4, %r8	

1
	movq -96(%rbp), %rsi	
	subl %esi, %eax	

1
	call *%r12	
	movq $.string8, %r12	

1
	movq %rdi, 320(%rax)	
	movq $0, %rdi	

1
	movq %reg0, 8(%reg1)	
	movq $1, %rdi	

1
	movq $37473, %rsi	
	movq $0, %rcx	

1
	movq %reg0, %r10	
	movq $18444, %reg0	

1
	movq $22, %rax	
	movq $11, %r8	

1
	subl %reg0, %eax	
	movq %reg2, -136(%rbp)	

1
	je .Main.main_82	
	movq $61, %reg0	

1
	jne .Main.main_123	
	movq -80(%rbp), %reg1	

1
	call Bar.new	
	movq %rax, 8(%reg1)	

1
	movq $29524, %r12	
	movq 0(%rbx), %rax	

1
	addl %reg0, %reg1	
	movq $4, %reg2	

1
	movq $177, %rsi	
	movq $0, %rcx	

1
DicNode.incr:	
	pushq %rbp	

1
.Main.print_list_1:	
	movq 0(%r12), %reg1	

1
	movq -64(%rbp), %rdi	
	cmpl %reg2, %eax	

1
	movq -32(%rbp), %reg1	
	movq -128(%rbp), %reg3	

1
	movq 96(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	call out_error	
.Matrix.get_64:	

1
	movq $19302, %rsi	
	movq %rsi, %rcx	

1
	je .Main.main_178	
	movq $308, %reg0	

1
	movq 144(%reg0), %reg0	
	movq %reg1, %rdi	

1
	movq %reg0, %rsi	
	movq $41455, %reg0	

1
	je .Main.main_101	
	movq $64, %reg0	

1
	movq %rdi, 184(%rax)	
	movq %rdi, %rax	

1
	movq 544(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	jge .Main.main_11	
	movq $.string7, %rax	

1
	testq $1, %rdi	
	je .Main.funccase_6	

1
	movq $31515, %rax	
	negl %eax	

1
	movq %reg0, 8(%rbx)	
	movq $5, %r12	

1
	movq %r13, %rax	
	movq -88(%rbp), %rdi	

1
	testq $1, %reg0	
	je .Main.main_163	

1
	subl %reg0, %reg1	
	movq %reg2, 16(%rax)	

1
	movq %reg0, 8(%rax)	
	movq $2, %r13	

1
	.string "d"	
.string7:	

1
	movq %rdi, %rbx	
	movq 0(%reg2), %r12	

1
	negl %esi	
	movq -32(%rbp), %rax	

1
	movq $.string6, %reg0	
	movq 0(%rax), %r12	

1
	je .Main.main_13	
	movq $20, %rsi	

1
	movq %rsp, %reg1	
	movq 16(%reg2), %reg3	

1
	negl %reg0	
	movq $3306, %reg1	

1
.Main.new_3:	
	movq %rbx, %rax	

1
	call *%reg0	
	movq $21018, %rax	

1
	movq %rdi, 464(%rax)	
	movq $0, %rdi	

1
	movq 16(%rax), %rdi	
	movq 24(%rax), %reg2	

1
.Matrix.set_53:	
	movq $1, %reg0	

1
	call *%r12	
	movq 200(%rbx), %rax	

1
	subl %reg0, %edi	
	movq -104(%rbp), %reg3	

1
	movq $.string8, %reg0	
	movq 0(%rax), %reg2	

1
	subl %reg0, %eax	
	movq -104(%rbp), %rsi	

1
	movq %rbx, %rdi	
	subl %edi, %eax	

1
	subl %eax, %edi	
	movq $14379, %rax	

1
	cmpq $Foo_vtable, 0(%rbx)	
	je .Bar.new_4	

1
	call *%reg0	
	movq 576(%rbx), %rax	

1
	movq 192(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq %rax, %r15	
	cmpl $0, -16(%rbp)	

1
	movq $4, %rax	
	movq %rax, %rbx	

1
	movq %rax, 8(%rbx)	
	movq 0(%rbx), %r12	

1
	testq $1, %rax	
	je .Main.main_18	

1
	movq %rax, %reg1	
	movq $5456, %rax	

1
	call *%r13	
	movq $1, %rdi	

1
	movq 280(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq $12855, %reg0	
	addl %reg1, %eax	

1
	movq $1317, %rax	
	movq $47218, %rcx	

1
	idivl %esi	
	movq -128(%rbp), %reg2	

1
.Main.funccase_6:	
	movq 0(%rax), %reg1	

1
.Main.main_1:	
	movq 0(%r12), %r14	

1
	testq $1, %rcx	
	je .Main.main_17	

1
	movq 8(%reg0), %reg1	
	movq 0(%rbx), %rax	

1
	movq -48(%rbp), %reg1	
	subl %eax, %esi	

1
	movq -128(%rbp), %rsi	
	movq %r14, %reg3	

1
	movq -96(%rbp), %rax	
	movq -16(%rbp), %rsi	

1
	movq -88(%rbp), %reg1	
	movq %reg2, %rax	

1
	je .Main.main_44	
	movq $15, %rsi	

1
	jne .A2I.c2i_17	
	movq $8, %reg0	

1
	movq 8(%rbx), %r12	
	movq 16(%rbx), %reg2	

1
	movq $19990, %reg0	
	imull %reg1	

1
	movq $0, %reg0	
	movq %reg0, 648(%rax)	

1
	call *%reg0	
	movq 208(%reg1), %reg0	

1
	movq %reg0, %rdx	
	movq %rdx, -144(%rbp)	

1
	movq $34422, %reg0	
	subl %reg1, %reg2	

1
	sete %r9b	
	jne .Matrix.set_14	

1
.string9_l:	
	.string "I"	

1
	movq -160(%rbp), %rax	
	addl %eax, %reg3	

1
	movq %rdi, %rax	
	jmp .Main.main_133	

1
	movq %r15, %rdi	
	movq %reg2, %reg3	

1
	testq $1, %rsi	
	je .Main.main_51	

1
	movq $3000, %rdi	
	movq %rdi, 64(%rax)	

1
	movq $48457, %reg0	
	movq $18781, %rcx	

1
	movq 456(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	movq $5, %rsi	
	movq %rax, %rdi	

1
	je .Main.main_2	
	movq $84, %rsi	

1
	movq %rsi, %reg1	
	movq -72(%rbp), %rsi	

1
	movq %reg0, %rbx	
	movq $10, %r12	

1
	subl %reg0, %edi	
	movq $14802, %reg2	

1
	imull %esi	
	movq $60575, %reg1	

1
	movq 160(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq 600(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq $932, %reg0	
	movq $0, %r10	

1
.Main.func_2:	
	movq 0(%rbx), %reg1	

1
	call *%reg0	
	movq 520(%reg1), %r12	

1
	movq %rdi, 104(%reg1)	
	movq %rdi, %reg1	

1
.Main.main_2:	
	movq 16(%rbx), %r12	

1
	movq %reg0, 480(%rax)	
	movq $0, %reg0	

1
	movq -64(%rbp), %reg1	
	addl %reg1d, %reg2	

1
	subl %reg0, %reg1	
	movq %reg2, 16(%reg3)	

1
	movq %rdi, %reg1	
	movq $46509, %rax	

1
	movq %r14, %reg1	
	movq -56(%rbp), %reg3	

1
	movq %r12, %rcx	
	imull %reg2	

1
.Main.main_100:	
	movq %reg0, %reg1	

1
	call *%rax	
	movq $3, %rdi	

1
	je .Main.main_11	
	cmpq $Main_vtable, 0(%reg0)	

1
	movq 560(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	.quad 4	
.string7_l:	

1
	call *%reg0	
	movq 592(%reg1), %reg0	

1
	movq -136(%rbp), %rax	
	movq -72(%rbp), %reg3	

1
	movq -88(%rbp), %reg1	
	addl %reg2, %esi	

1
	call Foo.new	
	movq %rax, %r13	

1
	movq $44, %rcx	
	movq $22, %reg1	

1
.Main.main_10:	
	movq 0(%rax), %r13	

1
	je .Bar.new_7	
	movq $4, %reg0	

1
	movq 24(%rbx), %rax	
	cmpl $0, %reg2	

1
	movq 536(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq %reg0, %reg1	
	movq -80(%rbp), %rax	

1
	jne .Matrix.set_41	
	movq %rdi, 128(%rax)	

1
	subl %reg0, %eax	
	movq %rax, -136(%rbp)	

1
	je .Main.main_83	
	movq $61, %reg0	

1
	je .Main.main_180	
	movq $151, %reg0	

1
	movq %r14, %reg1	
	sete %dil	

1
	call *%rax	
	movq 216(%rbx), %r12	

1
	movq 24(%rbx), %rax	
	movq %reg2, %rdi	

1
	movq %rax, 16(%reg1)	
	jmp .ListNode.insert_3	

1
	movq $3000, %rdi	
	movq %rdi, 344(%rax)	

1
	movq -48(%rbp), %rsi	
	imull %esi	

1
	movq %reg0, -16(%rbp)	
	movq %reg2, %rbx	

1
	je .Main.iota_2	
	call Cons.new	

1
	call *%r12	
	movq 440(%reg1), %rax	

1
	jmp .Bar.new_6	
.Bar.new_5:	

1
	movq $0, %rdi	
	movq %rdi, 592(%reg1)	

1
	idivl %reg0d	
	movq %reg1, %rbx	

1
	negl %eax	
	movq $33636, %reg1	

1
	idivl %ebx	
	movq %rax, %r11	

1
.Main.main_18:	
	movq 0(%r12), %r13	

1
	call *%r12	
	movq $name_Bool, %reg1	

1
.Main.main_5:	
	movq -24(%rbp), %reg1	

1
	movq %rdi, %rax	
	movq $33976, %rdi	

1
	movq $56918, %reg0	
	movq $55662, %reg1	

1
	movq -168(%rbp), %rax	
	movq $0, %reg2	

1
	movq $46167, %reg0	
	addl %reg1, %reg2	

1
	movq -136(%rbp), %reg1	
	subl %reg2, %edi	

1
	call *%r12	
	movq 192(%reg1), %rax	

1
	call *%reg0	
.Main.main_49:	

1
	movq -32(%rbp), %reg1	
	addl %ecx, %reg3	

1
	call *%rax	
	movq -144(%rbp), %rdx	

1
	movq %rax, %reg1	
	movq -184(%rbp), %r8	

1
	movq %r15, %rax	
	movq %reg2, %rsi	

1
	movq $53961, %rax	
	movq $30773, %reg1	

1
	movq 48(%rax), %rax	
	movq 8(%rbx), %reg2	

1
	movq -144(%rbp), %reg1	
	movq -160(%rbp), %rdi	

1
	movq $17107, %reg0	
	movq 0(%rbx), %reg2	

1
	movq -152(%rbp), %rax	
	addl %reg2, %esi	

1
	movq $177, %rsi	
	movq $0, %reg1	

1
	je .Foo.new_12	
	movq $10, %reg0	

1
	addl %reg0, %edi	
	movq $1, %reg2	

1
	je .Main.main_55	
	movq $204, %reg0	

1
	movq -56(%rbp), %rax	
	cmpl %reg2, %eax	

1
	movq %reg0, %reg1	
	movq $46167, %reg0	

1
	movq %reg0, %rax	
	movq $5660, %reg0	

1
	.quad 4	
Bar_vtable:	

1
	negl %eax	
	movq %reg1, 16(%reg2)	

1
	je .Main.main_15	
	movq $23, %rsi	

1
	movq $45402, %reg0	
	movq %reg0, %reg1	

1
	movq 296(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	movq %rax, %reg1	
	movq -136(%rbp), %rcx	

1
	movq $138, %rsi	
	movq $.string3_l, %reg1	

1
	movq $38737, %rax	
	subl %reg1, %reg2	

1
	jne .Matrix.set_32	
	movq %rdi, 104(%reg1)	

1
.Main.main_1:	
	movq $2, %reg0	

1
	movq $5, %rax	
	subl %eax, %reg2	

1
	movq 112(%r12), %r12	
	movq 16(%reg1), %rdi	

1
	movq 16(%rbx), %rdi	
	cmpl %reg2, %eax	

1
	movq %reg0, %reg1	
.Main.fib_2:	

1
	movq $45807, %reg0	
	subl %eax, %edi	

1
	movq %rsi, %reg1	
	call Nil.new	

1
	movq $3000, %reg0	
	movq %reg0, 616(%reg1)	

1
	call *%reg0	
	movq 24(%rbx), %reg2	

1
	movq %reg0, %rdi	
	movq %rdi, 72(%reg2)	

1
	movq 24(%rax), %reg1	
	cmpl $0, %reg2	

1
	movq %rax, %r14	
.Main.main_5:	

1
	je .Main.main_56	
	movq $49, %rsi	

1
	subq $128, %rsp	
	pushq %reg1	

1
	addl %reg0, %edi	
	movq $37073, %rax	

1
	movq %reg0, %reg1	
	jmp .Main.main_81	

1
	movq $13257, %reg0	
	imull %reg1	

1
	movq 160(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	addl %reg0, %esi	
	movq -96(%rbp), %rcx	

1
	testq $1, %rcx	
	je .Main.main_154	

1
	je .Main.main_13	
	movq $34, %rsi	

1
.Main.funcifi_2:	
	popq %r12	

1
.Complex.equal_1:	
	movq 0(%r12), %reg1	

1
	movq %reg0, 680(%reg1)	
	movq $3000, %reg0	

1
	movq $50998, %reg0	
	addl %eax, %edi	

1
	movq %rdx, -72(%rbp)	
	movq -8(%rbp), %rdx	

1
	movq 8(%rbx), %reg1	
	call IO.out_string	

1
	call Bazz.new	
	movq %rax, 8(%rbx)	

1
	movq $12, %rcx	
	movq -16(%rbp), %rax	

1
	movq 16(%rax), %reg1	
	subl %esi, %edi	

1
	movq %r14, %reg1	
	addl %eax, %reg3	

1
	call *%r12	
	movq 144(%reg1), %r12	

1
	movq $3000, %rdi	
	movq %rdi, 80(%rax)	

1
	movq %rdi, 616(%reg1)	
	movq $3000, %rdi	

1
	jne .Main.main_6	
	movq 0(%rbx), %rax	

1
	movq %reg0, %r12	
	movq $10, %rsi	

1
	movq $3, %reg0	
	movq 0(%rax), %r12	

1
	idivl %reg0	
	movq $27231, %reg1	

1
	addl %reg0, %edi	
	movq -152(%rbp), %rax	

1
	imull %reg0	
	movq $16280, %reg1	

1
	movq $17975, %rdi	
	movq %rdi, %rsi	

1
	movq $3000, %rdi	
	movq %rdi, 232(%reg1)	

1
	movq %rax, %r14	
	movq $1, %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 256(%rax)	

1
Foo.x:	
	pushq %reg0	

1
	je .Main.main_100	
	movq -104(%rbp), %reg1	

1
	movq 16(%rax), %reg1	
	movq 0(%reg1), %r13	

1
	movq -80(%rbp), %rsi	
	subl %reg2, %eax	

1
	movq -144(%rbp), %rax	
	movq -168(%rbp), %reg3	

1
	movq %rsi, %r12	
	movq 8(%rax), %rbx	

1
	addl %reg0, %eax	
	movq %reg2, -24(%rbp)	

1
	movq -48(%rbp), %reg1	
	imull %esi	

1
	movq -184(%rbp), %r8	
	movq %reg2, %rax	

1
	je .Main.main_32	
	movq $13, %reg0	

1
	movq 72(%rax), %rax	
	movq 16(%reg1), %reg2	

1
	testq $1, %rax	
	je .Main.main_136	

1
	addl %eax, %r10d	
	movq $7429, %rax	

1
	je .Main.main_10	
	cmpq $Object_vtable, 0(%rax)	

1
	movq %reg0, %reg1	
	movq -72(%rbp), %rcx	

1
	je .Main.main_168	
	movq $145, %reg0	

1
	imull %edi	
	movq $3850, %rdi	

1
	movq $11, %r14	
	cmpl $0, %r13d	

1
	testq $1, %rax	
	je .Bar.new_18	

1
	movq %r9, %reg1	
	movq -24(%rbp), %r9	

1
	movq $3000, %rdi	
	movq %rdi, 552(%rax)	

1
	je .Main.main_69	
	movq $52, %rsi	

1
	movq 8(%reg0), %rdi	
	movq $1, %rcx	

1
	movq 8(%reg0), %rsi	
	call *%reg2	

1
	subl %reg0, %edi	
	movq -136(%rbp), %rsi	

1
	movq $15, %rsi	
	movq $.string5_l, %reg1	

1
	movq %reg0, %r15	
	cmpl $0, -16(%rbp)	

1
	call *%rax	
	movq $empty_string, %rdi	

1
ListNode.get:	
	pushq %rbp	

1
	movq -48(%rbp), %rax	
	subl %reg2, %esi	

1
	jne .Matrix.set_40	
	movq $1, %reg0	

1
	movq %rax, %reg1	
	call Foo.foo	

1
	subl %eax, %esi	
	movq $48118, %reg2	

1
	movq $6765, %reg0	
	subl %reg1, %eax	

1
	movq -160(%rbp), %rax	
	subl %reg2, %edi	

1
	call *%rax	
	movq 696(%rbx), %reg2	

1
	addl %eax, %reg1	
	movq -24(%rbp), %reg3	

1
.Main.funcwhileb_2:	
	movq 0(%reg0), %rax	

1
	movq $.string7, %reg0	
	movq 0(%rax), %r12	

1
	je .Cons.rev_1	
	movq $74, %rsi	

1
	jmp .Main.new_5	
.Main.new_4:	

1
	call *%reg0	
	movq 544(%rbx), %reg0	

1
.Main.main_121:	
	movq %r15, %rsi	

1
	movq %rax, -16(%rbp)	
.Main.main_1:	

1
	subl %eax, %edi	
	movq $50998, %rax	

1
	je .Main.main_23	
	cmpq $Int_vtable, 0(%reg0)	

1
	movq %reg0, %reg1	
	movq 24(%reg1), %rax	

1
	call *%rax	
	movq -168(%rbp), %rax	

1
.Main.new_8:	
.Main.new_5:	

1
	movq -96(%rbp), %reg1	
	movq %r15, %rax	

1
	.globl Nil.isNil	
	.type Nil.isNil, @function	

1
	movq %rbx, %reg1	
	movq %r10, %r11	

1
	movq %rdi, 528(%reg1)	
	movq $3000, %rdi	

1
.Main.main_16:	
	movq $9, %reg0	

1
	movq $2, %rdi	
	movq %reg1, %reg2	

1
	je .Main.main_119	
	movq %reg0, %rax	

1
	call String.concat	
	movq 8(%rbx), %rdi	

1
	call *%reg0	
	movq 480(%rbx), %reg2	

1
	movq %rsi, %r8	
	movq %reg2, %rsi	

1
	movq %r12, %rax	
	popq %r15	

1
	movq %rax, %reg1	
	movq $28147, %rax	

1
	movq -152(%rbp), %reg1	
	cmpl %esi, %eax	

1
	movq $3000, %reg0	
	movq %reg0, 312(%reg1)	

1
	imull %reg0d	
	addl %reg1, %r9d	

1
	movq %reg0, 296(%rax)	
	movq $3000, %reg0	

1
	movq 64(%r15), %r15	
	movq %rax, %reg2	

1
	movq -144(%rbp), %reg1	
	movq %rdi, %reg3	

1
	jmp .Main.main_50	
.Main.main_49:	

1
	je .Main.main_7	
	movq $138, %reg0	

1
	movq 16(%reg0), %rdi	
	negl %reg2	

1
.Main.main_156:	
	movq -136(%rbp), %reg1	

1
	setl %sil	
	jge .Main.main_132	

1
.Matrix.set_30:	
	movq $3, %r8	

1
	imull %ebx	
	movq $27696, %rbx	

1
	movq $10, %rax	
	cmpl $0, %reg1	

1
	je .Main.main_58	
	movq $208, %reg0	

1
	je .Main.out_whatever_2	
	cmpq $Main_vtable, 0(%reg0)	

1
	call *%r12	
	movq 456(%reg1), %r12	

1
	movq -16(%rbp), %reg1	
	cmpl %reg2, %edi	

1
	movq $0, %rdi	
	movq %rdi, 584(%rax)	

1
	movq $1, %reg0	
	movq 24(%rbx), %rax	

1
	movq %reg0, %reg1	
	movq $32, %rdi	

1
	movq %reg0, 176(%reg1)	
	movq %reg0, %reg1	

1
	movq %reg0, %reg1	
	movq %reg1, %rbx	

1
	jne .Main.main_113	
	movq %reg0, %reg1	

1
.Main.main_4:	
	movq %r13, %r12	

1
	sete %bl	
	jne .CellularAutomaton.cell_at_next_evolution_5	

1
	ret	
	.size Cons.car, .-Cons.car	

1
	subl %reg0, %eax	
	movq 0(%rbx), %r13	

1
	movq %reg0, %rax	
	movq %reg2, %r11	

1
	cmpq $String_vtable, 0(%reg0)	
	je .Main.new_3	

1
.Main.main_54:	
	movq 0(%r13), %reg1	

1
	movq -176(%rbp), %r8	
	subl %r8d, %eax	

1
	movq $2951, %reg0	
	movq $0, %r13	

1
	call *%r15	
	jmp .Main.main_6	

1
	.type Main.funccasei, @function	
Main.funccasei:	

1
	call *%reg0	
	movq 112(%reg1), %r12	

1
	movq %reg0, %rax	
	addl %eax, %reg3d	

1
.Main.main_19:	
	movq $48985, %rax	

1
.Main.main_10:	
	movq -16(%rbp), %rdx	

1
	movq %reg0, 8(%rax)	
.Main.main_39:	

1
	negl %edi	
	movq %r12, %rax	

1
	movq %rdi, 176(%reg1)	
	movq %rdi, %reg1	

1
	jne .Main.main_113	
	movq %reg0, %rax	

1
	movq $54460, %rax	
	addl %eax, %edi	

1
	movq -16(%rbp), %rsi	
	cmpl %esi, %eax	

1
	movq -176(%rbp), %rdi	
	subl %reg2, %eax	

1
	jne .Main.main_3	
	movq $.string7, %reg0	

1
	movq %reg0, %r11	
	subl %r11d, %reg2	

1
	movq -160(%rbp), %reg1	
	imull %r9d	

1
.Main.main_4:	
	movq $.string13, %reg0	

1
	movq $63399, %rsi	
	imull %esi	

1
	je .Main.func_2	
	cmpq $IO_vtable, 0(%reg0)	

1
	negl %reg0	
	movq $15714, %reg1	

1
.Matrix.set_49:	
	movq $1, %rax	

1
	addl %reg0d, %eax	
	movq -16(%rbp), %reg0	

1
	movq $53642, %rax	
	movq $21521, %reg1	

1
	addl %reg0, %reg1	
	movq %reg2, 40(%reg3)	

1
	movq $19302, %rsi	
	movq %rsi, %reg1	

1
.Main.main_3:	
	movq 0(%reg0), %r15	

1
	call *%rax	
	movq 112(%rbx), %r12	

1
	je .Main.main_125	
	movq $70, %reg0	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_16	

1
	movq -80(%rbp), %rax	
	cmpl %reg2, %esi	

1
	.quad Object.type_name	
	.quad Bar.getJ	

1
	movq -168(%rbp), %rsi	
	movq -160(%rbp), %reg3	

1
	movq 544(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq $1, %rdi	
	jmp .Main.new_4	

1
	movq %rax, %reg1	
	movq $57869, -24(%rbp)	

1
	je .Main.main_24	
	movq $168, %rsi	

1
	movq $5, %reg0	
	cmpl %ecx, %r8d	

1
	movq 24(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq -96(%rbp), %rsi	
	subl %reg2, %reg3	

1
	testq $1, %reg0	
	je .Matrix.get_12	

1
	idivl %reg0	
	movq $46032, %rdi	

1
	imull %ebx	
	movq %rax, %rbx	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_29	

1
	movq 440(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq $84, %reg0	
	movq $.string2_l, %rdi	

1
	je .Main.main_6	
	movq $14, %reg0	

1
	movq $0, %reg0	
	movq $1, %r13	

1
.Main.main_47:	
	movq 0(%rax), %reg1	

1
DicNode.get:	
	pushq %rbp	

1
	movq -80(%rbp), %reg1	
	movq -112(%rbp), %reg3	

1
	setl %bl	
	jge .Main.main_29	

1
	movq -120(%rbp), %reg1	
	addl %esi, %eax	

1
	movq %rax, %rdi	
	movq -88(%rbp), %rax	

1
	movq 24(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	movq %reg0, %rax	
	movq 8(%rbx), %r14	

1
	call *%r13	
	cmpl $0, -24(%rbp)	

1
	call Main.func	
	movq $0, %rax	

1
.Dictionary.get_3:	
	popq %r13	

1
	movq %rcx, %rax	
	movq -80(%rbp), %rax	

1
	movq $3000, %reg0	
	movq %reg0, 16(%rax)	

1
	subl %reg0, %eax	
	movq %reg2, -152(%rbp)	

1
	movq %rdi, 448(%rax)	
	movq $3000, %rdi	

1
	movq 120(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	jmp .Matrix.set_33	
.Matrix.set_32:	

1
	movq %r14, %rcx	
	subl %ecx, %reg3	

1
	negl %reg0	
	movq $58688, %reg1	

1
	.globl ListNode.setVal	
	.type ListNode.setVal, @function	

1
	movq $2234, %rax	
	movq 0(%rbx), %reg2	

1
	movq %rbx, %rax	
	subl %eax, %ecx	

1
.Matrix.get_37:	
.Matrix.get_35:	

1
	movq %reg0, -16(%rbp)	
	movq $64947, %reg0	

1
	addl %ecx, %reg1	
	movq $12, %rcx	

1
	addl %reg0, %eax	
	movq $12, %reg2	

1
	movq $32, %rsi	
	movq $.string4_l, %rdi	

1
	movq %r13, %rsi	
	addl %reg2, %eax	

1
.Cons.print_list_1:	
	movq 16(%reg0), %reg1	

1
	imull %reg0	
	movq -80(%rbp), %rcx	

1
	movq $2730, %rax	
	movq -8(%rbp), %rdx	

1
	movq %rdi, %rbx	
	movq $10, %r12	

1
	movq $.string6, %rax	
	movq %rax, 8(%rbx)	

1
	movq -96(%rbp), %rcx	
	movq %reg2, %rax	

1
	.quad .string4	
	.quad 0	

1
	movq 360(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	movq %reg0, 408(%rax)	
	movq $0, %reg0	

1
	subl %esi, %edi	
	subl %edi, %eax	

1
	movq %rbx, 8(%reg1)	
.Main.main_38:	

1
	movq $Complex_vtable, 0(%rax)	
	movq $0, %reg1	

1
.Matrix.get_65:	
.Matrix.get_52:	

1
	movq 160(%reg0), %reg0	
	jmp .Matrix.get_50	

1
	je .Main.out_whatever_4	
	cmpq $Int_vtable, 0(%reg0)	

1
	subl %eax, %esi	
	movq -152(%rbp), %reg3	

1
	jge .Main.main_7	
	movq $.string8, %r12	

1
	movq $0, %reg0	
	movq %reg0, 272(%rax)	

1
	movq -176(%rbp), %rax	
	subl %reg2, %reg3	

1
	subl %ecx, %eax	
	negl %eax	

1
	movq $1, %r13	
	movq $.string7, %reg1	

1
	addl %reg0, %reg1	
	movq %rbx, %rcx	

1
	movq -168(%rbp), %reg1	
	movq -16(%rbp), %rdi	

1
	negl %esi	
	movq $12, %rcx	

1
	je .Main.main_7	
	cmpq $IO_vtable, 0(%rax)	

1
	movq $3000, %reg0	
	movq %reg0, 72(%reg1)	

1
	movq -16(%rbp), %reg1	
	movq %r13, %rdi	

1
	negl %reg0	
	movq -24(%rbp), %reg2	

1
	movq 112(%r12), %r12	
	movq 16(%reg1), %reg2	

1
	movq %reg0, %reg1	
	movq %reg1, -112(%rbp)	

1
	movq %reg0, %rbx	
	movq %rbx, %rdi	

1
	movq $0, %reg0	
	movq %reg0, 464(%reg1)	

1
	movq -96(%rbp), %reg1	
	subl %eax, %reg3d	

1
	movq 24(%rbx), %reg1	
	addl %reg2, %eax	

1
	sete %reg0b	
	jne .Matrix.set_1	

1
	movq $.string10, %reg0	
	movq %rbx, %r12	

1
	imull %reg0	
	movq -64(%rbp), %rcx	

1
	movq $53587, %rax	
	movq $6934, %rsi	

1
	movq $1, %r9	
	movq %r8, %reg2	

1
	call *%reg0	
	movq 344(%rbx), %reg0	

1
	call *%reg0	
	movq 256(%rbx), %reg0	

1
Foo.getS:	
	pushq %reg0	

1
	movq -40(%rbp), %reg1	
	subl %reg2, %r8d	

1
	movq %reg0, %reg1	
	jmp .Main.func_2	

1
	movq 8(%rbx), %rax	
	popq %r14	

1
	movq -168(%rbp), %rax	
	movq -16(%rbp), %rdi	

1
	movq $0, %reg0	
	movq %reg0, 512(%rax)	

1
	cmpq $Main_vtable, 0(%rax)	
	je .Main.main_11	

1
	movq $.string7, %rax	
	movq %r12, %rdi	

1
	movq 464(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
.Main.funcwhileb_1:	
	movq %r12, %rax	

1
	je .Main.main_10	
	movq $4, %rbx	

1
	movq $.string21, %r12	
	movq 0(%rbx), %rax	

1
	call *%r13	
	movq %reg1, 16(%rbx)	

1
	testq $1, %rcx	
	je .Main.main_136	

1
	movq -136(%rbp), %rax	
	movq %rcx, %r8	

1
.string1_l:	
	.string "List"	

1
.Main.func_3:	
	popq %r12	

1
	movq -104(%rbp), %rax	
	movq $0, %reg2	

1
	subl %ecx, %reg1	
	movq %rbx, %reg3	

1
	movq -56(%rbp), %reg1	
	movq -40(%rbp), %reg3	

1
	movq $.string7, %rbx	
	movq 0(%reg1), %r12	

1
.Main.main_12:	
	movq %reg0, %rdi	

1
	movq $.string8, %r15	
	movq -8(%rbp), %rdx	

1
	movq 112(%rbx), %rbx	
	movq %reg1, %reg2	

1
	movq 0(%r12), %rax	
	movq 40(%rax), %rax	

1
	call *%reg0	
	movq 96(%reg1), %rax	

1
	movq %reg0, %rax	
	movq $1, %r12	

1
	movq $A2I_vtable, 0(%rax)	
	leave	

1
	movq 8(%reg0), %reg1	
	call Int.new	

1
	movq $14, %rax	
	movq %rax, -56(%rbp)	

1
	addl %edi, %reg1	
	movq $25036, %rdi	

1
.Main.main_129:	
	movq %reg0, %rax	

1
	movq %reg0, %rax	
	movq $6765, %reg0	

1
	movq %reg0, 8(%reg1)	
	movq %reg1, 32(%reg2)	

1
	movq $48391, %rax	
	negl %reg1	

1
	movq -144(%rbp), %rax	
	movq %rbx, %rsi	

1
	movq %r12, %rsi	
	imull %esi	

1
	movq 56(%r12), %r12	
	movq -24(%rbp), %reg2	

1
	movq $12, %reg0	
	movq 0(%rbx), %rax	

1
	movq $21018, %reg0	
	movq %reg1, %rdx	

1
	movq $0, %rax	
	movq %rbx, %reg2	

1
	movq $24923, %rsi	
	imull %reg1	

1
	movq $3000, %rdi	
	movq %rdi, 304(%reg1)	

1
	movq %rax, %rdi	
	movq $5456, %rax	

1
	movq %reg0, %rcx	
	addl %reg2, %esi	

1
	.type Nil.rcons, @function	
Nil.rcons:	

1
	je .Main.main_27	
	movq $13, %rsi	

1
	jne .Matrix.get_30	
	movq 96(%rax), %rax	

1
Nil.rev:	
	pushq %reg0	

1
	testq $1, %reg0	
	je .Main.main_99	

1
Complex.new:	
	pushq %reg0	

1
	movq $0, %rdi	
	movq %rdi, 352(%rax)	

1
	.quad 9	
	.quad Bar.new	

1
	movq %rdi, 728(%reg1)	
	movq $0, %rdi	

1
.Main.main_23:	
	movq $.string8, %rax	

1
	movq %rsp, %reg1	
	movq 16(%reg2), %rax	

1
	cmpq $IO_vtable, 0(%reg0)	
	je .Main.func_6	

1
	subl %eax, %ecx	
	movq $43604, %rax	

1
	call *%reg0	
	movq 184(%rbx), %rax	

1
	testq $1, %reg0	
	jne .Main.main_50	

1
	movq %rax, 8(%reg1)	
	movq %rax, 16(%reg1)	

1
	sete %reg0	
	jne .Matrix.get_54	

1
	movq $55348, %reg0	
	movq %reg0, %rcx	

1
	movq $3000, %reg0	
	movq %reg0, 200(%rax)	

1
	movq -112(%rbp), %rsi	
	movq -104(%rbp), %reg3	

1
	movq $17594, %reg0	
	subl %reg0d, %eax	

1
	je .Main.main_66	
	movq $49, %rsi	

1
	movq $4, %rax	
	cmpl %eax, %reg2	

1
	movq 144(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	jne .Main.main_11	
	movq %reg0, %rax	

1
	movq -160(%rbp), %reg1	
	movq %r8, %reg3	

1
.CellularAutomaton.cell_at_next_evolution_6:	
	movq %r13, %rdi	

1
	imull %reg0d	
	movq $8738, %reg0	

1
	movq 120(%reg0), %reg0	
	movq 16(%reg1), %reg2	

1
	movq 8(%r12), %rax	
	movq 0(%reg2), %reg3	

1
	jne .Main.main_1	
	movq %reg0, %r8	

1
	.quad 7	
name_Int_l:	

1
	movq %reg0, %rsi	
	addl %ecx, %esi	

1
	movq $29181, %rdi	
	negl %reg1	

1
	movq -120(%rbp), %rax	
	movq %reg2, %rsi	

1
	jne .Main.main_19	
	movq $1, %rax	

1
	movq $62331, %rax	
	subl %reg1, %edi	

1
.Main.main_18:	
	movq $1, %rdi	

1
	movq %rsi, %rdi	
	movq $0, %rsi	

1
	testq $1, %r8	
	je .Main.main_65	

1
	movq $.string6, %rbx	
	movq 0(%rax), %reg2	

1
	movq -64(%rbp), %reg1	
	movq %rsi, %reg3	

1
	movq $24, %rsi	
	movq $.string1_l, %reg1	

1
	jne .Main.main_20	
	cmpl $0, %r13d	

1
	movq %rdi, 392(%rax)	
	movq $0, %rdi	

1
	movq %rax, %r14	
.Main.main_16:	

1
	je .Main.main_5	
	movq $.string8, %r12	

1
	movq $1, %reg0	
	movq 8(%reg1), %rdi	

1
	movq $20509, %rax	
	subl %eax, %reg2	

1
.List.insert_1:	
	cmpl $0, 8(%rbx)	

1
	sete %r13b	
	jne .A2I.a2i_5	

1
.Main.main_2:	
	movq %reg0, %r14	

1
	movq %reg0, %rcx	
	movq -152(%rbp), %reg0	

1
	testq $1, %rax	
	je .Main.main_31	

1
	movq $3, %rax	
	jmp .A2I.c2i_8	

1
	call *%rax	
	movq 512(%rbx), %r12	

1
	je .Main.main_78	
	movq $55, %reg0	

1
	movq -40(%rbp), %reg1	
	movq -152(%rbp), %rsi	

1
	jmp .Main.main_12	
.Main.main_12:	

1
	movq %rdi, 544(%rax)	
	movq $0, %rdi	

1
.Main.main_7:	
	movq 0(%rbx), %r12	

1
	movq %rax, %r14	
	movq -32(%rbp), %rax	

1
	sete %reg0	
	jne .Matrix.get_53	

1
	movq 160(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq $1, %rax	
	jmp .CellularAutomaton.cell_at_next_evolution_6	

1
	movq %rdi, %rbx	
.Main.func_2:	

1
	movq $12855, %reg0	
	addl %edi, %eax	

1
	movq %reg0, %reg1	
	movq -120(%rbp), %r9	

1
	movq %reg0, %r13	
.Main.iota_1:	

1
	jmp .Main.main_34	
.Main.main_33:	

1
	movq %reg0, %rax	
	addl %r8d, %reg3	

1
	call String.length	
	movq 0(%reg0), %r13	

1
	movq $38801, %reg0	
	negl %eax	

1
	subl %r11d, %reg1	
	movq %reg2, %r11	

1
.Main.main_70:	
	movq %reg0, %rax	

1
	movq 56(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	movq %reg0, 592(%rax)	
	movq $0, %reg0	

1
	movq %rax, -88(%rbp)	
	movq $11, %rax	

1
	.size Nil.sort, .-Nil.sort	
	.globl Nil.insert	

1
	movq $0, %reg0	
	movq %reg0, 272(%reg1)	

1
	movq %rsi, %reg1	
	movq 8(%rax), %rdi	

1
	idivl %esi	
	movq $27231, %reg1	

1
	movq -56(%rbp), %reg1	
	negl %edi	

1
	movq $25834, %r12	
	imull %r12d	

1
.Main.main_6:	
	movq 8(%rbx), %rdx	

1
	addl %reg0, %reg1	
	movq -96(%rbp), %rsi	

1
	call String.concat	
.A2I.i2a_aux_2:	

1
	movq %rdx, %rbx	
	movq %rcx, %r12	

1
	movq %rax, %r13	
	jmp .CellularAutomaton.cell_at_next_evolution_2	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_44	

1
	.quad Main.main	
	.quad Main.funccase	

1
	subl %reg0, %eax	
	movq $0, %rdi	

1
	movq 32(%rbx), %rax	
	movq 16(%rbx), %reg2	

1
	movq %rdi, %rax	
.Main.main_159:	

1
	movq $.string10, %reg0	
	cmpl $0, %ebx	

1
	testq $1, %rax	
	je .Main.main_140	

1
	je .Main.main_5	
	movq $4, %rsi	

1
	movq $3000, %rdi	
	movq %rdi, 136(%rax)	

1
	je .Main.func_4	
	cmpq $Object_vtable, 0(%reg0)	

1
	je .Main.main_185	
	movq $316, %reg0	

1
	movq $15, %reg0	
	movq $.string3_l, %reg1	

1
	testq $1, %rcx	
	je .Main.main_143	

1
	movq %rdi, %rax	
	movq -64(%rbp), %rax	

1
	movq $2, %rax	
	movq %rax, %r12	

1
	movq $61208, %reg0	
	negl %reg1	

1
	movq 40(%reg0), %reg0	
	movq %r12, %reg2	

1
	call out_error	
.Matrix.get_66:	

1
	movq %reg0, 40(%rbx)	
	cmpl %edi, %reg3	

1
	call *%r12	
	movq 624(%reg1), %r12	

1
	jmp .A2I.c2i_20	
.A2I.c2i_19:	

1
	movq $0, %reg0	
	movq %reg0, 528(%rax)	

1
	movq -32(%rbp), %reg1	
	movq $0, %rcx	

1
	movq %reg0, 472(%rax)	
	movq $3000, %reg0	

1
	movq -72(%rbp), %reg1	
	imull %ecx	

1
	movq $.string8, %rax	
	movq $.string9, %r15	

1
	call *%reg0	
	movq %reg0, 64(%rbx)	

1
	movq $.string7, %rdi	
	movq %reg1, %reg2	

1
.Matrix.set_2:	
	movq $2, %r8	

1
	movq 368(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	call *%rax	
	movq $.string21, %reg1	

1
	movq -96(%rbp), %rax	
	addl %edi, %eax	

1
.Main.main_3:	
	cmpl $0, %reg0	

1
	movq $3000, %reg0	
	movq %reg0, 504(%rax)	

1
	subl %reg0, %reg1	
	cmpl %reg1, %reg2	

1
	movq $61139, %reg0	
	movq 0(%reg1), %r12	

1
	movq $.string13, %reg0	
	movq 0(%rbx), %rax	

1
	movq -152(%rbp), %rax	
	addl %eax, %esi	

1
	movq -64(%rbp), %rax	
	addl %reg2, %eax	

1
	movq %reg0, %reg1	
	movq $32, %reg2	

1
	call *%reg0	
	jmp .Main.funcifi_2	

1
	movq $25036, %rdi	
	subl %edi, %eax	

1
	movq -160(%rbp), %rax	
	addl %reg2, %reg3	

1
	movq $3000, %reg0	
	movq %reg0, 40(%reg1)	

1
	subl %edi, %eax	
	movq %rax, -96(%rbp)	

1
.A2I.a2i_aux_1:	
	movq %r13, %reg1	

1
	movq $3000, %rdi	
	movq %rdi, 680(%rax)	

1
	testq $1, %rax	
	je .Razz.new_1	

1
	movq %reg0, 344(%reg1)	
	movq $0, %reg0	

1
	je .Main.main_103	
	movq -16(%rbp), %rax	

1
	je .Main.new_2	
	cmpq $Object_vtable, 0(%rbx)	

1
	jne .Main.main_57	
	movq -48(%rbp), %rax	

1
	testq $1, %rsi	
	je .Main.main_179	

1
	call Bar.new	
	jmp .Foo.new_6	

1
Foo.x:	
	pushq %rbp	

1
	jmp .Main.print_list_3	
.Main.print_list_2:	

1
	movq $25, %rax	
	movq 0(%rbx), %r12	

1
	movq 112(%r12), %r12	
	movq %reg1, %rdi	

1
	movq -16(%rbp), %rcx	
	imull %reg2	

1
	call out_error	
.Cons.sort_1:	

1
	movq $17594, %reg0	
	subl %reg0d, %reg1	

1
	subl %ebx, %eax	
	movq $61208, %reg2	

1
	je .Main.main_80	
	movq $19, %reg0	

1
	sete %cl	
	jne .Matrix.get_30	

1
.Main.main_11:	
	movq $0, %reg0	

1
	movq 8(%reg0), %rax	
	popq %r12	

1
	movq %r14, %reg1	
	addl %reg2, %ecx	

1
	movq $18, %reg0	
	movq %reg0, -112(%rbp)	

1
	call *%r12	
	movq %r13, %reg2	

1
	movq %reg0, %r12	
	cmpl $0, %eax	

1
	movq -56(%rbp), %rdi	
	movq -56(%rbp), %reg2	

1
	movq -40(%rbp), %reg1	
	movq %r13, %reg3	

1
	movq %rdi, 400(%reg1)	
	movq $0, %rdi	

1
	movq $.string12, %reg0	
	movq 0(%reg1), %reg2	

1
	movq $60323, %rsi	
	imull %reg1	

1
	movq $16029, %reg0	
	movq $19302, %reg1	

1
	call *%r12	
	jmp .Main.main_38	

1
	movq -176(%rbp), %rax	
	addl %reg2, %edi	

1
	call *%reg0	
	movq 144(%reg1), %reg0	

1
	je .Main.main_10	
	movq $153, %rsi	

1
	movq %rsi, %r12	
	movq 16(%reg2), %rax	

1
	movq $0, %rdi	
	movq %rdi, 368(%rax)	

1
	je .Main.out_whatever_2	
	cmpq $Bool_vtable, 0(%reg0)	

1
	movq $0, %reg0	
	movq %reg0, 584(%rax)	

1
	movq %reg0, -16(%rbp)	
	movq $57869, -24(%rbp)	

1
	subl %eax, %edi	
	movq -32(%rbp), %reg3	

1
	testq $1, %rcx	
	je .Main.main_100	

1
	movq $24, %rsi	
	movq $.string1_l, %rdi	

1
	addl %eax, %esi	
	movq -128(%rbp), %rax	

1
	addl %esi, %edi	
	movq %reg2, 16(%reg3)	

1
	movq -24(%rbp), %rdx	
	movq %rdx, -96(%rbp)	

1
	.quad Object.type_name	
	.quad ListNode.init	

1
	movq -32(%rbp), %reg1	
	cmpl %esi, %reg3	

1
	je .Main.main_162	
	movq -32(%rbp), %reg1	

1
	.globl Complex.reflect_Y	
	.type Complex.reflect_Y, @function	

1
	subl %reg0, %reg1	
	movq $61208, %rbx	

1
	movq %reg0, 664(%rax)	
	movq $0, %reg0	

1
.Main.main_31:	
	movq %reg0, %reg1	

1
	idivl %reg0	
.Matrix.set_63:	

1
	negl %eax	
	movq $11440, %reg1	

1
	movq -56(%rbp), %rsi	
	addl %esi, %reg3	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_31	

1
	movq -96(%rbp), %rsi	
	movq -48(%rbp), %reg3	

1
	movq -160(%rbp), %reg1	
	movq -24(%rbp), %r8	

1
	jmp .DicNode.get_5	
.DicNode.get_3:	

1
	jg .Main.main_84	
	movq -168(%rbp), %reg1	

1
	movq 16(%rbx), %rax	
	movq %r12, %rdi	

1
	movq $1, %r12	
	call IO.new	

1
	je .Main.main_100	
	movq $64, %rsi	

1
	movq %rdi, 352(%rax)	
	movq $0, %rdi	

1
	movq 664(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq $9886, %reg0	
	imull %ebx	

1
	movq %rdi, %rax	
	jmp .Main.main_85	

1
	movq 104(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	call *%reg0	
	movq 368(%rbx), %reg2	

1
	movq $18781, %rcx	
	imull %reg1	

1
.Main.main_44:	
	jmp .Main.main_45	

1
	movq $15234, %reg0	
	movq 0(%reg1), %reg2	

1
	ret	
	.size DicNode.getCount, .-DicNode.getCount	

1
	movq 8(%reg0), %rax	
	movq %reg2, %r12	

1
	movq $6765, %rdi	
	subl %reg1, %reg2	

1
	movq $31515, %rax	
	negl %reg1	

1
.string9_l:	
	.string "continue"	

1
	movq $2147483647, %rax	
	movq $4, %reg1	

1
	movq %rdi, 488(%rax)	
	movq $0, %rdi	

1
	je .Main.main_20	
	movq $10, %reg0	

1
	testq $1, %r8	
	je .Main.main_180	

1
	movq %reg0, 8(%reg1)	
	movq 0(%rbx), %reg1	

1
	imull %ecx	
	movq $47988, %reg1	

1
	subl %eax, %r9d	
	movq $12, %reg2	

1
.Main.main_3:	
	movq -80(%rbp), %reg1	

1
	.size A2I.c2i, .-A2I.c2i	
	.globl A2I.i2c	

1
	movq 16(%reg0), %reg1	
	subl %esi, %edi	

1
	movq %r14, %rax	
	imull %edi	

1
	movq $0, %rdi	
	movq %rdi, 512(%rax)	

1
	je .Main.func_2	
	cmpq $String_vtable, 0(%reg0)	

1
	addl %reg0, %r10d	
	movq $7429, %rax	

1
	subl %reg0, %esi	
	movq -152(%rbp), %rax	

1
	je .Main.main_43	
	movq $15, %rsi	

1
	movq -96(%rbp), %reg1	
	movq $0, %r8	

1
	movq 200(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	movq 56(%reg0), %reg0	
	movq 24(%reg1), %reg2	

1
	movq $15, %rsi	
	movq $.string3_l, %rdi	

1
	jmp .Main.main_168	
.Main.main_93:	

1
	idivl %ebx	
	movq %rax, %reg2	

1
	movq %r13, %reg1	
	movq $0, %rcx	

1
.Main.main_170:	
	cdq	

1
	je .Main.main_9	
	movq $153, %reg0	

1
	movq 8(%reg0), %rdi	
	movq %rbx, %reg3	

1
	.quad 1	
	.quad CellularAutomaton.new	

1
	movq 136(%reg0), %reg0	
	movq 8(%reg1), %reg2	

1
	subl %edi, %reg1	
	movq -16(%rbp), %reg3	

1
	je .Main.main_75	
	movq $19, %rsi	

1
	je .Main.main_68	
	movq $17, %reg0	

1
	call *%reg0	
	negl %reg1	

1
	movq $14802, %rax	
	movq $39506, %reg1	

1
	movq $3000, %rdi	
	movq %rdi, 272(%rax)	

1
	testq $1, %rcx	
	je .Main.main_4	

1
ListNode.insert:	
	pushq %reg0	

1
	movq -88(%rbp), %rsi	
	negl %reg2	

1
	movq 104(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
.Main.main_11:	
	movq 0(%reg0), %r13	

1
	movq %reg0, -64(%rbp)	
	movq $14, %reg0	

1
.A2I.a2i_aux_1:	
	movq %reg0, %reg1	

1
	testq $1, %reg0	
	je .ListNode.insert_1	

1
	call *%reg0	
	movq 288(%reg1), %reg2	

1
.Main.new_4:	
	movq 16(%reg0), %rax	

1
	movq $.string7, %reg0	
	movq %reg1, %r12	

1
	movq 664(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq %reg0, %r12	
	movq $2, %reg0	

1
.Main.func_2:	
	movq 0(%rax), %r12	

1
	movq %reg0, -96(%rbp)	
	movq -8(%rbp), %reg0	

1
	movq -128(%rbp), %reg1	
	negl %edi	

1
Foo.getS:	
	pushq %rbp	

1
	call *%reg0	
	movq 416(%rbx), %reg0	

1
	movq $0, %rax	
	movq $1, %r14	

1
	movq $16, %rax	
	movq %rax, -40(%rbp)	

1
	movq 184(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
.Razz.new_11:	
	movq %reg0, 32(%reg1)	

1
	movq %rdi, 264(%reg1)	
	movq $0, %rdi	

1
	addl %reg0, %r8d	
	movq %rcx, %reg3	

1
	movq 88(%rbx), %rax	
	movq 0(%rbx), %reg2	

1
	call *%r12	
	movq 328(%rbx), %reg2	

1
	movq -56(%rbp), %reg1	
	movq $0, %r8	

1
.Main.main_12:	
	movq %reg0, %rax	

1
	idivl %reg0	
	movq -168(%rbp), %r8	

1
	movq $180, %reg0	
	movq $.string5_l, %rdi	

1
	call *%reg0	
	cmpl $0, %r14d	

1
.Matrix.get_24:	
.Matrix.get_22:	

1
	call *%r12	
	movq 504(%reg1), %r12	

1
	movq $3000, %reg0	
	movq %reg0, 480(%reg1)	

1
	addl %ecx, %eax	
	movq %rbx, %rcx	

1
	movq $10, %rdi	
	movq %reg1, %rax	

1
.Main.main_7:	
	movq 0(%rax), %reg1	

1
	je .Main.main_4	
	movq 0(%rbx), %rax	

1
	call *%rax	
	movq %r14, %reg2	

1
	jne .Main.main_62	
	cmpl $0, %r13d	

1
	subl %eax, %esi	
	movq $34320, %reg2	

1
	.size ListNode.push, .-ListNode.push	
	.globl ListNode.setVal	

1
.Main.main_113:	
	cdq	

1
	negl %eax	
	movq %rax, %r11	

1
	negl %edi	
	movq %r12, %reg2	

1
	movq %rbx, %reg1	
	jmp .Foo.new_11	

1
	.quad List.head	
	.quad List.tail	

1
	je .Main.main_24	
	movq $35, %rsi	

1
	movq $31786, %rdi	
	movq %rdi, %reg1	

1
	movq $3000, %reg0	
	movq %reg0, 608(%reg1)	

1
	movq %rdi, %reg1	
	movq $13, %rbx	

1
	movq 16(%rax), %reg1	
	cmpl %esi, %reg3	

1
	movq %rdi, 512(%reg1)	
	movq $0, %rdi	

1
	testq $1, %rax	
	je .Main.main_92	

1
	subq $184, %rsp	
	pushq %reg1	

1
	movq $35237, %reg0	
	subl %reg0d, %eax	

1
	call *%r12	
	movq %r13, %rdi	

1
	movq %rdi, %rax	
	cmpl %esi, %reg3	

1
	subl %edi, %eax	
	movq %rbx, %reg3	

1
	subl %reg0, %ecx	
	movq -96(%rbp), %rax	

1
.Main.main_81:	
.Main.main_79:	

1
	movq %reg0, %reg1	
	movq $46509, %reg2	

1
	jne .Matrix.set_17	
	movq %reg0, 56(%reg1)	

1
	movq $61731, %rsi	
	movq %rsi, %rcx	

1
	movq %rcx, %reg1	
	movq -88(%rbp), %reg1	

1
	movq $1, %r12	
	movq $.string6, %reg1	

1
.Main.main_126:	
	movq %r13, %rax	

1
	movq $2, %reg0	
	movq %r8, %rcx	

1
	movq $6, %rcx	
	movq %reg1, %reg2	

1
	movq $62343, %r12	
	movq 0(%rbx), %reg2	

1
	movq %rax, %reg1	
	call Matrix.new	

1
	movq %reg0, %rdi	
	subl %edi, %esi	

1
	movq -40(%rbp), %rax	
	addl %reg2, %reg3	

1
	movq $12660, %reg0	
	negl %esi	

1
	movq -24(%rbp), %reg1	
	movq %reg1, -96(%rbp)	

1
	movq %reg0, %rax	
	addl %reg2d, %reg3	

1
	movq $6, %rcx	
	movq %rdi, %rsi	

1
	movq -120(%rbp), %reg1	
	movq -64(%rbp), %rcx	

1
	movq %reg0, %reg1	
	jmp .Main.main_52	

1
	movq $3, %reg0	
	movq %r8, %rcx	

1
	.quad Foo.setX	
Bar_vtable:	

1
	je .Main.main_21	
	movq $.string7, %rbx	

1
	movq %rsi, %reg1	
.Main.funcwhilei_1:	

1
	jne .Matrix.set_28	
	movq %rdi, 88(%rax)	

1
	movq %rdi, 160(%reg1)	
	movq %rdi, %reg1	

1
	movq -88(%rbp), %rax	
	subl %reg2, %ecx	

1
	je .Bar.new_15	
.Bar.new_15:	

1
	call *%r12	
	movq 80(%rbx), %rax	

1
	movq $12, %rdi	
	movq -168(%rbp), %rax	

1
	testq $1, %rdi	
	je .Matrix.set_25	

1
.Main.main_9:	
	movq $10280, %r12	

1
	call *%rax	
	movq 296(%reg1), %reg2	

1
	call *%reg0	
	movq $11, %r14	

1
.Main.main_64:	
.Main.main_65:	

1
	movq $61208, %rbx	
	negl %ebx	

1
.Main.main_13:	
	movq 0(%r12), %rax	

1
	je .Main.main_18	
	movq $7, %reg0	

1
	movq %reg0, %rax	
	movq $20384, %reg0	

1
	jne .A2I.i2c_7	
	movq $.string10, %rax	

1
	movq %reg0, %r14	
.Main.main_5:	

1
	movq $.string7, %rax	
	movq 8(%rbx), %reg2	

1
	movq $8997, %reg0	
	movq $30996, %reg1	

1
	movq $21018, %rax	
	movq -8(%rbp), %rdx	

1
	subl %eax, %reg1	
	movq -184(%rbp), %reg3	

1
	movq $18046, %reg0	
	movq $29790, %rsi	

1
	movq $7429, %rax	
	negl %eax	

1
.Main.main_11:	
	popq %r14	

1
	movq $11513, %rdi	
	movq %rdi, %reg1	

1
	je .Main.main_184	
	movq $316, %reg0	

1
	movq -184(%rbp), %rcx	
	addl %reg2, %reg3	

1
	movq $2469, %reg0	
	movq $0, %reg1	

1
	subl %eax, %edi	
	movq -56(%rbp), %reg3	

1
	movq %rbx, %rax	
	jmp .Razz.new_17	

1
	movq $3000, %reg0	
	movq %reg0, 496(%rax)	

1
	movq %rsi, %rax	
	subl %eax, %reg3	

1
	movq %reg0, 8(%rbx)	
	jmp .List.insert_3	

1
	subl %reg0, %reg1	
	movq %reg2, -112(%rbp)	

1
	jmp .Matrix.get_31	
.Matrix.get_30:	

1
	movq %reg0, %rbx	
	movq $5880, %reg0	

1
	movq $.string9, %rax	
.CellularAutomaton.cell_at_next_evolution_8:	

1
	movq $19302, %reg0	
	movq %reg0, %rcx	

1
	movq %rax, %r8	
	movq -168(%rbp), %rax	

1
	movq -16(%rbp), %reg1	
	subl %eax, %ecx	

1
	subl %ecx, %reg1	
	movq -152(%rbp), %reg3	

1
	movq -40(%rbp), %rax	
	subl %eax, %reg3d	

1
	movq %reg0, %r13	
	movq %r12, %rax	

1
	movq $3326, %rsi	
	movq %rsi, %reg1	

1
	movq $3000, %rdi	
	movq %rdi, 456(%reg1)	

1
	movq %reg0, 584(%rax)	
	movq $3000, %reg0	

1
	movq -152(%rbp), %rax	
	movq %rsi, %reg3	

1
	jne .Main.main_17	
	movq $1, %rax	

1
	movq $64947, %rax	
	movq %rax, %reg1	

1
	movq $1317, %rax	
	movq $47218, %reg1	

1
	call *%r12	
	movq -136(%rbp), %rax	

1
	negl %reg0	
	movq $11440, %rdi	

1
.string12_l:	
	.string "5"	

1
	movq $11, %r8	
	movq $0, %reg1	

1
	idivl %reg0	
	movq -72(%rbp), %reg2	

1
.Main.main_5:	
	movq 0(%reg0), %rax	

1
.Main.main_138:	
	movq -168(%rbp), %reg1	

1
	movq $0, %reg0	
	movq %reg0, 552(%reg1)	

1
	call *%reg0	
	movq 392(%reg1), %r12	

1
	addl %edi, %eax	
	movq %reg2, 40(%reg3)	

1
	movq %reg0, 480(%reg1)	
	movq $0, %reg0	

1
	testq $1, %reg0	
	je .Main.main_111	

1
	call *%reg0	
	movq $name_Bool, %reg1	

1
.CellularAutomaton.evolve_2:	
	movq %r14, 8(%rbx)	

1
	testq $1, %rdi	
	je .Main.main_74	

1
	je .Main.main_71	
	movq $19, %rsi	

1
.Main.main_2:	
	cmpl %reg0, %esi	

1
	movq -128(%rbp), %reg1	
	addl %eax, %edi	

1
	ret	
	.size ListNode.push, .-ListNode.push	

1
	.type Main.funccaseb, @function	
Main.funccaseb:	

1
	ret	
	.size Foo.setS, .-Foo.setS	

1
	movq $36, %reg0	
	movq $.string2_l, %rdi	

1
	je .Main.main_5	
	movq -168(%rbp), %rax	

1
.Matrix.elMul_1:	
	movq $5, %reg0	

1
.Matrix.set_54:	
	movq $2, %reg0	

1
	movq %rdx, -104(%rbp)	
	movq -8(%rbp), %rdx	

1
	movq $.string12, %reg0	
	movq %rbx, %reg2	

1
Main.funcwhilei:	
	pushq %reg0	

1
	movq %rbx, %reg1	
	addl %eax, %edi	

1
	idivl %reg0	
	movq $53595, %reg1	

1
	imull %esi	
	movq $53667, %reg1	

1
	movq $10809, %rax	
	subl %reg1, %r8d	

1
	idivl %r12d	
	movq %reg1, %rbx	

1
	movq $2, %reg0	
	movq %rbx, %rdi	

1
	call String.length	
	movq $name_Int, %reg0	

1
.Matrix.get_48:	
.Matrix.get_46:	

1
	call *%rbx	
	movq $.string11, %reg1	

1
	movq $0, %rdi	
	movq %rdi, 256(%rax)	

1
	movq $5, %r12	
	movq 0(%reg1), %rax	

1
	movq %reg0, 8(%reg1)	
	movq $2, %r12	

1
.Main.func_2:	
	movq $0, %rax	

1
	movq 32(%reg0), %reg0	
	movq %r13, %rdi	

1
	.quad String_vtable	
	.quad .string18_l	

1
	je .Main.main_1	
	movq $0, %reg0	

1
	testq $1, %r10	
	je .Main.main_37	

1
	movq %reg0, 8(%reg1)	
	movq 8(%reg1), %reg2	

1
	movq -184(%rbp), %rcx	
	subl %reg2, %r8d	

1
	je .Main.main_105	
	movq $64, %reg0	

1
	addl %reg0, %ecx	
	movq $46874, %rax	

1
	je .Main.main_96	
	movq $64, %reg0	

1
	movq %reg0, 488(%rax)	
	movq $3000, %reg0	

1
	movq %reg0, %reg1	
	jmp .Matrix.set_18	

1
	jne .Matrix.get_28	
	movq 88(%rax), %rax	

1
	movq %reg0, %reg1	
	movq $1, %r9	

1
	movq -48(%rbp), %reg1	
	movq -72(%rbp), %reg3	

1
	.quad Foo.doh	
String_vtable:	

1
	setle %dil	
	jg .Main.main_37	

1
	movq -136(%rbp), %rax	
	addl %reg2, %reg3	

1
	movq %reg0, %reg1	
	movq %reg1, 56(%rbx)	

1
.Main.main_38:	
	jmp .Main.main_39	

1
	je .Main.main_77	
	movq $52, %rsi	

1
Main.out_whatever:	
	pushq %rbp	

1
	movq $3000, %rdi	
	movq %rdi, 448(%reg1)	

1
	jne .Matrix.set_47	
	movq %rdi, 152(%rax)	

1
	movq -96(%rbp), %reg1	
	movq -144(%rbp), %rax	

1
	jge .Cons.insert_1	
	call Cons.new	

1
	jg .Matrix.mul_4	
	movq -8(%rbp), %rdx	

1
	movq $2234, %rax	
	movq 0(%rbx), %r12	

1
	movq $3233, %reg0	
	movq $26083, %reg1	

1
	call *%reg0	
	movq 128(%reg1), %reg2	

1
	movq $54460, %reg0	
	addl %eax, %edi	

1
	movq %rax, %reg1	
	jmp .Matrix.mul_1	

1
	movq $19892, %reg0	
	imull %reg0d	

1
	movq %reg0, 152(%reg1)	
	movq $3000, %reg0	

1
	.string "Razz"	
.string2:	

1
	movq -144(%rbp), %rax	
	movq -160(%rbp), %reg3	

1
	movq -184(%rbp), %reg1	
	addl %reg2, %esi	

1
	addl %ecx, %eax	
	movq %rbx, %reg3	

1
	idivl %reg0	
	movq -96(%rbp), %rcx	

1
	movq -144(%rbp), %reg1	
	negl %eax	

1
	.quad 2	
	.quad Foo.new	

1
	imull %reg0	
	movq $43617, %rsi	

1
	movq $128, %rsi	
	movq $.string5_l, %reg1	

1
	ret	
	.size Nil.insert, .-Nil.insert	

1
	subl %eax, %esi	
	movq -16(%rbp), %rcx	

1
	subq $176, %reg0	
	pushq %reg1	

1
	movq -64(%rbp), %r9	
	imull %r9d	

1
.string8_l:	
	.string "X"	

1
	movq %reg0, 24(%reg1)	
	movq 16(%reg1), %reg0	

1
	movq $3000, %rdi	
	movq %rdi, 216(%reg1)	

1
	movq %reg0, %reg1	
	subq $136, %reg0	

1
	movq 16(%rax), %rdi	
	cmpl %reg2, %reg3	

1
	movq $1317, %reg0	
	movq $47218, %rcx	

1
.Main.main_86:	
	movq %r15, %reg1	

1
	.quad 1	
	.quad Dictionary.new	

1
	movq $32716, %reg0	
	movq $49288, %reg1	

1
	movq $0, %reg0	
	movq %reg0, 472(%rax)	

1
	movq %rsi, %rdi	
	movq 8(%rdi), %rbx	

1
	jne .Main.main_134	
	movq -40(%rbp), %rax	

1
	call *%rax	
	movq %r14, %rax	

1
	ret	
	.size Bar.func2, .-Bar.func2	

1
	.quad Main.getFoo	
	.quad Main.main	

1
	movq %rdi, 64(%rax)	
	movq %rdi, %rax	

1
	movq $10, %reg0	
	movq %r14, %reg2	

1
	je .Main.main_12	
	movq $154, %rsi	

1
.A2I.a2i_2:	
	popq %r13	

1
	movq -32(%rbp), %reg1	
	negl %eax	

1
	setl %reg0l	
	jge .Main.fib_1	

1
	movq $52033, %rax	
	subl %eax, %esi	

1
	movq %rdi, %rax	
	movq -80(%rbp), %rsi	

1
	je .Main.main_129	
	movq %reg0, %reg1	

1
	movq %reg0, %reg1	
.Main.main_161:	

1
.Main.main_8:	
	movq $0, %reg0	

1
	.string "abc"	
.string6:	

1
Main.funccasei:	
	pushq %rbp	

1
	movq %rdi, 16(%reg1)	
	movq 24(%reg1), %reg2	

1
	cmpq $Razz_vtable, 0(%reg0)	
	je .Bazz.new_3	

1
	.size List.cons, .-List.cons	
	.globl List.car	

1
	.type Bazz.doh, @function	
Bazz.doh:	

1
	movq %reg0, %reg1	
	movq $1823, %reg0	

1
	movq %rdi, -32(%rbp)	
	movq $14461, %rdi	

1
	movq -128(%rbp), %rax	
	movq $0, %r11	

1
	movq %rdi, %rax	
	jmp .Main.main_46	

1
.Main.main_9:	
	movq $.string8, %reg0	

1
	je .Main.main_4	
	cmpl $0, 8(%rbx)	

1
	movq %r11, %reg1	
	subl %reg1d, %eax	

1
	movq $.string8, %reg0	
	cmpl $0, %reg1	

1
	movq %rdi, %reg1	
	jmp .Main.main_67	

1
	subl %reg0, %reg1	
	movq $33866, %rdi	

1
	je .Bazz.new_1	
	movq $39, %reg0	

1
	movq $20908, %rsi	
	imull %esi	

1
	addl %edi, %reg1	
	movq $4, %rdi	

1
	movq %r12, %reg1	
	movq %r8, %reg3	

1
	addl %eax, %edi	
	movq $37073, %rax	

1
	movq -64(%rbp), %rdi	
	movq -56(%rbp), %rax	

1
	movq -112(%rbp), %reg1	
	movq $0, %r11	

1
	movq $.string10, %reg0	
	cmpl $0, %reg1	

1
	movq -40(%rbp), %rax	
	cmpl %reg2, %esi	

1
	je .Main.main_7	
	movq $138, %rsi	

1
	movq $12, %rsi	
	movq -152(%rbp), %rax	

1
	negl %reg0	
	movq -24(%rbp), %rsi	

1
	movq %reg0, %rdi	
	movq 8(%reg0), %rsi	

1
.Main.main_1:	
	movq $.string9, %reg0	

1
	movq 128(%reg0), %reg0	
	movq %rax, %rdi	

1
	movq %reg0, %reg1	
	jmp .Main.main_89	

1
	movq $.string11, %rax	
	movq 0(%rbx), %reg2	

1
	imull %reg0	
	movq %reg1, -56(%rbp)	

1
	movq 8(%rax), %rdi	
	negl %edi	

1
	movq $38208, %reg0	
	imull %reg0d	

1
	movq 8(%r12), %rax	
	movq 0(%rbx), %r13	

1
	je .Main.main_93	
	movq %rbx, %rax	

1
	jne .Main.main_42	
	movq $1, %rax	

1
.Main.main_192:	
	popq %reg0	

1
	movq $.string7, %reg0	
	movq %reg0, 24(%reg1)	

1
	call *%reg0	
	movq 584(%rbx), %reg0	

1
	movq $0, %r13	
	movq $0, %reg1	

1
.Matrix.get_55:	
	jmp .Matrix.get_65	

1
.Main.main_112:	
	cdq	

1
	movq $58, %reg0	
	movq $.string3_l, %rdi	

1
	movq $24092, %reg0	
	movq 0(%rbx), %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 48(%rax)	

1
	jge .Main.main_13	
	movq -56(%rbp), %rax	

1
	cmpl %ebx, %r12d	
	sete %bl	

1
	movq 24(%reg0), %reg1	
	cmpl $0, %eax	

1
	call *%reg0	
.Cons.insert_3:	

1
.Main.funcifb_1:	
	movq $0, %rbx	

1
	ret	
	.size Baz.main, .-Baz.main	

1
	jne .A2I.a2i_5	
	movq $1, %reg0	

1
	je .Main.main_22	
	cmpq $Object_vtable, 0(%reg0)	

1
	.size Cons.head, .-Cons.head	
	.globl Cons.tail	

1
	movq $2147483647, %rax	
	movq $2, %rdi	

1
	movq %rdi, 232(%rax)	
	movq $3000, %rdi	

1
	movq $3850, %rdi	
	movq %rdi, %rsi	

1
	sete %reg0	
	jne .A2I.i2c_13	

1
	movq -64(%rbp), %r9	
	addl %r9d, %eax	

1
	call getmem	
	movq $Bazz_vtable, 0(%reg0)	

1
	movq %reg0, %rdi	
	movq 8(%rdi), %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 376(%reg1)	

1
.Matrix.get_50:	
.Matrix.get_48:	

1
	.quad Complex.reflect_X	
	.quad Complex.reflect_Y	

1
	jmp .Matrix.get_33	
.Matrix.get_32:	

1
	movq $.string7, %reg0	
	movq 8(%reg1), %rdi	

1
	jg .Main.main_127	
	movq %reg0, %rax	

1
	movq $604, -24(%rbp)	
	movq $21813, %reg1	

1
	movq 112(%reg0), %reg0	
	movq 16(%reg1), %rdi	

1
	subl %edi, %reg1	
	movq %r13, %rdi	

1
.Main.main_94:	
	movq %r15, %reg1	

1
	imull %edi	
	movq -136(%rbp), %rdi	

1
	movq 104(%r12), %r12	
	movq %reg1, %reg2	

1
	je .Main.main_4	
	movq $6, %rsi	

1
	jne .Matrix.set_2	
	movq %reg0, 8(%rax)	

1
	movq $3000, %rdi	
	movq %rdi, 40(%reg1)	

1
	jne .Main.main_11	
	movq %reg0, %reg1	

1
.Main.main_1:	
	movq $52, %rax	

1
	movq $18046, %rdi	
	movq $29790, %reg1	

1
	movq %reg0, 64(%reg1)	
	movq 0(%reg1), %reg0	

1
	movq $3000, %rdi	
	movq %rdi, 536(%reg1)	

1
.Main.main_11:	
	movq -128(%rbp), %reg1	

1
	movq 24(%rbx), %reg1	
	sete %reg2	

1
	movq %reg0, 8(%rax)	
	movq 0(%reg2), %rax	

1
	call *%rbx	
.Main.main_4:	

1
	je .Main.main_117	
	movq %reg0, %reg1	

1
.Main.funccase_5:	
	popq %reg0	

1
	je .Main.main_5	
	cmpq $Object_vtable, 0(%rax)	

1
.Main.main_17:	
	movq $.string8, %rax	

1
	movq %reg0, %r12	
	movq 8(%reg2), %r13	

1
	call *%reg0	
	movq -136(%rbp), %rax	

1
	movq 512(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	idivl %r12d	
	movq %rax, %rbx	

1
	imull %reg0d	
	movq %r14, %reg0	

1
	movq -32(%rbp), %reg1	
	movq -152(%rbp), %reg3	

1
	addl %eax, %reg1	
	movq $14546, %reg2	

1
	.string "I\\n"	
.string7:	

1
	movq $61695, %reg0	
	movq $50213, %rdi	

1
	movq $3000, %rdi	
	movq %rdi, 432(%rax)	

1
	movq %reg0, %r12	
	movq 8(%reg2), %rbx	

1
	call *%r13	
	movq $324, %r13	

1
	movq %r14, %rsi	
	call *%r13	

1
	movq $1, %r13	
	movq $.string6, %reg1	

1
	movq $empty_string, %rdi	
	movq %rax, %reg2	

1
	je .Main.main_5	
	movq $14, %rsi	

1
	ret	
	.size CellularAutomaton.init, .-CellularAutomaton.init	

1
	movq %r15, %reg1	
	movq -96(%rbp), %rdi	

1
	movq %rax, %reg1	
	movq $50347, %rax	

1
	addl %reg0, %reg1	
	movq %rax, -24(%rbp)	

1
	.quad List.isNil	
	.quad List.cons	

1
	pushq %reg0	
	movq $24, %reg1	

1
	negl %eax	
	movq %r12, %rsi	

1
	movq %rdi, 288(%reg1)	
	movq $3000, %rdi	

1
	movq %rdi, %reg1	
.Main.main_158:	

1
	movq $.string6, %rax	
	movq %reg1, %rdi	

1
	movq $49, %reg0	
	movq $.string3_l, %reg1	

1
	je .Main.new_3	
	cmpq $Bool_vtable, 0(%reg0)	

1
	movq %reg0, 200(%reg1)	
	movq %reg0, %reg1	

1
	call out_error	
.Main.main_126:	

1
	testq $1, %r8	
	je .Main.main_6	

1
	movq %rdi, %reg1	
	jmp .Main.main_60	

1
	je .Main.main_16	
	cmpq $Int_vtable, 0(%rdi)	

1
	sete %reg0	
	jne .Matrix.get_32	

1
	movq 40(%rax), %rax	
	movq %r12, %rdi	

1
	movq 8(%rax), %rdi	
	cmpl $0, %reg2	

1
	cmpq $String_vtable, 0(%rax)	
	je .Main.func_2	

1
	.string "F"	
.string9:	

1
	movq $12, %reg0	
	movq $0, %rsi	

1
	movq $1, %reg0	
	movq -16(%rbp), %reg2	

1
	addl %eax, %reg1d	
	movq %rcx, %reg3	

1
	call out_error	
.Main.main_154:	

1
	movq 8(%rax), %reg1	
	movq 0(%reg1), %rbx	

1
	movq 136(%reg0), %reg0	
	movq 16(%rax), %rdi	

1
	movq $14546, %reg0	
	subl %eax, %reg2	

1
	.type Complex.reflect_X, @function	
Complex.reflect_X:	

1
.Matrix.elMul_2:	
	movq %reg0, %reg1	

1
	je .Main.main_180	
	movq $308, %reg0	

1
	movq $30773, %reg0	
	cmpl %edi, %reg2	

1
	movq 0(%r13), %reg1	
	movq 48(%reg1), %reg1	

1
Nil_vtable:	
	.quad .string1	

1
	movq 32(%rbx), %rax	
	movq 16(%rbx), %rdi	

1
	movq %reg0, 40(%rbx)	
	cmpl %reg2, %reg3	

1
	addl %reg0, %reg1	
	movq $36010, %reg2	

1
	.size CellularAutomaton.cell_right_neighbor, .-CellularAutomaton.cell_right_neighbor	
	.globl CellularAutomaton.cell_at_next_evolution	

1
	testq $1, %reg0	
	je .Main.main_148	

1
	testq $1, %reg0	
	jne .Main.main_142	

1
	movq -128(%rbp), %rax	
	movq -64(%rbp), %reg3	

1
	movq -32(%rbp), %reg1	
	movq -24(%rbp), %reg3	

1
	je .Main.main_37	
	movq $34, %rsi	

1
	negl %ecx	
	movq -144(%rbp), %rax	

1
.Main.main_82:	
	movq %reg0, %reg1	

1
	movq 136(%r13), %r13	
	movq 16(%reg1), %rdi	

1
	imull %esi	
	movq $19020, %rsi	

1
	movq %rdx, %rax	
	movq %rcx, %r13	

1
	cmpl $0, %ebx	
	setl %bl	

1
	movq %rdi, 80(%reg1)	
	movq %rdi, %reg1	

1
	subl %eax, %r9d	
	movq %reg2, %rax	

1
	movq -176(%rbp), %reg1	
	subl %esi, %eax	

1
	.quad 1	
.string4_l:	

1
	je .Main.main_83	
	movq $61, %rsi	

1
	addl %esi, %eax	
	movq %rbx, %rsi	

1
	call String.substr	
	movq $.string18, %rdi	

1
	movq 32(%reg0), %r12	
	pushq %rax	

1
	movq %reg0, %r8	
	movq $28147, %reg0	

1
	je .Main.main_11	
	movq $153, %rsi	

1
	movq -136(%rbp), %rsi	
	cmpl %reg2, %reg3	

1
	movq -144(%rbp), %rsi	
	negl %esi	

1
.Main.main_16:	
	movq $.string13, %reg0	

1
.Main.main_2:	
	cmpl $0, %reg0	

1
	movq %reg0, %rbx	
	movq $.string8, %r12	

1
.Main.main_66:	
	movq 0(%reg0), %rax	

1
	movq %rax, %rdi	
	movq $6821, %reg2	

1
	movq $.string8, %reg0	
	movq 0(%reg1), %r12	

1
.string7_l:	
	.string "PASS"	

1
.Nil.rcons_1:	
	movq 0(%reg0), %r13	

1
	movq %rdi, 480(%reg1)	
	movq $0, %rdi	

1
	je .Main.main_158	
	movq $127, %rsi	

1
	je .Main.main_144	
	movq $112, %reg0	

1
	movq -96(%rbp), %rsi	
	movq %r15, %rax	

1
	movq %r14, %reg1	
	subl %reg1d, %reg2	

1
	call *%rax	
	movq 160(%reg1), %rax	

1
	movq %rdi, 352(%reg1)	
	movq $0, %rdi	

1
	imull %edi	
	movq %r14, %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 648(%rax)	

1
	testq $1, %rsi	
	je .Main.main_41	

1
	movq %rdi, %rax	
	jmp .Matrix.set_24	

1
	setl %reg0l	
	jge .Main.main_78	

1
	.type Main.iota, @function	
Main.iota:	

1
	movq -152(%rbp), %reg1	
	movq -96(%rbp), %rdi	

1
	movq $0, %rcx	
	movq %rdi, %reg2	

1
	testq $1, %rdi	
	je .Main.main_46	

1
	call *%reg0	
	movq $13765, %reg0	

1
	movq -112(%rbp), %rsi	
	movq -128(%rbp), %rax	

1
	movq $12, %reg0	
	movq -184(%rbp), %reg2	

1
	movq $46167, %rdi	
	addl %reg1, %eax	

1
	movq $48880, %rdi	
	imull %edi	

1
	movq $5, %rax	
	movq %rax, -128(%rbp)	

1
	movq -16(%rbp), %rax	
	subl %reg2d, %reg3	

1
	call *%reg0	
	movq 632(%rbx), %r12	

1
	movq -112(%rbp), %reg1	
	subl %eax, %reg3	

1
	movq %reg0, %rax	
	jmp .Matrix.set_22	

1
	movq %reg0, %rax	
	movq %r13, %rax	

1
	ret	
	.size DicNode.get, .-DicNode.get	

1
	.quad Dictionary.new	
	.quad Object.abort	

1
	movq 16(%rax), %reg1	
	movq 24(%rax), %rsi	

1
	movq $2, %rdi	
	addl %edi, %esi	

1
	movq $0, %reg0	
	movq %reg0, 480(%rax)	

1
	movq -120(%rbp), %reg1	
	movq -168(%rbp), %rdi	

1
	.size Dictionary.new, .-Dictionary.new	
	.globl DicNode.new	

1
	movq $162, %rsi	
	movq $.string2_l, %reg1	

1
	movq %reg0, 152(%reg1)	
	movq %reg0, %reg1	

1
	je .Matrix.set_64	
	movq $125, %reg0	

1
	testq $1, %rax	
	je .Foo.new_7	

1
	movq %reg0, %r14	
	movq $2, %reg0	

1
	movq -136(%rbp), %rdi	
	movq -56(%rbp), %rax	

1
	je .Main.main_179	
	movq $145, %reg0	

1
	movq %rax, 16(%rbx)	
	movq $2, %rax	

1
	movq $7493, %rdi	
	addl %edi, %eax	

1
.Main.main_21:	
	movq 0(%r13), %rax	

1
	movq %rdi, %reg1	
	jmp .Matrix.set_42	

1
	movq %rax, %r13	
	jmp .Matrix.elMul_1	

1
	movq $46874, %reg0	
	addl %eax, %reg2	

1
	movq 168(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	subl %eax, %esi	
	movq -16(%rbp), %reg3	

1
	movq $26355, %reg0	
	movq 0(%reg1), %r12	

1
	ret	
	.size Complex.reflect_0, .-Complex.reflect_0	

1
	movq $0, %rdi	
	movq %rdi, 736(%rax)	

1
	movq $0, %reg0	
.Main.main_2:	

1
	movq %reg0, 64(%reg1)	
	movq $1, %reg0	

1
	.globl Bazz.new	
	.type Bazz.new, @function	

1
A2I.a2i:	
	pushq %reg0	

1
	movq $38737, %reg0	
	subl %reg1, %reg2	

1
	je .Main.main_7	
	movq $7, %reg0	

1
	movq $50538, %rax	
	movq $12757, %reg1	

1
	movq -80(%rbp), %reg1	
	movq -40(%rbp), %reg3	

1
	movq $27696, %rbx	
	imull %reg1	

1
	movq %rsp, %reg1	
	subq $40, %rsp	

1
	testq $1, %reg0	
	je .Cons.rcons_2	

1
	movq %rdi, %reg1	
.Main.main_163:	

1
	.type Foo.y, @function	
Foo.y:	

1
	movq -112(%rbp), %r8	
	addl %r8d, %reg2	

1
	subl %reg0, %edi	
	movq %reg2, 16(%rax)	

1
	movq -24(%rbp), %rax	
	subl %reg2, %eax	

1
	movq 24(%reg0), %rdi	
	cmpl $0, %edi	

1
	movq $32704, %rsi	
	imull %reg1	

1
	movq -128(%rbp), %rax	
	movq -56(%rbp), %reg3	

1
	call Foo.new	
	jmp .Foo.new_6	

1
.Main.main_131:	
	movq %reg0, %reg1	

1
	movq $18310, %rax	
	subl %eax, %reg2	

1
	je .Main.main_23	
.Main.main_22:	

1
	addl %esi, %eax	
	movq -96(%rbp), %reg3	

1
	movq %reg0, 696(%reg1)	
	movq $3000, %reg0	

1
	movq 568(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	call *%rbx	
.Main.main_26:	

1
	movq $0, %reg0	
	movq $.string4_l, %reg1	

1
	movq %rax, %rdi	
	movq $41765, %rax	

1
.Dictionary.get_2:	
	movq 0(%rax), %reg1	

1
	movq %rdi, 96(%reg1)	
	movq %rdi, %reg1	

1
	movq %r12, %reg1	
	subl %eax, %edi	

1
	testq $1, %r9	
	je .Main.main_129	

1
	movq -184(%rbp), %r8	
	movq %reg2, %reg3	

1
	movq $178, %reg0	
	movq $.string5_l, %reg1	

1
	idivl %reg0	
	movq $47308, %reg1	

1
	testq $1, %rdi	
	je .Cons.insert_2	

1
	movq %reg0, 8(%rax)	
	movq %rax, 72(%reg2)	

1
.Main.main_28:	
	movq %reg0, %rax	

1
	movq %reg0, %reg1	
	movq $41455, %reg0	

1
	movq %rdx, %rsi	
	movq %rcx, %reg3	

1
.Main.main_12:	
	movq 0(%reg0), %rax	

1
	movq $3175, %reg0	
	imull %reg1	

1
.Main.main_22:	
.Main.main_40:	

1
	idivl %ecx	
	movq $36212, %rsi	

1
	movq -104(%rbp), %rax	
	movq -56(%rbp), %reg3	

1
	negl %ecx	
	movq $30797, %r8	

1
	movq $21613, %reg0	
	movq 0(%reg1), %reg2	

1
	jmp .Complex.print_2	
.Complex.print_1:	

1
	movq %reg0, %reg1	
.Main.main_166:	

1
	movq %r14, %rax	
	negl %reg2	

1
	movq $36519, %r11	
	imull %r11d	

1
	movq %reg0, 16(%rbx)	
	movq $1000, %reg0	

1
	sete %r13b	
	jne .DicNode.insert_1	

1
	movq $63562, %reg0	
	movq %reg0, %reg1	

1
	call Int.new	
	movq %rax, %rdi	

1
	jge .Main.main_11	
	movq $.string8, %reg0	

1
	movq $.string11, %reg0	
	movq %r12, %reg2	

1
	movq $3000, %rdi	
	movq %rdi, 128(%reg1)	

1
	je .Main.main_173	
	movq $145, %reg0	

1
	movq %rdi, %rax	
	jmp .Main.main_34	

1
	movq 0(%r12), %rbx	
	movq 88(%rbx), %rbx	

1
	movq $2143, %reg0	
	addl %edi, %reg2	

1
	call *%r12	
	movq 360(%rbx), %r12	

1
	movq 16(%rbx), %rax	
	subl %reg2, %eax	

1
	movq %reg0, 8(%reg1)	
	movq $1, %reg2	

1
	.quad Bar.setJ	
String_vtable:	

1
	je .Main.main_86	
	movq -64(%rbp), %rax	

1
	je .Main.main_16	
.Main.main_15:	

1
	idivl %esi	
	movq -112(%rbp), %rsi	

1
	imull %esi	
	movq -96(%rbp), %rsi	

1
	jne .Main.main_134	
	movq -40(%rbp), %reg1	

1
	movq $29524, %r12	
	movq 0(%reg1), %reg2	

1
	movq $2, %rdi	
	movq $2, %reg1	

1
.Razz.new_15:	
	call Bar.new	

1
	movq 704(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	movq -136(%rbp), %rax	
	movq %rbx, %reg3	

1
	movq 8(%rax), %rdi	
	movq $2, %reg2	

1
	movq %r12, 8(%reg1)	
	movq %reg1, 72(%rbx)	

1
	movq $22, %rax	
	movq $11, %reg1	

1
	movq $15798, %rax	
	subl %eax, %reg2d	

1
	movq 616(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	testq $1, %rcx	
	je .Main.main_146	

1
	testq $1, %r9	
	je .Main.main_173	

1
	movq $3233, %reg0	
	movq $26083, %rax	

1
	movq $5, %rsi	
	movq %reg1, %reg2	

1
	.quad Main.funcifb	
	.quad Main.funcwhilei	

1
	movq %rax, %r13	
	jmp .Main.main_49	

1
	movq %reg0, %r12	
	movq $.string11, %reg0	

1
	movq 40(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
.Main.main_117:	
	movq %reg0, %reg1	

1
	movq 24(%rbx), %rax	
	movq %reg2, %reg3	

1
	movq %rdi, 464(%reg1)	
	movq $3000, %rdi	

1
Main.funcwhileb:	
	pushq %reg0	

1
.Main.main_95:	
	movq -32(%rbp), %rax	

1
	movq %rdi, 464(%reg1)	
	movq $0, %rdi	

1
	call *%rax	
	movq 712(%reg1), %rax	

1
	jg .Main.main_105	
	movq %reg0, %rax	

1
	je .Main.main_164	
	movq $142, %rsi	

1
	movq $8, %rcx	
	movq %rdi, %rsi	

1
	movq $18310, %rax	
	subl %reg1, %reg2	

1
	movq $name_Object, %reg0	
	movq 0(%reg1), %reg2	

1
	movq %reg0, %reg1	
	movq -64(%rbp), %r8	

1
	call *%reg0	
	movq $.string10, %reg0	

1
	subl %reg0, %eax	
	movq $43177, %rdi	

1
	negl %reg0d	
	movq %r12, %reg2	

1
	movq $1, %reg0	
	movq 8(%rax), %rdi	

1
	movq $55273, %r11	
	movq $38801, %rax	

1
	movq $.string8, %r13	
	movq 0(%rbx), %reg2	

1
.Main.main_100:	
	movq -32(%rbp), %reg1	

1
	movq $36010, %reg0	
	negl %reg1	

1
	movq %rdi, 712(%rax)	
	movq $3000, %rdi	

1
	movq %reg0, %reg1	
	movq $6821, %rsi	

1
	movq -152(%rbp), %reg1	
	addl %reg2, %esi	

1
	negl %r12d	
	movq 0(%rbx), %reg2	

1
	negl %esi	
	movq %r12, %rax	

1
	addl %reg0, %eax	
	movq %rax, 16(%rbx)	

1
	movq 408(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	movq $41765, %rax	
	subl %eax, %reg2	

1
	movq %reg0, %rcx	
	movq -144(%rbp), %reg0	

1
	movq %reg0, %reg1	
	subq $176, %reg0	

1
.Main.iota_2:	
	movq 8(%reg0), %reg1	

1
	movq $34526, %reg0	
	subl %edi, %eax	

1
	movq $3000, %reg0	
	movq %reg0, 224(%rax)	

1
	call *%r12	
	movq 104(%rbx), %r12	

1
	subl %reg0, %ecx	
	movq %rsi, %rax	

1
	jmp .Main.funccaseb_3	
.Main.funccaseb_2:	

1
	movq $0, %rdi	
	movq %rdi, 728(%reg1)	

1
	movq 16(%rax), %rdi	
	movq %r12, %rsi	

1
	movq %reg0, %r13	
	movq $3, %rax	

1
	movq $226, %rsi	
	movq $.string5_l, %rdi	

1
	movq %rdi, %rax	
	jmp .Matrix.set_48	

1
	call *%r12	
	jmp .Main.main_16	

1
	movq -64(%rbp), %reg1	
	movq $0, %rcx	

1
	testq $1, %rcx	
	je .Main.main_52	

1
	movq %reg0, %r12	
	movq $.string6, %rax	

1
.Main.main_171:	
.Main.main_71:	

1
	jne .Matrix.set_15	
	movq %reg0, 48(%rax)	

1
	movq $2, %reg0	
	movq %r13, %rdi	

1
.A2I.i2c_6:	
.A2I.i2c_4:	

1
	addl %reg0, %reg1	
	movq %reg2, -64(%rbp)	

1
	.string "2 is trivially prime.\\n"	
.string6:	

1
	negl %r8d	
	movq %r12, %reg2	

1
	call out_error	
.ListNode.push_1:	

1
	.size Nil.isNil, .-Nil.isNil	
	.globl Nil.rev	

1
	movq $3000, %reg0	
	movq %reg0, 464(%reg1)	

1
	movq %rdi, %reg1	
.Main.main_169:	

1
	movq %reg0, %reg1	
	jmp .A2I.a2i_aux_1	

1
	jne .Matrix.set_10	
	movq %rdi, 40(%reg1)	

1
	movq $50213, %reg0	
	movq %reg0, %rsi	

1
.Main.main_14:	
	movq $30102, %reg0	

1
	.type List.print_list, @function	
List.print_list:	

1
	movq %rdi, %reg1	
	cmpl %reg1d, %ecx	

1
	movq %rax, %reg1	
	movq -64(%rbp), %reg3	

1
	je .Main.main_8	
	movq $6, %rsi	

1
	movq 560(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq %reg0, %reg1	
	subl %ecx, %reg3d	

1
	movq $10, %r12	
	movq $1, %reg1	

1
.Razz.new_7:	
	cmpq $Bar_vtable, 0(%rbx)	

1
	movq %reg0, %rcx	
	subl %reg2, %r8d	

1
	call Razz.new	
	jmp .Razz.new_11	

1
	movq %rdi, %r13	
	movq 0(%reg2), %reg3	

1
	je .CellularAutomaton.evolve_2	
	movq 0(%reg0), %reg1	

1
	movq $12, %rsi	
	movq -72(%rbp), %reg2	

1
	negl %r11d	
	movq $1357, %reg1	

1
	setle %reg0l	
	jg .Main.main_3	

1
	movq $84, %rsi	
	movq $.string2_l, %reg1	

1
	je .Main.new_5	
	movq $5, %rsi	

1
	movq %reg0, %reg1	
	jmp .Main.main_83	

1
	je .Main.funccaseb_2	
	movq $1, %r12	

1
	movq %rdi, %reg1	
	movq $.string6, %rbx	

1
	movq $10478, %reg0	
	subl %reg1, %reg2d	

1
	negl %eax	
	movq $64582, %reg1	

1
	testq $1, %r10	
	je .Main.main_45	

1
.Matrix.set_6:	
	movq $4, %r8	

1
	movq $63080, %reg0	
	movq $0, %reg1	

1
	movq %r12, %reg1	
	movq %r15, %reg3	

1
	movq $1, %rdi	
	movq 24(%reg1), %rax	

1
	subl %eax, %esi	
	movq -104(%rbp), %reg3	

1
	movq %rax, %rsi	
	cmpl %reg2, %edi	

1
	addl %reg0, %reg1	
	movq %rax, 16(%rbx)	

1
	movq $.string10, %r13	
	movq 8(%reg1), %r15	

1
	cmpq $IO_vtable, 0(%rax)	
	je .Main.main_11	

1
	movq %reg0, %rax	
	movq %rcx, %r13	

1
	subl %reg0, %esi	
	movq -104(%rbp), %reg3	

1
	movq %rax, %r13	
.CellularAutomaton.cell_at_next_evolution_2:	

1
	movq 648(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
.Main.main_155:	
.Main.main_153:	

1
	movq -136(%rbp), %reg1	
	movq -128(%rbp), %reg3	

1
	movq 64(%reg0), %reg1	
	movq 0(%reg0), %r12	

1
	addl %reg0, %reg1	
	movq -176(%rbp), %rax	

1
	jg .Main.main_37	
	movq $61139, %rax	

1
	movq $58921, %reg0	
	cmpl %reg1, %reg2	

1
	movq %rax, 32(%rbx)	
	movq $.string6, %rax	

1
	je .Main.main_11	
	movq $5, %rsi	

1
	movq %reg0, %r13	
.Matrix.mul_1:	

1
	setl %reg0l	
	jge .Main.main_90	

1
	movq %rax, %r14	
	movq $.string11, %reg2	

1
	movq %reg0, %rax	
	movq 8(%reg2), %r14	

1
	.globl Bar.getI	
	.type Bar.getI, @function	

1
	sete %sil	
	jne .A2I.i2a_aux_1	

1
	movq -160(%rbp), %reg1	
	movq -88(%rbp), %rsi	

1
	.quad .string10_l	
	.quad 19	

1
	movq $12843, %r12	
	movq $0, %reg1	

1
	je .Main.main_45	
	movq $34, %rsi	

1
	movq %reg0, %r14	
	movq $1, %rdi	

1
	movq 536(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq -48(%rbp), %reg1	
	movq -56(%rbp), %rdi	

1
	movq %reg0, 48(%rbx)	
	cmpl %reg2, %eax	

1
	je .Main.new_3	
	cmpq $String_vtable, 0(%reg0)	

1
	movq $29524, %reg0	
	movq 0(%reg1), %rax	

1
	jne .Matrix.set_23	
	movq %rdi, 80(%reg1)	

1
	movq %reg0, %rdi	
	movq $5456, %reg0	

1
	.size Foo.y, .-Foo.y	
	.globl Foo.z	

1
	movq %rax, %r12	
	movq $.string9, %r13	

1
.Main.main_107:	
	movq -40(%rbp), %reg1	

1
.Main.main_6:	
	movq 8(%reg0), %rdx	

1
	movq %rdi, %reg1	
	cmpl $0, 8(%reg2)	

1
Cons.rev:	
	pushq %rbp	

1
	imull %edi	
	movq $21514, %rdi	

1
	testq $1, %reg0	
	je .Main.main_152	

1
	je .Main.new_3	
	cmpq $Object_vtable, 0(%reg0)	

1
	jg .Main.main_10	
	movq $4, %r12	

1
	movq $48880, %reg0	
	imull %edi	

1
	subl %eax, %reg1d	
	movq $61569, %reg2	

1
	movq $45, %rsi	
	movq $.string5_l, %reg1	

1
.Main.main_41:	
	movq -72(%rbp), %rsi	

1
	imull %esi	
	movq $840, %rsi	

1
	movq 24(%rbx), %reg1	
	movq $0, %rdi	

1
	movq $.string9, %reg0	
	jmp .A2I.i2c_6	

1
.Main.main_11:	
	movq $.string8, %reg0	

1
	je .Main.main_1	
	movq $.string8, %r12	

1
	movq $38915, %rdi	
	movq $0, %reg1	

1
	movq %rax, %r13	
	movq $.string10, %reg2	

1
	movq $3000, %reg0	
	movq %reg0, 432(%reg1)	

1
	je .Main.main_20	
	movq $11, %reg0	

1
	movq $0, %rdi	
	movq %rdi, 688(%reg1)	

1
.Main.main_15:	
	movq $name_IO, %reg0	

1
	movq %rdi, %rbx	
	movq $.string7, %rax	

1
	movq $3000, %reg0	
	movq %reg0, 600(%reg1)	

1
.Main.main_191:	
	cdq	

1
	jmp .Foo.new_11	
.Foo.new_10:	

1
	movq %rax, 8(%rbx)	
	movq $5, %reg2	

1
	movq %rdi, %rax	
	jmp .Main.main_58	

1
	movq %rdi, %reg1	
	movq -16(%rbp), %reg1	

1
.Main.main_31:	
.Main.main_29:	

1
	je .Main.funccase_2	
	cmpq $String_vtable, 0(%reg0)	

1
	je .Matrix.mul_5	
	movq $144, %reg0	

1
	movq %r12, %rbx	
	addl %reg2, %reg3	

1
	.quad 1	
.string11_l:	

1
	movq 360(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	movq %reg0, %rsi	
	movq -16(%rbp), %reg3	

1
	movq $15505, %rax	
	addl %eax, %edi	

1
	addl %reg0d, %reg1	
	movq -16(%rbp), %reg0	

1
	subq $184, %reg0	
	pushq %rbx	

1
	movq 8(%rbx), %r14	
	pushq %rax	

1
	movq $10280, %r12	
	movq 0(%reg1), %rax	

1
	movq $60750, %r12	
	movq 0(%reg1), %rax	

1
	movq %reg0, %r12	
	movq $4, %reg2	

1
.Main.main_66:	
	movq 0(%r13), %rax	

1
	.quad Foo.z	
String_vtable:	

1
	movq 16(%reg0), %reg1	
	cmpl $0, %reg2	

1
.Main.main_30:	
.Main.main_28:	

1
.Main.main_17:	
	movq $10174, %rax	

1
	negl %eax	
	jmp .A2I.a2i_4	

1
	subl %eax, %edi	
	movq $14379, %reg2	

1
	movq %rax, %rdi	
	movq $62420, %rax	

1
	movq %reg0, 152(%rax)	
	movq $3000, %reg0	

1
	je .Main.main_31	
	movq -72(%rbp), %reg1	

1
	movq %rcx, %rdi	
	movq $1, %r9	

1
	movq $18429, %r9	
	movq $52820, %rax	

1
	movq -40(%rbp), %reg1	
	movq -152(%rbp), %reg3	

1
.Main.main_140:	
	cdq	

1
	movq 144(%reg0), %reg0	
	jmp .Matrix.get_46	

1
.Cons.sort_1:	
	movq 16(%rax), %reg1	

1
	movq $20995, %rax	
	movq $47127, %reg1	

1
	movq -152(%rbp), %rsi	
	addl %esi, %eax	

1
	subl %ecx, %r8d	
	movq %r8, %reg2	

1
	movq -64(%rbp), %rdi	
	subl %edi, %reg3	

1
	je .Main.main_106	
	movq $64, %reg0	

1
	movq 8(%rbx), %reg1	
	movq 24(%rbx), %rax	

1
	movq $45807, %reg0	
	subl %reg1, %edi	

1
.Main.main_102:	
	movq %reg0, %rax	

1
	je .Dictionary.get_1	
	movq $0, %r12	

1
	movq $22, %reg0	
	movq $.string3_l, %reg1	

1
	subl %eax, %reg1	
	movq $18841, %reg2	

1
	movq -32(%rbp), %rsi	
	call *%reg2	

1
	movq $5, %reg0	
	subl %eax, %reg2	

1
	movq $17979, %reg0	
	imull %reg1	

1
.Main.funcwhileb_2:	
	movq 0(%rbx), %reg1	

1
	call *%reg0	
	movq 600(%rbx), %rax	

1
.Main.main_46:	
	movq 0(%rax), %reg1	

1
	call *%r12	
	movq 312(%rbx), %rax	

1
	subl %reg0, %reg1	
	movq -88(%rbp), %rcx	

1
	movq $52486, %reg0	
	movq $20968, %rsi	

1
	movq 0(%r14), %rax	
	movq 72(%rax), %rax	

1
	movq -80(%rbp), %reg1	
	cmpl %esi, %eax	

1
	imull %reg0	
	movq $840, %reg1	

1
	movq -32(%rbp), %rsi	
	cmpl %reg2, %eax	

1
	movq -168(%rbp), %rsi	
	call *%rax	

1
	movq 56(%reg0), %reg0	
	movq %r14, %reg2	

1
	movq %rdi, %rax	
	movq %rax, -160(%rbp)	

1
	movq %rdi, 56(%rax)	
	movq $3000, %rdi	

1
	movq %reg0, -72(%rbp)	
	movq $8, %reg0	

1
	movq 8(%reg0), %reg1	
	movq $1, %rcx	

1
	jge .Main.main_2	
	movq $1, %rdi	

1
	movq $1, %r9	
	movq %reg1, %rcx	

1
	movq $43177, %reg0	
	subl %edi, %reg2	

1
	movq %reg0, %rax	
	movq $29181, %reg0	

1
.Main.main_153:	
	jmp .Main.main_158	

1
	movq %reg0, %reg1	
	movq 8(%rax), %rbx	

1
	jg .Main.main_73	
	movq %reg0, %reg1	

1
	movq %r15, %reg1	
	movq %r13, %rsi	

1
	jne .Main.main_17	
	movq $0, %rax	

1
	movq $.string8, %reg0	
	movq 0(%rbx), %r14	

1
	movq %rax, %rdi	
	movq $6821, %rsi	

1
	.globl Bar.setX	
	.type Bar.setX, @function	

1
	subl %reg0, %ecx	
	movq %rsi, %reg3	

1
	movq 376(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	testq $1, %rcx	
	je .Main.main_120	

1
	movq -48(%rbp), %reg1	
	movq %rbx, %rdi	

1
	movq $1000, %reg0	
	movq %reg0, 32(%rbx)	

1
	jg .Main.main_147	
	movq -64(%rbp), %rdi	

1
	setl %reg0b	
	jge .Main.main_7	

1
	movq $3000, %rdi	
	movq %rdi, 520(%reg1)	

1
	movq $8, %reg0	
	movq %reg1, %rsi	

1
.Razz.new_6:	
	movq %rax, 16(%reg1)	

1
	movq -136(%rbp), %rax	
	movq -64(%rbp), %r8	

1
	ret	
	.size CellularAutomaton.cell, .-CellularAutomaton.cell	

1
	movq -16(%rbp), %rax	
	subl %reg2, %eax	

1
	movq %rbx, %rax	
	movq -40(%rbp), %rsi	

1
	addl %edi, %reg1	
	movq %rax, -112(%rbp)	

1
	cmpq $Main_vtable, 0(%rdi)	
	je .Main.main_15	

1
	setle %bl	
	jg .Main.main_19	

1
	movq 296(%reg0), %reg1	
	movq 0(%reg0), %reg2	

1
	movq $113, %reg0	
	movq $.string2_l, %reg1	

1
	call *%r12	
	movq 312(%rbx), %reg2	

1
	imull %edi	
	movq %reg1, -152(%rbp)	

1
	movq -80(%rbp), %rax	
	movq %reg2, %rsi	

1
	pushq %reg0	
	movq %rsi, %rbx	

1
	movq $61569, %rax	
	movq $2562, %r11	

1
	movq -144(%rbp), %reg1	
	movq -120(%rbp), %reg3	

1
	movq $0, %reg0	
	jmp .Main.new_5	

1
	movq %reg0, 424(%reg1)	
	movq $0, %reg0	

1
	movq %rdi, 88(%rax)	
	movq $3000, %rdi	

1
	cmpq $IO_vtable, 0(%rax)	
	je .Main.main_6	

1
	movq %reg0, 8(%rax)	
	movq %rax, 32(%rbx)	

1
	movq $1357, %rax	
	movq $9886, %rbx	

1
	je .Main.main_7	
	movq $162, %reg0	

1
	movq $0, %rdi	
	movq %rdi, 416(%rax)	

1
	je .Main.main_186	
	movq $316, %reg0	

1
	movq %reg0, %r12	
	movq -168(%rbp), %reg0	

1
	movq $14352, %rdi	
	cmpl %reg1, %reg2	

1
	movq $41765, %reg0	
	subl %reg1, %reg2	

1
	.quad Main.getFoo	
	.quad Main.setFoo	

1
	movq $.string9, %rdi	
	movq %rbx, %reg2	

1
	testq $1, %reg0	
	je .Main.main_89	

1
	subl %reg0, %r9d	
	movq %r8, %reg3	

1
	movq $0, %rdi	
	movq %rdi, 560(%rax)	

1
	call *%r12	
	movq 384(%rbx), %r12	

1
	call *%rax	
	movq 224(%reg1), %rax	

1
	movq %rdi, %reg1	
	jmp .Main.main_16	

1
	movq %rax, %r13	
	jmp .Main.main_3	

1
Main.out_whatever:	
	pushq %reg0	

1
	addl %eax, %reg1	
	movq $38737, %reg2	

1
.Main.func_3:	
	movq $.string7, %reg0	

1
	negl %eax	
	movq -168(%rbp), %reg2	

1
	setle %reg0l	
	jg .Main.main_49	

1
	movq $12, %rsi	
	movq -88(%rbp), %rax	

1
.Matrix.get_36:	
	movq $1, %rax	

1
	movq $3000, %reg0	
	movq %reg0, 424(%rax)	

1
	call *%reg0	
	movq $.string7, %rax	

1
	movq 112(%r12), %r12	
	movq %rax, %reg2	

1
	movq %rdi, %reg1	
	movq -160(%rbp), %reg1	

1
	.globl Bar.foo	
	.type Bar.foo, @function	

1
	.quad .string19_l	
	.quad 6	

1
	imull %reg0	
	movq $14356, %rbx	

1
	idivl %ecx	
	movq $63562, %rsi	

1
	movq 24(%rax), %reg1	
	movq %reg2, %reg3	

1
	je .Dictionary.get_1	
	movq $0, %reg0	

1
	subq $168, %reg0	
	pushq %rbx	

1
	testq $1, %r8	
	je .Main.main_11	

1
	jne .Matrix.set_14	
	movq $1, %r8	

1
	addl %r8d, %reg1	
	movq -128(%rbp), %r8	

1
.Main.main_149:	
	movq %reg0, %reg1	

1
	movq %reg0, %rdi	
	movq $51233, %reg0	

1
	movq $678987, %reg0	
	call A2I.new	

1
	movq -128(%rbp), %reg1	
	subl %eax, %esi	

1
	movq $12, %reg0	
	movq $10, %rax	

1
	movq %rsi, %reg1	
	movq $49411, %rsi	

1
	movq %rdi, 376(%rax)	
	movq $3000, %rdi	

1
	movq $10, %rsi	
	movq $.string1_l, %rdi	

1
	movq -168(%rbp), %reg1	
	movq -120(%rbp), %rcx	

1
	movq %reg0, %reg1	
	movq $48608, %reg0	

1
	movq -64(%rbp), %rdi	
	negl %reg2	

1
	movq %reg0, %reg1	
	movq $19369, %reg0	

1
	movq $62649, %reg0	
	movq 0(%reg1), %reg2	

1
	movq %reg0, %r12	
	movq 16(%reg2), %reg3	

1
	movq -16(%rbp), %rsi	
	cmpl %reg2, %eax	

1
.Main.main_21:	
	movq 0(%reg0), %reg1	

1
	je .Main.main_33	
	cmpl $0, %r13d	

1
	movq %rdi, %reg1	
	movq 0(%rax), %r12	

1
	.quad Bar.getJ	
	.quad Bar.setJ	

1
	addl %reg0, %eax	
	movq -152(%rbp), %rdi	

1
	movq -104(%rbp), %reg1	
	cmpl %reg2, %esi	

1
	movq %reg0, %reg1	
	jmp .Main.main_6	

1
	movq $55626, %rdi	
	imull %reg1	

1
	addl %esi, %reg1	
	movq %rdi, 16(%reg3)	

1
	movq $37073, %reg0	
	movq $6195, %reg1	

1
.string8_l:	
	.string "failed\\n"	

1
	call *%r14	
	call Bool.new	

1
	jmp .Matrix.get_65	
.Matrix.get_53:	

1
	movq -144(%rbp), %rax	
	movq %rbx, %reg3	

1
	addl %edi, %eax	
	movq %rax, -24(%rbp)	

1
	addl %reg0, %edi	
	movq $38737, %rax	

1
	call *%r12	
	movq $.string9, %reg1	

1
	movq %reg0, %rdi	
	movq -160(%rbp), %reg0	

1
	movq 448(%rbx), %reg1	
	movq 0(%rbx), %r12	

1
	movq -16(%rbp), %rax	
	cmpl %reg2, %esi	

1
	movq %rdi, %rax	
	jmp .Main.main_8	

1
	call *%rax	
	movq 416(%rbx), %rax	

1
	movq %rax, %reg1	
	movq $18429, %reg2	

1
	movq -152(%rbp), %rax	
	movq -112(%rbp), %reg3	

1
	movq -56(%rbp), %rax	
	movq -40(%rbp), %reg3	

1
	je .Main.main_183	
	movq $151, %reg0	

1
	movq $28379, %rsi	
	movq $0, %rcx	

1
.ListNode.insert_4:	
	movq 16(%reg0), %rdx	

1
	call *%reg0	
	movq 8(%reg1), %reg2	

1
	movq 264(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	subl %reg0, %reg1	
	movq -104(%rbp), %rsi	

1
	movq %rdi, -16(%rbp)	
	movq $46509, %rax	

1
	movq %reg0, 728(%reg1)	
	movq $3000, %reg0	

1
	je .Main.main_9	
	movq $168, %rsi	

1
	movq $8, %rsi	
	movq $.string5_l, %reg1	

1
	subl %reg0, %reg1	
	movq %reg2, -136(%rbp)	

1
	je .Main.funccase_3	
	cmpq $Bool_vtable, 0(%reg0)	

1
	subl %r10d, %eax	
	movq %reg2, %r10	

1
	testq $1, %reg0	
	je .Main.funccase_7	

1
	subl %reg0, %reg1	
	movq $14379, %rax	

1
	subl %reg0, %reg1	
	movq %rax, -144(%rbp)	

1
	movq $14352, %reg0	
	cmpl %reg1, %reg2	

1
	movq %reg0, 40(%rbx)	
	movq $1, %reg0	

1
	movq %rdi, %r8	
	cmpl %r8d, %reg2	

1
	movq -176(%rbp), %rax	
	subl %reg2, %eax	

1
	cmpq $String_vtable, 0(%rbx)	
	je .Main.new_3	

1
	movq -120(%rbp), %r9	
	imull %r9d	

1
	je .Bar.new_13	
	movq $10, %reg0	

1
	negl %reg0	
	movq $0, %rcx	

1
	movq %r14, %rax	
	addl %ecx, %reg3	

1
	movq -24(%rbp), %reg1	
	movq -88(%rbp), %rdi	

1
	je .Main.main_5	
	movq $11, %reg0	

1
	movq -152(%rbp), %reg1	
	movq -160(%rbp), %reg3	

1
	addl %eax, %reg1d	
	movq %rcx, %rax	

1
	movq $118, %reg0	
	movq $.string2_l, %reg1	

1
	movq -96(%rbp), %rax	
	subl %ecx, %reg3	

1
	movq $1073741824, %rax	
	movq $4, %reg1	

1
	movq %rbx, %rax	
	movq %reg2, %r11	

1
	movq %rax, %r12	
	call Cons.new	

1
	call out_error	
.Main.main_143:	

1
	je .Main.main_163	
	movq $142, %reg0	

1
	movq 16(%rdi), %rax	
	negl %reg2	

1
	testq $1, %rax	
	je .Main.iota_2	

1
	movq %r12, %reg1	
	popq %r13	

1
A2I.i2c:	
	pushq %reg0	

1
	movq $52, %rax	
	movq 0(%rbx), %reg2	

1
	cmpq $Razz_vtable, 0(%rbx)	
	je .Razz.new_3	

1
	movq 0(%reg0), %r14	
	movq 64(%r14), %r14	

1
	movq $12, %rsi	
	movq -160(%rbp), %rax	

1
	movq $9, %reg0	
	jmp .A2I.c2i_20	

1
	call Bar.new	
	movq %reg0, %r14	

1
	idivl %edi	
	movq $46032, %reg1	

1
	movq 8(%rax), %reg1	
	movq $1, %reg2	

1
	movq $17979, %rbx	
	imull %ebx	

1
	movq %reg0, -96(%rbp)	
	movq %reg2, %reg0	

1
	movq %rdi, 480(%rax)	
	movq $3000, %rdi	

1
	movq -24(%rbp), %reg1	
	movq -88(%rbp), %reg3	

1
	jne .Matrix.get_62	
	movq 200(%rax), %rax	

1
	movq %rsi, %rax	
	movq -24(%rbp), %rsi	

1
	movq $.string8, %r15	
	movq -8(%rbp), %reg2	

1
	movq $32704, %reg0	
	imull %esi	

1
	movq 576(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	movq $60575, %reg0	
	negl %esi	

1
	movq $34498, %rsi	
	imull %esi	

1
	movq %r15, %reg1	
	addl %reg2, %eax	

1
	movq $Matrix_vtable, 0(%rax)	
	movq $0, %rdi	

1
	movq $.string16, %rdi	
	movq %rdi, %r12	

1
	subq $128, %reg0	
	pushq %reg1	

1
	je .Main.main_187	
	movq $151, %rsi	

1
.Main.main_163:	
.Main.main_125:	

1
	movq 144(%reg0), %r12	
	movq 0(%reg0), %rax	

1
	addl %edi, %eax	
	movq %reg2, 16(%rbx)	

1
	movq 56(%reg0), %r12	
	movq 0(%reg0), %reg2	

1
	idivl %ecx	
	movq $37473, %reg1	

1
	call *%rax	
	movq 264(%rbx), %r12	

1
	je .Main.main_110	
	movq $67, %rsi	

1
	setle %reg0l	
	cmpl %reg1, %reg2	

1
	movq %reg0, %rax	
	movq -176(%rbp), %reg3	

1
	movq -176(%rbp), %reg1	
	imull %reg1d	

1
	je .Main.main_5	
	movq %reg0, %rax	

1
.Cons.rcons_2:	
	movq 0(%reg0), %r13	

1
	movq $3000, %rdi	
	movq %rdi, 488(%rax)	

1
	movq -24(%rbp), %reg1	
	movq %rax, %rsi	

1
	movq $3000, %rdi	
	movq %rdi, 296(%reg1)	

1
	movq $34526, %rdi	
	subl %reg1, %reg2	

1
	jne .Matrix.set_32	
	movq %rdi, 104(%rax)	

1
.Main.main_43:	
	movq %reg0, %rax	

1
	testq $1, %reg0	
	je .Main.main_131	

1
	movq 712(%rbx), %rax	
	movq 0(%rbx), %r12	

1
	movq %reg0, %r13	
	jmp .Main.iota_1	

1
	subl %ecx, %reg1	
	movq $12, %rcx	

1
	jge .Main.main_45	
	movq -32(%rbp), %rax	

1
	movq 656(%reg0), %reg1	
	movq 0(%reg0), %rax	

1
	testq $1, %rsi	
	je .Main.main_30	

1
	movq $0, %rdi	
	movq %rdi, 400(%rax)	

1
	imull %esi	
	movq %rbx, %rsi	

1
.Main.main_96:	
	movq -32(%rbp), %rax	

1
	movq -32(%rbp), %rax	
	imull %edi	

1
	movq 608(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	je .Main.main_26	
	movq $10, %rsi	

1
	movq %rbx, %reg1	
	movq 8(%reg2), %r13	

1
	movq $0, %rdi	
	movq %rdi, 712(%reg1)	

1
	call *%r14	
	movq $0, %r14	

1
	movq 112(%r12), %r12	
	movq 16(%rax), %reg2	

1
	movq %reg0, %rsi	
	movq %rcx, %reg3	

1
	movq 8(%reg0), %r14	
	pushq %reg2	

1
	movq 320(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq %reg0, %rax	
	movq $0, %r12	

1
	movq $1, %reg0	
	negl %edi	

1
	movq $29011, %reg0	
	subl %eax, %reg2	

1
	testq $1, %reg0	
	je .Bar.getX_1	

1
.Main.main_30:	
	movq -16(%rbp), %reg1	

1
	je .Razz.new_4	
	cmpq $Bazz_vtable, 0(%reg0)	

1
	movq $25, %reg0	
	movq 0(%reg1), %r12	

1
	movq %rdi, 232(%rax)	
	movq $0, %rdi	

1
	movq $.string15, %reg0	
	movq %reg1, %reg2	

1
	movq %reg0, 40(%reg1)	
	movq %reg0, %reg1	

1
	je .Bar.new_1	
	movq $39, %rsi	

1
	setl %sil	
	jge .Main.main_2	

1
.Razz.new_18:	
	movq 32(%reg0), %reg1	

1
	je .Main.main_27	
	movq $173, %reg0	

1
	call *%r12	
	movq 184(%reg1), %reg2	

1
	.quad Complex.reflect_0	
	.quad Complex.reflect_X	

1
	movq %rdi, 96(%reg1)	
	movq $3000, %rdi	

1
	addl %reg0, %reg1	
	movq %reg2, 16(%rbx)	

1
	je .List.insert_2	
	movq $103, %rsi	

1
	movq %r12, %rsi	
	subl %reg2, %reg3	

1
	testq $1, %reg0	
	je .Dictionary.insert_2	

1
.Main.main_24:	
	movq -8(%rbp), %rdx	

1
	call *%rbx	
	movq $51549, %reg1	

1
.Razz.new_2:	
	call Foo.new	

1
	testq $1, %rax	
	jne .Main.main_20	

1
	subl %reg0, %r12d	
	movq $35037, %reg2	

1
	subl %reg0, %edi	
	subl %edi, %eax	

1
	je .Main.main_47	
	movq $78, %reg0	

1
.Matrix.get_20:	
.Matrix.get_18:	

1
	movq %reg0, %rax	
	jmp .Main.main_76	

1
	movq %rdi, 632(%rax)	
	movq $3000, %rdi	

1
	movq %reg0, %rax	
	jmp .Main.main_81	

1
	movq $0, %r13	
	movq 0(%rbx), %reg2	

1
	movq $54759, %reg0	
	movq %reg0, %rcx	

1
	call *%reg0	
.Dictionary.insert_3:	

1
	movq %rdi, 720(%rax)	
	movq $0, %rdi	

1
	movq %reg0, %rax	
	movq $33976, %reg0	

1
	testq $1, %rsi	
	je .Main.main_34	

1
	je .Main.main_74	
	movq $52, %rsi	

1
	.type A2I.a2i, @function	
A2I.a2i:	

1
	movq $5, %reg0	
	movq %reg1, %rsi	

1
	subl %eax, %ecx	
	movq -112(%rbp), %reg3	

1
	.quad DicNode.get	
	.quad DicNode.insert	

1
	ret	
	.size ListNode.next, .-ListNode.next	

1
.Main.main_8:	
	movq 0(%rbx), %r14	

1
	movq -32(%rbp), %rsi	
	subl %esi, %reg3	

1
.A2I.a2i_aux_2:	
	movq %reg0, %rax	

1
.Main.main_134:	
	movq %reg0, %reg1	

1
.Main.funccase_1:	
	cmpq $Int_vtable, 0(%rdi)	

1
	movq $55318, %rdi	
	subl %edi, %reg2	

1
	movq 152(%r14), %r14	
	movq %reg1, %reg2	

1
	movq $163, %rsi	
	movq $.string2_l, %rdi	

1
	movq $104, %rsi	
	movq $.string5_l, %rdi	

1
	movq %rdi, %r12	
	movq $.string6, %rax	

1
	movq $32716, %reg0	
	movq $49288, %rax	

1
.Main.main_40:	
	movq $51925, %rax	

1
	movq %r13, %reg1	
	movq -80(%rbp), %reg3	

1
	movq %reg0, %reg1	
	movq %r13, %rcx	

1
	movq 344(%rbx), %r12	
	movq 0(%rbx), %reg2	

1
	movq $.string16, %reg0	
	movq %reg0, %r12	

1
	.quad Complex.y_value	
Bool_vtable:	

1
	movq %rdi, -8(%rbp)	
	movq %reg2, -16(%rbp)	

1
	subl %edi, %eax	
	movq $4, %reg2	

1
	movq $.string6, %r12	
	movq $.string7, %r13	

1
	jmp .Main.new_13	
.Main.new_12:	

1
.Main.main_9:	
	movq $.string9, %r14	

1
	movq $60750, %r12	
	movq 0(%rbx), %reg2	

1
	movq -128(%rbp), %reg1	
	movq -136(%rbp), %reg3	

1
	movq %reg0, %reg1	
.CellularAutomaton.evolve_1:	

1
	addl %reg0, %reg1	
	movq $14546, %reg2	

1
.Matrix.get_47:	
	movq $5, %rsi	

1
	movq $18391, %reg0	
	negl %reg1	

1
	movq $3000, %reg0	
	movq %reg0, 376(%reg1)	

1
	jne .CellularAutomaton.cell_at_next_evolution_5	
	movq $1, %rax	

1
.Main.main_27:	
	movq -128(%rbp), %rax	

1
	movq -168(%rbp), %reg1	
	movq %reg2, %rsi	

1
	movq %reg0, 608(%reg1)	
	movq $3000, %reg0	

1
	.quad IO.out_string	
	.quad Cons.isNil	

1
	movq -152(%rbp), %rcx	
	negl %ecx	

1
	je .Bar.new_10	
	cmpq $Razz_vtable, 0(%rbx)	

1
	jne .Main.main_17	
	movq 0(%reg0), %reg1	

1
	movq %r13, %r12	
	addl %r12d, %reg2	

1
	movq 376(%reg0), %rax	
	movq 0(%reg0), %r12	

1
	movq $11, %reg0	
	movq %reg0, %r12	

1
	movq %rdi, %reg1	
	movq $14461, %rdi	

1
	movq 96(%r12), %r12	
	movq %rbx, %rdi	

1
	movq 8(%reg0), %reg1	
	popq %r12	

1
	jmp .Main.main_158	
.Main.main_151:	

1
	movq %reg0, 8(%rax)	
.Main.main_38:	

1
	movq %rax, 56(%reg1)	
	movq $0, %rax	

1
	movq $5880, %rax	
	movq $12843, %reg1	

1
	movq 504(%rbx), %reg1	
	movq 0(%rbx), %reg2	

1
	ret	
	.size Complex.equal, .-Complex.equal	

1
	movq $8271, %reg0	
	imull %esi	

1
	movq 112(%r12), %r12	
	movq %reg1, %reg2	

1
	movq $104, %reg0	
	movq $.string5_l, %reg1	

1
	cmpq $Bar_vtable, 0(%rbx)	
	je .Bar.new_16	

1
	.size DicNode.insert, .-DicNode.insert	
	.globl DicNode.name	

1
	imull %esi	
	movq $7258, %reg1	

1
	movq 16(%reg0), %r12	
	movq 8(%reg0), %reg2	

1
	movq $47879, %rax	
	cmpl %eax, %reg2	

1
.Main.main_39:	
.Main.main_15:	

1
	movq $53595, %rsi	
	imull %reg1	

1
	movq $12, %rax	
	movq %rax, -72(%rbp)	

1
	movq %reg0, -32(%rbp)	
	movq $0, %reg2	

1
.Matrix.set_60:	
	movq $5, %rcx	

1
.DicNode.insert_1:	
	movq 24(%reg0), %reg1	

1
	addl %reg0d, %eax	
	movq $60127, %reg0	

1
	movq $0, %reg0	
	movq %reg0, 568(%reg1)	

1
	subl %eax, %reg1	
	movq $20509, %reg2	

1
	movq %rdx, -72(%rbp)	
	movq %reg2, %rdx	

1
.A2I.i2c_7:	
	movq $4, %rcx	

1
	movq $.string6, %reg0	
	movq %reg0, %rsi	

1
	movq -144(%rbp), %rsi	
	negl %reg2	

1
	imull %reg0	
	movq $53667, %reg1	

1
	movq %rax, 24(%reg1)	
	jmp .Main.new_3	

1
	movq $4, %rax	
	cmpl %reg1, %reg2	

1
	negl %reg0	
	movq -136(%rbp), %reg2	

1
	movq $197, %reg0	
	movq $.string5_l, %reg1	

1
	testq $1, %r8	
	je .Main.main_126	

1
	movq %r13, %rax	
	movq %rdi, %r13	

1
	movq $0, %reg0	
	movq %rdi, %rsi	

1
	testq $1, %rax	
	je .Complex.equal_3	

1
.Main.main_2:	
	movq %reg0, %rbx	

1
	movq %rax, %reg1	
	movq $52486, %rax	

1
.Matrix.get_19:	
	movq $4, %reg0	

1
	idivl %ecx	
	movq $14901, %reg1	

1
	movq %reg0, %reg1	
	jmp .Main.main_20	

1
	cmpl $0, %ebx	
	sete %bl	

1
	je .Main.main_60	
	movq $49, %rsi	

1
	movq -136(%rbp), %reg1	
	movq %rcx, %reg3	

1
	movq 488(%reg0), %rax	
	movq 0(%reg0), %reg2	

1
	je .Main.main_144	
	movq -152(%rbp), %reg1	

1
	movq 344(%rbx), %reg1	
	movq 0(%rbx), %rax	

1
	negl %r12d	
	movq 0(%reg1), %rax	

1
	movq $0, %rsi	
	movq %rdi, %reg2	

1
	.quad 8	
percentlld_string_l:	

1
	call *%reg0	
	movq 16(%reg1), %rdi	

1
	testq $1, %rdi	
	je .Matrix.set_51	

1
	je .Complex.equal_3	
	movq $64, %reg0	

1
	movq 16(%rax), %reg1	
	movq $.string10, %reg2	

1
.Main.main_9:	
	movq 0(%r13), %reg1	

1
	jge .Main.new_10	
	movq 16(%reg0), %reg1	

1
	movq $31735, %rsi	
	imull %esi	

1
	movq -32(%rbp), %reg1	
	movq %r12, %rsi	

1
	movq 8(%reg0), %rdi	
	movq $1, %reg2	

1
	movq 112(%rbx), %rbx	
	movq %rax, %reg2	

1
	negl %ebx	
	subl %ebx, %eax	

1
	movq %reg0, 512(%rax)	
	movq $0, %reg0	

1
	movq $12, %r9	
	movq -112(%rbp), %rax	

1
	movq %rax, 64(%reg1)	
	movq $0, %rax	

1
	movq %reg0, %rax	
	jmp .Main.main_20	

1
	movq 560(%rbx), %r12	
	movq 0(%rbx), %rax	

1
	movq $45379, %rax	
	subl %eax, %reg2	

1
	movq %reg0, %rax	
	jmp .Matrix.set_9	

1
	movq $.string6_l, %rdi	
	call out_error	

1
	jge .Main.main_5	
	movq $.string7, %rax	

1
	movq -56(%rbp), %rax	
	subl %edi, %eax	

1
	call *%r12	
	jmp .Main.main_24	

1
	movq %rdi, %reg1	
	jmp .Main.main_2	

1
	movq %reg0, %rdi	
	movq $16029, %reg0	

1
.Main.main_30:	
	movq 0(%reg0), %rax	

1
	movq -24(%rbp), %reg1	
	movq -16(%rbp), %rsi	

1
	addl %eax, %reg1	
	movq -32(%rbp), %reg3	

1
	movq $29773, %rax	
	movq 0(%reg1), %reg2	

1
	movq -168(%rbp), %rsi	
	call *%reg2	

1
	movq %reg0, %r9	
	movq -160(%rbp), %reg0	

1
	movq 16(%rbx), %reg1	
	cmpl $0, %reg2	

1
	.quad Cons.tail	
	.quad List.cons	

1
	je .Main.func_1	
	movq $.string6, %reg0	

1
	movq -144(%rbp), %rax	
	movq -96(%rbp), %reg3	

1
	movq %rbx, %reg1	
	subl %reg1d, %eax	

1
	testq $1, %rax	
	je .Matrix.elMul_3	

1
	subl %reg0, %edi	
	movq %rdi, %r13	

1
	movq %reg0, %rdi	
	movq $26972, %reg0	

1
	idivl %r9d	
	movq $33161, %reg1	

1
	movq -56(%rbp), %rsi	
	cmpl %reg2, %reg3	

1
	testq $1, %reg0	
	je .Main.main_125	

1
.Main.main_49:	
	movq -80(%rbp), %reg1	

1
.Main.main_118:	
.Main.main_116:	

1
	je .Main.main_180	
	movq $151, %rsi	

1
.Main.main_29:	
	movq $.string8, %reg0	

1
	je .Main.main_60	
	movq $17, %rsi	

1
	.string "passed\\n"	
.string7:	

1
	movq %reg0, %rsi	
	movq %r13, %reg0	

1
	movq 16(%reg0), %rax	
	negl %reg2	

1
	movq $21613, %reg0	
	movq 0(%rbx), %rax	

1
	addl %esi, %reg1	
	movq -64(%rbp), %reg3	

1
Nil.isNil:	
	pushq %reg0	

1
	movq $0, %rdi	
	movq %rdi, 224(%rax)	

1
	movq $126, %reg0	
	movq $.string4_l, %rdi	

1
	movq $62150, %reg0	
	movq %reg0, %rcx	

1
	movq %reg0, 544(%rax)	
	movq $3000, %reg0	

1
	jne .Matrix.set_30	
	movq %reg0, 96(%reg1)	

1
	movq 240(%rbx), %reg1	
	movq 0(%rbx), %r12	


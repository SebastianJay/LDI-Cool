class_map
12
A
1
initializer
var
Int
9
Int
integer
0
A2I
0
B
1
initializer
var
Int
9
Int
integer
0
Bool
0
C
1
initializer
var
Int
9
Int
integer
0
D
1
initializer
var
Int
9
Int
integer
0
E
1
initializer
var
Int
9
Int
integer
0
IO
0
Int
0
Main
4
no_initializer
char
String
no_initializer
avar
A
no_initializer
a_var
A
initializer
flag
Bool
256
Bool
true
Object
0
String
0
implementation_map
12
A
10
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
value
0
A
11
Int
identifier
11
var
set_var
1
num
A
14
SELF_TYPE
block
2
15
Int
assign
15
var
15
Int
identifier
15
num
16
SELF_TYPE
identifier
16
self
method1
1
num
A
21
SELF_TYPE
identifier
21
self
method2
2
num1
num2
A
25
B
let
1
let_binding_no_init
25
x
25
Int
26
B
block
2
27
Int
assign
27
x
27
Int
plus
27
Int
identifier
27
num1
27
Int
identifier
27
num2
28
B
dynamic_dispatch
28
B
new
28
B
28
set_var
1
28
Int
identifier
28
x
method3
1
num
A
34
C
let
1
let_binding_no_init
34
x
34
Int
35
C
block
2
36
Int
assign
36
x
36
Int
negate
36
Int
identifier
36
num
37
C
dynamic_dispatch
37
C
new
37
C
37
set_var
1
37
Int
identifier
37
x
method4
2
num1
num2
A
43
D
if
43
Bool
lt
43
Int
identifier
43
num2
43
Int
identifier
43
num1
44
D
let
1
let_binding_no_init
44
x
44
Int
45
D
block
2
46
Int
assign
46
x
46
Int
minus
46
Int
identifier
46
num1
46
Int
identifier
46
num2
47
D
dynamic_dispatch
47
D
new
47
D
47
set_var
1
47
Int
identifier
47
x
51
D
let
1
let_binding_no_init
51
x
51
Int
52
D
block
2
53
Int
assign
53
x
53
Int
minus
53
Int
identifier
53
num2
53
Int
identifier
53
num1
54
D
dynamic_dispatch
54
D
new
54
D
54
set_var
1
54
Int
identifier
54
x
method5
1
num
A
61
E
let
1
let_binding_init
61
x
61
Int
61
Int
integer
1
62
E
block
2
63
Object
let
1
let_binding_init
63
y
63
Int
63
Int
integer
1
64
Object
while
64
Bool
le
64
Int
identifier
64
y
64
Int
identifier
64
num
65
Int
block
2
66
Int
assign
66
x
66
Int
times
66
Int
identifier
66
x
66
Int
identifier
66
y
67
Int
assign
67
y
67
Int
plus
67
Int
identifier
67
y
67
Int
integer
1
71
E
dynamic_dispatch
71
E
new
71
E
71
set_var
1
71
Int
identifier
71
x
A2I
9
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
c2i
1
char
A2I
158
Int
if
158
Bool
eq
158
String
identifier
158
char
158
String
string
0
158
Int
integer
0
159
Int
if
159
Bool
eq
159
String
identifier
159
char
159
String
string
1
159
Int
integer
1
160
Int
if
160
Bool
eq
160
String
identifier
160
char
160
String
string
2
160
Int
integer
2
161
Int
if
161
Bool
eq
161
String
identifier
161
char
161
String
string
3
161
Int
integer
3
162
Int
if
162
Bool
eq
162
String
identifier
162
char
162
String
string
4
162
Int
integer
4
163
Int
if
163
Bool
eq
163
String
identifier
163
char
163
String
string
5
163
Int
integer
5
164
Int
if
164
Bool
eq
164
String
identifier
164
char
164
String
string
6
164
Int
integer
6
165
Int
if
165
Bool
eq
165
String
identifier
165
char
165
String
string
7
165
Int
integer
7
166
Int
if
166
Bool
eq
166
String
identifier
166
char
166
String
string
8
166
Int
integer
8
167
Int
if
167
Bool
eq
167
String
identifier
167
char
167
String
string
9
167
Int
integer
9
168
Int
block
2
168
Object
self_dispatch
168
abort
0
168
Int
integer
0
i2c
1
i
A2I
177
String
if
177
Bool
eq
177
Int
identifier
177
i
177
Int
integer
0
177
String
string
0
178
String
if
178
Bool
eq
178
Int
identifier
178
i
178
Int
integer
1
178
String
string
1
179
String
if
179
Bool
eq
179
Int
identifier
179
i
179
Int
integer
2
179
String
string
2
180
String
if
180
Bool
eq
180
Int
identifier
180
i
180
Int
integer
3
180
String
string
3
181
String
if
181
Bool
eq
181
Int
identifier
181
i
181
Int
integer
4
181
String
string
4
182
String
if
182
Bool
eq
182
Int
identifier
182
i
182
Int
integer
5
182
String
string
5
183
String
if
183
Bool
eq
183
Int
identifier
183
i
183
Int
integer
6
183
String
string
6
184
String
if
184
Bool
eq
184
Int
identifier
184
i
184
Int
integer
7
184
String
string
7
185
String
if
185
Bool
eq
185
Int
identifier
185
i
185
Int
integer
8
185
String
string
8
186
String
if
186
Bool
eq
186
Int
identifier
186
i
186
Int
integer
9
186
String
string
9
187
String
block
2
187
Object
self_dispatch
187
abort
0
187
String
string

a2i
1
s
A2I
200
Int
if
200
Bool
eq
200
Int
dynamic_dispatch
200
String
identifier
200
s
200
length
0
200
Int
integer
0
200
Int
integer
0
201
Int
if
201
Bool
eq
201
String
dynamic_dispatch
201
String
identifier
201
s
201
substr
2
201
Int
integer
0
201
Int
integer
1
201
String
string
-
201
Int
negate
201
Int
self_dispatch
201
a2i_aux
1
201
String
dynamic_dispatch
201
String
identifier
201
s
201
substr
2
201
Int
integer
1
201
Int
minus
201
Int
dynamic_dispatch
201
String
identifier
201
s
201
length
0
201
Int
integer
1
202
Int
if
202
Bool
eq
202
String
dynamic_dispatch
202
String
identifier
202
s
202
substr
2
202
Int
integer
0
202
Int
integer
1
202
String
string
+
202
Int
self_dispatch
202
a2i_aux
1
202
String
dynamic_dispatch
202
String
identifier
202
s
202
substr
2
202
Int
integer
1
202
Int
minus
202
Int
dynamic_dispatch
202
String
identifier
202
s
202
length
0
202
Int
integer
1
203
Int
self_dispatch
203
a2i_aux
1
203
String
identifier
203
s
a2i_aux
1
s
A2I
212
Int
let
1
let_binding_init
212
int
212
Int
212
Int
integer
0
213
Int
block
2
214
Object
let
1
let_binding_init
214
j
214
Int
214
Int
dynamic_dispatch
214
String
identifier
214
s
214
length
0
215
Object
let
1
let_binding_init
215
i
215
Int
215
Int
integer
0
216
Object
while
216
Bool
lt
216
Int
identifier
216
i
216
Int
identifier
216
j
217
Int
block
2
218
Int
assign
218
int
218
Int
plus
218
Int
times
218
Int
identifier
218
int
218
Int
integer
10
218
Int
self_dispatch
218
c2i
1
218
String
dynamic_dispatch
218
String
identifier
218
s
218
substr
2
218
Int
identifier
218
i
218
Int
integer
1
219
Int
assign
219
i
219
Int
plus
219
Int
identifier
219
i
219
Int
integer
1
224
Int
identifier
224
int
i2a
1
i
A2I
233
String
if
233
Bool
eq
233
Int
identifier
233
i
233
Int
integer
0
233
String
string
0
234
String
if
234
Bool
lt
234
Int
integer
0
234
Int
identifier
234
i
234
String
self_dispatch
234
i2a_aux
1
234
Int
identifier
234
i
235
String
dynamic_dispatch
235
String
string
-
235
concat
1
235
String
self_dispatch
235
i2a_aux
1
235
Int
times
235
Int
identifier
235
i
235
Int
negate
235
Int
integer
1
i2a_aux
1
i
A2I
242
String
if
242
Bool
eq
242
Int
identifier
242
i
242
Int
integer
0
242
String
string

243
String
let
1
let_binding_init
243
next
243
Int
243
Int
divide
243
Int
identifier
243
i
243
Int
integer
10
244
String
dynamic_dispatch
244
String
self_dispatch
244
i2a_aux
1
244
Int
identifier
244
next
244
concat
1
244
String
self_dispatch
244
i2c
1
244
Int
minus
244
Int
identifier
244
i
244
Int
times
244
Int
identifier
244
next
244
Int
integer
10
B
10
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
value
0
A
11
Int
identifier
11
var
set_var
1
num
A
14
SELF_TYPE
block
2
15
Int
assign
15
var
15
Int
identifier
15
num
16
SELF_TYPE
identifier
16
self
method1
1
num
A
21
SELF_TYPE
identifier
21
self
method2
2
num1
num2
A
25
B
let
1
let_binding_no_init
25
x
25
Int
26
B
block
2
27
Int
assign
27
x
27
Int
plus
27
Int
identifier
27
num1
27
Int
identifier
27
num2
28
B
dynamic_dispatch
28
B
new
28
B
28
set_var
1
28
Int
identifier
28
x
method3
1
num
A
34
C
let
1
let_binding_no_init
34
x
34
Int
35
C
block
2
36
Int
assign
36
x
36
Int
negate
36
Int
identifier
36
num
37
C
dynamic_dispatch
37
C
new
37
C
37
set_var
1
37
Int
identifier
37
x
method4
2
num1
num2
A
43
D
if
43
Bool
lt
43
Int
identifier
43
num2
43
Int
identifier
43
num1
44
D
let
1
let_binding_no_init
44
x
44
Int
45
D
block
2
46
Int
assign
46
x
46
Int
minus
46
Int
identifier
46
num1
46
Int
identifier
46
num2
47
D
dynamic_dispatch
47
D
new
47
D
47
set_var
1
47
Int
identifier
47
x
51
D
let
1
let_binding_no_init
51
x
51
Int
52
D
block
2
53
Int
assign
53
x
53
Int
minus
53
Int
identifier
53
num2
53
Int
identifier
53
num1
54
D
dynamic_dispatch
54
D
new
54
D
54
set_var
1
54
Int
identifier
54
x
method5
1
num
B
81
E
let
1
let_binding_no_init
81
x
81
Int
82
E
block
2
83
Int
assign
83
x
83
Int
times
83
Int
identifier
83
num
83
Int
identifier
83
num
84
E
dynamic_dispatch
84
E
new
84
E
84
set_var
1
84
Int
identifier
84
x
Bool
3
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
C
11
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
value
0
A
11
Int
identifier
11
var
set_var
1
num
A
14
SELF_TYPE
block
2
15
Int
assign
15
var
15
Int
identifier
15
num
16
SELF_TYPE
identifier
16
self
method1
1
num
A
21
SELF_TYPE
identifier
21
self
method2
2
num1
num2
A
25
B
let
1
let_binding_no_init
25
x
25
Int
26
B
block
2
27
Int
assign
27
x
27
Int
plus
27
Int
identifier
27
num1
27
Int
identifier
27
num2
28
B
dynamic_dispatch
28
B
new
28
B
28
set_var
1
28
Int
identifier
28
x
method3
1
num
A
34
C
let
1
let_binding_no_init
34
x
34
Int
35
C
block
2
36
Int
assign
36
x
36
Int
negate
36
Int
identifier
36
num
37
C
dynamic_dispatch
37
C
new
37
C
37
set_var
1
37
Int
identifier
37
x
method4
2
num1
num2
A
43
D
if
43
Bool
lt
43
Int
identifier
43
num2
43
Int
identifier
43
num1
44
D
let
1
let_binding_no_init
44
x
44
Int
45
D
block
2
46
Int
assign
46
x
46
Int
minus
46
Int
identifier
46
num1
46
Int
identifier
46
num2
47
D
dynamic_dispatch
47
D
new
47
D
47
set_var
1
47
Int
identifier
47
x
51
D
let
1
let_binding_no_init
51
x
51
Int
52
D
block
2
53
Int
assign
53
x
53
Int
minus
53
Int
identifier
53
num2
53
Int
identifier
53
num1
54
D
dynamic_dispatch
54
D
new
54
D
54
set_var
1
54
Int
identifier
54
x
method5
1
num
C
103
E
let
1
let_binding_no_init
103
x
103
Int
104
E
block
2
105
Int
assign
105
x
105
Int
times
105
Int
times
105
Int
identifier
105
num
105
Int
identifier
105
num
105
Int
identifier
105
num
106
E
dynamic_dispatch
106
E
new
106
E
106
set_var
1
106
Int
identifier
106
x
method6
1
num
C
94
A
let
1
let_binding_no_init
94
x
94
Int
95
A
block
2
96
Int
assign
96
x
96
Int
negate
96
Int
identifier
96
num
97
A
dynamic_dispatch
97
A
new
97
A
97
set_var
1
97
Int
identifier
97
x
D
11
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
value
0
A
11
Int
identifier
11
var
set_var
1
num
A
14
SELF_TYPE
block
2
15
Int
assign
15
var
15
Int
identifier
15
num
16
SELF_TYPE
identifier
16
self
method1
1
num
A
21
SELF_TYPE
identifier
21
self
method2
2
num1
num2
A
25
B
let
1
let_binding_no_init
25
x
25
Int
26
B
block
2
27
Int
assign
27
x
27
Int
plus
27
Int
identifier
27
num1
27
Int
identifier
27
num2
28
B
dynamic_dispatch
28
B
new
28
B
28
set_var
1
28
Int
identifier
28
x
method3
1
num
A
34
C
let
1
let_binding_no_init
34
x
34
Int
35
C
block
2
36
Int
assign
36
x
36
Int
negate
36
Int
identifier
36
num
37
C
dynamic_dispatch
37
C
new
37
C
37
set_var
1
37
Int
identifier
37
x
method4
2
num1
num2
A
43
D
if
43
Bool
lt
43
Int
identifier
43
num2
43
Int
identifier
43
num1
44
D
let
1
let_binding_no_init
44
x
44
Int
45
D
block
2
46
Int
assign
46
x
46
Int
minus
46
Int
identifier
46
num1
46
Int
identifier
46
num2
47
D
dynamic_dispatch
47
D
new
47
D
47
set_var
1
47
Int
identifier
47
x
51
D
let
1
let_binding_no_init
51
x
51
Int
52
D
block
2
53
Int
assign
53
x
53
Int
minus
53
Int
identifier
53
num2
53
Int
identifier
53
num1
54
D
dynamic_dispatch
54
D
new
54
D
54
set_var
1
54
Int
identifier
54
x
method5
1
num
B
81
E
let
1
let_binding_no_init
81
x
81
Int
82
E
block
2
83
Int
assign
83
x
83
Int
times
83
Int
identifier
83
num
83
Int
identifier
83
num
84
E
dynamic_dispatch
84
E
new
84
E
84
set_var
1
84
Int
identifier
84
x
method7
1
num
D
116
Bool
let
1
let_binding_init
116
x
116
Int
116
Int
identifier
116
num
117
Bool
if
117
Bool
lt
117
Int
identifier
117
x
117
Int
integer
0
117
Bool
self_dispatch
117
method7
1
117
Int
negate
117
Int
identifier
117
x
118
Bool
if
118
Bool
eq
118
Int
integer
0
118
Int
identifier
118
x
118
Bool
true
119
Bool
if
119
Bool
eq
119
Int
integer
1
119
Int
identifier
119
x
119
Bool
false
120
Bool
if
120
Bool
eq
120
Int
integer
2
120
Int
identifier
120
x
120
Bool
false
121
Bool
self_dispatch
121
method7
1
121
Int
minus
121
Int
identifier
121
x
121
Int
integer
3
E
12
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
value
0
A
11
Int
identifier
11
var
set_var
1
num
A
14
SELF_TYPE
block
2
15
Int
assign
15
var
15
Int
identifier
15
num
16
SELF_TYPE
identifier
16
self
method1
1
num
A
21
SELF_TYPE
identifier
21
self
method2
2
num1
num2
A
25
B
let
1
let_binding_no_init
25
x
25
Int
26
B
block
2
27
Int
assign
27
x
27
Int
plus
27
Int
identifier
27
num1
27
Int
identifier
27
num2
28
B
dynamic_dispatch
28
B
new
28
B
28
set_var
1
28
Int
identifier
28
x
method3
1
num
A
34
C
let
1
let_binding_no_init
34
x
34
Int
35
C
block
2
36
Int
assign
36
x
36
Int
negate
36
Int
identifier
36
num
37
C
dynamic_dispatch
37
C
new
37
C
37
set_var
1
37
Int
identifier
37
x
method4
2
num1
num2
A
43
D
if
43
Bool
lt
43
Int
identifier
43
num2
43
Int
identifier
43
num1
44
D
let
1
let_binding_no_init
44
x
44
Int
45
D
block
2
46
Int
assign
46
x
46
Int
minus
46
Int
identifier
46
num1
46
Int
identifier
46
num2
47
D
dynamic_dispatch
47
D
new
47
D
47
set_var
1
47
Int
identifier
47
x
51
D
let
1
let_binding_no_init
51
x
51
Int
52
D
block
2
53
Int
assign
53
x
53
Int
minus
53
Int
identifier
53
num2
53
Int
identifier
53
num1
54
D
dynamic_dispatch
54
D
new
54
D
54
set_var
1
54
Int
identifier
54
x
method5
1
num
B
81
E
let
1
let_binding_no_init
81
x
81
Int
82
E
block
2
83
Int
assign
83
x
83
Int
times
83
Int
identifier
83
num
83
Int
identifier
83
num
84
E
dynamic_dispatch
84
E
new
84
E
84
set_var
1
84
Int
identifier
84
x
method7
1
num
D
116
Bool
let
1
let_binding_init
116
x
116
Int
116
Int
identifier
116
num
117
Bool
if
117
Bool
lt
117
Int
identifier
117
x
117
Int
integer
0
117
Bool
self_dispatch
117
method7
1
117
Int
negate
117
Int
identifier
117
x
118
Bool
if
118
Bool
eq
118
Int
integer
0
118
Int
identifier
118
x
118
Bool
true
119
Bool
if
119
Bool
eq
119
Int
integer
1
119
Int
identifier
119
x
119
Bool
false
120
Bool
if
120
Bool
eq
120
Int
integer
2
120
Int
identifier
120
x
120
Bool
false
121
Bool
self_dispatch
121
method7
1
121
Int
minus
121
Int
identifier
121
x
121
Int
integer
3
method6
1
num
E
131
A
let
1
let_binding_no_init
131
x
131
Int
132
A
block
2
133
Int
assign
133
x
133
Int
divide
133
Int
identifier
133
num
133
Int
integer
8
134
A
dynamic_dispatch
134
A
new
134
A
134
set_var
1
134
Int
identifier
134
x
IO
7
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
in_int
0
IO
0
Int
internal
IO.in_int
in_string
0
IO
0
String
internal
IO.in_string
out_int
1
x
IO
0
SELF_TYPE
internal
IO.out_int
out_string
1
x
IO
0
SELF_TYPE
internal
IO.out_string
Int
3
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
Main
14
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
in_int
0
IO
0
Int
internal
IO.in_int
in_string
0
IO
0
String
internal
IO.in_string
out_int
1
x
IO
0
SELF_TYPE
internal
IO.out_int
out_string
1
x
IO
0
SELF_TYPE
internal
IO.out_string
menu
0
Main
260
String
block
27
261
SELF_TYPE
self_dispatch
261
out_string
1
261
String
string
\n\tTo add a number to 
262
SELF_TYPE
self_dispatch
262
print
1
262
A
identifier
262
avar
263
SELF_TYPE
self_dispatch
263
out_string
1
263
String
string
...enter a:\n
264
SELF_TYPE
self_dispatch
264
out_string
1
264
String
string
\tTo negate 
265
SELF_TYPE
self_dispatch
265
print
1
265
A
identifier
265
avar
266
SELF_TYPE
self_dispatch
266
out_string
1
266
String
string
...enter b:\n
267
SELF_TYPE
self_dispatch
267
out_string
1
267
String
string
\tTo find the difference between 
268
SELF_TYPE
self_dispatch
268
print
1
268
A
identifier
268
avar
269
SELF_TYPE
self_dispatch
269
out_string
1
269
String
string
and another number...enter c:\n
270
SELF_TYPE
self_dispatch
270
out_string
1
270
String
string
\tTo find the factorial of 
271
SELF_TYPE
self_dispatch
271
print
1
271
A
identifier
271
avar
272
SELF_TYPE
self_dispatch
272
out_string
1
272
String
string
...enter d:\n
273
SELF_TYPE
self_dispatch
273
out_string
1
273
String
string
\tTo square 
274
SELF_TYPE
self_dispatch
274
print
1
274
A
identifier
274
avar
275
SELF_TYPE
self_dispatch
275
out_string
1
275
String
string
...enter e:\n
276
SELF_TYPE
self_dispatch
276
out_string
1
276
String
string
\tTo cube 
277
SELF_TYPE
self_dispatch
277
print
1
277
A
identifier
277
avar
278
SELF_TYPE
self_dispatch
278
out_string
1
278
String
string
...enter f:\n
279
SELF_TYPE
self_dispatch
279
out_string
1
279
String
string
\tTo find out if 
280
SELF_TYPE
self_dispatch
280
print
1
280
A
identifier
280
avar
281
SELF_TYPE
self_dispatch
281
out_string
1
281
String
string
is a multiple of 3...enter g:\n
282
SELF_TYPE
self_dispatch
282
out_string
1
282
String
string
\tTo divide 
283
SELF_TYPE
self_dispatch
283
print
1
283
A
identifier
283
avar
284
SELF_TYPE
self_dispatch
284
out_string
1
284
String
string
by 8...enter h:\n
285
SELF_TYPE
self_dispatch
285
out_string
1
285
String
string
\tTo get a new number...enter j:\n
286
SELF_TYPE
self_dispatch
286
out_string
1
286
String
string
\tTo quit...enter q:\n\n
287
String
self_dispatch
287
in_string
0
prompt
0
Main
292
String
block
3
293
SELF_TYPE
self_dispatch
293
out_string
1
293
String
string
\n
294
SELF_TYPE
self_dispatch
294
out_string
1
294
String
string
Please enter a number...  
295
String
self_dispatch
295
in_string
0
get_int
0
Main
300
Int
block
1
301
Int
let
1
let_binding_init
301
z
301
A2I
301
A2I
new
301
A2I
302
Int
let
1
let_binding_init
302
s
302
String
302
String
self_dispatch
302
prompt
0
303
Int
dynamic_dispatch
303
A2I
identifier
303
z
303
a2i
1
303
String
identifier
303
s
is_even
1
num
Main
310
Bool
let
1
let_binding_init
310
x
310
Int
310
Int
identifier
310
num
311
Bool
if
311
Bool
lt
311
Int
identifier
311
x
311
Int
integer
0
311
Bool
self_dispatch
311
is_even
1
311
Int
negate
311
Int
identifier
311
x
312
Bool
if
312
Bool
eq
312
Int
integer
0
312
Int
identifier
312
x
312
Bool
true
313
Bool
if
313
Bool
eq
313
Int
integer
1
313
Int
identifier
313
x
313
Bool
false
314
Bool
self_dispatch
314
is_even
1
314
Int
minus
314
Int
identifier
314
x
314
Int
integer
2
class_type
1
var
Main
320
SELF_TYPE
case
320
A
identifier
320
var
6
321
a
321
A
321
SELF_TYPE
self_dispatch
321
out_string
1
321
String
string
Class type is now A\n
322
b
322
B
322
SELF_TYPE
self_dispatch
322
out_string
1
322
String
string
Class type is now B\n
323
c
323
C
323
SELF_TYPE
self_dispatch
323
out_string
1
323
String
string
Class type is now C\n
324
d
324
D
324
SELF_TYPE
self_dispatch
324
out_string
1
324
String
string
Class type is now D\n
325
e
325
E
325
SELF_TYPE
self_dispatch
325
out_string
1
325
String
string
Class type is now E\n
326
o
326
Object
326
SELF_TYPE
self_dispatch
326
out_string
1
326
String
string
Oooops\n
print
1
var
Main
331
SELF_TYPE
let
1
let_binding_init
331
z
331
A2I
331
A2I
new
331
A2I
332
SELF_TYPE
block
2
333
SELF_TYPE
self_dispatch
333
out_string
1
333
String
dynamic_dispatch
333
A2I
identifier
333
z
333
i2a
1
333
Int
dynamic_dispatch
333
A
identifier
333
var
333
value
0
334
SELF_TYPE
self_dispatch
334
out_string
1
334
String
string
 
main
0
Main
340
Object
block
2
341
A
assign
341
avar
341
A
new
341
A
342
Object
while
342
Bool
identifier
342
flag
343
Object
block
6
345
SELF_TYPE
self_dispatch
345
out_string
1
345
String
string
number 
346
SELF_TYPE
self_dispatch
346
print
1
346
A
identifier
346
avar
347
SELF_TYPE
if
347
Bool
self_dispatch
347
is_even
1
347
Int
dynamic_dispatch
347
A
identifier
347
avar
347
value
0
348
SELF_TYPE
self_dispatch
348
out_string
1
348
String
string
is even!\n
350
SELF_TYPE
self_dispatch
350
out_string
1
350
String
string
is odd!\n
353
SELF_TYPE
self_dispatch
353
class_type
1
353
A
identifier
353
avar
354
String
assign
354
char
354
String
self_dispatch
354
menu
0
355
Object
if
355
Bool
eq
355
String
identifier
355
char
355
String
string
a
356
B
block
2
357
A
assign
357
a_var
357
A
dynamic_dispatch
357
A
new
357
A
357
set_var
1
357
Int
self_dispatch
357
get_int
0
358
B
assign
358
avar
358
B
dynamic_dispatch
358
B
new
358
B
358
method2
2
358
Int
dynamic_dispatch
358
A
identifier
358
avar
358
value
0
358
Int
dynamic_dispatch
358
A
identifier
358
a_var
358
value
0
360
Object
if
360
Bool
eq
360
String
identifier
360
char
360
String
string
b
361
Object
case
361
A
identifier
361
avar
3
362
c
362
C
362
A
assign
362
avar
362
A
dynamic_dispatch
362
C
identifier
362
c
362
method6
1
362
Int
dynamic_dispatch
362
C
identifier
362
c
362
value
0
363
a
363
A
363
C
assign
363
avar
363
C
dynamic_dispatch
363
A
identifier
363
a
363
method3
1
363
Int
dynamic_dispatch
363
A
identifier
363
a
363
value
0
364
o
364
Object
364
Int
block
3
365
SELF_TYPE
self_dispatch
365
out_string
1
365
String
string
Oooops\n
366
Object
self_dispatch
366
abort
0
366
Int
integer
0
369
Object
if
369
Bool
eq
369
String
identifier
369
char
369
String
string
c
370
D
block
2
371
A
assign
371
a_var
371
A
dynamic_dispatch
371
A
new
371
A
371
set_var
1
371
Int
self_dispatch
371
get_int
0
372
D
assign
372
avar
372
D
dynamic_dispatch
372
D
new
372
D
372
method4
2
372
Int
dynamic_dispatch
372
A
identifier
372
avar
372
value
0
372
Int
dynamic_dispatch
372
A
identifier
372
a_var
372
value
0
374
Object
if
374
Bool
eq
374
String
identifier
374
char
374
String
string
d
374
E
assign
374
avar
374
E
static_dispatch
374
C
new
374
C
374
A
374
method5
1
374
Int
dynamic_dispatch
374
A
identifier
374
avar
374
value
0
376
Object
if
376
Bool
eq
376
String
identifier
376
char
376
String
string
e
376
E
assign
376
avar
376
E
static_dispatch
376
C
new
376
C
376
B
376
method5
1
376
Int
dynamic_dispatch
376
A
identifier
376
avar
376
value
0
378
Object
if
378
Bool
eq
378
String
identifier
378
char
378
String
string
f
378
E
assign
378
avar
378
E
static_dispatch
378
C
new
378
C
378
C
378
method5
1
378
Int
dynamic_dispatch
378
A
identifier
378
avar
378
value
0
380
Object
if
380
Bool
eq
380
String
identifier
380
char
380
String
string
g
381
SELF_TYPE
if
381
Bool
dynamic_dispatch
381
D
new
381
D
381
method7
1
381
Int
dynamic_dispatch
381
A
identifier
381
avar
381
value
0
383
SELF_TYPE
block
3
384
SELF_TYPE
self_dispatch
384
out_string
1
384
String
string
number 
385
SELF_TYPE
self_dispatch
385
print
1
385
A
identifier
385
avar
386
SELF_TYPE
self_dispatch
386
out_string
1
386
String
string
is divisible by 3.\n
389
SELF_TYPE
block
3
390
SELF_TYPE
self_dispatch
390
out_string
1
390
String
string
number 
391
SELF_TYPE
self_dispatch
391
print
1
391
A
identifier
391
avar
392
SELF_TYPE
self_dispatch
392
out_string
1
392
String
string
is not divisible by 3.\n
395
Object
if
395
Bool
eq
395
String
identifier
395
char
395
String
string
h
396
A
let
1
let_binding_no_init
396
x
396
A
397
A
block
3
398
A
assign
398
x
398
A
dynamic_dispatch
398
E
new
398
E
398
method6
1
398
Int
dynamic_dispatch
398
A
identifier
398
avar
398
value
0
399
SELF_TYPE
let
1
let_binding_init
399
r
399
Int
399
Int
minus
399
Int
dynamic_dispatch
399
A
identifier
399
avar
399
value
0
399
Int
times
399
Int
dynamic_dispatch
399
A
identifier
399
x
399
value
0
399
Int
integer
8
400
SELF_TYPE
block
6
401
SELF_TYPE
self_dispatch
401
out_string
1
401
String
string
number 
402
SELF_TYPE
self_dispatch
402
print
1
402
A
identifier
402
avar
403
SELF_TYPE
self_dispatch
403
out_string
1
403
String
string
is equal to 
404
SELF_TYPE
self_dispatch
404
print
1
404
A
identifier
404
x
405
SELF_TYPE
self_dispatch
405
out_string
1
405
String
string
times 8 with a remainder of 
406
SELF_TYPE
let
1
let_binding_init
406
a
406
A2I
406
A2I
new
406
A2I
407
SELF_TYPE
block
2
408
SELF_TYPE
self_dispatch
408
out_string
1
408
String
dynamic_dispatch
408
A2I
identifier
408
a
408
i2a
1
408
Int
identifier
408
r
409
SELF_TYPE
self_dispatch
409
out_string
1
409
String
string
\n
414
A
assign
414
avar
414
A
identifier
414
x
418
Object
if
418
Bool
eq
418
String
identifier
418
char
418
String
string
j
418
A
assign
418
avar
418
A
new
418
A
420
Object
if
420
Bool
eq
420
String
identifier
420
char
420
String
string
q
420
Bool
assign
420
flag
420
Bool
false
422
A
assign
422
avar
422
A
dynamic_dispatch
422
A
new
422
A
422
method1
1
422
Int
dynamic_dispatch
422
A
identifier
422
avar
422
value
0
Object
3
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
String
6
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
concat
1
s
String
0
String
internal
String.concat
length
0
String
0
Int
internal
String.length
substr
2
i
l
String
0
String
internal
String.substr
parent_map
11
A
Object
A2I
Object
B
A
Bool
Object
C
B
D
B
E
D
IO
Object
Int
Object
Main
IO
String
Object
7
7
A
no_inherits
8
attribute_init
9
var
9
Int
9
Int
integer
0
method
11
value
0
11
Int
11
Int
identifier
11
var
method
13
set_var
1
13
num
13
Int
13
SELF_TYPE
14
SELF_TYPE
block
2
15
Int
assign
15
var
15
Int
identifier
15
num
16
SELF_TYPE
identifier
16
self
method
20
method1
1
20
num
20
Int
20
SELF_TYPE
21
SELF_TYPE
identifier
21
self
method
24
method2
2
24
num1
24
Int
24
num2
24
Int
24
B
25
B
let
1
let_binding_no_init
25
x
25
Int
26
B
block
2
27
Int
assign
27
x
27
Int
plus
27
Int
identifier
27
num1
27
Int
identifier
27
num2
28
B
dynamic_dispatch
28
B
new
28
B
28
set_var
1
28
Int
identifier
28
x
method
33
method3
1
33
num
33
Int
33
C
34
C
let
1
let_binding_no_init
34
x
34
Int
35
C
block
2
36
Int
assign
36
x
36
Int
negate
36
Int
identifier
36
num
37
C
dynamic_dispatch
37
C
new
37
C
37
set_var
1
37
Int
identifier
37
x
method
42
method4
2
42
num1
42
Int
42
num2
42
Int
42
D
43
D
if
43
Bool
lt
43
Int
identifier
43
num2
43
Int
identifier
43
num1
44
D
let
1
let_binding_no_init
44
x
44
Int
45
D
block
2
46
Int
assign
46
x
46
Int
minus
46
Int
identifier
46
num1
46
Int
identifier
46
num2
47
D
dynamic_dispatch
47
D
new
47
D
47
set_var
1
47
Int
identifier
47
x
51
D
let
1
let_binding_no_init
51
x
51
Int
52
D
block
2
53
Int
assign
53
x
53
Int
minus
53
Int
identifier
53
num2
53
Int
identifier
53
num1
54
D
dynamic_dispatch
54
D
new
54
D
54
set_var
1
54
Int
identifier
54
x
method
60
method5
1
60
num
60
Int
60
E
61
E
let
1
let_binding_init
61
x
61
Int
61
Int
integer
1
62
E
block
2
63
Object
let
1
let_binding_init
63
y
63
Int
63
Int
integer
1
64
Object
while
64
Bool
le
64
Int
identifier
64
y
64
Int
identifier
64
num
65
Int
block
2
66
Int
assign
66
x
66
Int
times
66
Int
identifier
66
x
66
Int
identifier
66
y
67
Int
assign
67
y
67
Int
plus
67
Int
identifier
67
y
67
Int
integer
1
71
E
dynamic_dispatch
71
E
new
71
E
71
set_var
1
71
Int
identifier
71
x
78
B
inherits
78
A
1
method
80
method5
1
80
num
80
Int
80
E
81
E
let
1
let_binding_no_init
81
x
81
Int
82
E
block
2
83
Int
assign
83
x
83
Int
times
83
Int
identifier
83
num
83
Int
identifier
83
num
84
E
dynamic_dispatch
84
E
new
84
E
84
set_var
1
84
Int
identifier
84
x
91
C
inherits
91
B
2
method
93
method6
1
93
num
93
Int
93
A
94
A
let
1
let_binding_no_init
94
x
94
Int
95
A
block
2
96
Int
assign
96
x
96
Int
negate
96
Int
identifier
96
num
97
A
dynamic_dispatch
97
A
new
97
A
97
set_var
1
97
Int
identifier
97
x
method
102
method5
1
102
num
102
Int
102
E
103
E
let
1
let_binding_no_init
103
x
103
Int
104
E
block
2
105
Int
assign
105
x
105
Int
times
105
Int
times
105
Int
identifier
105
num
105
Int
identifier
105
num
105
Int
identifier
105
num
106
E
dynamic_dispatch
106
E
new
106
E
106
set_var
1
106
Int
identifier
106
x
113
D
inherits
113
B
1
method
115
method7
1
115
num
115
Int
115
Bool
116
Bool
let
1
let_binding_init
116
x
116
Int
116
Int
identifier
116
num
117
Bool
if
117
Bool
lt
117
Int
identifier
117
x
117
Int
integer
0
117
Bool
self_dispatch
117
method7
1
117
Int
negate
117
Int
identifier
117
x
118
Bool
if
118
Bool
eq
118
Int
integer
0
118
Int
identifier
118
x
118
Bool
true
119
Bool
if
119
Bool
eq
119
Int
integer
1
119
Int
identifier
119
x
119
Bool
false
120
Bool
if
120
Bool
eq
120
Int
integer
2
120
Int
identifier
120
x
120
Bool
false
121
Bool
self_dispatch
121
method7
1
121
Int
minus
121
Int
identifier
121
x
121
Int
integer
3
128
E
inherits
128
D
1
method
130
method6
1
130
num
130
Int
130
A
131
A
let
1
let_binding_no_init
131
x
131
Int
132
A
block
2
133
Int
assign
133
x
133
Int
divide
133
Int
identifier
133
num
133
Int
integer
8
134
A
dynamic_dispatch
134
A
new
134
A
134
set_var
1
134
Int
identifier
134
x
155
A2I
no_inherits
6
method
157
c2i
1
157
char
157
String
157
Int
158
Int
if
158
Bool
eq
158
String
identifier
158
char
158
String
string
0
158
Int
integer
0
159
Int
if
159
Bool
eq
159
String
identifier
159
char
159
String
string
1
159
Int
integer
1
160
Int
if
160
Bool
eq
160
String
identifier
160
char
160
String
string
2
160
Int
integer
2
161
Int
if
161
Bool
eq
161
String
identifier
161
char
161
String
string
3
161
Int
integer
3
162
Int
if
162
Bool
eq
162
String
identifier
162
char
162
String
string
4
162
Int
integer
4
163
Int
if
163
Bool
eq
163
String
identifier
163
char
163
String
string
5
163
Int
integer
5
164
Int
if
164
Bool
eq
164
String
identifier
164
char
164
String
string
6
164
Int
integer
6
165
Int
if
165
Bool
eq
165
String
identifier
165
char
165
String
string
7
165
Int
integer
7
166
Int
if
166
Bool
eq
166
String
identifier
166
char
166
String
string
8
166
Int
integer
8
167
Int
if
167
Bool
eq
167
String
identifier
167
char
167
String
string
9
167
Int
integer
9
168
Int
block
2
168
Object
self_dispatch
168
abort
0
168
Int
integer
0
method
176
i2c
1
176
i
176
Int
176
String
177
String
if
177
Bool
eq
177
Int
identifier
177
i
177
Int
integer
0
177
String
string
0
178
String
if
178
Bool
eq
178
Int
identifier
178
i
178
Int
integer
1
178
String
string
1
179
String
if
179
Bool
eq
179
Int
identifier
179
i
179
Int
integer
2
179
String
string
2
180
String
if
180
Bool
eq
180
Int
identifier
180
i
180
Int
integer
3
180
String
string
3
181
String
if
181
Bool
eq
181
Int
identifier
181
i
181
Int
integer
4
181
String
string
4
182
String
if
182
Bool
eq
182
Int
identifier
182
i
182
Int
integer
5
182
String
string
5
183
String
if
183
Bool
eq
183
Int
identifier
183
i
183
Int
integer
6
183
String
string
6
184
String
if
184
Bool
eq
184
Int
identifier
184
i
184
Int
integer
7
184
String
string
7
185
String
if
185
Bool
eq
185
Int
identifier
185
i
185
Int
integer
8
185
String
string
8
186
String
if
186
Bool
eq
186
Int
identifier
186
i
186
Int
integer
9
186
String
string
9
187
String
block
2
187
Object
self_dispatch
187
abort
0
187
String
string

method
199
a2i
1
199
s
199
String
199
Int
200
Int
if
200
Bool
eq
200
Int
dynamic_dispatch
200
String
identifier
200
s
200
length
0
200
Int
integer
0
200
Int
integer
0
201
Int
if
201
Bool
eq
201
String
dynamic_dispatch
201
String
identifier
201
s
201
substr
2
201
Int
integer
0
201
Int
integer
1
201
String
string
-
201
Int
negate
201
Int
self_dispatch
201
a2i_aux
1
201
String
dynamic_dispatch
201
String
identifier
201
s
201
substr
2
201
Int
integer
1
201
Int
minus
201
Int
dynamic_dispatch
201
String
identifier
201
s
201
length
0
201
Int
integer
1
202
Int
if
202
Bool
eq
202
String
dynamic_dispatch
202
String
identifier
202
s
202
substr
2
202
Int
integer
0
202
Int
integer
1
202
String
string
+
202
Int
self_dispatch
202
a2i_aux
1
202
String
dynamic_dispatch
202
String
identifier
202
s
202
substr
2
202
Int
integer
1
202
Int
minus
202
Int
dynamic_dispatch
202
String
identifier
202
s
202
length
0
202
Int
integer
1
203
Int
self_dispatch
203
a2i_aux
1
203
String
identifier
203
s
method
211
a2i_aux
1
211
s
211
String
211
Int
212
Int
let
1
let_binding_init
212
int
212
Int
212
Int
integer
0
213
Int
block
2
214
Object
let
1
let_binding_init
214
j
214
Int
214
Int
dynamic_dispatch
214
String
identifier
214
s
214
length
0
215
Object
let
1
let_binding_init
215
i
215
Int
215
Int
integer
0
216
Object
while
216
Bool
lt
216
Int
identifier
216
i
216
Int
identifier
216
j
217
Int
block
2
218
Int
assign
218
int
218
Int
plus
218
Int
times
218
Int
identifier
218
int
218
Int
integer
10
218
Int
self_dispatch
218
c2i
1
218
String
dynamic_dispatch
218
String
identifier
218
s
218
substr
2
218
Int
identifier
218
i
218
Int
integer
1
219
Int
assign
219
i
219
Int
plus
219
Int
identifier
219
i
219
Int
integer
1
224
Int
identifier
224
int
method
232
i2a
1
232
i
232
Int
232
String
233
String
if
233
Bool
eq
233
Int
identifier
233
i
233
Int
integer
0
233
String
string
0
234
String
if
234
Bool
lt
234
Int
integer
0
234
Int
identifier
234
i
234
String
self_dispatch
234
i2a_aux
1
234
Int
identifier
234
i
235
String
dynamic_dispatch
235
String
string
-
235
concat
1
235
String
self_dispatch
235
i2a_aux
1
235
Int
times
235
Int
identifier
235
i
235
Int
negate
235
Int
integer
1
method
241
i2a_aux
1
241
i
241
Int
241
String
242
String
if
242
Bool
eq
242
Int
identifier
242
i
242
Int
integer
0
242
String
string

243
String
let
1
let_binding_init
243
next
243
Int
243
Int
divide
243
Int
identifier
243
i
243
Int
integer
10
244
String
dynamic_dispatch
244
String
self_dispatch
244
i2a_aux
1
244
Int
identifier
244
next
244
concat
1
244
String
self_dispatch
244
i2c
1
244
Int
minus
244
Int
identifier
244
i
244
Int
times
244
Int
identifier
244
next
244
Int
integer
10
251
Main
inherits
251
IO
11
attribute_no_init
253
char
253
String
attribute_no_init
254
avar
254
A
attribute_no_init
255
a_var
255
A
attribute_init
256
flag
256
Bool
256
Bool
true
method
259
menu
0
259
String
260
String
block
27
261
SELF_TYPE
self_dispatch
261
out_string
1
261
String
string
\n\tTo add a number to 
262
SELF_TYPE
self_dispatch
262
print
1
262
A
identifier
262
avar
263
SELF_TYPE
self_dispatch
263
out_string
1
263
String
string
...enter a:\n
264
SELF_TYPE
self_dispatch
264
out_string
1
264
String
string
\tTo negate 
265
SELF_TYPE
self_dispatch
265
print
1
265
A
identifier
265
avar
266
SELF_TYPE
self_dispatch
266
out_string
1
266
String
string
...enter b:\n
267
SELF_TYPE
self_dispatch
267
out_string
1
267
String
string
\tTo find the difference between 
268
SELF_TYPE
self_dispatch
268
print
1
268
A
identifier
268
avar
269
SELF_TYPE
self_dispatch
269
out_string
1
269
String
string
and another number...enter c:\n
270
SELF_TYPE
self_dispatch
270
out_string
1
270
String
string
\tTo find the factorial of 
271
SELF_TYPE
self_dispatch
271
print
1
271
A
identifier
271
avar
272
SELF_TYPE
self_dispatch
272
out_string
1
272
String
string
...enter d:\n
273
SELF_TYPE
self_dispatch
273
out_string
1
273
String
string
\tTo square 
274
SELF_TYPE
self_dispatch
274
print
1
274
A
identifier
274
avar
275
SELF_TYPE
self_dispatch
275
out_string
1
275
String
string
...enter e:\n
276
SELF_TYPE
self_dispatch
276
out_string
1
276
String
string
\tTo cube 
277
SELF_TYPE
self_dispatch
277
print
1
277
A
identifier
277
avar
278
SELF_TYPE
self_dispatch
278
out_string
1
278
String
string
...enter f:\n
279
SELF_TYPE
self_dispatch
279
out_string
1
279
String
string
\tTo find out if 
280
SELF_TYPE
self_dispatch
280
print
1
280
A
identifier
280
avar
281
SELF_TYPE
self_dispatch
281
out_string
1
281
String
string
is a multiple of 3...enter g:\n
282
SELF_TYPE
self_dispatch
282
out_string
1
282
String
string
\tTo divide 
283
SELF_TYPE
self_dispatch
283
print
1
283
A
identifier
283
avar
284
SELF_TYPE
self_dispatch
284
out_string
1
284
String
string
by 8...enter h:\n
285
SELF_TYPE
self_dispatch
285
out_string
1
285
String
string
\tTo get a new number...enter j:\n
286
SELF_TYPE
self_dispatch
286
out_string
1
286
String
string
\tTo quit...enter q:\n\n
287
String
self_dispatch
287
in_string
0
method
291
prompt
0
291
String
292
String
block
3
293
SELF_TYPE
self_dispatch
293
out_string
1
293
String
string
\n
294
SELF_TYPE
self_dispatch
294
out_string
1
294
String
string
Please enter a number...  
295
String
self_dispatch
295
in_string
0
method
299
get_int
0
299
Int
300
Int
block
1
301
Int
let
1
let_binding_init
301
z
301
A2I
301
A2I
new
301
A2I
302
Int
let
1
let_binding_init
302
s
302
String
302
String
self_dispatch
302
prompt
0
303
Int
dynamic_dispatch
303
A2I
identifier
303
z
303
a2i
1
303
String
identifier
303
s
method
309
is_even
1
309
num
309
Int
309
Bool
310
Bool
let
1
let_binding_init
310
x
310
Int
310
Int
identifier
310
num
311
Bool
if
311
Bool
lt
311
Int
identifier
311
x
311
Int
integer
0
311
Bool
self_dispatch
311
is_even
1
311
Int
negate
311
Int
identifier
311
x
312
Bool
if
312
Bool
eq
312
Int
integer
0
312
Int
identifier
312
x
312
Bool
true
313
Bool
if
313
Bool
eq
313
Int
integer
1
313
Int
identifier
313
x
313
Bool
false
314
Bool
self_dispatch
314
is_even
1
314
Int
minus
314
Int
identifier
314
x
314
Int
integer
2
method
319
class_type
1
319
var
319
A
319
SELF_TYPE
320
SELF_TYPE
case
320
A
identifier
320
var
6
321
a
321
A
321
SELF_TYPE
self_dispatch
321
out_string
1
321
String
string
Class type is now A\n
322
b
322
B
322
SELF_TYPE
self_dispatch
322
out_string
1
322
String
string
Class type is now B\n
323
c
323
C
323
SELF_TYPE
self_dispatch
323
out_string
1
323
String
string
Class type is now C\n
324
d
324
D
324
SELF_TYPE
self_dispatch
324
out_string
1
324
String
string
Class type is now D\n
325
e
325
E
325
SELF_TYPE
self_dispatch
325
out_string
1
325
String
string
Class type is now E\n
326
o
326
Object
326
SELF_TYPE
self_dispatch
326
out_string
1
326
String
string
Oooops\n
method
330
print
1
330
var
330
A
330
SELF_TYPE
331
SELF_TYPE
let
1
let_binding_init
331
z
331
A2I
331
A2I
new
331
A2I
332
SELF_TYPE
block
2
333
SELF_TYPE
self_dispatch
333
out_string
1
333
String
dynamic_dispatch
333
A2I
identifier
333
z
333
i2a
1
333
Int
dynamic_dispatch
333
A
identifier
333
var
333
value
0
334
SELF_TYPE
self_dispatch
334
out_string
1
334
String
string
 
method
339
main
0
339
Object
340
Object
block
2
341
A
assign
341
avar
341
A
new
341
A
342
Object
while
342
Bool
identifier
342
flag
343
Object
block
6
345
SELF_TYPE
self_dispatch
345
out_string
1
345
String
string
number 
346
SELF_TYPE
self_dispatch
346
print
1
346
A
identifier
346
avar
347
SELF_TYPE
if
347
Bool
self_dispatch
347
is_even
1
347
Int
dynamic_dispatch
347
A
identifier
347
avar
347
value
0
348
SELF_TYPE
self_dispatch
348
out_string
1
348
String
string
is even!\n
350
SELF_TYPE
self_dispatch
350
out_string
1
350
String
string
is odd!\n
353
SELF_TYPE
self_dispatch
353
class_type
1
353
A
identifier
353
avar
354
String
assign
354
char
354
String
self_dispatch
354
menu
0
355
Object
if
355
Bool
eq
355
String
identifier
355
char
355
String
string
a
356
B
block
2
357
A
assign
357
a_var
357
A
dynamic_dispatch
357
A
new
357
A
357
set_var
1
357
Int
self_dispatch
357
get_int
0
358
B
assign
358
avar
358
B
dynamic_dispatch
358
B
new
358
B
358
method2
2
358
Int
dynamic_dispatch
358
A
identifier
358
avar
358
value
0
358
Int
dynamic_dispatch
358
A
identifier
358
a_var
358
value
0
360
Object
if
360
Bool
eq
360
String
identifier
360
char
360
String
string
b
361
Object
case
361
A
identifier
361
avar
3
362
c
362
C
362
A
assign
362
avar
362
A
dynamic_dispatch
362
C
identifier
362
c
362
method6
1
362
Int
dynamic_dispatch
362
C
identifier
362
c
362
value
0
363
a
363
A
363
C
assign
363
avar
363
C
dynamic_dispatch
363
A
identifier
363
a
363
method3
1
363
Int
dynamic_dispatch
363
A
identifier
363
a
363
value
0
364
o
364
Object
364
Int
block
3
365
SELF_TYPE
self_dispatch
365
out_string
1
365
String
string
Oooops\n
366
Object
self_dispatch
366
abort
0
366
Int
integer
0
369
Object
if
369
Bool
eq
369
String
identifier
369
char
369
String
string
c
370
D
block
2
371
A
assign
371
a_var
371
A
dynamic_dispatch
371
A
new
371
A
371
set_var
1
371
Int
self_dispatch
371
get_int
0
372
D
assign
372
avar
372
D
dynamic_dispatch
372
D
new
372
D
372
method4
2
372
Int
dynamic_dispatch
372
A
identifier
372
avar
372
value
0
372
Int
dynamic_dispatch
372
A
identifier
372
a_var
372
value
0
374
Object
if
374
Bool
eq
374
String
identifier
374
char
374
String
string
d
374
E
assign
374
avar
374
E
static_dispatch
374
C
new
374
C
374
A
374
method5
1
374
Int
dynamic_dispatch
374
A
identifier
374
avar
374
value
0
376
Object
if
376
Bool
eq
376
String
identifier
376
char
376
String
string
e
376
E
assign
376
avar
376
E
static_dispatch
376
C
new
376
C
376
B
376
method5
1
376
Int
dynamic_dispatch
376
A
identifier
376
avar
376
value
0
378
Object
if
378
Bool
eq
378
String
identifier
378
char
378
String
string
f
378
E
assign
378
avar
378
E
static_dispatch
378
C
new
378
C
378
C
378
method5
1
378
Int
dynamic_dispatch
378
A
identifier
378
avar
378
value
0
380
Object
if
380
Bool
eq
380
String
identifier
380
char
380
String
string
g
381
SELF_TYPE
if
381
Bool
dynamic_dispatch
381
D
new
381
D
381
method7
1
381
Int
dynamic_dispatch
381
A
identifier
381
avar
381
value
0
383
SELF_TYPE
block
3
384
SELF_TYPE
self_dispatch
384
out_string
1
384
String
string
number 
385
SELF_TYPE
self_dispatch
385
print
1
385
A
identifier
385
avar
386
SELF_TYPE
self_dispatch
386
out_string
1
386
String
string
is divisible by 3.\n
389
SELF_TYPE
block
3
390
SELF_TYPE
self_dispatch
390
out_string
1
390
String
string
number 
391
SELF_TYPE
self_dispatch
391
print
1
391
A
identifier
391
avar
392
SELF_TYPE
self_dispatch
392
out_string
1
392
String
string
is not divisible by 3.\n
395
Object
if
395
Bool
eq
395
String
identifier
395
char
395
String
string
h
396
A
let
1
let_binding_no_init
396
x
396
A
397
A
block
3
398
A
assign
398
x
398
A
dynamic_dispatch
398
E
new
398
E
398
method6
1
398
Int
dynamic_dispatch
398
A
identifier
398
avar
398
value
0
399
SELF_TYPE
let
1
let_binding_init
399
r
399
Int
399
Int
minus
399
Int
dynamic_dispatch
399
A
identifier
399
avar
399
value
0
399
Int
times
399
Int
dynamic_dispatch
399
A
identifier
399
x
399
value
0
399
Int
integer
8
400
SELF_TYPE
block
6
401
SELF_TYPE
self_dispatch
401
out_string
1
401
String
string
number 
402
SELF_TYPE
self_dispatch
402
print
1
402
A
identifier
402
avar
403
SELF_TYPE
self_dispatch
403
out_string
1
403
String
string
is equal to 
404
SELF_TYPE
self_dispatch
404
print
1
404
A
identifier
404
x
405
SELF_TYPE
self_dispatch
405
out_string
1
405
String
string
times 8 with a remainder of 
406
SELF_TYPE
let
1
let_binding_init
406
a
406
A2I
406
A2I
new
406
A2I
407
SELF_TYPE
block
2
408
SELF_TYPE
self_dispatch
408
out_string
1
408
String
dynamic_dispatch
408
A2I
identifier
408
a
408
i2a
1
408
Int
identifier
408
r
409
SELF_TYPE
self_dispatch
409
out_string
1
409
String
string
\n
414
A
assign
414
avar
414
A
identifier
414
x
418
Object
if
418
Bool
eq
418
String
identifier
418
char
418
String
string
j
418
A
assign
418
avar
418
A
new
418
A
420
Object
if
420
Bool
eq
420
String
identifier
420
char
420
String
string
q
420
Bool
assign
420
flag
420
Bool
false
422
A
assign
422
avar
422
A
dynamic_dispatch
422
A
new
422
A
422
method1
1
422
Int
dynamic_dispatch
422
A
identifier
422
avar
422
value
0
